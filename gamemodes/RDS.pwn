//==============================================================================
//                            Основные настройки
//==============================================================================

#define MOD11INS 4 //настройка версии сервера:
//                 //MOD11INS 1 - версия 0.3e
//                 //MOD11INS 2 - версия 0.3x
//                 //MOD11INS 3 - версия 0.3z
//                 //MOD11INS 4 - версия 0.3.7

#define MOD22INS 1 //подключение плагина FileFunctions:
//                 //MOD22INS 0 - НЕ использовать плагин FileFunctions
//                 //MOD22INS 1 - использовать плагин FileFunctions

#define MOD33INS 0 //скрывать пароль при авторизации на сервере:
//                 //MOD33INS 0 - НЕ скрывать пароль
//                 //MOD33INS 1 - скрывать пароль

#define MOD44INS 0 //авто-кик игроков-читеров за FLY-чит (или спидхак): *
//                 //MOD44INS 0 - объявлять в розыск игроков-читеров (Wanted), БЕЗ авто-кика
//                 //MOD44INS 1 - объявлять в розыск игроков-читеров (Wanted), С авто-киком

#define MOD4BINS 0 //авто-кик игроков-читеров за FLY-чит (или чит-телепорт): *
//                 //MOD4BINS 0 - объявлять в розыск игроков-читеров (Wanted), БЕЗ авто-кика
//                 //MOD4BINS 1 - объявлять в розыск игроков-читеров (Wanted), С авто-киком

#define MOD4CINS 1 //авто-кик игроков за спам в чате (или в командах) +
//                 //авто-кик игроков-читеров за спам вызовами функций:
//                 //MOD4CINS 0 - БЕЗ авто-кика
//                 //MOD4CINS 1 - С авто-киком

#define MOD4DINS 0 //использование системы паспортов сервера:
//                 //MOD4DINS 0 - БЕЗ паспортов
//                 //MOD4DINS 1 - С 1 паспортом
//                 //MOD4DINS 2 - С 2 паспортами
//                 //MOD4DINS 3 - С 3 паспортами
//                 //MOD4DINS 4 - С 4 паспортами

#define MOD55INS 0 //режим резервного копирования сервер-лога: **
//                 //MOD55INS 0 - БЕЗ резервного копирования
//                 //MOD55INS 1 - С резервным копированием

#define MOD66INS 3 //режим начального выбора скина и использования сканера собейта:
//                 //MOD66INS 1 - стандартный выбор скина БЕЗ использования сканера собейта
//                 //MOD66INS 2 - изменённый выбор скина БЕЗ использования сканера собейта
//                 //MOD66INS 3 - изменённый выбор скина С использованием сканера собейта

#define MOD77INS 1 //настройка команд /dataakk и /akksrc:
//                 //MOD77INS 0 - БЕЗ использования команд /dataakk и /akksrc
//                 //MOD77INS 1 - С использованием команд /dataakk и /akksrc

#define MOD7AINS 1 //настройка команды /passrc:
//                 //MOD7AINS 0 - БЕЗ использования команды /passrc
//                 //MOD7AINS 1 - С использованием команды /passrc

#define MOD7BINS 1 //настройка команды /scrnetv (просмотр действий сетевых экранов):
//                 //MOD7BINS 0 - по умолчанию - выключен
//                 //MOD7BINS 1 - по умолчанию - включен

#define MOD90INS 0 //режим сохранения аккаунтов игроков: ***
//                 //MOD90INS 0 - стандартная файловая система SA-MP (fopen)
//                 //MOD90INS 1 - локальная база данных (SQLite)

#define MOD91INS 0 //создание новой (пустой) базы данных аккаунтов игроков: ****
//                 //MOD91INS 0 - НЕ создавать новую (пустую) базу данных (нормальный режим работы сервера)
//                 //MOD91INS 1 - создать новую (пустую) базу данных

// * ВНИМАНИЕ !!! т.к. FLY-чит на сервере определяется как "быстрое перемещение"
// (спидхак), И как "моментальное перемещение" (чит-телепорт) то, на сервере
// имеются ДВЕ контрольные системы для FLY-чита: FLY-чит (или спидхак)
// И FLY-чит (или чит-телепорт).

// ** ВНИМАНИЕ !!! Если включён режим резервного копирования сервер-лога
// (MOD55INS 1), то в папке сервера "scriptfiles" ОБЯЗАТЕЛЬНО создайте папку
// "server_log" !!! Иначе сервер, после вкючения, будет уходить в краш !!!

// *** ВНИМАНИЕ !!! Во избежание вайпа уже имеющихся серверов (на хостах), в данном
// моде реализована автоматическая миграция аккаунтов игроков: ИЗ стандартной
// файловой системы SA-MP (fopen) В локальную базу данных (SQLite) !!!

// **** ВНИМАНИЕ !!! Для создания новой (пустой) базы данных аккаунтов игроков
// измените настройку в строке 64 (MOD91INS 1) и включите (запустите) сервер.
// После сообщения сервера (в сервер-логе) о создании новой (пустой) базы
// данных аккаунтов игроков - выключите (закройте) сервер, и верните настройку
// в строке 49 в нормальный режим работы сервера (MOD91INS 0) !!!

//   ВНИМАНИЕ !!! после изменения настроек ОБЯЗАТЕЛЬНО откомпилировать !!!

//==============================================================================
//                              GarHouse
//==============================================================================
//                              Includes
//==============================================================================
//#include <a_samp> //
#include <streamer> //
#include <dini2> //
#include <dudb2> //
#include <sscanf2> //
//#pragma unused strtok //
#pragma dynamic 25000 //
//==============================================================================
//                              End GarHouse
//==============================================================================

#if (MOD11INS < 1)
	#undef MOD11INS
	#define MOD11INS 1
#endif
#if (MOD11INS > 4)
	#undef MOD11INS
	#define MOD11INS 4
#endif
#if (MOD22INS < 0)
	#undef MOD22INS
	#define MOD22INS 0
#endif
#if (MOD22INS > 1)
	#undef MOD22INS
	#define MOD22INS 1
#endif
#if (MOD33INS < 0)
	#undef MOD33INS
	#define MOD33INS 0
#endif
#if (MOD33INS > 1)
	#undef MOD33INS
	#define MOD33INS 1
#endif
#if (MOD44INS < 0)
	#undef MOD44INS
	#define MOD44INS 0
#endif
#if (MOD44INS > 1)
	#undef MOD44INS
	#define MOD44INS 1
#endif
#if (MOD4BINS < 0)
	#undef MOD4BINS
	#define MOD4BINS 0
#endif
#if (MOD4BINS > 1)
	#undef MOD4BINS
	#define MOD4BINS 1
#endif
#if (MOD4CINS < 0)
	#undef MOD4CINS
	#define MOD4CINS 0
#endif
#if (MOD4CINS > 1)
	#undef MOD4CINS
	#define MOD4CINS 1
#endif
#if (MOD4DINS < 0)
	#undef MOD4DINS
	#define MOD4DINS 0
#endif
#if (MOD4DINS > 4)
	#undef MOD4DINS
	#define MOD4DINS 4
#endif
#if (MOD55INS < 0)
	#undef MOD55INS
	#define MOD55INS 0
#endif
#if (MOD55INS > 1)
	#undef MOD55INS
	#define MOD55INS 1
#endif
#if (MOD66INS < 1)
	#undef MOD66INS
	#define MOD66INS 1
#endif
#if (MOD66INS > 3)
	#undef MOD66INS
	#define MOD66INS 3
#endif
#if (MOD77INS < 0)
	#undef MOD77INS
	#define MOD77INS 0
#endif
#if (MOD77INS > 1)
	#undef MOD77INS
	#define MOD77INS 1
#endif
#if (MOD7AINS < 0)
	#undef MOD7AINS
	#define MOD7AINS 0
#endif
#if (MOD7AINS > 1)
	#undef MOD7AINS
	#define MOD7AINS 1
#endif
#if (MOD7BINS < 0)
	#undef MOD7BINS
	#define MOD7BINS 0
#endif
#if (MOD7BINS > 1)
	#undef MOD7BINS
	#define MOD7BINS 1
#endif
#if (MOD90INS < 0)
	#undef MOD90INS
	#define MOD90INS 0
#endif
#if (MOD90INS > 1)
	#undef MOD90INS
	#define MOD90INS 1
#endif
#if (MOD91INS < 0)
	#undef MOD91INS
	#define MOD91INS 0
#endif
#if (MOD91INS > 1)
	#undef MOD91INS
	#define MOD91INS 1
#endif

#include <a_samp>
#include <utils>
//#include <MidoStream>
//#include <AutoGate>
#include <MXini>

#if (MOD22INS == 1)
	#include <FileFunctions>//античит-2
#endif

#pragma tabsize 0

#undef MAX_PLAYERS
#define MAX_PLAYERS 101 //максимум игроков на сервере + 1 (если 50 игроков, то пишем 51 !!!)

#if (MAX_PLAYERS > 501)
	#undef MAX_PLAYERS
	#define MAX_PLAYERS 501
#endif

#define MAX_GANGS 600 //максимум банд + 2 (если 100 банд, то пишем 102 !!!)

//------------------------------ BusSystem -------------------------------------
#define BUS_MAX 100 //максимум бизнесов на сервере (от 1 до 300)
#define BUS_PLAY 2 //максимум бизнесов, сколько может купить один игрок (от 1 до 5)
#define BUS_DAY 3 //число суток, сколько бизнес "закреплён" за игроком без права перекупки (от 1 до 5)

#if (BUS_MAX < 1)
	#undef BUS_MAX
	#define BUS_MAX 1
#endif
#if (BUS_MAX > 300)
	#undef BUS_MAX
	#define BUS_MAX 300
#endif
#if (BUS_PLAY < 1)
	#undef BUS_PLAY
	#define BUS_PLAY 1
#endif
#if (BUS_PLAY > 5)
	#undef BUS_PLAY
	#define BUS_PLAY 5
#endif
#if (BUS_DAY < 1)
	#undef BUS_DAY
	#define BUS_DAY 1
#endif
#if (BUS_DAY > 5)
	#undef BUS_DAY
	#define BUS_DAY 5
#endif
//---------------------------- End BusSystem -----------------------------------

//==============================================================================
//                              GarHouse
//==============================================================================
#define dcmd(%1,%2,%3) if (!strcmp((%3)[1], #%1, true, (%2)) && ((((%3)[(%2) + 1] == '\0') && (dcmd_%1(playerid, ""))) || (((%3)[(%2) + 1] == ' ') && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
new FALSE = false, CMDSString[1000];
#define ShowInfoBox(%0,%1,%2,%3) do{format(CMDSString, 1000, %2, %3); ShowPlayerDialog(%0, 520, DIALOG_STYLE_MSGBOX, %1, CMDSString, "Close", "Cancel");}while(FALSE)
#define SendMSG(%0,%1,%2,%3,%4) do{new _str[%2]; format(_str,%2,%3,%4); SendClientMessage(%0,%1,_str);}while(FALSE)
#define Loop(%0,%1) for(new %0 = 0; %0 < %1; %0++)
#define TYPE_OUT (0)
#define TYPE_INT (1)
//==============================================================================
//                              Colours
//==============================================================================
#define COLOUR_INFO 0x00FFFFFF
#define COLOUR_SYSTEM 0xB60000FF
#define COLOUR_YELLOW 0xFFFF2AFF
#define COLOUR_GREEN 0x00BC00FF
//==============================================================================
//                              Configuration
//==============================================================================
//#define HOUSEMENU 21700 // ид диолога
#define SPAWN_IN_HOUSE // Комментарий Если вы не хотите, чтобы игрок spawn в своем доме в следующий раз он возвращается.
#define GH_USE_MAPICONS // Комментарий, если вы не хотите карте значками.
#define GH_HINTERIOR_UPGRADE // Комментарий, если вы не хотите, чтобы игроки были в состоянии модернизировать их домашнего интерьера.
#define HSPAWN_TIMER_RATE 1000 // После, как долго будет таймер вызова появляются в доме функции? (в мс)
#define MICON_VD 100.0 // Значок карты видимом диапазоне (drawdistance).
//#define MICON_VD 50.0 // Значок карты видимом диапазоне (drawdistance).
#define DEFAULT_H_INTERIOR 0 // DEFAULT домашнего интерьера при создании дома
#define DEFAULT_H_INTERIOR_PRICE 3000000 // По умолчанию домашнего интерьера цена при создании дома
#define GH_USE_WEAPONSTORAGE // Если определено владельца дома может хранить свое оружие в доме хранения.
#define GH_SAVE_ADMINWEPS // Если определено дом владелец может сохранить оружие, как пулемет, гранаты, РПГ и т.д..
#define GH_DEBUGGING // Если определена это позволит отладки печатает в консоли сервера.
//#define GH_HOUSECARS // Если определенный сценарий будет иметь дом автомобили (примечание: вам нужно добавить позицию дом автомобиля с помощью /addhcar)
// Примечание 2: Необходимо определить SPAWN_IN_HOUSE для того, чтобы создать housecar на первом spawn.
#define HCAR_COLOUR1 -1 // первый цвет housecar
#define HCAR_COLOUR2 -1 // Второй цвет housecar
#define HCAR_RESPAWN 60 // респаун задержки дом автомобиля (в секундах)
#define HCAR_RANGE 10.0 // Диапазон для проверки близлежащих транспортных средств при сохранении дома автомобиля.
#define MAX_HOUSES 500 // Макс дома создан
//#define MAX_HOUSES 250 // Макс дома создан
#define MAX_HOUSES_OWNED 4 // Макс домов, принадлежащих за игрока
//#define MAX_HOUSES_OWNED 1 // Макс домов, принадлежащих за игрока
#define PICKUP_MODEL_OUT (1273)
#define PICKUP_MODEL_INT (1272)
#define PICKUP_TYPE (1)
#define HOUSEFILE_LENGTH 30 // Длина housefile (по умолчанию /GarHouse/Houses/<0-MAX_HOUSES>.ini
#define MAX_VISIT_TIME 60 // Максимальное время игрок может быть посещения в (в секундах).
//#define MAX_VISIT_TIME 1 // Максимальное время игрок может быть посещения в (в минутах).
#define INVALID_HOWNER_NAME "*** INV_PL_ID" // "имя " хозяина дома, когда нет реального владельца дома (если это имело смысл)
//#define INVALID_HOWNER_NAME "INVALID_PLAYER_ID" // "имя " хозяина дома, когда нет реального владельца дома (если это имело смысл)
//#define TIME_BETWEEN_VISITS 2 // время игрок должен подождать, прежде чем просмотр нового интерьера дома (в минутах).
#define H_INT_0_VALUE 3000000 // Интерьер дома цена для домашнего интерьера 0
#define H_INT_1_VALUE 100000 //Интерьер дома цена для домашнего интерьера 1
#define H_INT_2_VALUE 1000000 // Интерьер дома цена для домашнего интерьера 2
#define H_INT_3_VALUE 1500000 // Интерьер дома цена для домашнего интерьера 3
#define H_INT_4_VALUE 1500000 // Интерьер дома цена для домашнего интерьера 4
#define H_INT_5_VALUE 2500000 // Интерьер дома цена для домашнего интерьера 5
#define H_INT_6_VALUE 3000000 // Интерьер дома цена для домашнего интерьера 6
#define H_INT_7_VALUE 5000000 // Интерьер дома цена для домашнего интерьера 7
#define H_INT_8_VALUE 7500000 // Интерьер дома цена для домашнего интерьера 8
#define H_INT_9_VALUE 10000000 // Интерьер дома цена для домашнего интерьера 9
#define H_INT_10_VALUE 25000000 // Интерьер дома цена для домашнего интерьера 10
#define HOUSE_SELLING_PROCENT 75 // количество дом значение игрок получит, когда дом продается.
#define HOUSE_SELLING_PROCENT2 6.5 // Общий процент близлежащих домов будет идти /down путем, когда дом продается /bought неподалеку.
#define RANGE_BETWEEN_HOUSES 200 // диапазон, используемый при увеличении /decreasing Значение близлежащих домов, когда дом купили /sold (значение 0 для отключения)
#define MAX_HOUSE_NAME 35 // Максимальная длина дом имя
#define MIN_HOUSE_NAME 4 // Mв длину дом имя
#define MAX_HOUSE_PASSWORD 35 // Максимальная длина пароля дом
#define MIN_HOUSE_PASSWORD 4 // Мин длина дом пароль
//#define MIN_HOUSE_PASSWORD 8 // Мин длина дом пароль
#define DEFAULT_HOUSE_NAME "Свободен" // имя по умолчанию, когда дом создан /sold
#define MIN_HOUSE_VALUE 500000 // Мин дома стоимость дома (OFC цены будут изменяться, когда дом купили /sold поблизости)
#define MAX_HOUSE_VALUE 25000000 // Макс дома стоимость дома (OFC цены будут изменяться, когда дом купили /sold поблизости)
#define CASE_SENSETIVE false // Используется в виде чеков STRCMP имя. Определить, как истинный /false [0/1]. Читайте вики для получения дополнительной информации
//#define CASE_SENSETIVE true // Используется в виде чеков STRCMP имя. Определить, как истинный /false [0/1]. Читайте вики для получения дополнительной информации

new HousePickupOut[MAX_HOUSES], HousePickupInt[MAX_HOUSES];
new Text3D:HouseLabel[MAX_HOUSES];
new Float:Xgh, Float:Ygh, Float:Zgh, Float:Anglegh;
#if defined GH_USE_MAPICONS
	new HouseMIcon[MAX_HOUSES];
#endif
#if defined GH_HOUSECARS
	new HouseCar[MAX_HOUSES];
#endif
//==============================================================================

//------------------------------------------------------------------------------
//                              Important.
//------------------------------------------------------------------------------
#define LABELTEXT1 "Дом: %s\nВладелец дома: Нет хозяина\nДом продаётся за: %d $\nДом ID: %d"
#define LABELTEXT2 "Имя дома: %s\nВладелец дома: %s\nДом куплен за: %d $\nДом ID: %d"
#define FILEPATH "/GarHouse/Houses/%d.ini"
#define INFORMATION_HEADER "Информация"
//------------------------------------------------------------------------------
// 				Информация и сообщения об ошибках
//------------------------------------------------------------------------------
#define E_NO_HOUSES_OWNED "Вы не являетесь владельцем этого дома."
#define I_HMENU "/housemenu - для доступа к меню дома."
#define E_H_ALREADY_OWNED "Этот дом уже принадлежит другому."
#define E_INVALID_HPASS_LENGTH "Неверная длина пароля."
#define E_INVALID_HPASS "Неверный пароль. Вы не можете использовать этот пароль."
#define E_INVALID_HNAME_LENGTH "Неверная длина имени дома."
#define I_HPASS_NO_CHANGE "Пароль для дома остался без изменений."
#define I_HPASS_REMOVED "Пароль дома был удален."
#define E_NOT_ENOUGH_PMONEY "У Вас нет столько денег!"
#define E_INVALID_AMOUNT "Неверная сумма."
#define E_HSTORAGE_L_REACHED "Вы не можете хранить в доме столько денег. (максимум 25000000 $)"
#define E_NOT_ENOUGH_HSMONEY "У Вас нет на хранении столько денег!"
#define E_NO_WEAPONS "У Вас нет оружия."
#define E_NO_HS_WEAPONS "У Вас нет оружия на хранении."
#define E_C_ACCESS_SE_HM "Вы не можете открыть меню дома, это не Ваш дом."
#define E_NOT_IN_HOUSE "Вы должны быть в доме для использования этой команды."
#define E_NOT_HOWNER "Вы должны быть владельцем дома для использования этой команды."
#define E_HCAR_NOT_IN_VEH "Вы должны быть в автомобиле. Добавить автомобиль возле дома."
#define E_INVALID_HID "Неверный дом ID. Этот дом ID не существует."
#define E_NO_HCAR "Этот дом ID не имеет автомобиля возле дома. Не удается удалить."
#define E_H_A_F_SALE "Этот дом уже на продаже. Вы не можете продать дом."
#define HMENU_ENTER_PASS "Имя дома: %s\nВладелец дома: %s\nДом продаётся за: %d $\nДом ID: %d\n\nЧтобы войти в дом, введите пароль:"
#define HMENU_BUY_HOUSE "%s, Вы хотите купить этот дом за %d $ ?"
#define HMENU_BUY_HINTERIOR "Вы хотите купить интерьер %s для дома за %d $ ?"
#define HMENU_SELL_HOUSE "%s, Вы уверены, что хотите продать свой дом %s за %d $ ?"
#define I_SELL_HOUSE1 "Вы успешно продали свой дом за %d $.\nОплата: %d $.\nВаши %d $ , находившиеся на хранении, были переданы Вам."
#define I_SELL_HOUSE2 "Вы успешно продали свой дом \"%s\" за %d $.\nОплата: %d $."
#define I_BUY_HOUSE "Вы успешно купили этот дом за %d $ !"
#define I_HPASSWORD_CHANGED "Вы успешно создали пароль для дома \"%s\"!"
#define I_HNAME_CHANGED "Вы успешно изменили имя дома на \"%s\"!"
#define E_ALREADY_HAVE_HINTERIOR "У Вас уже есть этот интерьер."
#define I_VISITING_HOUSEINT "Вы осматриваете интерьер %s.\nЭтот интерьер стоит %d $.\nВремя осмотра закончится через %d Сек."
//#define I_VISITING_HOUSEINT "Вы осматриваете интерьер %s.\nЭтот интерьер стоит %d $.\nВремя осмотра закончится через %d Сек. %s."
#define E_CANT_AFFORD_HINT "Вы не можете позволить себе купить интерьер %s.\nСтоимость интерьера: %d $.\nУ Вас есть: %d $.\nВам не хватает: %d $."
#define I_HINT_BOUGHT "Вы купили интерьер %s за %d $."
#define I_HINT_DEPOSIT1 "У Вас на хранении уже есть %d $.\n\nВведите сумму, которую вы хотите положить:"
#define I_HINT_WITHDRAW1 "У Вас на хранении есть %d $.\n\nВведите сумму, которую вы хотите снять:"
#define I_HINT_DEPOSIT2 "Вы успешно положили на хранение %d $.\nТекущий баланс: %d $."
#define I_HINT_WITHDRAW2 "Вы успешно сняли с хранения %d $.\nТекущий баланс: %d $."
#define I_HINT_CHECKBALANCE "У Вас на хранении лежит %d $."
#define E_HINT_WAIT_BEFORE_VISITING "Пожалуйста, подождите до осмотра следующего интерьера."
#define I_HS_WEAPONS1 "Успешно сохранено %d единицы оружия в Вашем доме."
//#define I_HS_WEAPONS1 "Успешно сохранен %d Оружие %s В вашем доме хранения."
#define I_HS_WEAPONS2 "Вы успешно сняли с хранения %d единицы оружия в Вашем доме."
//#define I_HS_WEAPONS2 "Успешно поступила %d Оружие %s От вашего дома хранения."
#define I_WRONG_HPASS1 "Вы не вошли в дом %s с использованием пароля \"%s\"."
#define I_WRONG_HPASS2 "Дом информация: %s [%d] попытался войти в дом с использованием пароля \"%s\"."
#define I_CORRECT_HPASS1 "Вы успешно вошли в дом %s используя пароль \"%s\"!"
#define I_CORRECT_HPASS2 "Дом информация: %s [%d] успешно вошёл в Ваш дом, используя пароль \"%s\"!"
#define E_TOO_MANY_HOUSES "Извините, но дом с максимальным ID %d уже создан.\nУдалите один из существующих или увеличите максимум домов."
#define E_INVALID_HVALUE "Неверная стоимость дома. Стоимость должна быть между 500,000 $ и 25,000,000 $."
#define I_H_CREATED "Дом ID %d Создан..."
#define I_HCAR_EXIST_ALREADY "Автомобиль возле дома ID %d уже есть. Замена текущего."
#define I_HCAR_CREATED "Автомобиль возле дома ID %d создан..."
#define I_H_DESTROYED "Дом ID %d удален..."
#define I_HCAR_REMOVED "Автомобиль возле дома ID %d Удалён..."
#define I_ALLH_DESTROYED "Все дома удалены. (%d в итоге)"
#define I_ALLHCAR_REMOVED "Все автомобили возле домов удалены. (%d в итоге)"
#define I_HSPAWN_CHANGED "Вы изменили позицию спавна и угол для дома ID %d."
#define I_TELEPORT_MSG "Вы телепортировались к дому ID %d."
#define I_H_SOLD "Вы продали дом ID %d..."
#define I_ALLH_SOLD "Все дома на сервере были проданы. (%d в итоге)"
#define I_H_PRICE_CHANGED "Стоимость дома ID %d была изменена на %d $."
#define I_ALLH_PRICE_CHANGED "Вы изменили стоимость всех домов на сервере на %d $. (%d в итоге)"
#define I_HINT_VISIT_OVER "Время осмотра закончилось.\nВы хотите купить интерьер %s за %d $ ?"
//#define I_HINT_VISIT_OVER "Ваше посещение время кончилось.\nВы хотите купить дом Интерьер %s Для $%d?"
#define E_INVALID_HCAR_MODEL "Неверный ID модели автомобиля. (ID модели должны быть от 400 и до 611)"
#define I_HCAR_CHANGED "ID модели автомобиля возле дома ID %d был изменён на %d."
//------------------------------------------------------------------------------
#define E_CMD_USAGE_CREATEHOUSE "Использование: /createhouse [стоимость] [дополнительно: интерьер дома]"
#define E_CMD_USAGE_ADDHCAR "Использование: /addhcar [ID дома]"
#define E_CMD_USAGE_REMOVEHOUSE "Использование: /removehouse [ID дома]"
#define E_CMD_USAGE_REMOVEHCAR "Использование: /removehcar [ID дома]"
#define E_CMD_USAGE_CHANGEHCAR "Использование: /changehcar [ID дома] [ID модели: 400-611]"
#define E_CMD_USAGE_CHANGESPAWN "Использование: /changespawn [ID дома]"
#define E_CMD_USAGE_GOTOHOUSE "Использование: /gotohouse [ID дома]"
#define E_CMD_USAGE_SELLHOUSE "Использование: /sellhouse [ID дома]"
#define E_CMD_USAGE_CHANGEPRICE "Использование: /changeprice [ID дома] [стоимость]"
#define E_CMD_USAGE_CHANGEALLPRICE "Использование: /changeallprices [стоимость]"
//------------------------------------------------------------------------------
//                          Отладочные сообщения
//------------------------------------------------------------------------------
#if defined GH_DEBUGGING
#define DEBUG_OP_DISCONNECT "[GarHouse] %s [%d] остался в своём доме (disconnect)"
#define DEBUG_OP_ED_CP1 "[GarHouse] %s [%d] вошёл в дом ID %d."
#define DEBUG_OP_ED_CP2 "[GarHouse] %s [%d] вышел из дома ID %d."
#define DEBUG_OP_PUD_PICKUP1 "[GarHouse] %s [%d] вошёл в дом ID %d."
#define DEBUG_OP_PUD_PICKUP2 "[GarHouse] %s [%d] вышел из дома ID %d."
#define DEBUG_ODR1 "[GarHouse] %s [%d] купил дом ID %d за %d $."
#define DEBUG_ODR2 "[GarHouse] %s [%d] изменил имя дома ID %d на %s ."
#define DEBUG_ODR3 "[GarHouse] %s [%d] купил интерьер %s за %d $ для дома ID %d."
#define DEBUG_ODR4 "[GarHouse] %s [%d] осматривает интерьер %s (дом ID %d)"
#define DEBUG_ODR5 "[GarHouse] для дома ID %d установлен интерьер %d."
#define DEBUG_ODR6 "[GarHouse] %s [%d] проверил сумму денег в доме ID %d (сумма: %d $)"
#define DEBUG_ODR7 "[GarHouse] %s [%d] положил на хранение %d $ в доме ID %d."
#define DEBUG_ODR8 "[GarHouse] %s [%d] снял с хранения %d $ в доме ID %d."
//#define DEBUG_ODR9 "[GarHouse] (OnDialogResponse) - %s [%d] Положить %d оружие%s В доме для хранения дома ID %d."
#define DEBUG_ODR10 "[GarHouse] %s [%d] положил на хранение %d единиц оружия в доме ID %d."
//#define DEBUG_ODR10 "[GarHouse] (OnDialogResponse) - %s [%d] Взять %d оружия%s В доме для хранения дома ID %d."
#define DEBUG_ODR11 "[GarHouse] %s [%d] снял с хранения %d единиц оружия в доме ID %d."
//#define DEBUG_ODR11 "[GarHouse] (OnDialogResponse) - %s [%d] Новое оружия %d оружия%s Из дома для хранения дома ID %d."
#define DEBUG_ODR12 "[GarHouse] %s [%d] успешно вошел в дом ID %d с использованием пароля."
#define DEBUG_ODR13 "[GarHouse] %s [%d] продал свой дом за %d $ (денег в доме: %d $ | дом ID %d)"
#define DEBUG_ODR14 "[GarHouse] %s [%d] изменил пароль для дома ID %d на (%s) FP: (%s) ."
#define DEBUG_OP_CMD1 "[GarHouse] %s [%d] создал дом (дом ID %d | стоимость: %d $ | всего домов: %d)"
#define DEBUG_OP_CMD2 "[GarHouse] %s [%d] создал автомобиль возле дома ID %d."
#define DEBUG_OP_CMD3 "[GarHouse] %s [%d] удалил дом ID %d."
#define DEBUG_OP_CMD4 "[GarHouse] %s [%d] удалил автомобиль возле дома ID %d."
#define DEBUG_OP_CMD5 "[GarHouse] %s [%d] удалил все дома (%d в итоге)"
#define DEBUG_OP_CMD6 "[GarHouse] %s [%d] удалил все автомобили возле домов (%d в итоге)"
#define DEBUG_OP_CMD7 "[GarHouse] %s [%d] изменил позицию спавна и угол для дома ID %d."
#define DEBUG_OP_CMD8 "[GarHouse] %s [%d] продал дом ID %d."
#define DEBUG_OP_CMD9 "[GarHouse] %s [%d] продал все дома (%d в итоге)"
#define DEBUG_OP_CMD10 "[GarHouse] %s [%d] изменил стоимость дома ID %d на %d $."
#define DEBUG_OP_CMD11 "[GarHouse] %s [%d] изменил стоимость всех домов на %d $ (%d в итоге)"
#define DEBUG_OP_CMD12 "[GarHouse] %s [%d] изменил ID модели автомобиля возле дома ID %d на %d."
#define DEBUG_OP_SPAWN "[GarHouse] %s [%d] Заспавнился в своём доме."
#endif

new lockpas[MAX_PLAYERS];//массив блокировок диалога ввода пароля
//разблокировать диалог ввода пароля
#define MAX_VW_HOUSE (999 + MAX_HOUSES)//максимальный виртуальный мир системы домов
//==============================================================================
//                              End GarHouse
//==============================================================================

new tgang[MAX_PLAYERS], gangskin[MAX_PLAYERS], play333[MAX_PLAYERS] = -1;//Gangs system
new GangName[MAX_GANGS][130], Gang[MAX_GANGS], GangSA[MAX_GANGS],
GangLvl[MAX_PLAYERS], GName[MAX_GANGS][130], GColorDec[MAX_GANGS],
GColor[MAX_GANGS][16], PGang[MAX_PLAYERS], GColorHex[MAX_GANGS][16],
Float:GSpawnX[MAX_GANGS], Float:GSpawnY[MAX_GANGS], GTDReg[MAX_GANGS][32],
Float:GSpawnZ[MAX_GANGS], GSkin[MAX_GANGS][7], GHead[MAX_GANGS][64],
GInter[MAX_GANGS], GWorld[MAX_GANGS], GPlayers[MAX_GANGS], GangDopper[MAX_PLAYERS];
new locper3[MAX_PLAYERS];//вспомогательная переменная ID банд для записи
new idgangsave[MAX_PLAYERS];//ID банд для записи
new tablgn[MAX_PLAYERS][MAX_PLAYERS][32];//члены банды он-лайн
new countgn[MAX_PLAYERS];
new count2gn[MAX_PLAYERS];
new ongng[20][32];//таблица из 20 строк

#define VehicleSpeed_1       false//speedometer
#define VehicleSpeed_2       true

#define DRIFT_MINKAT 10.0//drift bonus
#define DRIFT_MAXKAT 90.0
#define DRIFT_SPEED 30.0

//----------------------------- Elevator - 1 -----------------------------------
#define ELEVATOR_SPEED      (3.0)   //скорость лифта
#define DOORS_SPEED         (1.0)   //скорость дверей
#define ELEVATOR_WAIT_TIME  (5000)  //время ожидания при транзитной остановке

#define X_DOOR_CLOSED       (1786.627685)
#define X_DOOR_R_OPENED     (1785.027685)
#define X_DOOR_L_OPENED     (1788.227685)
#define GROUND_Z_COORD      (14.511476)
#define ELEVATOR_OFFSET     (0.059523)
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	#define ELEVATOR_SPEED22      (3.0)   //скорость лифта
	#define DOORS_SPEED22         (1.0)   //скорость дверей
	#define ELEVATOR_WAIT_TIME22  (5000)  //время ожидания при транзитной остановке

	#define X_DOOR_CLOSED22       (287.9500)
	#define X_DOOR_R_OPENED22     (289.6500)
	#define X_DOOR_L_OPENED22     (286.2500)
	#define GROUND_Z_COORD22      (18.7000)
	#define ELEVATOR_OFFSET22     (0.059523)
//--------------------------- End Elevator - 2 ---------------------------------
#endif

#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFFF
#define COLOR_GREEN 0x00FF00FF
#define COLOR_RED 0xFF0000FF
#define COLOR_RED3d 0xAA3333FF
#define COLOR_LIGHTRED 0xFF6347FF
#define COLOR_LIGHTBLUE 0x33CCFFFF
#define COLOR_LIGHTGREEN 0x9ACD32FF
#define COLOR_CGREEN 0xBFF600FF
#define COLOR_CGREEN3d 0xBFF600FF
#define COLOR_YELLOW 0xFFFF00FF
#define COLOR_YELLOW3d 0xFFFF00FF
#define COLOR_YELLOW2 0xF5DEB3FF
#define COLOR_YELLOW23d 0xF5DEB3FF
#define COLOR_WHITE 0xFFFFFFFF
#define COLOR_FADE1 0xE6E6E6FF
#define COLOR_FADE2 0xC8C8C8FF
#define COLOR_FADE3 0xAAAAAAFF
#define COLOR_FADE4 0x8C8C8CFF
#define COLOR_FADE5 0x6E6E6EFF
#define COLOR_PURPLE 0xC2A2DAFF
#define COLOR_PINK 0xFF66FFFF
#define COLOR_DBLUE 0x2641FEFF
#define COLOR_GREENISHGOLD 0xCCFFDDFF
#define COLOR_LEMON 0xDDDD23FF
#define COLOR_BASIC 0x0066FFFF

#define OBRAD 13 //число радио +1//Радио

native gpci(playerid, buffer[], size);

forward LevelUpdate();//drift bonus
forward Drift();
forward DriftCancellation(playerid);

//----------------------------- Elevator - 1 -----------------------------------
forward Elevator_MoveToFloor(floorid);
forward Elevator_Boost(floorid);
forward Elevator_TurnToIdle();
forward RemoveFirstQueueFloor();
forward Float:GetElevatorZCoordForFloor(floorid);
forward Float:GetDoorsZCoordForFloor(floorid);
forward StopMonit();
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	forward ElevTim22();
	forward Elevator_MoveToFloor22(floorid);
	forward Elevator_Boost22(floorid);
	forward Elevator_TurnToIdle22();
	forward RemoveFirstQueueFloor22();
	forward Float:GetElevatorZCoordForFloor22(floorid);
	forward Float:GetDoorsZCoordForFloor22(floorid);
	forward StopMonit22();
//--------------------------- End Elevator - 2 ---------------------------------
#endif

//------------------------------ BusSystem -------------------------------------
forward LoadBusSystem();//загрузка системы бизнесов
forward UnloadBusSystem();//выгрузка системы бизнесов
//---------------------------- End BusSystem -----------------------------------

forward DopPlaytp(playerid, target);//ТП к себе игрока, если игрок в наблюдении
forward DopAdmtp(playerid, target);//ТП к себе админа, если админ в тюрьме (или в наблюдении)
forward ReadOpenIP();//чтение файла openip.ini
forward SaveOpenIP();//запись файла openip.ini
forward STATPlayer(playerid);//вывод частичной статистики игрока
forward TMPlayBanTimer(admlvl, target, dayban);//временный бан по таймеру
forward ProcUnban(per11);//вычисление дня разбана
forward AutoUnban();//автоматический разбан
forward ConvIP(ipadr[]);//конвертирование IP-адреса в имя файла
forward PlayBanList(playerid, reason[], idbanf);//заполнение бан-листа по ид игрока
forward IPBanList(ipadr[], reason[]);//заполнение бан-листа по IP игрока
forward PlayKickTimer(admlvl, target);//кик по таймеру
forward PlayBanTimer(admlvl, target);//бан по таймеру
forward SecSpa22(playerid);//дополнительный спавн игрока (только координаты И -30 жизни)
forward SecSpa(playerid);//спавн игрока
forward PolSec();//вспомогательный таймер 450 мс
forward ClearIP(playerid);//очистка IP вышедшего игрока
forward AdmUpdate(AdmName[], AdmLvl, AdmReas);//регистрация админов (объявление новой (пользовательской) функции)
forward ReadLogAdm();//чтение файла cash.ini
forward SaveLogAdm();//запись файла cash.ini
forward ReadServCon();//чтение файла servcon.ini
forward SaveServCon();//запись файла servcon.ini
forward DatCor();//коррекция даты
forward TimCor();//коррекция времени
forward ReadCorTime();//чтение файла cortime.ini
forward SaveCorTime();//запись файла cortime.ini
forward DestrCar(playerid);//удаление авто
forward StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//блокировка дрифт-счётчика
forward TelPort(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//флип, телепорт, телепорт с углом авто
forward LineOn1();//подключить трассу 1
forward LineOff1();//отключить трассу 1
forward LineOn2();//подключить трассу 2
forward LineOff2();//отключить трассу 2
forward LineOn3();//подключить трассу 3
forward LineOff3();//отключить трассу 3
forward LineOn4();//подключить трассу 4
forward LineOff4();//отключить трассу 4
forward LineOn5();//подключить трассу 5
forward LineOff5();//отключить трассу 5
forward ReadLine();//чтение файла line.ini
forward SaveLine();//запись файла line.ini
forward PlayDeport(playerid, target);
forward ResServ(per);
forward PlayKick(playerid);
forward PlayBan(playerid);
forward AdminsLvl(playerid);
forward RestartS();
forward OneSecOnd();
forward MinServ();//таймер минут на сервере
forward VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);//спавн транспорта
forward VehicSecSpawn(playerid, vehid, vehcol1, vehcol2, dispz);//спавн транспорта (доп)
forward OnPlayerRegister(playerid, password[]);
forward OnPlayerLogin(playerid,password[]);
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward OnPlayerSaveA(playerid);
forward FiveSecTimer();
forward ShowStats(playerid,targetid);
forward ClearChat(playerid, lines);
forward SendAdminMessage(color, string[]);
forward strtok(const string[],&index);
forward RepairCar();
forward object();
forward object22();

new bool:R_Vehicle[MAX_PLAYERS] = false;//speedometer
new PlayerText:VehicleSpeed[MAX_PLAYERS];
new Text:KMH;

new Text3D:Level3D[MAX_PLAYERS];//drift bonus
new LevelStats[MAX_PLAYERS];
new Text:leveldr[11];
//new Text:Textdraw0;
//new Text:Textdraw1;
new DriftPointsNow[MAX_PLAYERS];
new PlayerDriftCancellation[MAX_PLAYERS];
new Float:ppos[MAX_PLAYERS][3];
new	drifttimer;
new	leveltimer;

new NRadio[MAX_PLAYERS];//переменная номера подключенного радио//Радио
new STRadio[OBRAD][128];//массив URL-ссылок на радио-потоки
new NMRadio[OBRAD][64];//массив названий радио

//----------------------------- Elevator - 1 -----------------------------------
static FloorNames[21][] =
{
	"1 этаж",
	"2 этаж",
	"3 этаж",
	"4 этаж",
	"5 этаж",
	"6 этаж",
	"7 этаж",
	"8 этаж",
	"9 этаж",
	"10 этаж",
	"11 этаж",
	"12 этаж",
	"13 этаж",
	"14 этаж",
	"15 этаж",
	"16 этаж",
	"17 этаж",
	"18 этаж",
	"19 этаж",
	"20 этаж",
	"Пентхаус"
};

static Float:FloorZOffsets[21] =
{
    0.0,		// 0.0,
    8.5479,		// 8.5479,
    13.99945,   // 8.5479 + (5.45155 * 1.0),
    19.45100,   // 8.5479 + (5.45155 * 2.0),
    24.90255,   // 8.5479 + (5.45155 * 3.0),
    30.35410,   // 8.5479 + (5.45155 * 4.0),
    35.80565,   // 8.5479 + (5.45155 * 5.0),
    41.25720,   // 8.5479 + (5.45155 * 6.0),
    46.70875,   // 8.5479 + (5.45155 * 7.0),
    52.16030,   // 8.5479 + (5.45155 * 8.0),
    57.61185,   // 8.5479 + (5.45155 * 9.0),
    63.06340,   // 8.5479 + (5.45155 * 10.0),
    68.51495,   // 8.5479 + (5.45155 * 11.0),
    73.96650,   // 8.5479 + (5.45155 * 12.0),
    79.41805,   // 8.5479 + (5.45155 * 13.0),
    84.86960,   // 8.5479 + (5.45155 * 14.0),
    90.32115,   // 8.5479 + (5.45155 * 15.0),
    95.77270,   // 8.5479 + (5.45155 * 16.0),
    101.22425,  // 8.5479 + (5.45155 * 17.0),
    106.67580,	// 8.5479 + (5.45155 * 18.0),
    112.12735	// 8.5479 + (5.45155 * 19.0)
};

new MovObj;
new Obj_Elevator, Obj_ElevatorDoors[2];
new	Obj_FloorDoors[21][2];
new Text3D:Label_Elevator, Text3D:Label_Floors[21], Text3D:Label2_Floors[21];
new ElevatorState;
new	ElevatorFloor;
new ElevatorQueue[21];
new	FloorRequestedBy[21];
new ElevatorBoostTimer;
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	static FloorNames22[14][] =
	{
		"Гараж",
		"1 этаж",
		"2 этаж",
		"3 этаж",
		"4 этаж",
		"5 этаж",
		"6 этаж",
		"7 этаж",
		"8 этаж",
		"9 этаж",
		"10 этаж",
		"11 этаж",
		"12 этаж",
		"13 этаж"
	};

	static Float:FloorZOffsets22[14] =
	{
    	0.0,		// 0.0,
    	15.0782,	// 15.0782,
    	29.1421,   // 15.0782 + 14.0639,
    	33.64325,   // 15.0782 + 14.0639 + (4.50115 * 1.0),
    	38.1444,   // 15.0782 + 14.0639 + (4.50115 * 2.0),
    	42.64555,   // 15.0782 + 14.0639 + (4.50115 * 3.0),
    	47.1467,   // 15.0782 + 14.0639 + (4.50115 * 4.0),
    	51.64785,   // 15.0782 + 14.0639 + (4.50115 * 5.0),
    	56.149,   // 15.0782 + 14.0639 + (4.50115 * 6.0),
    	60.65015,   // 15.0782 + 14.0639 + (4.50115 * 7.0),
    	65.1513,   // 15.0782 + 14.0639 + (4.50115 * 8.0),
    	69.65245,   // 15.0782 + 14.0639 + (4.50115 * 9.0),
    	74.1536,   // 15.0782 + 14.0639 + (4.50115 * 10.0),
    	78.65475   // 15.0782 + 14.0639 + (4.50115 * 11.0),
	};

	new MovObj22;
	new Obj_Elevator22, Obj_ElevatorDoors22[2];
	new	Obj_FloorDoors22[14][2];
	new Text3D:Label_Elevator22, Text3D:Label_Floors22[14], Text3D:Label2_Floors22[14];
	new ElevatorState22;
	new	ElevatorFloor22;
	new ElevatorQueue22[14];
	new	FloorRequestedBy22[14];
	new ElevatorBoostTimer22;
//--------------------------- End Elevator - 2 ---------------------------------
#endif

//------------------------------ BusSystem -------------------------------------
new playspabs[MAX_PLAYERS];//спавн игрока
new playIDbus[MAX_PLAYERS];//ИД бизнеса для игрока
new DelayPickup[MAX_PLAYERS];//задержка вызовов паблика пикапов
new buscount[BUS_MAX];//0- бизнес не создан, 1- бизнес создан
new busidplay[BUS_MAX];//-600- если владелец бизнеса офф-лайн, ИД игрока- если владелец бизнеса он-лайн
new busmoney[BUS_MAX];//счётчик минут бизнеса (если игрок он-лайн)
new busname[BUS_MAX][64];//название бизнеса
new busplayname[BUS_MAX][MAX_PLAYER_NAME];//имя владельца бизнеса
new buscost[BUS_MAX];//стоимость бизнеса
new busminute[BUS_MAX];//через сколько минут бизнес будет приносить доход
new busincome[BUS_MAX];//доход от бизнеса
new busday[BUS_MAX];//дата окончания срока без права перекупки
new busvw[BUS_MAX];//виртуальный мир бизнеса
new busint[BUS_MAX];//интерьер бизнеса
new Float:buscordx[BUS_MAX];//координаты бизнеса
new Float:buscordy[BUS_MAX];
new Float:buscordz[BUS_MAX];
new PickupID[BUS_MAX];//массив ИД пикапов
new MapIconID[BUS_MAX];//массив ИД мап-иконок
new Text3D:Nbus[BUS_MAX];//массив ИД 3D-текстов
new busdlgcon[MAX_PLAYERS];//переменная контроля диалогов
//---------------------------- End BusSystem -----------------------------------

new conopen222;//контроль коннекта к серверу
new playconpass[MAX_PLAYERS];//номер текущего паспорта игрока
new DB:scrnet1db;//переменная базы данных сетевого экрана 1 (прокси или VPN)
new DBResult:qscrnet1db[MAX_PLAYERS + 1];//переменные запросов базы данных сетевого экрана 1 (прокси или VPN)
new pergpcifirst[MAX_PLAYERS][64];//первичный gpci-тег
new scrnetper[20][64];//массив ников админов для разрешения работы с сетевыми экранами
new scrnet1mark;//указатель на текущую БД сетевого экрана 1
new scrnet1b[4][MAX_PLAYERS + 1];//сетевой экран 1 (прокси или VPN)
new scrnet1e[4][MAX_PLAYERS + 1];
new scrnet2b[4][200];//сетевой экран 2 (локальные адреса)
new scrnet2e[4][200];
new scrnet2b123[200];//сетевой экран 2 (локальные адреса) данные для поиска
new scrnet2e123[200];
new scrnetnamegl[MAX_PLAYERS][20][64];//массив ников для сетевых экранов
new scrnetpassgl[MAX_PLAYERS][20][64];//массив паспортов для сетевых экранов
new scrnetcount[MAX_PLAYERS];//переменная контроля сетевых экранов
new scrnetv[MAX_PLAYERS];//переменная просмотра действий сетевых экранов
new condiscon[MAX_PLAYERS];//удалённое управление коннектом-дисконнектом
new ct9control[MAX_PLAYERS];//античит управления чужим транспортом
new ct9delay;
new Float:ct9concord[3][4][MAX_PLAYERS];
new Float:ct9dopcord[3][MAX_PLAYERS];
new Float:ct9dltcord[2][MAX_PLAYERS];
new conconTD[MAX_PLAYERS];//блокировка создания текст-дравов при подключении игрока
new StopHidrav[MAX_PLAYERS];//переменная задержки гидравлики
#if (MOD11INS >= 3)
	new crash8str[64];//антикрашер - 8
	new Float:crash8dn[6];//антикрашер - 8
#endif
new crash8count[MAX_PLAYERS];//контроль антикрашера - 8
new crash7count[MAX_PLAYERS];//контроль антикрашера - 7
#if (MOD11INS >= 3)
	new Float:crash7vx[MAX_PLAYERS];
	new Float:crash7vy[MAX_PLAYERS];
	new Float:crash7vz[MAX_PLAYERS];
#endif
new crash6[MAX_PLAYERS];//контроль антикрашера - 6
new Float:angcrash6[MAX_PLAYERS];//антикрашер - 6
new crash5count[MAX_PLAYERS];//контроль антикрашера - 5
new dmcount44[MAX_PLAYERS];//маркер счётчика времени в DM-зонах
new dmmoney[MAX_PLAYERS];//маркер денежного приза в DM-зонах
new dmplay[MAX_PLAYERS];//маркер присутствия в DM-зонах
new dmplay22[MAX_PLAYERS];//вспомогательный маркер DM-зон
new dmspa[MAX_PLAYERS];//блокировка сохранения координат и угла игрока в DM-зонах
new dmlock[MAX_PLAYERS];//блокировка ''уровня дрифта'' (над головой) в DM-зонах
new dmkill[MAX_PLAYERS];//число убийств в DM-зонах
new dmdeath[MAX_PLAYERS];//число смертей в DM-зонах
new PlayerText:dmkillTD[MAX_PLAYERS];//текстдравы DM-зон
new PlayerText:dmdeathTD[MAX_PLAYERS];
new Text3D:dmkd3D[MAX_PLAYERS];//3D-тексты DM-зон
new Float:dmcor[MAX_PLAYERS][4];//координаты сохранений в DM-зонах
new countdown22[MAX_PLAYERS];//обратный DM-отсчёт
new dmwplay[MAX_PLAYERS];//маркер присутствия в DM-мирах
new dopadm[MAX_PLAYERS];//дополнительные переменные админок
new Text:HMS22;//текстдравы максимальной горизонтальной скорости
new PlayerText:HMS44[MAX_PLAYERS];
new HMS77[212] = {176, 164, 208, 123, 149, 183, 123, 166, 112, 177,//400-409//массив максимальной горизонтальной скорости
145, 247, 188, 123, 118, 215, 172, 150, 129, 167,//410-419
162, 172, 157, 111, 151, 200, 194, 185, 175, 225,//420-429
208, 146, 106, 124, 187, 64, 167, 176, 160, 188,//430-439
152, 85, 156, 141, 124, 183, 297, 160, 125, 202,//440-449
59, 216, 205, 65, 149, 176, 119, 107, 176, 152,//450-459
233, 180, 125, 161, 68, 63, 164, 157, 161, 151,//460-469
175, 123, 141, 121, 167, 193, 300, 208, 132, 156,//470-479
206, 82, 175, 137, 72, 112, 73, 201, 200, 156,//480-489
175, 167, 157, 202, 240, 197, 182, 212, 121, 138,//490-499
157, 41, 240, 240, 193, 156, 200, 185, 121, 89,//500-509
114, 200, 200, 250, 135, 159, 176, 176, 184, 300,//510-519
300, 180, 197, 170, 146, 179, 176, 167, 197, 167,//520-529
68, 79, 123, 187, 188, 177, 193, 202, 202, 115,//530-539
167, 227, 184, 169, 166, 164, 167, 160, 150, 172,//540-549
162, 176, 136, 300, 161, 177, 124, 124, 174, 199,//550-559
189, 172, 199, 150, 99, 184, 179, 193, 164, 1,//560-569
1, 105, 68, 124, 68, 176, 176, 300, 146, 176,//570-579
171, 170, 152, 96, 41, 171, 161, 184, 121, 182,//580-589
800, 64, 300, 200, 69, 132, 196, 196, 196, 177,//590-599
169, 124, 189, 191, 164, 169, 111, 111, 4, 121,//600-609
21, 111};//610-611
new TrainID[8];//ИД поездов на сервере
new TrainID22[8];//дополнительные ИД поездов на сервере
new ColorPlay[MAX_PLAYERS];//переменная цвета игрока
new StopGMoney[MAX_PLAYERS];//переменная задержки команды /givecash
#if (MOD22INS == 1 && MOD55INS == 1)
	new File:inLog;//сервер-лог
	new File:outLog;//резервная копия сервер-лога
	new position;//последний размер сервер-лога
#endif
new StopBB[MAX_PLAYERS];//переменная задержки команды /bb
new StopHH[MAX_PLAYERS];//переменная задержки команды /hh
#if (MOD66INS > 1)
	new playspacount[MAX_PLAYERS];//задержка контроля игрока на ошибку координат спавна
	new playspascan[MAX_PLAYERS];//переменная спавна игрока 2
#endif
	new playlogcount[MAX_PLAYERS];//задержка контроля игрока на спавн без логирования
#if (MOD66INS == 3)
	new Float:sposcheck[MAX_PLAYERS][3];//сканер собейта
#endif
new EnterTick[MAX_PLAYERS];//антикрашер игроков - 3 (январь 2015)
new EnterTick33[MAX_PLAYERS];//переменная обхода антикрашера - 3
new carplmod[MAX_PLAYERS];//модель транспорта игрока для обхода антикрашера - 3
new Text3D:fantxt;//переменная для хранения 3D-текста с несущесвующим ИД
#if (MOD90INS == 1)
	new migration[MAX_PLAYERS];//переменные миграции аккаунтов ИЗ fopen В SQLite
	new DB:playerdb;//переменная базы данных аккаунтов игроков
	new DBResult:querydb[MAX_PLAYERS + 1];//переменные запросов базы данных аккаунтов игроков
#endif
new EndConD;//дата последнего посещения сервера игроками
new EndConM;
new EndConY;
new Wind1SA;//переменные "окна" автосохранения аккаунтов
new Wind2SA;
new WWindSA;//ширина "окна" автосохранения аккаунтов
new DerbyID[MAX_PLAYERS];//переменная дерби-режима
new tabladm[MAX_PLAYERS][MAX_PLAYERS][128];//он-лайн админы
new contover[MAX_PLAYERS];
new countadm[MAX_PLAYERS];
new count2adm[MAX_PLAYERS];
new onladm[20][128];//таблица из 20 строк
new StopReport[MAX_PLAYERS];//переменная задержки команды /report
new Text:Times;
new PlayCRSH[MAX_PLAYERS];//переменная блокировки спидхака
new Float:PlayCX[MAX_PLAYERS];//переменные контроля координат игроков (FLY-чит (или чит-телепорт))
new Float:PlayCY[MAX_PLAYERS];
new Float:PlayCZ[MAX_PLAYERS];
new PlayCINT[MAX_PLAYERS];
new PlayCVW[MAX_PLAYERS];
new PlayCRTP[MAX_PLAYERS];
new ipper44[MAX_PLAYERS][4][32];//массив для команды /openip
new OpenIP22[40];//массив максимумов подключений с заданного IP-адреса (обход авто-бана подключения двух (и более) игроков с одного и того же IP)
new OpenIP[40][256];//массив IP-адресов (обход авто-бана подключения двух (и более) игроков с одного и того же IP)
new mapiconid[MAX_PLAYERS];//массив ID мап иконок наблюдения
new ipper[MAX_PLAYERS][4][32];//массив для команды /banlst
new StopHeal[MAX_PLAYERS];//переменная задержки команды /heal
new GlTime;//переменные времени, погоды, и гравитации
new GlWeat;
new Float:GlGrav;
new Float:CoefGrav;
new Float:CoefGrav22;
new LocTime[MAX_PLAYERS];
new PlayLock1[3][MAX_PLAYERS];//переменные блокировки игрока
new Float:PlayLock2[4][MAX_PLAYERS];
new NETrecCon;//переменные контроля сети и AFK
new NETsenCon;
new NETrecPl[MAX_PLAYERS];
new NETsenPl[MAX_PLAYERS];
new NETafkPl[MAX_PLAYERS][7];
new LockSpawn[MAX_PLAYERS];//блокировка заполнения слотов оружия и предметов
new DataCheat1[40][MAX_PLAYER_NAME];//таблица ников читов
new restrest;//переменная рестарта сервера
new pertrain;//разрешение на вождение поездов
new prisoncount[MAX_PLAYERS];//задержка контроля игрока в тюрьме
new passrcon[MAX_PLAYERS];//бан взлома RCON-пароля
new oneminkick[MAX_PLAYERS];//кик - если не заспавнился
new RealName[MAX_PLAYERS][MAX_PLAYER_NAME];//реальный ник игрока
new NameClick[MAX_PLAYERS];//признак бана или кика по таймеру
new ReasonTarget[MAX_PLAYERS][256];//причина бана или кика по таймеру
new NameAdmin[MAX_PLAYERS][MAX_PLAYER_NAME];//ник админа по таймеру
new NameTarget[MAX_PLAYERS][MAX_PLAYER_NAME];//ник игрока по таймеру
new fbanreason[MAX_PLAYERS][256];//причина бана
#if (MOD11INS <= 3)
	new ObjGam[43];//массив стандартных объектов
#endif
#if (MOD11INS == 4)
	new ObjGam[44];//массив стандартных объектов
#endif
new dddrift[MAX_PLAYERS];//переменная контроля дрифта
new scrmod[6][MAX_PLAYERS];//переменная режимов экрана
#if (MOD22INS == 1)
	new File:ServerLogFile;//античит-2
	new AntCh1[128];//античит-2
	new AntCh2[128];//античит-2
	new AntCh3[128];//античит-2
	new AntCh4;//античит-2
	new ParaAntCh1;//античит-2
	new ParaAntCh2;//античит-2
	new ParaAntCh3;//античит-2
	new ParaAntCh4;//античит-2
#endif
new timpolsec;//переменная таймера 450 мс
new snowobj[MAX_PLAYERS];//переменная снега 1
new SnowONOFF[MAX_PLAYERS];//переменная снега 2
new nucexplos;//переменная ядерного взрыва
new nucexptime;//переменная таймера ядерного взрыва
new perfrost[MAX_PLAYERS];//переменная заморозки
new twoIP[MAX_PLAYERS][128];//переменная для IP вышедшего игрока
new playspa[MAX_PLAYERS];//переменная спавна игрока
new LogAdm[100][256];//переменная регистрации админов
new LogAdmcnt[MAX_PLAYERS];//переменная регистрации админов-2
new exitcheat[MAX_PLAYERS];//0-игрок - НЕ чит, 1-игрок - чит
new servname[256];//переменная управления сервером 1
new servpass[256];//переменная управления сервером 2
new servmap[256];//переменная управления сервером 3
new servurl[256];//переменная управления сервером 4
new status;//переменная управления сервером 5
new relfs[16][256];//переменная управления сервером 6
new servchas;//переменная управления сервером 7
new packlim;//переменная управления сервером 8
new functioncon[MAX_PLAYERS];//контрольная переменная функций
new chatcon[MAX_PLAYERS];//контрольная переменная чата
new oldhour;//переменная реального времени
new timecor[9];//переменная коррекции времени 2
new CorTime[5];//переменная коррекции времени 1
new compdrift[MAX_PLAYERS];//переменная дрифт-соревнования
new LineObj1[88];//объекты трассы 1
new LineObj2[54];//объекты трассы 2
new LineObj3[62];//объекты трассы 3
new LineObj4[31];//объекты трассы 4
new LineObj5[84];//объекты трассы 5
new LineStat[6];//переменная статуса трасс (0-отключена, 1-подключена)
new resauto;//переменная авторестарта сервера
new livdop[MAX_PLAYERS];//переменная выключения бессмертия
new tpdrift[MAX_PLAYERS];//переменная сброса дрифт-очков при ТП
new Float:TelSpec[MAX_PLAYERS][3];//координаты возврата при снятии наблюдения
new admper1[MAX_PLAYERS];//переменная наблюдения 1
new admper2[MAX_PLAYERS];//переменная наблюдения 2
new admper3[MAX_PLAYERS];//переменная наблюдения 3
new admper4[MAX_PLAYERS];//переменная наблюдения 4
new admper5[MAX_PLAYERS];//переменная наблюдения 5
new admper6[MAX_PLAYERS];//переменная наблюдения 6
new onsectimer;//переменная таймера
new minsertimer;//переменная таймера
new countdown[MAX_PLAYERS];
new playweap[MAX_PLAYERS][13];//массив оружия
new playammo[MAX_PLAYERS][13];//массив количества патронов
new Float:playspax[18] = {-312.7, 417.29, 2169.01, 1243.24, 2492.34, -1977.77,
	189.65, -2205.31, -2626.94, 1517.23, 1263.47, -2405.72, 2032.41, 1419.40, -2756.81, 2636.81, 1639.30, 1242.23};//координаты x случайного спавна игрока
new Float:playspay[18] = {1532.72, 2503.67, 1676.55, 118.28, -1666.33, 473.04,
	-1798.02, -2149.07, 1328.88, 1280.99, -2027.80, -597.28, 1023.67, -2622.64, 369.24, 2272.92, -1122.44, -744.98};//координаты y случайного спавна игрока
new Float:playspaz[18] = {75.36, 16.48, 10.82, 20.39, 13.34, 35.17,
	4.10, 46.22, 7.19, 10.81, 59.32, 132.64, 10.82, 13.54, 4.35, 10.82, 23.90, 94.95};//координаты z случайного спавна игрока
new Float:playspaa[18] = {182.77, 89.17, 82.77, 338.63, 83.28, 359.52,
	226.55, 179.01, 342.64, 44.66, 180.82, 125.83, 180.26, 291.36, 269.87, 19.34, 177.34, 21.39};//угол поворота случайного спавна игрока
new ColNick[19] = {0xFF0000FF, 0xFF3F3FFF, 0xFF3F00FF, 0xBF3F00FF, 0xFF7F3FFF, 0xFF7F00FF, 0xFFFF00FF, 0x3FFF3FFF, 0x00FF00FF,
	0x00BF00FF, 0x00FFFFFF, 0x00BFFFFF, 0x3F3FFFFF, 0x0000FFFF, 0x7F3FFFFF, 0x7F00FFFF, 0xFF00FFFF, 0x7F7F7FFF, 0x00FF0000};//массив
	//цветов ника и цветов на радаре
new neon[MAX_PLAYERS][3];
new migalka[MAX_PLAYERS][2];
new migalkatr1[MAX_PLAYERS];//передача данных между частями программы разделённых таймером
new migalkatr2[MAX_PLAYERS];
new skinstatplay[MAX_PLAYERS];//0-у игрока ещё нет скина, 1-скин получен
new nickstatcol[MAX_PLAYERS];//0-у игрока ещё нет случайного цвета ника и цвета на радаре, 1-цвета получены
new nick5col = 0;//переменная таймера FunNickCol
new tpspa;//случайный индекс выборки из массива координат спавна игрока
new col4car;//номер случайного цвета при спавне транспорта
new playcar[MAX_PLAYERS];//ид транспорта игрока
new playcarvw[5000];//виртуальный мир транспорта игрока
//new hour, minute;
new gPlayerAccount[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new fivesectimer;
new player[MAX_PLAYERS];
new playtarget[MAX_PLAYERS][MAX_PLAYER_NAME];
new autorepair[MAX_PLAYERS];
new autorepaircar;
new restart;
new Float:TpDestA[MAX_PLAYERS][4];
new TpPosA[MAX_PLAYERS][2];
new Float:TpDestP[MAX_PLAYERS][4];
new TpPosP[MAX_PLAYERS];
new timeobject;
new timeobject22;
//new caravto[MAX_PLAYERS];

enum PlayerData//drift bonus
{
	Level[200]
};
new Playerdr[MAX_PLAYERS][PlayerData];
enum Float:Pos
{
	Float:sX,
	Float:sY,
	Float:sZ,
	Float:dltX,
	Float:dltY,
	Float:dltZ
};
new Float:SavedPos[MAX_PLAYERS][Pos];

enum pInfo
{
	pKey[64],
	pTDReg[64],
	pIPAdr[128],
	pMinlog,
	pAdmin,
	pAdmshad,
	pAdmlive,
	pAdmscancom,
	pReg,
	pPrison,
	pPrisonsec,
	pMuted,
	pMutedsec,
	pKills,
	pDeaths,
 	pPolice,
 	pDeport,
 	pRecPM,
	pWanted,
 	pLock,
// 	pPISTOL,
//	pPISTOL_SILENCED,
//	pDESERT_EAGLE,
//	pSHOTGUN,
//	pSAWNOFF_SHOTGUN,
//	pSPAS12_SHOTGUN,
//	pMICRO_UZI,
//	pMP5,
//	pAK47,
//	pM4,
//	pSNIPERRIFLE
 	pPass_data1[64],
 	pPass_inout1[64],
 	pPass_ver1[32],
 	pPass_count1,
 	pPass_data2[64],
 	pPass_inout2[64],
 	pPass_ver2[32],
 	pPass_count2,
 	pPass_data3[64],
 	pPass_inout3[64],
 	pPass_ver3[32],
 	pPass_count3,
 	pPass_data4[64],
 	pPass_inout4[64],
 	pPass_ver4[32],
 	pPass_count4,
 	pPassMode,
 	pPassDel,
 	pPassLock,
 	pPassError
};
new PlayerInfo[MAX_PLAYERS][pInfo];

new dAccName[MAX_PLAYERS + 1][64];

enum aData
{
	dKey[32],
	dTDReg[32],
	dEndConD,
	dEndConM,
	dEndConY,
	dIPAdr[128],
	dMinlog,
	dAdmin,
	dAdmshad,
	dAdmlive,
	dAdmscancom,
	dReg,
	dPrison,
	dPrisonsec,
	dMuted,
	dMutedsec,
	dMoney,
	dKills,
	dDeaths,
 	dPolice,
 	dDeport,
 	dRecPM,
	dWanted,
 	dLock,
	dGang,
	dGangLvl,
// 	dPISTOL,
//	dPISTOL_SILENCED,
//	dDESERT_EAGLE,
//	dSHOTGUN,
//	dSAWNOFF_SHOTGUN,
//	dSPAS12_SHOTGUN,
//	dMICRO_UZI,
//	dMP5,
//	dAK47,
//	dM4,
//	dSNIPERRIFLE
 	dPass_data1[64],
 	dPass_inout1[64],
 	dPass_ver1[32],
 	dPass_count1,
 	dPass_data2[64],
 	dPass_inout2[64],
 	dPass_ver2[32],
 	dPass_count2,
 	dPass_data3[64],
 	dPass_inout3[64],
 	dPass_ver3[32],
 	dPass_count3,
 	dPass_data4[64],
 	dPass_inout4[64],
 	dPass_ver4[32],
 	dPass_count4,
 	dPassMode,
 	dPassDel,
 	dPassLock,
 	dPassError
};
new admData[MAX_PLAYERS + 1][aData];

//---------------- замена стандартной функции SetPlayerSkin --------------------
//-------------------- на её прототип S_SetPlayerSkin --------------------------
stock S_SetPlayerSkin(const playerid, const skinid)
{
	if(playspa[playerid] == 1)//если игрок уже заспавнился, то:
	{
		ClearAnimations(playerid);//меняем игроку скин с задержкой
		TogglePlayerControllable(playerid, 0);
		SetTimerEx("S22_SetPlayerSkin", 2000, 0, "ii", playerid, skinid);
	}
	else//иначе:
	{
		SetPlayerSkin(playerid, skinid);//меняем игроку скин без задержки
	}
	return 1;
}
forward S22_SetPlayerSkin(playerid, skinid);
public S22_SetPlayerSkin(playerid, skinid)
{
	SetPlayerSkin(playerid, skinid);
	if(perfrost[playerid] == 600)//если игрок НЕ был заморожен админом, то:
	{
		TogglePlayerControllable(playerid, 1);//разморозить игрока
	}
	return 1;
}
#define SetPlayerSkin S_SetPlayerSkin
//------------------------------------------------------------------------------

main()
{
	print(" ");
	print("----------------------------------");
	print("         Russian-Drift          ");
	print("----------------------------------\n");
}

public OnGameModeInit()
{
	SetGameModeText("Russian-Drift (ren)");
	SendRconCommand("timestamp 1");//RCON-команда печати времени в каждой строке сервер-лога
	SendRconCommand("chatlogging 1");//RCON-команда печати чата игроков в сервер-логе
	SendRconCommand("mapname Russia-Россия");

	fantxt = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);//создаём 3D-текст с несущесвующим ИД
	EnableStuntBonusForAll(0);//убираем бонусы за трюки
	Wind1SA = 0;//начало "окна" автосохранения аккаунтов
#if (MOD90INS == 0)
	WWindSA = 30;//ширина "окна" автосохранения аккаунтов
#endif
#if (MOD90INS == 1)
	WWindSA = 3;//ширина "окна" автосохранения аккаунтов
#endif
	Wind2SA = WWindSA;//задаём конец "окна" автосохранения аккаунтов
	SetWeather(1);//устанавливаем ID погоды на 1
	GlWeat = 1;
	SetGravity(0.008000);//устанавливаем гравитацию на 0.008
	GlGrav = 0.008000;
	restrest = 0;//переменная рестарта сервера
	nucexplos = 0;//переменная ядерного взрыва
	nucexptime = 0;//переменная таймера ядерного взрыва
	oldhour = 0;//подготовка переменной реального времени
	ReadCorTime();//чтение коррекции времени
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	oldhour = timecor[0];
	if(timecor[8] == 1)//если включено реальное время, то:
	{
		SetWorldTime(timecor[0]);
		GlTime = timecor[0];
	}
	else//иначе:
	{
		SetWorldTime(12);//устанавливаем 12 часов
		GlTime = 12;
	}
	print(" ");
	print("++++++++++++++++++++++++++++++++++++++");
	print(" ");
	printf("Server Start: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
	printf("Time Correct: %02d:%02d", CorTime[0], CorTime[1]);
	print(" ");
	print("++++++++++++++++++++++++++++++++++++++");
	print(" ");

	new Float:kgrav22;
	kgrav22 = GlGrav;
	if(kgrav22 == 1.000000) {kgrav22 = 0.999;}
	CoefGrav = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 1300.00);
	CoefGrav22 = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 750.00);

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	for(new mm = 0; mm < 100; mm++)
	{
		strdel(LogAdm[mm], 0, 256);
	}
//---------------------------------- конец -------------------------------------
	new string[256];
	ReadServCon();//чтение конфигурации сервера
	if(strlen(servname))//если есть имя сервера, то:
	{
		strcat(string, "hostname ");//сборка RCON-команды имени сервера
		strcat(string, servname);
		SendRconCommand(string);//RCON-команда имени сервера
	}
	strdel(string,0,256);
	if(strlen(servpass) == 0 || (strlen(servpass) == 1 && servpass[0] == '0'))//если нет пароля сервера, то:
	{
		new para77;
		para77++;
		para77--;
	}
	else//иначе, (если есть пароль сервера), то:
	{
		strcat(string, "password ");//сборка RCON-команды пароля сервера
		strcat(string, servpass);
		SendRconCommand(string);//RCON-команда пароля сервера
	}
	strdel(string,0,256);
	if(strlen(servmap))//если есть имя карты сервера, то:
	{
		strcat(string, "mapname ");//сборка RCON-команды имени карты сервера
		strcat(string, servmap);
		SendRconCommand(string);//RCON-команда имени карты сервера
	}
	strdel(string,0,256);
	if(strlen(servurl))//если есть имя web-страницы сервера, то:
	{
		strcat(string, "weburl ");//сборка RCON-команды имени web-страницы сервера
		strcat(string, servurl);
		SendRconCommand(string);//RCON-команда имени web-страницы сервера
	}
	if(status == 0)//если RCON-доступ запрещён, то:
	{
		SendRconCommand("rcon 0");//RCON-команда запрета RCON-доступа
	}
	else//иначе:
	{
		SendRconCommand("rcon 1");//RCON-команда разрешения RCON-доступа
	}
#if (MOD11INS == 4)
	SendRconCommand("language Russian");//RCON-команда языка сервера
	SendRconCommand("cookielogging 0");//отключение cookie в сервер-логе (для сервера 0.3.7-R2 и выше)
#endif
	SendRconCommand("announce 1");//RCON-команда анонсирования в интернете
	SetTimer("ContFS", 1000, 0);//перезагрузка с 0-го по 15-й слот FS
	SetTimer("ContSobj", 9000, 0);//загрузка объектов, 3D-текстов, и текст-дравов сервера
#if (MOD11INS >= 3)
	SendRconCommand("minconnectiontime 1000");//защита от флуд-коннекта (для сервера 0.3z-R3 и выше)
	if(packlim >= 200 && packlim <= 8000)//если лимит пакетов в допустимых пределах (200-8000), то:
	{
		new dopstr[32];
		strdel(dopstr,0,32);
		valstr(dopstr, packlim);//преобразование лимита пакетов в строку
		strdel(string,0,256);
		strcat(string, "messageholelimit ");//сборка RCON-команды лимита пакетов
		strcat(string, dopstr);
		SendRconCommand(string);//RCON-команда лимита пакетов
	}
	if(packlim < 200)//если лимит пакетов меньше 200, то:
	{
		packlim = 200;
		SaveServCon();//запись конфигурации сервера
		ReadServCon();//чтение конфигурации сервера
		new dopstr[32];
		strdel(dopstr,0,32);
		valstr(dopstr, packlim);//преобразование лимита пакетов в строку
		strdel(string,0,256);
		strcat(string, "messageholelimit ");//сборка RCON-команды лимита пакетов
		strcat(string, dopstr);
		SendRconCommand(string);//RCON-команда лимита пакетов
	}
	if(packlim > 8000)//если лимит пакетов больше 8000, то:
	{
		packlim = 8000;
		SaveServCon();//запись конфигурации сервера
		ReadServCon();//чтение конфигурации сервера
		new dopstr[32];
		strdel(dopstr,0,32);
		valstr(dopstr, packlim);//преобразование лимита пакетов в строку
		strdel(string,0,256);
		strcat(string, "messageholelimit ");//сборка RCON-команды лимита пакетов
		strcat(string, dopstr);
		SendRconCommand(string);//RCON-команда лимита пакетов
	}
#endif
	ReadLine();//чтение статуса трасс
	ReadOpenIP();//чтение IP-слотов
//	SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
#if (MOD90INS == 0)
	AutoUnban();//автоматический разбан
#endif
#if (MOD90INS == 1 && MOD91INS == 0)
	playerdb = db_open("players/players.db");//подключаем базу данных аккаунтов игроков к серверу
	SetTimer("AutoUnban", 300, 0);//автоматический разбан
#endif
#if (MOD90INS == 1 && MOD91INS == 1)
	if(fexist("players/players.db"))//если есть файл базы данных аккаунтов игроков, то:
	{
		fremove("players/players.db");//удаляем старую базу данных аккаунтов игроков
	}
	SetTimer("CreateDB", 300, 0);//создаём новую (пустую) базу данных аккаунтов игроков
#endif

#if (MOD22INS == 1)
	ServerLogFile = fileOpen("server_log.txt", io_Read);//античит-2
#endif

#if (MOD22INS == 1 && MOD55INS == 1)
	position = 0;//обнуляем последний размер сервер-лога
	inLog = fileOpen("server_log.txt", io_Read);//открываем сервер-лог
	if(!fexist("server_log/server_log.txt"))//если нет резервной копии сервер-лога, то:
	{
		new File:crFile;//создаём пустой файл резервной копии сервер-лога
		crFile = fopen("server_log/server_log.txt", io_write);
		fclose(crFile);
	}
	outLog = fileOpen("scriptfiles/server_log/server_log.txt", io_Append);//открываем резервную копию сервер-лога

	new para;
	para = fileLength(inLog);//узнаём размер сервер-лога
	if(para > 20000)//если размер больше 20000 байт (вероятность, что остался
	{//старый сервер-лог), то:
		SLCopy(1);//делаем резервную копию конца старого сервер-лога
	}
#endif

    resauto = 0;//подготовка к авторестарту
	ReadLogAdm();//чтение регистрации админов

	TrainID[0] = AddStaticVehicle(538,1695.89,-1953.89,13.55,210.00,-1,-1);//создание поездов
	TrainID[1] = AddStaticVehicle(537,788.96,-1342.98,-1.58,210.00,-1,-1);
	TrainID[2] = AddStaticVehicle(538,-1944.39,87.14,25.72,30.00,-1,-1);
	TrainID[3] = AddStaticVehicle(537,563.61,1262.98,12.04,119.34,-1,-1);
	TrainID[4] = AddStaticVehicle(538,1461.08,2632.25,10.82,271.17,-1,-1);
	TrainID[5] = AddStaticVehicle(537,2864.71,1260.95,10.82,210.00,-1,-1);
	TrainID[6] = AddStaticVehicle(538,2823.83,82.16,26.52,8.13,-1,-1);
	TrainID[7] = AddStaticVehicle(537,2174.10,-1946.94,13.55,30.00,-1,-1);
	for(new i = 0; i < 8; i++)
	{
		TrainID22[i] = TrainID[i] + 3;
	}
	pertrain = 1;//разрешить всем игрокам водить поезда

	for(new i = 0; i < 5000; i++)
	{
		playcarvw[i] = -100;//обнулить виртуальный мир транспорта игрока
	}

	Times = TextDrawCreate(551.000000, 23.000000, "--");
	TextDrawBackgroundColor(Times, 255);
	TextDrawFont(Times, 3);
	TextDrawLetterSize(Times, 0.549999, 1.700000);
	TextDrawColor(Times, 0xB4B5B7FF);
	TextDrawSetOutline(Times, 1);
	TextDrawSetProportional(Times, 1);

	for(new i = 0; i < 40; i++)
	{
		strdel(DataCheat1[i], 0, MAX_PLAYER_NAME);//очистка таблицы ников читов
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		NameClick[i] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[i], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[i], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[i], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		playspa[i] = 0;//обнуление переменных спавна игроков
		mapiconid[i] = -600;//очистка ID мап иконок наблюдения
		ct9control[i] = 0;
		condiscon[i] = 0;
	}
	ct9delay = 0;

	for(new i=0;i<MAX_PLAYERS;i++)//Gangs system
	{
		idgangsave[i] = 0;//обнуление ID банд для записи
		conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока

		if(IsPlayerConnected(i))
		{
			dmkillTD[i] = CreatePlayerTextDraw(i,500.000000,375.000000,"_");//создаём текстдравы DM-зон
			PlayerTextDrawAlignment(i,dmkillTD[i],0);
			PlayerTextDrawBackgroundColor(i,dmkillTD[i],0x000000ff);
			PlayerTextDrawFont(i,dmkillTD[i],1);
			PlayerTextDrawLetterSize(i,dmkillTD[i],0.499999,2.599999);
			PlayerTextDrawColor(i,dmkillTD[i],0x00ff00ff);
			PlayerTextDrawSetOutline(i,dmkillTD[i],1);
			PlayerTextDrawSetProportional(i,dmkillTD[i],1);
			PlayerTextDrawSetShadow(i,dmkillTD[i],1);

			dmdeathTD[i] = CreatePlayerTextDraw(i,500.000000,400.000000,"_");
			PlayerTextDrawAlignment(i,dmdeathTD[i],0);
			PlayerTextDrawBackgroundColor(i,dmdeathTD[i],0x000000ff);
			PlayerTextDrawFont(i,dmdeathTD[i],1);
			PlayerTextDrawLetterSize(i,dmdeathTD[i],0.499999,2.599999);
			PlayerTextDrawColor(i,dmdeathTD[i],0xff0000ff);
			PlayerTextDrawSetOutline(i,dmdeathTD[i],1);
			PlayerTextDrawSetProportional(i,dmdeathTD[i],1);
			PlayerTextDrawSetShadow(i,dmdeathTD[i],1);
		}
	}

	ScrNetPerLoad();//чтение per-файла
	ScrNet1LoadMark();//чтение указателя на текущую БД сетевого экрана 1
	if(scrnet1mark == 1)//если указатель = 1, то: текущая БД: _scrnet11.db
	{
		print("[scrnet] Текущая БД сетевого экрана 1 : _scrnet11.db .");
		if(!fexist("data/scrnet1/_scrnet11.db"))//если нет файла базы данных сетевого экрана 1, то:
		{
			scrnet1db = db_open("data/scrnet1/_scrnet11.db");//подключаем базу данных сетевого экрана 1 к серверу
			new strdln[1000];
			format(strdln, sizeof(strdln), "CREATE TABLE _scrnet1 (IDCopy INTEGER,NumSt INTEGER,Active INTEGER,");//создаём запрос БД
			format(strdln, sizeof(strdln), "%sSN1b1 INTEGER,SN1b2 INTEGER,SN1b3 INTEGER,SN1b4 INTEGER,", strdln);
			format(strdln, sizeof(strdln), "%sSN1e1 INTEGER,SN1e2 INTEGER,SN1e3 INTEGER,SN1e4 INTEGER,", strdln);
			format(strdln, sizeof(strdln), "%sSN1b123 INTEGER,SN1e123 INTEGER,", strdln);
			format(strdln, sizeof(strdln), "%sNameAdm VARCHAR(64))", strdln);
			db_query(scrnet1db, strdln);//отправляем запрос на создание новой (пустой) БД сетевого экрана 1
			SetTimer("dbScrNet2", 1000, 0);
		}
		else//иначе, если файл базы данных сетевого экрана 1 есть, то:
		{
			scrnet1db = db_open("data/scrnet1/_scrnet11.db");//подключаем базу данных сетевого экрана 1 к серверу
			SetTimer("dbScrNet1", 1000, 0);
		}
	}
	if(scrnet1mark == 2)//если указатель = 2, то: текущая БД: _scrnet12.db
	{
		print("[scrnet] Текущая БД сетевого экрана 1 : _scrnet12.db .");
		if(!fexist("data/scrnet1/_scrnet12.db"))//если нет файла базы данных сетевого экрана 1, то:
		{
			scrnet1db = db_open("data/scrnet1/_scrnet12.db");//подключаем базу данных сетевого экрана 1 к серверу
			new strdln[1000];
			format(strdln, sizeof(strdln), "CREATE TABLE _scrnet1 (IDCopy INTEGER,NumSt INTEGER,Active INTEGER,");//создаём запрос БД
			format(strdln, sizeof(strdln), "%sSN1b1 INTEGER,SN1b2 INTEGER,SN1b3 INTEGER,SN1b4 INTEGER,", strdln);
			format(strdln, sizeof(strdln), "%sSN1e1 INTEGER,SN1e2 INTEGER,SN1e3 INTEGER,SN1e4 INTEGER,", strdln);
			format(strdln, sizeof(strdln), "%sSN1b123 INTEGER,SN1e123 INTEGER,", strdln);
			format(strdln, sizeof(strdln), "%sNameAdm VARCHAR(64))", strdln);
			db_query(scrnet1db, strdln);//отправляем запрос на создание новой (пустой) БД сетевого экрана 1
			SetTimer("dbScrNet2", 1000, 0);
		}
		else//иначе, если файл базы данных сетевого экрана 1 есть, то:
		{
			scrnet1db = db_open("data/scrnet1/_scrnet12.db");//подключаем базу данных сетевого экрана 1 к серверу
			SetTimer("dbScrNet1", 1000, 0);
		}
	}
	ScrNet2Load();//чтение сетевого экрана 2

	timpolsec = SetTimer("PolSec", 443, 1);//вспомогательный таймер 450 мс
	autorepaircar = SetTimer("RepairCar", 1987, 1);
	fivesectimer = SetTimer("FiveSecTimer", 4983, 1);
	onsectimer = SetTimer("OneSecOnd",997,1);
	timeobject = SetTimer("object", 17000, 1);
	timeobject22 = SetTimer("object22", 25000, 1);
	minsertimer = SetTimer("MinServ",60000,1);//таймер минут на сервере

    GangLoad();//Gangs system
	print(" ");
	print("--------------------------------------------");
	print("	GangSystem успешно загружена! ");
	print("--------------------------------------------\n");

    print(" ");//speedometer
    print("**************************************");
	print("     Vehicle Speedometer Load...      ");
	print("**************************************\n");
	VehicleSpeedTextDraw_R();

	drifttimer = SetTimer("Drift", 200, true);//drift bonus
	leveltimer = SetTimer("LevelUpdate",1991,1);

	STRadio[1] = "http://air.radiorecord.ru:805/gold_128";//URL ссылки //Радио
	STRadio[2] = "http://ep128server.streamr.ru:8030/ep128";
	STRadio[3] = "http://air.radiorecord.ru:8102/sd90_128";
	STRadio[4] = "http://air.radiorecord.ru:805/mix_128";
	STRadio[5] = "http://air.radiorecord.ru:805/rock_128";
	STRadio[6] = "http://cast.radiogroup.com.ua:8000/avtoradio";
	STRadio[7] = "http://air.radiorecord.ru:8101/rr_128";
	STRadio[8] = "http://air.radiorecord.ru:8102/dub_128";
	STRadio[9] = "http://air.radiorecord.ru:8102/club_128";
	STRadio[10] = "http://air.radiorecord.ru:8102/mdl_128";
	STRadio[11] = "http://air.radiorecord.ru:8102/gop_128";
	STRadio[12] = "http://air.radiorecord.ru:805/techno_128";

	NMRadio[1] = "Gold";//названия радиостанций //Радио
	NMRadio[2] = "Европа +";
	NMRadio[3] = "Супердискотека 90-х";
	NMRadio[4] = "Мегамикс";
	NMRadio[5] = "Рок радио";
	NMRadio[6] = "Авторадио";
	NMRadio[7] = "Radio Record";
	NMRadio[8] = "Dubstep";
	NMRadio[9] = "Club";
	NMRadio[10] = "Медляк FM";
	NMRadio[11] = "Гоп FM";
	NMRadio[12] = "Техно";

	AddPlayerClass(0,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);//скины на спавне
	AddPlayerClass(2,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(3,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(7,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(11,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(12,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(19,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(21,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(22,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(23,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(26,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(28,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(29,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(30,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(37,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(41,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(47,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(91,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(93,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(101,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(103,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(104,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(105,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(106,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(108,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(109,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(115,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(116,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(117,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(121,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(122,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(150,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(151,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(152,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(169,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(170,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(176,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(179,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(188,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(190,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(192,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(193,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(194,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(195,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(217,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(233,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(269,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(270,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(271,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(292,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(293,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(295,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);

	AddPlayerClass(254,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);//скины паркур мода FR_Story_2.1
	AddPlayerClass(255,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(256,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(257,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(280,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(281,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(282,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(283,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(284,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(285,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(286,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(287,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(288,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);

	return 1;
}

forward dbScrNet1();
public dbScrNet1()
{
	conopen222 = 1;//подключение коннекта к серверу
	return 1;
}

forward dbScrNet2();
public dbScrNet2()
{
	db_close(scrnet1db);//отключаем базу данных сетевого экрана 1 от сервера
	SetTimer("dbScrNet3", 1000, 0);
	return 1;
}

forward dbScrNet3();
public dbScrNet3()
{
	if(scrnet1mark == 1)//если указатель = 1, то: текущая БД: _scrnet11.db
	{
		scrnet1db = db_open("data/scrnet1/_scrnet11.db");//подключаем базу данных сетевого экрана 1 к серверу
	}
	if(scrnet1mark == 2)//если указатель = 2, то: текущая БД: _scrnet12.db
	{
		scrnet1db = db_open("data/scrnet1/_scrnet12.db");//подключаем базу данных сетевого экрана 1 к серверу
	}
	SetTimer("dbScrNet1", 1000, 0);
	return 1;
}

public OnGameModeExit()
{
	if(restrest == 0)//если нету рестарта сервера, то:
	{

//		FiveSecTimer();
		KillTimer(fivesectimer);
		KillTimer(restart);
		KillTimer(autorepaircar);
//		KillTimer(timeobject);
//		KillTimer(timeobject22);
		KillTimer(timpolsec);
		KillTimer(onsectimer);
		KillTimer(minsertimer);
		KillTimer(drifttimer);
		KillTimer(leveltimer);

		new string[256];//выгрузка с 0-го по 15-й слот FS
		for(new j=0; j<16; j++)
		{
			if(strlen(relfs[j]))//если строка НЕ пустая, то:
			{
				strdel(string,0,256);//очистка переменной string
				strcat(string, "unloadfs ");//сборка RCON-команды выгрузки фильтрскрипта
				strcat(string, relfs[j]);
				SendRconCommand(string);//RCON-команда выгрузки фильтрскрипта
			}
		}

 		for(new i = 0; i < MAX_PLAYERS; i++)
		{
    		if(mapiconid[i] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    		{
				DestroyDynamicMapIcon(mapiconid[i]);//удаление мап иконки наблюдения
			}
			mapiconid[i] = -600;//очистка ID мап иконки наблюдения
			if(IsPlayerConnected(i))
			{
//		    	DisablePlayerCheckpoint(i);
				PlayKick(i);
//    			Kick(i);
			}
		}

		Delete3DTextLabel(fantxt);//удаляем 3D-текст с несущесвующим ИД

 		for(new i = 0; i < 8; i++)
		{
			DestroyVehicle(TrainID[i]);
		}
 		for(new i = 0; i < 88; i++)
		{
			DestroyDynamicObject(LineObj1[i]);
		}
 		for(new i = 0; i < 54; i++)
		{
			DestroyDynamicObject(LineObj2[i]);
		}
 		for(new i = 0; i < 62; i++)
		{
			DestroyDynamicObject(LineObj3[i]);
		}
 		for(new i = 0; i < 31; i++)
		{
			DestroyDynamicObject(LineObj4[i]);
		}
 		for(new i = 0; i < 84; i++)
		{
			DestroyDynamicObject(LineObj5[i]);
		}
#if (MOD11INS <= 3)
 		for(new i = 0; i < 43; i++)
		{
			DestroyObject(ObjGam[i]);
		}
#endif
#if (MOD11INS == 4)
 		for(new i = 0; i < 44; i++)
		{
			DestroyObject(ObjGam[i]);
		}
#endif

		TextDrawDestroy(Times);

		for(new i=0; i<11; i++)//drift bonus
		{
			TextDrawDestroy(leveldr[i]);
		}
//		TextDrawDestroy(Textdraw0);
//		TextDrawDestroy(Textdraw1);
		new Max = GetMaxPlayers();
		for(new i=0; i<Max; i++)
		{
			Delete3DTextLabel(Level3D[i]);
		}

		for(new i = 0; i < MAX_PLAYERS; i++)//speedometer
		{
		    PlayerTextDrawHide(i, VehicleSpeed[i]);
		    TextDrawHideForPlayer(i, KMH);
			TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
			PlayerTextDrawHide(i, HMS44[i]);
			PlayerTextDrawHide(i, dmkillTD[i]);//отключаем текстдравы DM-зон
			PlayerTextDrawHide(i, dmdeathTD[i]);
			if(IsPlayerConnected(i))
			{
				PlayerTextDrawDestroy(i, VehicleSpeed[i]);
				PlayerTextDrawDestroy(i, HMS44[i]);//удаляем текстдравы максимальной горизонтальной скорости
				PlayerTextDrawDestroy(i, dmkillTD[i]);//удаляем текстдравы DM-зон
				PlayerTextDrawDestroy(i, dmdeathTD[i]);
			}
			conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока
		}
		TextDrawDestroy(KMH);
		TextDrawDestroy(HMS22);//удаляем текстдрав максимальной горизонтальной скорости

//==============================================================================
//                              GarHouse
//==============================================================================
		new file[HOUSEFILE_LENGTH], tmp;
		Loop(i, MAX_PLAYERS)
		{
	    	if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    	{
	        	tmp = GetPVarInt(i, "LastHouseCP");
				format(file, sizeof(file), FILEPATH, tmp);
		    	if(!strcmp(GetHouseOwner(tmp), RealName[i], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
				{
			    	dini_IntSet(file, "QuitInHouse", 1);
			    	#if defined GH_HOUSECARS
			    		SaveHouseCar(tmp);
		        	#endif
				}
			}
		}
    	UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
//==============================================================================
//                              End GarHouse
//==============================================================================

//----------------------------- Elevator - 1 -----------------------------------
		DestroyObject(Obj_Elevator);
		DestroyObject(Obj_ElevatorDoors[0]);
		DestroyObject(Obj_ElevatorDoors[1]);
		DestroyDynamic3DTextLabel(Label_Elevator);

		for(new i; i < sizeof(Obj_FloorDoors); i ++)
		{
	    	DestroyDynamicObject(Obj_FloorDoors[i][0]);
			DestroyDynamicObject(Obj_FloorDoors[i][1]);
			DestroyDynamic3DTextLabel(Label_Floors[i]);
			DestroyDynamic3DTextLabel(Label2_Floors[i]);
		}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
		DestroyObject(Obj_Elevator22);
		DestroyObject(Obj_ElevatorDoors22[0]);
		DestroyObject(Obj_ElevatorDoors22[1]);
		DestroyDynamic3DTextLabel(Label_Elevator22);

		for(new i; i < sizeof(Obj_FloorDoors22); i ++)
		{
	    	DestroyDynamicObject(Obj_FloorDoors22[i][0]);
			DestroyDynamicObject(Obj_FloorDoors22[i][1]);
			DestroyDynamic3DTextLabel(Label_Floors22[i]);
			DestroyDynamic3DTextLabel(Label2_Floors22[i]);
		}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

		UnloadBusSystem();//выгрузка системы бизнесов//BusSystem

#if (MOD22INS == 1)
		fileClose(ServerLogFile);//античит-2
#endif

#if (MOD22INS == 1 && MOD55INS == 1)
		fileClose(inLog);//закрываем сервер-лог
		fileClose(outLog);//закрываем резервную копию сервер-лога
#endif

		conopen222 = 0;//отключение коннекта к серверу
		db_close(scrnet1db);//отключаем базу данных сетевого экрана 1 от сервера

#if (MOD90INS == 1)
		db_close(playerdb);//отключаем базу данных аккаунтов игроков от сервера
#endif

	}
	restrest = 0;//переменная рестарта сервера
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
#if (MOD66INS == 1)
	SetPlayerCameraPos(playerid, -1655.923828, 1205.868652, 21.156250);
	SetPlayerCameraLookAt(playerid, -1651.794189, 1206.626708, 21.148662);
	SetPlayerPos(playerid, -1651.794189, 1206.626708, 21.148662);
	SetPlayerFacingAngle(playerid, 98.594573);
	return 1;
#endif
#if (MOD66INS > 1)
	SetSpawnInfo(playerid, 0, 0, -1651.794189, 1206.626708, 21.148662, 98.594573, 0, 0, 0, 0, 0, 0);
	return SpawnPlayer(playerid);//отключение стандартного спавна игрока
#endif
}

forward FnRemConDiscon(playerid);
public FnRemConDiscon(playerid)
{
	condiscon[playerid] = 1;
	SetTimerEx("FnRemConDiscon22", 150, 0, "i", playerid);
	return 1;
}

forward FnRemConDiscon22(playerid);
public FnRemConDiscon22(playerid)
{
	condiscon[playerid] = 0;
	return 1;
}

public OnPlayerConnect(playerid)
{
	if(conopen222 == 0)//если коннект к серверу отключен, то:
	{
		SetTimerEx("PlayKick", 100, 0, "i", playerid);//кик игрока
		return 1;
	}

#if (MOD4CINS == 0)
	if(functioncon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		return 1;//завершаем функцию
	}
	if(functioncon[playerid] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
	{
		functioncon[playerid] = -5;//устанавливаем счётчик 5-и секунд
	}
#endif
	functioncon[playerid]++;//прибавляем 1 к контрольной переменной функций

	playconpass[playerid] = 0;//текущий паспорт = 0
	new locerrind = 0;//обнуляем индекс ошибки
	new ip[128];
	GetPlayerIp(playerid, ip, sizeof(ip));
	PlayerInfo[playerid][pIPAdr] = ip;

	new locipip[4];//разделённый по группам IP-адрес
	if(FnIPCon(PlayerInfo[playerid][pIPAdr], locipip) == 0)//если ошибка IP-адреса, то:
	{
		locerrind = 1;//устанавливаем индекс ошибки 1
	}

    new pname[MAX_PLAYER_NAME];
	new string[256];
	GetPlayerName(playerid,pname,sizeof(pname));
	strdel(RealName[playerid],0,MAX_PLAYER_NAME);//очистить реальный ник игрока
	new aa333[64];//доработка для использования Русских ников
	format(aa333, sizeof(aa333), "%s", pname);//доработка для использования Русских ников
	strcat(RealName[playerid], aa333);//запомнить реальный ник игрока (доработка для использования Русских ников)
//	strcat(RealName[playerid], pname);//запомнить реальный ник игрока

	if(strlen(RealName[playerid]) > 25 || InpNameControl(RealName[playerid]) == 0)//если ошибка ника, то:
	{
		locerrind = 2;//устанавливаем индекс ошибки 2
	}

	new loctag[64];
	gpci(playerid, loctag, sizeof(loctag));//чтение gpci-тега

	if(FngpciControl(loctag) == 0)//если ошибка gpci-тега, то:
	{
		locerrind = 3;//устанавливаем индекс ошибки 3
	}
	else
	{
		Maskgpci(loctag);
		strdel(pergpcifirst[playerid], 0, 64);
		strcat(pergpcifirst[playerid], loctag);
	}

	if(locerrind != 0 && condiscon[playerid] == 0)//если был установлен индекс ошибки, то:
	{
		printf("* Игрок %s [%d] был отсоединён - ошибка %d входных данных !", RealName[playerid], playerid, locerrind);
		FnRemConDiscon(playerid);
		SetTimerEx("PlayKick", 100, 0, "i", playerid);//кик игрока
		return 1;
	}

	new locipip22;//собираем из IP-адреса данные - для поиска в сетевых экранах
	locipip22 = (locipip[0] * 65536) + (locipip[1] * 256) + locipip[2];
	scrnetcount[playerid] = 0;//обнуляем переменную контроля сетевых экранов
#if (MOD7BINS == 0)
	scrnetv[playerid] = 0;//сбрасываем переменную просмотра действий сетевых экранов
#endif
#if (MOD7BINS == 1)
	scrnetv[playerid] = 1;//устанавливаем переменную просмотра действий сетевых экранов
#endif
	new locind1 = 0;//обнуляем индекс поиска в БД
	new locmark1 = 0;//обнуляем маркер определения IP
	new locind2;//индекс слотов
	new nmf[128], npf, str22[64], scrnetname[64], scrnetpass[64];

	new strdln[1000];//сетевой экран 1
	format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (Active = 1 ");//создаём запрос БД
	format(strdln, sizeof(strdln), "%sAND %d >= SN1b123 AND %d <= SN1e123)", strdln, locipip22, locipip22);
	qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
	locind1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
	if(locind1 != 0)//если в БД была найдена хотя бы одна строка, то:
	{
		new buffer[64], locdata1[3];
		locind2 = 0;//обнуляем индекс слотов
		while(locind2 < locind1)
		{
			db_get_field(qscrnet1db[playerid], 1, buffer, 64); locdata1[0] = strval(buffer);//NumSt
			db_get_field(qscrnet1db[playerid], 6, buffer, 64); scrnet1b[3][playerid] = strval(buffer);//SN1b4
			db_get_field(qscrnet1db[playerid], 10, buffer, 64); scrnet1e[3][playerid] = strval(buffer);//SN1e4
			db_get_field(qscrnet1db[playerid], 11, buffer, 64); locdata1[1] = strval(buffer);//SN1b123
			db_get_field(qscrnet1db[playerid], 12, buffer, 64); locdata1[2] = strval(buffer);//SN1e123
			if(locipip22 == locdata1[1] && locipip22 == locdata1[2])
			{//если IP-адрес равен начальному И конечному значению из БД, то:
				if(locipip[3] >= scrnet1b[3][playerid] && locipip[3] <= scrnet1e[3][playerid])
				{//если 4-я группа IP-адреса входит в диапазон значений из БД, то:
					locmark1 = 1;//устанавливаем маркер определения IP
					break;//завершаем цикл
				}
			}
			if(locipip22 == locdata1[1] && locipip22 < locdata1[2])
			{//если IP-адрес равен начальному значению из БД, И меньше конечного значения из БД, то:
				if(locipip[3] >= scrnet1b[3][playerid])
				{//если 4-я группа IP-адреса больше или равна начальному значению из БД, то:
					locmark1 = 1;//устанавливаем маркер определения IP
					break;//завершаем цикл
				}
			}
			if(locipip22 > locdata1[1] && locipip22 == locdata1[2])
			{//если IP-адрес больше начального значения из БД, И равен конечному значению из БД, то:
				if(locipip[3] <= scrnet1e[3][playerid])
				{//если 4-я группа IP-адреса меньше или равна конечному значению из БД, то:
					locmark1 = 1;//устанавливаем маркер определения IP
					break;//завершаем цикл
				}
			}
			if(locipip22 > locdata1[1] && locipip22 < locdata1[2])
			{//если IP-адрес больше начального значения из БД, И меньше конечного значения из БД, то:
				locmark1 = 1;//устанавливаем маркер определения IP
				break;//завершаем цикл
			}
			if(locind1 != 1)//если в БД было найдено больше одной строки, то:
			{
				db_next_row(qscrnet1db[playerid]);///переходим к следующей строке результат запроса БД
			}
			locind2++;//индекс слотов +1
		}
		locind1 = locdata1[0];//копируем номер записи из БД во внешнюю переменную
	}
	db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
	if(locmark1 == 1)//если маркер определения IP установлен, то:
	{
		locind2 = 0;//обнуляем индекс слотов
		locmark1 = 2;//делаем отметку, что ник НЕ определён
		format(nmf, sizeof(nmf), "data/scrnet1/np1%05d.ini", locind1);
		if(fexist(nmf))//если файл существует, то:
		{
			npf = ini_openFile(nmf);//читаем файл
			if(npf >= 0)
			{
				while(locind2 < 20)//проверка на разрешённые ники-паспорта в сетевом экране 1
				{
					strdel(scrnetname, 0, 64);
					format(str22, 64, "Name1%02d", locind2);
				    ini_getString(npf, str22, scrnetname);
					if(strlen(scrnetname) == 0)//если прочитана пустая строка (за место ника), то:
					{
						strcat(scrnetname, "*** INV_PL_ID");//записываем в слот несуществующий ник
					}
					else//иначе, если прочитана НЕ пустая строка, то:
					{
						if(strlen(scrnetname) > 25 || InpNameControl(scrnetname) == 0)//если ник содержит ошибки, то:
						{
							strdel(scrnetname, 0, 64);//очищаем слот
							strcat(scrnetname, "*** INV_PL_ID");//записываем в слот несуществующий ник
						}
					}
					strdel(scrnetpass, 0, 64);
					format(str22, 64, "Pass1%02d", locind2);
				    ini_getString(npf, str22, scrnetpass);
					if(strlen(scrnetpass) == 0)//если прочитана пустая строка (за место паспорта), то:
					{
						strcat(scrnetpass, "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
					}
					else//иначе, если прочитана НЕ пустая строка, то:
					{
						if(FngpciControl(scrnetpass) == 0)//если паспорт содержит ошибки, то:
						{
							strdel(scrnetpass, 0, 64);//очищаем слот
							strcat(scrnetpass, "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
						}
					}
					if(scrnetname[0] == 42 && scrnetpass[0] != 42)
					{//если нет ника, но есть паспорт, то:
						strdel(scrnetpass, 0, 64);//очищаем слот
						strcat(scrnetpass, "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
					}
					if(scrnetpass[0] == 42)//если нет паспорта, то: проверка на ник
					{
						if(strcmp(RealName[playerid], scrnetname, false) == 0)
						{//если ник был найден, то:
							scrnetcount[playerid] = 30;//устанавливаем переменную контроля сетевых экранов
							printf("[scrnet] >> Игрок %s [%d] обход >> sn1-запись %d , np1-слот %d , ник.", RealName[playerid], playerid, locind1, locind2);
							locmark1 = 3;//делаем отметку, что ник определён
							break;//завершаем цикл
						}
					}
					else//иначе - проверка на паспорт
					{
						if(strcmp(pergpcifirst[playerid], scrnetpass, false) == 0)
						{//если паспорт был найден, то:
							scrnetcount[playerid] = 30;//устанавливаем переменную контроля сетевых экранов
							printf("[scrnet] >> Игрок %s [%d] обход >> sn1-запись %d , np1-слот %d , паспорт.", RealName[playerid], playerid, locind1, locind2);
							locmark1 = 3;//делаем отметку, что паспорт определён
							break;//завершаем цикл
						}
					}
					locind2++;//индекс слотов + 1
				}
				ini_closeFile(npf);//закрываем файл
			}
		}
	}
	if(locmark1 == 2 && condiscon[playerid] == 0)//если есть отметка, что ник НЕ определён, то:
	{
        if(GetPVarInt(playerid, "ReDirScrnet1") == 0)
		{//если перенаправление действия для сетевого экрана 1 НЕ активно, то:
			format(string, sizeof(string), "[scrnet] Игрок %s [%d] был отсоединён - сетевой экран 1 , запись %d", RealName[playerid], playerid, locind1);
			print(string);
			SendAdminMessage22(COLOR_RED, string, 2, 0);
			FnRemConDiscon(playerid);
			SetTimerEx("PlayKick", 100, 0, "i", playerid);
			return 1;
		}
		else//иначе, если перенаправление действия для сетевого экрана 1 активно, то:
		{
			format(string, sizeof(string), "[scrnet] Игрок %s [%d] обнаружен в сетевом экране 1 , запись %d", RealName[playerid], playerid, locind1);
			print(string);
			SendAdminMessage22(COLOR_YELLOW, string, 2, 0);
			CallRemoteFunction("Scrnet1RmtCon", "d", playerid);//перенаправляем действие для сетевого экрана 1
		}
	}
	locind1 = 0;//обнуляем индекс слотов
	locmark1 = 0;//обнуляем маркер определения IP
	while(locind1 < 200)//сетевой экран 2
	{
		if(locipip22 >= scrnet2b123[locind1] && locipip22 <= scrnet2e123[locind1])
		{
			if(locipip22 == scrnet2b123[locind1] && locipip22 == scrnet2e123[locind1])
			{//если IP-адрес равен начальному И конечному значению, то:
				if(locipip[3] >= scrnet2b[3][locind1] && locipip[3] <= scrnet2e[3][locind1])
				{//если 4-я группа IP-адреса входит в диапазон значений, то:
					locmark1 = 1;//устанавливаем маркер определения IP
					break;//завершаем цикл
				}
			}
			if(locipip22 == scrnet2b123[locind1] && locipip22 < scrnet2e123[locind1])
			{//если IP-адрес равен начальному значению, И меньше конечного значения, то:
				if(locipip[3] >= scrnet2b[3][locind1])
				{//если 4-я группа IP-адреса больше или равна начальному значению, то:
					locmark1 = 1;//устанавливаем маркер определения IP
					break;//завершаем цикл
				}
			}
			if(locipip22 > scrnet2b123[locind1] && locipip22 == scrnet2e123[locind1])
			{//если IP-адрес больше начального значения, И IP-адрес равен конечному значению, то:
				if(locipip[3] <= scrnet2e[3][locind1])
				{//если 4-я группа IP-адреса меньше или равна конечному значению, то:
					locmark1 = 1;//устанавливаем маркер определения IP
					break;//завершаем цикл
				}
			}
			if(locipip22 > scrnet2b123[locind1] && locipip22 < scrnet2e123[locind1])
			{//если IP-адрес больше начального значения, И меньше конечного значения, то:
				locmark1 = 1;//устанавливаем маркер определения IP
				break;//завершаем цикл
			}
		}
		locind1++;//индекс слотов + 1
	}
	if(locmark1 == 1)//если маркер определения IP установлен, то:
	{
		locind2 = 0;//обнуляем индекс слотов
		locmark1 = 2;//делаем отметку, что ник НЕ определён
		format(nmf, sizeof(nmf), "data/scrnet2/np2%03d.ini", locind1);
		if(fexist(nmf))//если файл существует, то:
		{
			npf = ini_openFile(nmf);//читаем файл
			if(npf >= 0)
			{
				while(locind2 < 20)//проверка на разрешённые ники-паспорта в сетевом экране 2
				{
					strdel(scrnetname, 0, 64);
					format(str22, 64, "Name2%02d", locind2);
				    ini_getString(npf, str22, scrnetname);
					if(strlen(scrnetname) == 0)//если прочитана пустая строка (за место ника), то:
					{
						strcat(scrnetname, "*** INV_PL_ID");//записываем в слот несуществующий ник
					}
					else//иначе, если прочитана НЕ пустая строка, то:
					{
						if(strlen(scrnetname) > 25 || InpNameControl(scrnetname) == 0)//если ник содержит ошибки, то:
						{
							strdel(scrnetname, 0, 64);//очищаем слот
							strcat(scrnetname, "*** INV_PL_ID");//записываем в слот несуществующий ник
						}
					}
					strdel(scrnetpass, 0, 64);
					format(str22, 64, "Pass2%02d", locind2);
				    ini_getString(npf, str22, scrnetpass);
					if(strlen(scrnetpass) == 0)//если прочитана пустая строка (за место паспорта), то:
					{
						strcat(scrnetpass, "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
					}
					else//иначе, если прочитана НЕ пустая строка, то:
					{
						if(FngpciControl(scrnetpass) == 0)//если паспорт содержит ошибки, то:
						{
							strdel(scrnetpass, 0, 64);//очищаем слот
							strcat(scrnetpass, "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
						}
					}
					if(scrnetname[0] == 42 && scrnetpass[0] != 42)
					{//если нет ника, но есть паспорт, то:
						strdel(scrnetpass, 0, 64);//очищаем слот
						strcat(scrnetpass, "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
					}
					if(scrnetpass[0] == 42)//если нет паспорта, то: проверка на ник
					{
						if(strcmp(RealName[playerid], scrnetname, false) == 0)
						{//если был найден ник, то:
							scrnetcount[playerid] = 30;//устанавливаем переменную контроля сетевых экранов
							printf("[scrnet] >> Игрок %s [%d] обход >> sn2-слот %d , np2-слот %d , ник.", RealName[playerid], playerid, locind1, locind2);
							locmark1 = 3;//делаем отметку, что ник определён
							ini_closeFile(npf);//закрываем файл
							break;//завершаем цикл
						}
					}
					else//иначе - проверка на паспорт
					{
						if(strcmp(pergpcifirst[playerid], scrnetpass, false) == 0)
						{//если был найден паспорт, то:
							scrnetcount[playerid] = 30;//устанавливаем переменную контроля сетевых экранов
							printf("[scrnet] >> Игрок %s [%d] обход >> sn2-слот %d , np2-слот %d , паспорт.", RealName[playerid], playerid, locind1, locind2);
							locmark1 = 3;//делаем отметку, что паспорт определён
							ini_closeFile(npf);//закрываем файл
							break;//завершаем цикл
						}
					}
					locind2++;//индекс слотов + 1
				}
				ini_closeFile(npf);//закрываем файл
			}
		}
	}
	if(locmark1 == 2 && condiscon[playerid] == 0)//если есть отметка, что ник НЕ определён, то:
	{
        if(GetPVarInt(playerid, "ReDirScrnet2") == 0)
		{//если перенаправление действия для сетевого экрана 2 НЕ активно, то:
			format(string, sizeof(string), "[scrnet] Игрок %s [%d] был отсоединён - сетевой экран 2 , слот %d", RealName[playerid], playerid, locind1);
			print(string);
			SendAdminMessage22(COLOR_RED, string, 2, 0);
			FnRemConDiscon(playerid);
			SetTimerEx("PlayKick", 100, 0, "i", playerid);
			return 1;
		}
		else//иначе, если перенаправление действия для сетевого экрана 2 активно, то:
		{
			format(string, sizeof(string), "[scrnet] Игрок %s [%d] обнаружен в сетевом экране 2 , слот %d", RealName[playerid], playerid, locind1);
			print(string);
			SendAdminMessage22(COLOR_YELLOW, string, 2, 0);
			CallRemoteFunction("Scrnet2RmtCon", "d", playerid);//перенаправляем действие для сетевого экрана 2
		}
	}

	if(conconTD[playerid] == 0)
	{//если создание текст-дравов НЕ заблокировано, то:
		VehicleSpeed[playerid] = CreatePlayerTextDraw(playerid,565.000000,106.000000,"_");//speedometer
		PlayerTextDrawAlignment(playerid,VehicleSpeed[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,VehicleSpeed[playerid],0x0000ff66);
		PlayerTextDrawFont(playerid,VehicleSpeed[playerid],2);
		PlayerTextDrawLetterSize(playerid,VehicleSpeed[playerid],0.699999,2.699999);
		PlayerTextDrawColor(playerid,VehicleSpeed[playerid],0xffffffff);
		PlayerTextDrawSetOutline(playerid,VehicleSpeed[playerid],1);
		PlayerTextDrawSetProportional(playerid,VehicleSpeed[playerid],1);
		PlayerTextDrawSetShadow(playerid,VehicleSpeed[playerid],1);

		HMS44[playerid] = CreatePlayerTextDraw(playerid,560.000000,324.000000,"_");//создаём текстдрав максимальной горизонтальной скорости
		PlayerTextDrawAlignment(playerid,HMS44[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,HMS44[playerid],0x0000ff66);
		PlayerTextDrawFont(playerid,HMS44[playerid],2);
		PlayerTextDrawLetterSize(playerid,HMS44[playerid],0.699999,2.699999);
		PlayerTextDrawColor(playerid,HMS44[playerid],0xffffffff);
		PlayerTextDrawSetOutline(playerid,HMS44[playerid],1);
		PlayerTextDrawSetProportional(playerid,HMS44[playerid],1);
		PlayerTextDrawSetShadow(playerid,HMS44[playerid],1);

		dmkillTD[playerid] = CreatePlayerTextDraw(playerid,500.000000,375.000000,"_");//создаём текстдравы DM-зон
		PlayerTextDrawAlignment(playerid,dmkillTD[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,dmkillTD[playerid],0x000000ff);
		PlayerTextDrawFont(playerid,dmkillTD[playerid],1);
		PlayerTextDrawLetterSize(playerid,dmkillTD[playerid],0.499999,2.599999);
		PlayerTextDrawColor(playerid,dmkillTD[playerid],0x00ff00ff);
		PlayerTextDrawSetOutline(playerid,dmkillTD[playerid],1);
		PlayerTextDrawSetProportional(playerid,dmkillTD[playerid],1);
		PlayerTextDrawSetShadow(playerid,dmkillTD[playerid],1);

		dmdeathTD[playerid] = CreatePlayerTextDraw(playerid,500.000000,400.000000,"_");
		PlayerTextDrawAlignment(playerid,dmdeathTD[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,dmdeathTD[playerid],0x000000ff);
		PlayerTextDrawFont(playerid,dmdeathTD[playerid],1);
		PlayerTextDrawLetterSize(playerid,dmdeathTD[playerid],0.499999,2.599999);
		PlayerTextDrawColor(playerid,dmdeathTD[playerid],0xff0000ff);
		PlayerTextDrawSetOutline(playerid,dmdeathTD[playerid],1);
		PlayerTextDrawSetProportional(playerid,dmdeathTD[playerid],1);
		PlayerTextDrawSetShadow(playerid,dmdeathTD[playerid],1);
	}
	conconTD[playerid] = 1;//блокировка создания текст-дравов при подключении игрока

    PGang[playerid] = 0;//Gangs system
	SetPVarInt(playerid, "PlGng", PGang[playerid]);//глобальная переменная ID банды игрока
    GangLvl[playerid] = 0;
	SetPVarInt(playerid, "PlGLvl", GangLvl[playerid]);//глобальная переменная Lvl игрока в банде
	tgang[playerid] = -1600;

	SetPVarInt(playerid, "DlgCont", -600);//глобальная переменная ИДа диалога
#if (MOD66INS > 1)
	playspacount[playerid] = 0;//задержка контроля игрока на ошибку координат спавна
	playspascan[playerid] = 0;//переменная спавна игрока 2
#endif
	playlogcount[playerid] = 0;//задержка контроля игрока на спавн без логирования
	playspa[playerid] = 0;//переменная спавна игрока

#if (MOD90INS == 1)
	migration[playerid] = 0;//обнулить режим миграции аккаунта
#endif
	LevelStats[playerid] = 0;//drift bonus
	DerbyID[playerid] = 0;//обнулить дерби-режим
	SetPVarInt(playerid, "MnMode", 1);//глобальная переменная режима меню
	LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
	PlayCRSH[playerid] = 0;//обнулить блокировку спидхака
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	mapiconid[playerid] = -600;//очистка ID мап иконки наблюдения
	StopGMoney[playerid] = 0;//переменная задержки команды /givecash
	StopBB[playerid] = 0;//переменная задержки команды /bb
	StopHH[playerid] = 0;//переменная задержки команды /hh
	StopReport[playerid] = 0;//переменная задержки команды /report
	StopHeal[playerid] = 0;//переменная задержки команды /heal
	LocTime[playerid] = GlTime;//передать общее время в локальное
	PlayLock1[0][playerid] = 600;//отключить блокировку игрока
	NETrecPl[playerid] = 0;//обнулить контроль сети
	NETsenPl[playerid] = 0;
	NETafkPl[playerid][1] = 0;//обнулить время AFK
	NETafkPl[playerid][6] = 0;//обнулить контроль AFK
	LockSpawn[playerid] = 0;//разблокировать заполнение слотов оружия и предметов
	idgangsave[playerid] = 0;//очистка ID банды для записи
	prisoncount[playerid] = 0;//задержка контроля игрока в тюрьме
	passrcon[playerid] = 0;//бан взлома RCON-пароля
	oneminkick[playerid] = 0;//кик - если не заспавнился
	countdown[playerid] = -1;//очистка обратного отсчёта
	strdel(PlayerInfo[playerid][pTDReg], 0, 64);//очистка времени и даты регистрации
	strdel(fbanreason[playerid], 0, 256);//очистка причины бана
    gPlayerLogTries[playerid] = 0;
    gPlayerLogged[playerid] = 0;

    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pKills] = 0;
    PlayerInfo[playerid][pAdmscancom] = 0;
    PlayerInfo[playerid][pPolice] = 0;
    PlayerInfo[playerid][pDeport] = 0;
    PlayerInfo[playerid][pRecPM] = 1;
    PlayerInfo[playerid][pWanted] = 0;
    PlayerInfo[playerid][pAdmin] = 0;
	SetPVarInt(playerid, "AdmLvl", PlayerInfo[playerid][pAdmin]);//записываем в глобальную переменную уровень админки
	PlayerInfo[playerid][pAdmshad] = 0;//переменная скрытого админа
    PlayerInfo[playerid][pLock] = 0;

	strmid(PlayerInfo[playerid][pPass_data1], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_inout1], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_ver1], "---", 0, 3, 32);
	PlayerInfo[playerid][pPass_count1] = 0;
	strmid(PlayerInfo[playerid][pPass_data2], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_inout2], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_ver2], "---", 0, 3, 32);
	PlayerInfo[playerid][pPass_count2] = 0;
	strmid(PlayerInfo[playerid][pPass_data3], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_inout3], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_ver3], "---", 0, 3, 32);
	PlayerInfo[playerid][pPass_count3] = 0;
	strmid(PlayerInfo[playerid][pPass_data4], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_inout4], "---", 0, 3, 64);
	strmid(PlayerInfo[playerid][pPass_ver4], "---", 0, 3, 32);
	PlayerInfo[playerid][pPass_count4] = 0;
	PlayerInfo[playerid][pPassMode] = 0;
	PlayerInfo[playerid][pPassDel] = 0;
	PlayerInfo[playerid][pPassLock] = 0;
	PlayerInfo[playerid][pPassError] = 0;

	PlayerInfo[playerid][pPrison] = 0;
	PlayerInfo[playerid][pPrisonsec] = 0;
	SetPVarInt(playerid, "SecPris", PlayerInfo[playerid][pPrisonsec]);//записываем в глобальную переменную секунды тюрьмы
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pMutedsec] = 0;
	SetPVarInt(playerid, "SecMute", PlayerInfo[playerid][pMutedsec]);//записываем в глобальную переменную секунды затыка

	SetPVarInt(playerid, "PlMon", 1000);//глобальная переменная денег игрока
	SetPVarInt(playerid, "PlSkin", 0);//глобальная переменная скина игрока
	SetPVarInt(playerid, "PlFrost", 0);//глобальная переменная заморозки игрока

	NRadio[playerid] = 0;//задаём игроку несуществующий номер подключенного радио//Радио
	StopAudioStreamForPlayer(playerid);//отключим любой поток

	SetPVarInt(playerid, "PlCRct9", 0);//глобальная переменная блокировки античита управления чужим транспортом
	ct9control[playerid] = 0;
	ct9concord[0][1][playerid] = 0.0;//обнуление баз конвеера
	ct9concord[1][1][playerid] = 0.0;
	ct9concord[2][1][playerid] = 0.0;
	ct9concord[0][2][playerid] = 0.0;
	ct9concord[1][2][playerid] = 0.0;
	ct9concord[2][2][playerid] = 0.0;
	ct9concord[0][3][playerid] = 0.0;
	ct9concord[1][3][playerid] = 0.0;
	ct9concord[2][3][playerid] = 0.0;

	//вход на сервер
	if(condiscon[playerid] == 0)
	{
		printf("* Игрок %s [%d] присоединился к серверу.",aa333,playerid);
	}

//------------------------------ BusSystem -------------------------------------
	busdlgcon[playerid] = 0;//обнуляем контроль диалогов
	playspabs[playerid] = 0;//игрок не заспавнился
	playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
//---------------------------- End BusSystem -----------------------------------

	for(new i = 0; i < 20; i++)
	{
		SendClientMessage(playerid, 0xFFFFFFFF, " ");
	}
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {AA3333}Внимание ! Этот мод является {FF0000}РЕНОВАЦИЕЙ {AA3333}известного мода {FFE400}Russian-Drift");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {AA3333}от {FFE400}RDS сервера ! {AA3333}( РУССКИЙ ДРИФТ СЕРВЕР ЗАХОДИ )");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {AA3333}Реновация была сделана {FFE400}кланом [Gn_R] {AA3333}( ноябрь 2014 г. )");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Обязательно прочтите {60FF00}правила игры {FFFFFF}на сервере: {60FF00}/rules");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Мы рады вас видеть на {FFE400}Russian Drift {FFFFFF}, для справки введите {60ff00}/help");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Чтобы поприветствовать всех игроков, введите: {2F60FF}/hh");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Чтобы попрощаться со всеми игроками, введите: {2F60FF}/bb");
	SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Для входа в меню нажмите {FFF82F}Alt {FFFFFF}или {FFF82F}2 {FFE400}(вы должны быть в автомобиле)");
	if(condiscon[playerid] == 0)
	{
		SendDeathMessage(INVALID_PLAYER_ID, playerid, 200);//отобразить иконку коннекта в килл-чате
	}

	exitcheat[playerid] = 0;//присоединившийся игрок - НЕ чит
	new locper1 = 0;
	new locper2 = 0;
	new locper33 = 0;//сборка шаблона IP-адреса игрока
	new locper44 = 0;
	new clipip[128];
	while(locper33 <= strlen(PlayerInfo[playerid][pIPAdr]))
	{
		if(PlayerInfo[playerid][pIPAdr][locper33] == 46) { locper44++; }
		clipip[locper33] = PlayerInfo[playerid][pIPAdr][locper33];
		locper33++;
		if(locper44 == 2) { break; }
	}
	clipip[locper33] = 42;
	locper33++;
	clipip[locper33] = 46;
	locper33++;
	clipip[locper33] = 42;
	locper33++;
	clipip[locper33] = 0;
	locper33++;
	clipip[locper33] = 0;
	locper44 = 1;//устанавливаем максимум подключений для заданного IP-адреса = 1
	for(new m = 0; m < 40; m++)//поиск IP-адреса игрока в IP-слотах
	{
		if((strcmp(PlayerInfo[playerid][pIPAdr], OpenIP[m], false) == 0 || strcmp(clipip, OpenIP[m], false) == 0) && strlen(OpenIP[m]) != 0)
		{//если IP-адреса игрока был найден в IP-слотах, то:
			locper44 = OpenIP22[m];//запоминаем новый максимум подключений для заданного IP-адреса
		}
	}
	while (locper1 < MAX_PLAYERS)//цикл для всех игроков
	{
		if(strcmp(PlayerInfo[playerid][pIPAdr], twoIP[locper1], true) == 0 && strlen(twoIP[locper1]) != 0)
		{//сравниваем IP игрока с IP вышедших игроков
			locper2 = 1;
			break;
		}
		locper1++;
	}
	if(locper2 == 1 && condiscon[playerid] == 0)
	{//если игрок зашёл меньше чем через 100 миллисекунд после своего выхода, то бан чита
		exitcheat[playerid] = 1;//присоединившийся игрок - чит
		print("[AntiCheatSys] ---------- 2 ----------");
		new banst[128];//бан чита
		format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (2), мешающий работе сервера !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		strdel(fbanreason[playerid], 0, 256);//очистка причины бана
		strcat(fbanreason[playerid], "* Чит (2), мешающий работе сервера.");
		IPBanList(PlayerInfo[playerid][pIPAdr], fbanreason[playerid]);
		strdel(banst, 0, 128);//сборка RCON-команды бана
		strcat(banst, "banip ");
		strcat(banst, PlayerInfo[playerid][pIPAdr]);
		Kick(playerid);
		SendRconCommand(banst);//RCON-команда бана
		SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//		Ban(playerid);
		return 1;
	}
	locper33 = 0;//контрольная переменная максимума подключений для заданного IP-адреса = 0
	for(new k=0;k<MAX_PLAYERS;k++)//цикл для всех игроков
	{
		if(IsPlayerConnected(k))//дальнейшее выполняем если игрок в коннекте
		{//сравниваем IP игрока с уже "подключенными" IP
			if(strcmp(PlayerInfo[playerid][pIPAdr], PlayerInfo[k][pIPAdr], true) == 0)
			{
				locper33++;//прибавляем 1 к контрольной переменной максимума подключений для заданного IP-адреса
			}
		}
	}
	if(locper33 > locper44 && condiscon[playerid] == 0)
	{//если число подключений для заданного IP-адреса больше допустимого максимума подключений, то бан чита
		exitcheat[playerid] = 1;//присоединившийся игрок - чит
		print("[AntiCheatSys] ---------- 1 ----------");
		new banst[128];//бан чита
		format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (1), мешающий работе сервера !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		strdel(fbanreason[playerid], 0, 256);//очистка причины бана
		strcat(fbanreason[playerid], "* Чит (1), мешающий работе сервера.");
		IPBanList(PlayerInfo[playerid][pIPAdr], fbanreason[playerid]);
		strdel(banst, 0, 128);//сборка RCON-команды бана
		strcat(banst, "banip ");
		strcat(banst, PlayerInfo[playerid][pIPAdr]);
		Kick(playerid);
		SendRconCommand(banst);//RCON-команда бана
		SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//		Ban(playerid);
		return 1;
	}
	condiscon[playerid] = 0;

	scrmod[0][playerid] = 0;//переменная режимов экрана
	scrmod[1][playerid] = 0;//переменная режимов экрана
	scrmod[2][playerid] = 0;//переменная режимов экрана
	scrmod[3][playerid] = 0;//переменная режимов экрана
	scrmod[4][playerid] = 0;//переменная режимов экрана
	scrmod[5][playerid] = 0;//переменная режимов экрана
	SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);//установить нормальный стиль боя
    perfrost[playerid] = 600;//отключение заморозки
	compdrift[playerid] = -1000000;//отключение от дрифт-соревнования
//	caravto[playerid] = 0;
	playcar[playerid] = 0;
    autorepair[playerid] = 1;

    PlayerInfo[playerid][pMinlog] = 0;//минут на сервере

	StopHidrav[playerid] = 0;//переменная задержки гидравлики
	crash8count[playerid] = 0;//обнуляем контроль антикрашера - 8
	crash7count[playerid] = 0;//обнуляем контроль антикрашера - 7
	crash6[playerid] = 0;//обнуляем контроль антикрашера - 6
	crash5count[playerid] = 0;//обнуляем контроль антикрашера - 5
	dmcount44[playerid] = 0;//обнуляем маркер счётчика времени в DM-зонах
	dmmoney[playerid] = 0;//обнуляем маркер денежного приза в DM-зонах
	dmplay[playerid] = 0;//обнуляем маркер присутствия в DM-зонах
	dmplay22[playerid] = 0;//обнуляем вспомогательный маркер DM-зон
	dmspa[playerid] = 0;//обнуляем блокировку сохранения координат и угла игрока в DM-зонах
	dmlock[playerid] = 0;//обнуляем блокировку ''уровня дрифта'' (над головой) в DM-зонах
	PlayerTextDrawHide(playerid, dmkillTD[playerid]);//отключаем игроку текстдравы DM-зон
	PlayerTextDrawHide(playerid, dmdeathTD[playerid]);
	countdown22[playerid] = -1;//очистка обратного DM-отсчёта
	dmwplay[playerid] = 0;//обнуляем маркер присутствия в DM-мирах
	chatcon[playerid] = 0;//обнуляем контрольную переменную чата
	SetPVarInt(playerid, "CComAc0", 0);
	SetPVarInt(playerid, "CComAc1", 0);
	SetPVarInt(playerid, "CComAc2", 0);
	SetPVarInt(playerid, "CComAc3", 0);
	SetPVarInt(playerid, "CComAc4", 0);
	SetPVarInt(playerid, "CComAc5", 0);
	SetPVarInt(playerid, "CComAc6", 0);
	SetPVarInt(playerid, "CComAc7", 0);
	SetPVarInt(playerid, "CComAc8", 0);
	SetPVarInt(playerid, "CComAc9", 0);
	SetPVarInt(playerid, "CComAc10", 0);
	SetPVarInt(playerid, "CComAc11", 0);
	SetPVarInt(playerid, "CComAc12", 0);
	SetPVarInt(playerid, "CComAc13", 0);
	SetPVarInt(playerid, "CComAc14", 0);
	SetPVarInt(playerid, "CComAc15", 0);
	PlayerInfo[playerid][pAdmlive] = 0;//убрать бессмертие
	livdop[playerid] = 0;
	admper1[playerid] = 600;//переменная наблюдения 1
	SetPVarInt(playerid, "AdmSpect", admper1[playerid]);//глобальная переменная статуса наблюдения админа
	admper6[playerid] = 0;//переменная наблюдения 6
	SetPVarInt(playerid, "PlDeport", 0);//глобальная переменная депортации игрока
	neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
	migalka[playerid][0] = 0;//присваиваем мигалке несуществующий номер объекта
	migalka[playerid][1] = 0;//несуществующий ид транспорта с мигалкой

//	PlayerInfo[playerid][pPISTOL] = 1;
//	PlayerInfo[playerid][pPISTOL_SILENCED] = 1;
//	PlayerInfo[playerid][pDESERT_EAGLE] = 1;
//	PlayerInfo[playerid][pSHOTGUN] = 1;
//	PlayerInfo[playerid][pSAWNOFF_SHOTGUN] = 1;
//	PlayerInfo[playerid][pSPAS12_SHOTGUN] = 1;
//	PlayerInfo[playerid][pMICRO_UZI] = 1;
//	PlayerInfo[playerid][pMP5] = 1;
//	PlayerInfo[playerid][pAK47] = 1;
//	PlayerInfo[playerid][pM4] = 1;
//	PlayerInfo[playerid][pSNIPERRIFLE] = 1;

//	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1);

//==============================================================================
//                              GarHouse
//==============================================================================

	lockpas[playerid] = 0;//разблокировать диалог ввода пароля
	SetPVarInt(playerid, "HousePrevTime", 0);//обнуление важных глобальных переменных !!!
	SetPVarInt(playerid, "HousePreview", 0);
	SetPVarInt(playerid, "IsHouseVisiting", 0);
	SetPVarInt(playerid, "LastHouseCP", 0);
	SetPVarInt(playerid, "IsInHouse", 0);
	SetPVarInt(playerid, "HousePrevInt", 0);
	SetPVarInt(playerid, "IsHouseVisiting", 0);
	SetPVarInt(playerid, "ChangeHouseInt", 0);
	SetPVarInt(playerid, "HouseIntUpgradeMod", 0);
	SetPVarInt(playerid, "JustCreatedHouse", 0);
	SetPVarInt(playerid, "FirstSpawn", 0);

//==============================================================================
//                              End GarHouse
//==============================================================================

	TpDestA[playerid][0] = playspax[tpspa];//установка случайных телепортов
	TpDestA[playerid][1] = playspay[tpspa];
	TpDestA[playerid][2] = playspaz[tpspa];
	TpDestA[playerid][3] = playspaa[tpspa];
	TpPosA[playerid][0] = 0;
	TpPosA[playerid][1] = 0;
	TpDestP[playerid][0] = playspax[tpspa];
	TpDestP[playerid][1] = playspay[tpspa];
	TpDestP[playerid][2] = playspaz[tpspa];
	TpDestP[playerid][3] = playspaa[tpspa];
	TpPosP[playerid] = 0;

	for(new i=0;i<13;i++)//обнуление слотов оружия
	{
		playweap[playerid][i] = 0;
		playammo[playerid][i] = 0;
	}

	if(exitcheat[playerid] == 0)//если присоединившийся игрок - НЕ чит, то:
	{
#if (MOD90INS == 0 && MOD33INS == 0)
		format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
//		format(string, sizeof(string), "%s.ini", playrname);
		if(fexist(string))
		{
    		gPlayerAccount[playerid] = 1;
 			ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 1);
		}
		else
		{
    		gPlayerAccount[playerid] = 0;
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 0);
 		}
#endif
#if (MOD90INS == 0 && MOD33INS == 1)
		format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
//		format(string, sizeof(string), "%s.ini", playrname);
		if(fexist(string))
		{
    		gPlayerAccount[playerid] = 1;
 			ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Вход в аккаунт","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 1);
		}
		else
		{
    		gPlayerAccount[playerid] = 0;
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 0);
 		}
#endif
#if (MOD90INS == 1 && MOD33INS == 0)
		format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
//		format(string, sizeof(string), "%s.ini", playrname);
		if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
		{
    		migration[playerid] = 1;//делаем отметку о миграции аккаунта в SQLite,
    		gPlayerAccount[playerid] = 1;//и входим в аккаунт
 			ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 1);
		}
		else//иначе:
		{
			format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк = 0 (такого аккаунта в БД нет), то - регистрация аккаунта
    			gPlayerAccount[playerid] = 0;
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
			}
			else//иначе - вход в аккаунт
			{
    			gPlayerAccount[playerid] = 1;
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
 			}
 		}
#endif
#if (MOD90INS == 1 && MOD33INS == 1)
		format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
//		format(string, sizeof(string), "%s.ini", playrname);
		if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
		{
    		migration[playerid] = 1;//делаем отметку о миграции аккаунта в SQLite,
    		gPlayerAccount[playerid] = 1;//и входим в аккаунт
 			ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Вход в аккаунт","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 1);
		}
		else//иначе:
		{
			format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк = 0 (такого аккаунта в БД нет), то - регистрация аккаунта
    			gPlayerAccount[playerid] = 0;
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
			}
			else//иначе - вход в аккаунт
			{
    			gPlayerAccount[playerid] = 1;
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Вход в аккаунт","Добро пожаловать на РЕНОВАЦИЮ {00FF00}RDS {A9C4E4}сервера {00FF00}( Russian-Drift мод ) .\n{A9C4E4}Реновация была сделана {00FF00}кланом [Gn_R] {A9C4E4}( ноябрь 2014 г. )\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
 			}
 		}
#endif
	}
	else//иначе:
	{
		SendClientMessage(playerid,0xA9C4E4FF,"Server closed the connection.");
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{

//==============================================================================
//                              GarHouse
//==============================================================================

	if(GetPVarInt(playerid, "HousePrevTime") != 0)
	{//если игрок осматривает интерьер, то сбросить таймер осмотра интерьера
	    SetPVarInt(playerid, "HousePreview", 0);
	    KillTimer(GetPVarInt(playerid, "HousePrevTimer"));
	    SetPVarInt(playerid, "IsHouseVisiting", 0);
		SetPVarInt(playerid, "HousePrevTime", 0);
	}
	if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 1)
	{//если игрок был в режиме осмотра интерьера, то вернуть старый интерьер
		new file555[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP");
		format(file555, sizeof(file555), FILEPATH, h);

  		DestroyHouseEntrance(h, TYPE_INT);
		CreateCorrectHouseExitCP(h);
		Loop(i, MAX_PLAYERS)
		{
  			if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
  			{
				SetPlayerHouseInterior(i, h);
			}
		}
//		#if defined GH_DEBUGGING
//			printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));
//		#endif
	}
	SetPVarInt(playerid, "HouseIntUpgradeMod", 0);

	new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, GetPVarInt(playerid, "LastHouseCP"));
    if(!strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && GetPVarInt(playerid, "IsInHouse") == 1 && dini_Exists(file))
	{
	    dini_IntSet(file, "QuitInHouse", 1);
	    #if defined GH_HOUSECARS
	    	SaveHouseCar(GetPVarInt(playerid, "LastHouseCP"));
	    	UnloadHouseCar(GetPVarInt(playerid, "LastHouseCP"));
        #endif
	    #if defined GH_DEBUGGING
	    	printf(DEBUG_OP_DISCONNECT, RealName[playerid], playerid);
    	#endif
	}
//==============================================================================
//                              End GarHouse
//==============================================================================

	if(PlayerInfo[playerid][pPassLock] == 0)//если паспорт НЕ заблокирован, то:
	{
		gettime(timecor[0], timecor[1]);
		getdate(timecor[2], timecor[3], timecor[4]);
		TimCor();//коррекция времени
		DatCor();//коррекция даты
		switch(playconpass[playerid])//время и дата выхода
		{
		    case 0, 1: format(PlayerInfo[playerid][pPass_inout1], 64, "%s [%02d:%02d - %02d/%02d/%04d]", PlayerInfo[playerid][pPass_inout1], timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
		    case 2: format(PlayerInfo[playerid][pPass_inout2], 64, "%s [%02d:%02d - %02d/%02d/%04d]", PlayerInfo[playerid][pPass_inout2], timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
		    case 3: format(PlayerInfo[playerid][pPass_inout3], 64, "%s [%02d:%02d - %02d/%02d/%04d]", PlayerInfo[playerid][pPass_inout3], timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
		    case 4: format(PlayerInfo[playerid][pPass_inout4], 64, "%s [%02d:%02d - %02d/%02d/%04d]", PlayerInfo[playerid][pPass_inout4], timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
		}
	}
	if(condiscon[playerid] == 0 && conopen222 == 1)
	{
		SendDeathMessage(INVALID_PLAYER_ID, playerid, 201);//отобразить иконку дисконнекта в килл-чате
	}
	TextDrawHideForPlayer(playerid, Times);//выключить часы игроку
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
		AdmUpdate(RealName[playerid], PlayerInfo[playerid][pAdmin], 5);
	}
    new string[256];
    if(mapiconid[playerid] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    {
		DestroyDynamicMapIcon(mapiconid[playerid]);//удаление мап иконки наблюдения
	}
	mapiconid[playerid] = -600;//очистка ID мап иконки наблюдения
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(admper1[i] == playerid)//если есть админ ведущий наблюдение за игроком, то:
			{
				if(admper5[i] == 1)//если админ наблюдал за транспортом, то:
				{
					PlayerTextDrawHide(i, VehicleSpeed[i]);//отключаем текстдравы спидометра
					TextDrawHideForPlayer(i, KMH);
					TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
					PlayerTextDrawHide(i, HMS44[i]);
				}
				TogglePlayerSpectating(i, 0);//запретить наблюдение для админа
				admper6[i] = 0;//обнуляем отметку о переключении наблюдения
				ShowPlayerDialog(i,2,0,"Информация.","Наблюдение было автоматически отключено !\
				\n( игрок, за кем Вы наблюдали - вышел с сервера )","OK","");
				SetPVarInt(i, "DlgCont", 2);
			}
		}
	}
	admper1[playerid] = 600;//переменная наблюдения 1
	admper6[playerid] = 0;//переменная наблюдения 6
	PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
	TextDrawHideForPlayer(playerid, KMH);
	PlayerTextDrawDestroy(playerid, VehicleSpeed[playerid]);//удаляем текстдрав спидометра
	TextDrawHideForPlayer(playerid, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
	PlayerTextDrawHide(playerid, HMS44[playerid]);
	PlayerTextDrawDestroy(playerid, HMS44[playerid]);//удаляем текстдрав максимальной горизонтальной скорости
	OnPlayerSaveA(playerid);//сохраняем аккаунт игрока
	if(idgangsave[playerid] > 0)
	{
		GangSave(idgangsave[playerid]);//запись ID банды в файл
	}
    if(exitcheat[playerid] == 0)//если игрок - НЕ чит, то:
    {
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
        	format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера со статусом депортации.",RealName[playerid],playerid);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
    	if(PlayerInfo[playerid][pPrisonsec] > 0)
    	{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pPrisonsec]);
	    	if(PlayerInfo[playerid][pPrisonsec] == 0)
	    	{
				format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера с %d секунд тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
			}
			else
			{
				switch(dopcis)
				{
					case 0, 2: format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера с %d секундами тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
					case 1: format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера с %d секундой тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
				}
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
    	if(PlayerInfo[playerid][pMutedsec] > 0)
    	{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pMutedsec]);
	    	if(PlayerInfo[playerid][pMutedsec] == 0)
	    	{
				format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера с %d секунд затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
			}
			else
			{
				switch(dopcis)
				{
					case 0, 2: format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера с %d секундами затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
					case 1: format(string, sizeof(string), "Russian_Drift: Игрок %s [%d] вышел с сервера с %d секундой затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
				}
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
	}
	exitcheat[playerid] = 0;//обнуляем переменную чита
	if(restrest == 0)//если нету рестарта сервера, то:
	{
		switch(reason)
		{
			case 0: printf("* Игрок %s [%d] вышел с сервера (вылет) .", RealName[playerid], playerid);
			case 1: printf("* Игрок %s [%d] вышел с сервера (вышел) .", RealName[playerid], playerid);
			case 2: printf("* Игрок %s [%d] вышел с сервера (кик/бан) .", RealName[playerid], playerid);
		}
	}
	else//иначе:
	{
		printf("* Игрок %s [%d] вышел с сервера. (кик по рестарту)", RealName[playerid], playerid);
	}

	R_Vehicle[playerid] = VehicleSpeed_1;//speedometer

//------------------------------ BusSystem -------------------------------------
	playspabs[playerid] = 0;//игрок не заспавнился
	for(new j; j < BUS_MAX; j++)//цикл для всех бизнесов
	{
		if(buscount[j] == 1 && strcmp(RealName[playerid], busplayname[j], false) == 0)//если бизнес существует,
		{//и это бизнес игрока, то:
			busidplay[j] = -600;//даём бизнесу несуществующий ИД игрока
		}
	}
	playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
	busdlgcon[playerid] = 0;//обнуляем контроль диалогов
//---------------------------- End BusSystem -----------------------------------

	if(dmplay[playerid] != 0)//если игрок был в DM-зоне, то:
	{
		PlayerTextDrawHide(playerid, dmkillTD[playerid]);//отключаем текстдравы DM-зон
		PlayerTextDrawHide(playerid, dmdeathTD[playerid]);
		Delete3DTextLabel(dmkd3D[playerid]);//удаляем 3D-текст DM-зон
	}
	PlayerTextDrawDestroy(playerid, dmkillTD[playerid]);//удаляем текстдравы DM-зон
	PlayerTextDrawDestroy(playerid, dmdeathTD[playerid]);
	conconTD[playerid] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	scrmod[0][playerid] = 0;//переменная режимов экрана
	scrmod[1][playerid] = 0;//переменная режимов экрана
	scrmod[2][playerid] = 0;//переменная режимов экрана
	if(scrmod[3][playerid] == 1 || dmlock[playerid] == 1)
	{
		Level3D[playerid] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
		LevelStats[playerid] = 0;
	}
	scrmod[3][playerid] = 0;//переменная режимов экрана
	scrmod[4][playerid] = 0;//переменная режимов экрана
	scrmod[5][playerid] = 0;//переменная режимов экрана
	compdrift[playerid] = -1000000;//отключение от дрифт-соревнования
	ClearAnimations(playerid);//остановить анимацию
    perfrost[playerid] = 600;//отключение заморозки
	TogglePlayerControllable(playerid, 1);//разморозить ид вышедшего игрока
	if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
	if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
	neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
	if(migalka[playerid][0] != 0) { DestroyObject(migalka[playerid][0]); }//убрать мигалку
	migalka[playerid][0] = 0;//присваиваем мигалке несуществующий номер объекта
	migalka[playerid][1] = 0;//несуществующий ид транспорта с мигалкой
	if(playcar[playerid] != 0)//если у игрока есть свой транспорт, то:
	{
		for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона и чужой мигалки И обход антикрашера - 3
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(GetPlayerVehicleID(i) == playcar[playerid])
				{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
					EnterTick33[i] = 1;//обход антикрашера - 3
					SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
				}
			}
			if(playcar[playerid] == neon[i][2])
			{
				DestroyObject(neon[i][0]);//убрать неон
				DestroyObject(neon[i][1]);//убрать неон
				neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][2] = 0;//несуществующий ид транспорта с неоном
 			}
			if(playcar[playerid] == migalka[i][1])
			{
				DestroyObject(migalka[i][0]);//убрать мигалку
				migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
				migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
 			}
		}
		playcarvw[playcar[playerid]] = -100;//обнулить виртуальный мир транспорта игрока
		DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
		playcar[playerid] = 0;//несуществующий ид транспорта
	}

	NRadio[playerid] = 0;//задаём игроку несуществующий номер подключенного радио//Радио
	StopAudioStreamForPlayer(playerid);//отключим любой поток

	SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);//установить нормальный стиль боя
	gPlayerLogged[playerid] = 0;//запретить запись аккаунта
	playspa[playerid] = 0;//переменная спавна игрока
#if (MOD66INS > 1)
	playspascan[playerid] = 0;//переменная спавна игрока 2
	playspacount[playerid] = 0;//задержка контроля игрока на ошибку координат спавна
#endif
	playlogcount[playerid] = 0;//задержка контроля игрока на спавн без логирования
#if (MOD66INS == 3)
	DeletePVar(playerid, "sobcheck");//удаляем глобальную переменную сканера собейта
#endif
	DeletePVar(playerid, "DlgCont");//удаляем глобальную переменную ИДа диалога
	countdown[playerid] = -1;//очистка обратного отсчёта
	oneminkick[playerid] = 0;//кик - если не заспавнился
	passrcon[playerid] = 0;//бан взлома RCON-пароля
	prisoncount[playerid] = 0;//задержка контроля игрока в тюрьме
	DeletePVar(playerid, "PlDeport");//удаляем глобальную переменную депортации игрока
	DeletePVar(playerid, "AdmSpect");//удаляем глобальную переменную статуса наблюдения админа
	DeletePVar(playerid, "PlFrost");//удаляем глобальную переменную заморозки игрока
	DeletePVar(playerid, "PlSkin");//удаляем глобальную переменную скина игрока
	DeletePVar(playerid, "PlMon");//удаляем глобальную переменную денег игрока
	DeletePVar(playerid, "SecPris");//удаляем глобальную переменную секунд тюрьмы
	DeletePVar(playerid, "SecMute");//удаляем глобальную переменную секунд затыка
	DeletePVar(playerid, "AdmLvl");//удаляем глобальную переменную уровня админки
	DeletePVar(playerid, "PlGLvl");//удаляем глобальную переменную Lvl игрока в банде
	DeletePVar(playerid, "PlGng");//удаляем глобальную переменную ID банды игрока
	DeletePVar(playerid, "PlCRTp");//удаляем глобальную переменную блокировки координат
	DeletePVar(playerid, "CComAc0");//удаляем глобальные переменные контроля чата
	DeletePVar(playerid, "CComAc1");
	DeletePVar(playerid, "CComAc2");
	DeletePVar(playerid, "CComAc3");
	DeletePVar(playerid, "CComAc4");
	DeletePVar(playerid, "CComAc5");
	DeletePVar(playerid, "CComAc6");
	DeletePVar(playerid, "CComAc7");
	DeletePVar(playerid, "CComAc8");
	DeletePVar(playerid, "CComAc9");
	DeletePVar(playerid, "CComAc10");
	DeletePVar(playerid, "CComAc11");
	DeletePVar(playerid, "CComAc12");
	DeletePVar(playerid, "CComAc13");
	DeletePVar(playerid, "CComAc14");
	DeletePVar(playerid, "CComAc15");
	strdel(RealName[playerid],0,MAX_PLAYER_NAME);//очистить реальный ник игрока
	scrnetcount[playerid] = 0;//обнуляем переменную контроля сетевых экранов
#if (MOD7BINS == 0)
	scrnetv[playerid] = 0;//сбрасываем переменную просмотра действий сетевых экранов
#endif
#if (MOD7BINS == 1)
	scrnetv[playerid] = 1;//устанавливаем переменную просмотра действий сетевых экранов
#endif
	playconpass[playerid] = 0;//текущий паспорт = 0
	ct9control[playerid] = 0;
	DeletePVar(playerid, "PlCRct9");//удаляем глобальную переменную блокировки античита управления чужим транспортом
	crash5count[playerid] = 0;//обнуляем контроль антикрашера - 5
	crash6[playerid] = 0;//обнуляем контроль антикрашера - 6
	crash7count[playerid] = 0;//обнуляем контроль антикрашера - 7
	crash8count[playerid] = 0;//обнуляем контроль антикрашера - 8
	StopHidrav[playerid] = 0;//переменная задержки гидравлики
	dmcount44[playerid] = 0;//обнуляем маркер счётчика времени в DM-зонах
	dmmoney[playerid] = 0;//обнуляем маркер денежного приза в DM-зонах
	dmplay[playerid] = 0;//обнуляем маркер присутствия в DM-зонах
	dmplay22[playerid] = 0;//обнуляем вспомогательный маркер DM-зон
	dmspa[playerid] = 0;//обнуляем блокировку сохранения координат и угла игрока в DM-зонах
	dmlock[playerid] = 0;//обнуляем блокировку ''уровня дрифта'' (над головой) в DM-зонах
	countdown22[playerid] = -1;//очистка обратного DM-отсчёта
	dmwplay[playerid] = 0;//обнуляем маркер присутствия в DM-мирах
	functioncon[playerid] = 0;//обнуляем контрольную переменную функций
	chatcon[playerid] = 0;//обнуляем контрольную переменную чата
	strdel(fbanreason[playerid], 0, 256);//очистка причины бана
	LockSpawn[playerid] = 0;//разблокировать заполнение слотов оружия и предметов
	NETafkPl[playerid][1] = 0;//обнулить время AFK
	NETafkPl[playerid][6] = 0;//обнулить контроль AFK
	NETrecPl[playerid] = 0;//обнулить контроль сети
	NETsenPl[playerid] = 0;
	PlayLock1[0][playerid] = 600;//отключить блокировку игрока
	LocTime[playerid] = GlTime;//передать общее время в локальное
	StopHeal[playerid] = 0;//переменная задержки команды /heal
	StopReport[playerid] = 0;//переменная задержки команды /report
	StopHH[playerid] = 0;//переменная задержки команды /hh
	StopBB[playerid] = 0;//переменная задержки команды /bb
	StopGMoney[playerid] = 0;//переменная задержки команды /givecash
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	PlayCRSH[playerid] = 0;//обнулить блокировку спидхака
	LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
	DeletePVar(playerid, "MnMode");//удаляем глобальную переменную режима меню
	DerbyID[playerid] = 0;//обнулить дерби-режим
	LevelStats[playerid] = 0;//drift bonus
    PlayerInfo[playerid][pMinlog] = 0;//обнулить число минут на сервере
	PlayerInfo[playerid][pAdmlive] = 0;//обнулить бессмертие
	livdop[playerid] = 0;
    PlayerInfo[playerid][pAdmin] = 0;//обнулить админку
	PlayerInfo[playerid][pAdmshad] = 0;//обнулить скрытость админа
#if (MOD90INS == 1)
	migration[playerid] = 0;//обнулить режим миграции аккаунта
#endif
	if(SnowONOFF[playerid] == 1)//если на сервере ядерный взрыв, то:
	{//удаляем объект снега
		DestroyPlayerObject(playerid,snowobj[playerid]);
		SnowONOFF[playerid] = 0;
	}
	strdel(twoIP[playerid],0,128);//запоминаем IP вышедшего игрока на 100 миллисекунд
	strcat(twoIP[playerid],PlayerInfo[playerid][pIPAdr]);
	SetTimerEx("ClearIP", 100, 0, "i", playerid);
	SetTimerEx("OutOut", 300, 0, "i", playerid);//задержка, на время записи аккаунта банды
	return 1;
}

forward OutOut(playerid);//Gangs system
public OutOut(playerid)
{
	if(idgangsave[playerid] > 0)//если ID банды для записи - активен, то:
	{
		idgangsave[playerid] = 0;//очистка ID банды для записи
		locper3[playerid] = 0;
		while(locper3[playerid] < MAX_PLAYERS)//цикл для всех игроков
		{
			if(PGang[playerid] > 0 && PGang[playerid] == PGang[locper3[playerid]] && playerid != locper3[playerid])
			{//если есть хотя бы один игрок из банды выходящего, то:
				idgangsave[locper3[playerid]] = PGang[playerid];
				break;
			}
			locper3[playerid]++;
		}
	}
	idgangsave[playerid] = 0;//очистка ID банды для записи

	PGang[playerid] = 0;
	GangLvl[playerid] = 0;
	return 1;
}

public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] >= 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

forward SendAdminMessage22(color, string[], reg, admlvl);
public SendAdminMessage22(color, string[], reg, admlvl)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(reg == 1)
			{
			    if(PlayerInfo[i][pAdmin] >= admlvl)
			    {
					if(FnConAdmScrNet(RealName[i]) >= 0)
					{
						SendClientMessage(i, color, string);
					}
				}
			}
			if(reg == 2)
			{
			    if(PlayerInfo[i][pAdmin] >= 1 && scrnetv[i] == 1)
			    {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
#if (MOD4CINS == 0)
	if(functioncon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		return 1;//завершаем функцию
	}
	if(functioncon[playerid] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
	{
		functioncon[playerid] = -5;//устанавливаем счётчик 5-и секунд
	}
#endif
	functioncon[playerid]++;//прибавляем 1 к контрольной переменной функций
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	new string[256];
    if(PlayerInfo[playerid][pPassLock] == 1) { return 1; }
    if(PlayerInfo[playerid][pLock] == 1) { return 1; }
    if(gPlayerLogged[playerid] == 0)
	{
#if (MOD66INS > 1)
		SetPlayerVirtualWorld(playerid, playerid + 5000);//создаём игроку виртуальный спавн
		SetPlayerCameraPos(playerid, -1655.923828, 1205.868652, 21.156250);
		SetPlayerCameraLookAt(playerid, -1651.794189, 1206.626708, 21.148662);
		SetPlayerPos(playerid, -1651.794189, 1206.626708, 21.148662);
		SetPlayerFacingAngle(playerid, 98.594573);
#endif
    	format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
#if (MOD33INS == 0)
   		ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
#endif
#if (MOD33INS == 1)
   		ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 3);
		return 1;
	}
#if (MOD66INS == 2)
	if (playspascan[playerid] == 0)//если игрок не прошёл начальный выбор скина, то:
	{
		SetPlayerCameraPos(playerid, -1655.923828, 1205.868652, 21.156250);//создаём игроку виртуальный спавн
		SetPlayerCameraLookAt(playerid, -1651.794189, 1206.626708, 21.148662);
		SetPlayerPos(playerid, -1651.794189, 1206.626708, 21.148662);
		SetPlayerFacingAngle(playerid, 98.594573);
		ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");//показываем игроку диалог "Выбор скина" на его виртуальном спавне
		SetPVarInt(playerid, "DlgCont", 56);
		return 1;
	}
#endif
#if (MOD66INS == 3)
	if (playspascan[playerid] == 0)//если игрок не прошёл сканер собейта, то:
	{
		OnPlayerSpawnScan(playerid);//отправляем игрока на сканер собейта
		return 1;
	}
#endif

//==============================================================================
//                              GarHouse
//==============================================================================
    if(GetPVarInt(playerid, "FirstSpawn") == 0)
    {
        // Используется для того, чтобы плеер spawn в их доме, если они уходят в их доме (только призвал к первому spawn)
		#if defined SPAWN_IN_HOUSE
    		SetTimerEx("HouseSpawning", HSPAWN_TIMER_RATE, false, "i", playerid);
    	#endif
    	// Увеличение скорости таймера, если ваш режимы игры OnPlayerSpawn вызывается после таймер закончился
    }
//==============================================================================
//                              End GarHouse
//==============================================================================

	R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
/*
	TextDrawHideForPlayer(playerid,Textdraw0);//drift bonus
	TextDrawHideForPlayer(playerid,Textdraw1);
	new Score = GetPVarInt(playerid, "PlMon");
	if(Score >= 0 && Score < 100000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[playerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Главарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	if(scrmod[3][playerid] == 0)
	{
		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,1.00);
//		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,0.47);
		Update3DTextLabelText(Level3D[playerid],0x00FF00FF,Playerdr[playerid][Level]);
		LevelStats[playerid] = 1;
	}
*/

//------------------------------ BusSystem -------------------------------------
	if(playspabs[playerid] == 0)//если игрок ещё не заспавнился, то:
	{
		for(new j; j < BUS_MAX; j++)//цикл для всех бизнесов
		{
			if(buscount[j] == 1 && strcmp(RealName[playerid], busplayname[j], false) == 0)//если бизнес существует,
			{//и это бизнес игрока, то:
				busidplay[j] = playerid;//даём бизнесу ИД он-лайн игрока - владельца бизнеса
			}
		}
	}
	playspabs[playerid] = 1;//игрок заспавнился
//---------------------------- End BusSystem -----------------------------------

	SetPVarInt(playerid, "PlCRct9", 1);//блокировка античита управления чужим транспортом
	if(PlayLock1[0][playerid] != 600 && PlayerInfo[playerid][pPrisonsec] == 0)
	{//если игрок заблокирован, и не сидит в тюрьме, то заменяем данные блокировки на данные полицейского участка
		PlayLock1[1][playerid] = 3;//интерьер полицейского участка
		PlayLock1[2][playerid] = 0;//виртуальный мир 0
		PlayLock2[0][playerid] = 202.65;//координаты полицейского участка
		PlayLock2[1][playerid] = 179.72;
		PlayLock2[2][playerid] = 1003.03;
		PlayLock2[3][playerid] = 96.66;//угол спавна в полицейском участке
		SetCameraBehindPlayer(playerid);//камера за спиной
	}
	else//иначе - спавн игрока
	{
		if(admper1[playerid] != 600)//спавн админа после снятия наблюдения
		{
			new cordz = 0;
			if(admper4[playerid] == 3)
			{
				cordz = 5;
			}
			admper1[playerid] = 600;//установить статус выключенного наблюдения
			SetPlayerInterior(playerid, admper2[playerid]);//вернуть интерьер админа
			SetPlayerVirtualWorld(playerid, admper3[playerid]);//вернуть мир админа
			SetPlayerPos(playerid, TelSpec[playerid][0] + admper4[playerid],TelSpec[playerid][1] + admper4[playerid],TelSpec[playerid][2] + cordz);//вернуть координаты админа
			SetCameraBehindPlayer(playerid);//расположить камеру за админом (игроком)
    		if(mapiconid[playerid] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    		{
				DestroyDynamicMapIcon(mapiconid[playerid]);//удаление мап иконки наблюдения
			}
			mapiconid[playerid] = -600;//очистка ID мап иконки наблюдения
		}
		else
		{
			if(dmplay[playerid] != 0)//если игрок был в DM-зоне, то:
			{
				new Float:Ang = dmcor[playerid][3] + 90.00;
				if(Ang > 360.00) { Ang = Ang - 360.00; }
				Ang = floatdiv(floatmul(Ang, 3.1416), 180.00);
				new Float:CorX = floatmul(floatcos(Ang), 5.00);
				new Float:CorY = floatmul(floatsin(Ang), 5.00);
 				SetPlayerInterior(playerid, 0);//установка интерьера 0
				SetPlayerVirtualWorld(playerid, dmplay[playerid]+17000);//установка виртуального мира
				SetPlayerPos(playerid, dmcor[playerid][0]+CorX, dmcor[playerid][1]+CorY, dmcor[playerid][2]-1.00);//координаты спавна игрока
				SetPlayerFacingAngle(playerid, dmcor[playerid][3]);//угол спавна игрока
				SetCameraBehindPlayer(playerid);//расположить камеру за игроком
				SetTimerEx("dmrespawn", 2000, 0, "i", playerid);//задержка разрешения сохранения координат и угла игрока в DM-зоне
			}
			else//иначе:
			{
				if(dmwplay[playerid] != 0)//если игрок был в DM-мире, то:
				{
	 				SetPlayerInterior(playerid, 0);//установка интерьера 0
					SetPlayerVirtualWorld(playerid, dmwplay[playerid]+18000);//установка виртуального мира
					SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
					SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
 					SetCameraBehindPlayer(playerid);//расположить камеру за игроком
				}
				else//иначе - спавн игрока:
				{

					if(PGang[playerid] > 0 && strlen(GName[PGang[playerid]]) == 0)//Gangs system
					{//если игрок состоит в банде, и в названии банды нет ни одного символа (банда удалена), то:
						PGang[playerid] = 0;//обнулить игроку статус банды, и заспавнить игрока как обычного
		    			GangLvl[playerid] = 0;
						SendClientMessage(playerid, 0xFF0000FF, "Ваша банда была удалена !");
		 				SetPlayerInterior(playerid, 0);//установка интерьера 0
						SetPlayerVirtualWorld(playerid, 0);//установка виртуального мира 0
						SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
						SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
		 				SetCameraBehindPlayer(playerid);//расположить камеру за игроком
					}
					else//иначе - проверить на наличие спавна из банды
					{
						if(PGang[playerid] > 0 && (GSpawnX[PGang[playerid]] != 0.0 || GSpawnY[PGang[playerid]] != 0.0 || GSpawnZ[PGang[playerid]] != 0.0))
						{//если игрок состоит в банде, и в банде установлены координаты спавна, то:
		 					SetPlayerInterior(playerid, GInter[PGang[playerid]]);//установка интерьера из банды
							SetPlayerVirtualWorld(playerid, GWorld[PGang[playerid]]);//установка виртуального мира из банды
							SetPlayerPos(playerid, GSpawnX[PGang[playerid]], GSpawnY[PGang[playerid]], GSpawnZ[PGang[playerid]]);//координаты спавна игрока из банды
		 					SetCameraBehindPlayer(playerid);//расположить камеру за игроком
						}
						else//иначе - случайный спавн
						{
		 					SetPlayerInterior(playerid, 0);//установка интерьера 0
							SetPlayerVirtualWorld(playerid, 0);//установка виртуального мира 0
							SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
							SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
		 					SetCameraBehindPlayer(playerid);//расположить камеру за игроком
						}
						if(playspa[playerid] == 0)//если это первый спавн игрока, то:
						{
							SetTimerEx("Logg333", 1000, 0, "i", playerid);//задержка, на время чтения аккаунта банды
							SetTimerEx("ct9spawn", 2000, 0, "i", playerid);
						}
					}

				}
			}
		}
	}
	if (playspa[playerid] == 1 && LockSpawn[playerid] == 0)//заполнение слотов оружия и предметов
	{//(если игрок уже заспавнился И НЕТ блокировки)
		for(new i=0;i<13;i++)
		{
			GivePlayerWeapon(playerid, playweap[playerid][i], playammo[playerid][i]);
		}
	}
	LockSpawn[playerid] = 0;//разблокировать заполнение слотов оружия и предметов

	if(PGang[playerid] > 0 && GangLvl[playerid] <= 0)//Gangs system
	{//если игрок состоит в банде, и его уровень в банде меньше 1, то:
		GangLvl[playerid] = 1;//даём игроку уровень 1
	}
	if(PGang[playerid] > 0 && GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500)
	{//если игрок состоит в банде, и в банде установлен скин, то:
		if (skinstatplay[playerid] == 0)//присваивание скина игроку из банды
		{
			SetPVarInt(playerid, "PlSkin", GSkin[PGang[playerid]][GangLvl[playerid]-1]);
			skinstatplay[playerid] = 1;
		}
		SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
	}
	else//иначе - присваивание скина игроку
	{
		if (skinstatplay[playerid] == 0)//присваивание скина игроку
		{
			SetPVarInt(playerid, "PlSkin", GetPlayerSkin(playerid));
			skinstatplay[playerid] = 1;
		}
		SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
	}

 	SetPlayerHealth(playerid,100);
 	SetPlayerArmour(playerid,100);

	if(PGang[playerid] > 0)//Gangs system - если игрок состоит в банде, то:
	{
		if (nickstatcol[playerid] == 0)//присваивание цвета ника и цвета маркера игроку из банды
		{
			ColorPlay[playerid] = GColorDec[PGang[playerid]];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, GColorDec[PGang[playerid]]);
			}
			nickstatcol[playerid] = 1;
		}
	}
	else//иначе - присваивание цвета ника и цвета маркера игроку
	{
		if (nickstatcol[playerid] == 0)//присваивание цвета ника и цвета маркера игроку
		{
			ColorPlay[playerid] = ColNick[nick5col];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
			}
			nickstatcol[playerid] = 1;
		}
	}

	if (PlayerInfo[playerid][pPrisonsec] > 0)//посадка в тюрьму
	{
		ResetPlayerWeapons(playerid);//отобрать оружие
		SetPlayerInterior(playerid, 3);//интерьер тюрьмы
		SetPlayerVirtualWorld(playerid, 0);//виртуальный мир 0
		SetPlayerPos(playerid, 193.31, 173.87, 1003.02);//координаты тюрьмы
		SetPlayerFacingAngle(playerid, 0.44);//угол спавна в тюрьме
		SetCameraBehindPlayer(playerid);//камера за спиной
	}
	if (perfrost[playerid] != 600)//включение заморозки
	{
		TogglePlayerControllable(playerid,0);
	}
	if(nucexplos == 1 && SnowONOFF[playerid] == 0)//если на сервере ядерный взрыв,
	{//И игрок только зашёл на сервер, то: саздаём объект снега
		new Float:sx,Float:sy,Float:sz;
		GetPlayerCameraPos(playerid,sx,sy,sz);
		snowobj[playerid] = CreatePlayerObject(playerid,18864, sx, sy, sz-5, 0.0, 0.0, 0.0, 300.0);
		SnowONOFF[playerid] = 1;
	}
	if (playspa[playerid] == 0)
	{
		if (PlayerInfo[playerid][pPrisonsec] == 0)//если игрок не сидит в тюрьме, то:
		{
			GivePlayerWeapon(playerid, 24, 500);//заполнение слотов оружия при первом спавне игрока
			GivePlayerWeapon(playerid, 26, 500);
			GivePlayerWeapon(playerid, 28, 500);
		}

		printf("* Игрок %s [%d] --> (спавн) .", RealName[playerid], playerid);
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
        	format(string, sizeof(string),"Russian_Drift: У игрока %s [%d] статус депортации.",RealName[playerid],playerid);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pPrisonsec]);
			switch(dopcis)
			{
				case 0: format(string,sizeof(string),"Russian_Drift: У игрока %s [%d] %d секунд тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
				case 1: format(string,sizeof(string),"Russian_Drift: У игрока %s [%d] %d секунда тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
				case 2: format(string,sizeof(string),"Russian_Drift: У игрока %s [%d] %d секунды тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pMutedsec]);
			switch(dopcis)
			{
				case 0: format(string,sizeof(string),"Russian_Drift: У игрока %s [%d] %d секунд затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
				case 1: format(string,sizeof(string),"Russian_Drift: У игрока %s [%d] %d секунда затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
				case 2: format(string,sizeof(string),"Russian_Drift: У игрока %s [%d] %d секунды затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
	}
	playspa[playerid] = 1;//переменная спавна игрока
	return 1;
}

#if (MOD66INS == 3)
	forward OnPlayerSpawnScan(playerid);
	public OnPlayerSpawnScan(playerid)//спавн для сканера собейта
	{
		SetPlayerVirtualWorld(playerid, playerid + 5000);//создаём игроку виртуальный спавн
		SetPlayerPos(playerid, -1651.794189, 1206.626708, 21.148662);//для сканера собейта
		SetPlayerFacingAngle(playerid, -81.405427);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "sobcheck", 60);
		TogglePlayerControllable(playerid, false);
		ScanSobeit(playerid);//отправляем игрока на сканер собейта
		return 1;
	}

	forward ScanSobeit(playerid);
	public ScanSobeit(playerid)//сканер собейта
	{
		new string[256];
		if(GetPVarInt(playerid, "sobcheck") > 1)
		{
			SetPVarInt(playerid, "sobcheck", GetPVarInt(playerid, "sobcheck")-1);
			format(string,sizeof string,"{FFFFFF}Пожалуйста подождите !\nСчётчик контроля: {FF0000}%d", GetPVarInt(playerid, "sobcheck"));
			ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX,"Сканер собейта",string,"OK","");
			SetPVarInt(playerid, "DlgCont", 2);
			return SetTimerEx("ScanSobeit", 100, false, "i",playerid);
		}
		GetPlayerCameraFrontVector(playerid,sposcheck[playerid][0],sposcheck[playerid][1],sposcheck[playerid][2]);
		if(GetPVarInt(playerid, "sobcheck") == 1)
		{
			SetPVarInt(playerid, "sobcheck", GetPVarInt(playerid, "sobcheck")-1);
			if(sposcheck[playerid][2] < -0.35)
			{
				ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"HideDialog","text","Close","");
				TogglePlayerControllable(playerid, true);
				format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - обнаружение собейта !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"HideDialog","text","Close","");
				SetPlayerCameraPos(playerid, -1655.923828, 1205.868652, 21.156250);//создаём игроку виртуальный спавн
				SetPlayerCameraLookAt(playerid, -1651.794189, 1206.626708, 21.148662);
				SetPlayerPos(playerid, -1651.794189, 1206.626708, 21.148662);
				SetPlayerFacingAngle(playerid, 98.594573);
				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");//показываем игроку диалог "Выбор скина" на его виртуальном спавне
				SetPVarInt(playerid, "DlgCont", 56);
			}
		}
		return 1;
	}
#endif

forward Logg333(playerid);//Gangs system
public Logg333(playerid)
{
	new dopper = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)//подготовка к записи ID банды
	{
		if(PGang[playerid] > 0 && PGang[playerid] == idgangsave[i])
		{//если игрок состоит в банде, и ID его банды уже есть в списке, то:
			dopper = 1;
		}
	}
	if(PGang[playerid] > 0 && dopper == 0)
	{//если игрок состоит в банде, и ID его банды НЕ был найден в списке, то:
		idgangsave[playerid] = PGang[playerid];//записываем в список ID банды игрока
	}
	return 1;
}

forward ct9spawn(playerid);
public ct9spawn(playerid)
{
	ct9control[playerid] = 1;
	return 1;
}

forward dmrespawn(playerid);
public dmrespawn(playerid)
{
	dmspa[playerid] = 0;//обнуляем блокировку сохранения координат и угла игрока в DM-зонах
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
#if (MOD4CINS == 0)
	if(functioncon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		return 1;//завершаем функцию
	}
	if(functioncon[playerid] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
	{
		functioncon[playerid] = -5;//устанавливаем счётчик 5-и секунд
	}
#endif
	functioncon[playerid]++;//прибавляем 1 к контрольной переменной функций
	new Float:PosX, Float:PosY, Float:PosZ;//проверка игрока в X-зоне
	GetPlayerPos(playerid, PosX, PosY, PosZ);//чтение координат (playerid) игрока
	if((-1602 < PosX < -1193 && 840 < PosY < 1158 && 973 < PosZ < 1101) ||
	(-1547 < PosX < -1247 && 1506 < PosY < 1705 && 1002 < PosZ < 1123))//сравниваем координаты
	{//игрок в зоне дерби
		LockSpawn[playerid] = 1;//если игрок умер в зоне дерби, то блокируем заполнение слотов оружия и предметов
	}

	R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
/*
	if(IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID)//drift bonus
	{
	new Score = GetPVarInt(killerid, "PlMon");
	if(Score >= 0 && Score < 100000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[killerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Главарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	Update3DTextLabelText(Level3D[killerid],0x00FF00FF,Playerdr[killerid][Level]);
	}
*/
    SendDeathMessage(killerid,playerid,reason);
	if(killerid != INVALID_PLAYER_ID)
	{
		PlayerInfo[killerid][pKills] += 1;
		PlayerInfo[playerid][pDeaths] += 1;
		if(dmplay[playerid] != 0)//если смерть в DM-зоне, то:
		{
			new plvw;
			plvw = GetPlayerVirtualWorld(playerid);
			dmspa[playerid] = 1;//блокируем сохранения координат и угла игрока в DM-зонах
			if(17001 <= plvw <= 17010 && plvw == GetPlayerVirtualWorld(killerid) && IsPlayerInRangeOfPoint(killerid, 300.0, PosX, PosY, PosZ))
			{//если игрок И киллер находились в одной DM-зоне, на расстоянии не больше 300 к.е., то:
				dmkill[killerid]++;//число убийств игрока +1
				dmdeath[playerid]++;//число смертей игрока +1
				if(reason == 0 || reason == 1 || 22 <= reason <= 34)
				{//если киллер был без оружия, ИЛИ был с кастетом, ИЛИ был с пистолетом, автоматом, или ружьём, то:
					dmmoney[killerid] = 1;//устанавливаем маркер денежного приза для игрока-киллера
				}
			}
		}
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
//	SetVehicleToRespawn(vehicleid);
	if(playcarvw[vehicleid] != -100)
	{
		if((playcarvw[vehicleid] >= 0 && playcarvw[vehicleid] <= 990) ||
		(playcarvw[vehicleid] >= 18001 && playcarvw[vehicleid] <= 18005))
		{
			SetVehicleVirtualWorld(vehicleid, playcarvw[vehicleid]);//установить транспорту виртуальный мир игрока
		}
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		strdel(PlayerInfo[playerid][pTDReg], 0, 64);//очистка времени и даты регистрации
		gettime(timecor[0], timecor[1]);
		getdate(timecor[2], timecor[3], timecor[4]);
		TimCor();//коррекция времени
		DatCor();//коррекция даты
		format(PlayerInfo[playerid][pTDReg], 64, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
#if (MOD90INS == 0)
		new string3[64];
//		new playername3[MAX_PLAYER_NAME];
//		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//		format(string3, sizeof(string3), "players/%s.ini", playername3);
//		format(string3, sizeof(string3), "%s.ini", playername3);
		new File: hFile = fopen(string3, io_write);
		if (hFile)
		{
			strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 64);
			new var[128];
			PlayerInfo[playerid][pReg] = 0;
			format(var, 128, "Key=%s\n",PlayerInfo[playerid][pKey]);fwrite(hFile, var);
			format(var, 128, "TDReg=%s\n",PlayerInfo[playerid][pTDReg]);fwrite(hFile, var);
			format(var, 128, "DEndConD=%d\n",EndConD);fwrite(hFile, var);
			format(var, 128, "DEndConM=%d\n",EndConM);fwrite(hFile, var);
			format(var, 128, "DEndConY=%d\n",EndConY);fwrite(hFile, var);
			format(var, 128, "IPAdr=%s\n",PlayerInfo[playerid][pIPAdr]);fwrite(hFile, var);
			format(var, 128, "MinLog=%d\n",PlayerInfo[playerid][pMinlog]);fwrite(hFile, var);
			format(var, 128, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
			format(var, 128, "AdminShadow=%d\n",PlayerInfo[playerid][pAdmshad]);fwrite(hFile, var);
			format(var, 128, "AdminLive=%d\n",PlayerInfo[playerid][pAdmlive]);fwrite(hFile, var);
			format(var, 128, "AdminScanCom=%d\n",PlayerInfo[playerid][pAdmscancom]);fwrite(hFile, var);
			format(var, 128, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
			format(var, 128, "Prison=%d\n",PlayerInfo[playerid][pPrison]);fwrite(hFile, var);
			format(var, 128, "Prisonsec=%d\n",PlayerInfo[playerid][pPrisonsec]);fwrite(hFile, var);
			format(var, 128, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
			format(var, 128, "Mutedsec=%d\n",PlayerInfo[playerid][pMutedsec]);fwrite(hFile, var);
			format(var, 128, "Money=%d\n",GetPVarInt(playerid, "PlMon"));fwrite(hFile, var);
			format(var, 128, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
			format(var, 128, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
			format(var, 128, "Police=%d\n",PlayerInfo[playerid][pPolice]);fwrite(hFile, var);
			format(var, 128, "Deport=%d\n",PlayerInfo[playerid][pDeport]);fwrite(hFile, var);
			format(var, 128, "RecPM=%d\n",PlayerInfo[playerid][pRecPM]);fwrite(hFile, var);
			format(var, 128, "Wanted=%d\n",PlayerInfo[playerid][pWanted]);fwrite(hFile, var);
			format(var, 128, "Lock=%d\n",PlayerInfo[playerid][pLock]);fwrite(hFile, var);
			format(var, 128, "Gang=%d\n",PGang[playerid]);fwrite(hFile, var);
			format(var, 128, "GangLvl=%d\n",GangLvl[playerid]);fwrite(hFile, var);
			format(var, 128, "Pass_data1=%s\n",PlayerInfo[playerid][pPass_data1]);fwrite(hFile, var);
			format(var, 128, "Pass_inout1=%s\n",PlayerInfo[playerid][pPass_inout1]);fwrite(hFile, var);
			format(var, 128, "Pass_ver1=%s\n",PlayerInfo[playerid][pPass_ver1]);fwrite(hFile, var);
			format(var, 128, "Pass_count1=%d\n",PlayerInfo[playerid][pPass_count1]);fwrite(hFile, var);
			format(var, 128, "Pass_data2=%s\n",PlayerInfo[playerid][pPass_data2]);fwrite(hFile, var);
			format(var, 128, "Pass_inout2=%s\n",PlayerInfo[playerid][pPass_inout2]);fwrite(hFile, var);
			format(var, 128, "Pass_ver2=%s\n",PlayerInfo[playerid][pPass_ver2]);fwrite(hFile, var);
			format(var, 128, "Pass_count2=%d\n",PlayerInfo[playerid][pPass_count2]);fwrite(hFile, var);
			format(var, 128, "Pass_data3=%s\n",PlayerInfo[playerid][pPass_data3]);fwrite(hFile, var);
			format(var, 128, "Pass_inout3=%s\n",PlayerInfo[playerid][pPass_inout3]);fwrite(hFile, var);
			format(var, 128, "Pass_ver3=%s\n",PlayerInfo[playerid][pPass_ver3]);fwrite(hFile, var);
			format(var, 128, "Pass_count3=%d\n",PlayerInfo[playerid][pPass_count3]);fwrite(hFile, var);
			format(var, 128, "Pass_data4=%s\n",PlayerInfo[playerid][pPass_data4]);fwrite(hFile, var);
			format(var, 128, "Pass_inout4=%s\n",PlayerInfo[playerid][pPass_inout4]);fwrite(hFile, var);
			format(var, 128, "Pass_ver4=%s\n",PlayerInfo[playerid][pPass_ver4]);fwrite(hFile, var);
			format(var, 128, "Pass_count4=%d\n",PlayerInfo[playerid][pPass_count4]);fwrite(hFile, var);
			format(var, 128, "PassMode=%d\n",PlayerInfo[playerid][pPassMode]);fwrite(hFile, var);
			format(var, 128, "PassDel=%d\n",PlayerInfo[playerid][pPassDel]);fwrite(hFile, var);
			format(var, 128, "PassLock=%d\n",PlayerInfo[playerid][pPassLock]);fwrite(hFile, var);
			format(var, 128, "PassError=%d\n",PlayerInfo[playerid][pPassError]);fwrite(hFile, var);
			fclose(hFile);

			printf("* Игрок %s [%d] --> (регистрация, пароль: (%s)) .", RealName[playerid], playerid, password);
			gPlayerAccount[playerid] = 1;
			OnPlayerLogin(playerid,password);
		}
#endif
#if (MOD90INS == 1)
		new strdln[4000];
		strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
		PlayerInfo[playerid][pReg] = 0;
		format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
		format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,AdminScanCom,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,", strdln);
		format(strdln, sizeof(strdln), "%sPolice,Deport,RecPM,Wanted,Lock,Gang,GangLvl,Pass_data1,Pass_inout1,Pass_ver1,Pass_count1,Pass_data2,", strdln);
		format(strdln, sizeof(strdln), "%sPass_inout2,Pass_ver2,Pass_count2,Pass_data3,Pass_inout3,Pass_ver3,Pass_count3,Pass_data4,Pass_inout4,", strdln);
		format(strdln, sizeof(strdln), "%sPass_ver4,Pass_count4,PassMode,PassDel,PassLock,PassError) ", strdln);
		format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,'%s',", strdln, EndConD,EndConM,EndConY,PlayerInfo[playerid][pIPAdr]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMinlog],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pAdmscancom],PlayerInfo[playerid][pReg]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pPrison],PlayerInfo[playerid][pPrisonsec],PlayerInfo[playerid][pMuted]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMutedsec],GetPVarInt(playerid, "PlMon"),PlayerInfo[playerid][pKills]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pDeaths],PlayerInfo[playerid][pPolice],PlayerInfo[playerid][pDeport]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pRecPM],PlayerInfo[playerid][pWanted],PlayerInfo[playerid][pLock]);
		format(strdln, sizeof(strdln), "%s%d,%d,'%s',", strdln, PGang[playerid],GangLvl[playerid],PlayerInfo[playerid][pPass_data1]);
		format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout1],PlayerInfo[playerid][pPass_ver1]);
		format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count1],PlayerInfo[playerid][pPass_data2]);
		format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout2],PlayerInfo[playerid][pPass_ver2]);
		format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count2],PlayerInfo[playerid][pPass_data3]);
		format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout3],PlayerInfo[playerid][pPass_ver3]);
		format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count3],PlayerInfo[playerid][pPass_data4]);
		format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout4],PlayerInfo[playerid][pPass_ver4]);
		format(strdln, sizeof(strdln), "%s%d,%d,", strdln, PlayerInfo[playerid][pPass_count4],PlayerInfo[playerid][pPassMode]);
		format(strdln, sizeof(strdln), "%s%d,%d,", strdln, PlayerInfo[playerid][pPassDel],PlayerInfo[playerid][pPassLock]);
		format(strdln, sizeof(strdln), "%s%d)", strdln, PlayerInfo[playerid][pPassError]);

		db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

		printf("* Игрок %s [%d] --> (регистрация, пароль: (%s)) .", RealName[playerid], playerid, password);
		gPlayerAccount[playerid] = 1;
		OnPlayerLogin(playerid,password);
#endif
	}
	return 1;
}

public OnPlayerSaveA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
#if (MOD90INS == 0)
			new string3[64];
//			new playername3[MAX_PLAYER_NAME];
//			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//			format(string3, sizeof(string3), "players/%s.ini", playername3);
//			format(string3, sizeof(string3), "%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[128];
				format(var, 128, "Key=%s\n",PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				format(var, 128, "TDReg=%s\n",PlayerInfo[playerid][pTDReg]);fwrite(hFile, var);
				format(var, 128, "DEndConD=%d\n",EndConD);fwrite(hFile, var);
				format(var, 128, "DEndConM=%d\n",EndConM);fwrite(hFile, var);
				format(var, 128, "DEndConY=%d\n",EndConY);fwrite(hFile, var);
				format(var, 128, "IPAdr=%s\n",PlayerInfo[playerid][pIPAdr]);fwrite(hFile, var);
				format(var, 128, "MinLog=%d\n",PlayerInfo[playerid][pMinlog]);fwrite(hFile, var);
				format(var, 128, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 128, "AdminShadow=%d\n",PlayerInfo[playerid][pAdmshad]);fwrite(hFile, var);
				format(var, 128, "AdminLive=%d\n",PlayerInfo[playerid][pAdmlive]);fwrite(hFile, var);
				format(var, 128, "AdminScanCom=%d\n",PlayerInfo[playerid][pAdmscancom]);fwrite(hFile, var);
				format(var, 128, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 128, "Prison=%d\n",PlayerInfo[playerid][pPrison]);fwrite(hFile, var);
				format(var, 128, "Prisonsec=%d\n",PlayerInfo[playerid][pPrisonsec]);fwrite(hFile, var);
				format(var, 128, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 128, "Mutedsec=%d\n",PlayerInfo[playerid][pMutedsec]);fwrite(hFile, var);
				format(var, 128, "Money=%d\n",GetPVarInt(playerid, "PlMon"));fwrite(hFile, var);
				format(var, 128, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 128, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 128, "Police=%d\n",PlayerInfo[playerid][pPolice]);fwrite(hFile, var);
				format(var, 128, "Deport=%d\n",PlayerInfo[playerid][pDeport]);fwrite(hFile, var);
				format(var, 128, "RecPM=%d\n",PlayerInfo[playerid][pRecPM]);fwrite(hFile, var);
				format(var, 128, "Wanted=%d\n",PlayerInfo[playerid][pWanted]);fwrite(hFile, var);
				format(var, 128, "Lock=%d\n",PlayerInfo[playerid][pLock]);fwrite(hFile, var);
				format(var, 128, "Gang=%d\n",PGang[playerid]);fwrite(hFile, var);
				format(var, 128, "GangLvl=%d\n",GangLvl[playerid]);fwrite(hFile, var);
				format(var, 128, "Pass_data1=%s\n",PlayerInfo[playerid][pPass_data1]);fwrite(hFile, var);
				format(var, 128, "Pass_inout1=%s\n",PlayerInfo[playerid][pPass_inout1]);fwrite(hFile, var);
				format(var, 128, "Pass_ver1=%s\n",PlayerInfo[playerid][pPass_ver1]);fwrite(hFile, var);
				format(var, 128, "Pass_count1=%d\n",PlayerInfo[playerid][pPass_count1]);fwrite(hFile, var);
				format(var, 128, "Pass_data2=%s\n",PlayerInfo[playerid][pPass_data2]);fwrite(hFile, var);
				format(var, 128, "Pass_inout2=%s\n",PlayerInfo[playerid][pPass_inout2]);fwrite(hFile, var);
				format(var, 128, "Pass_ver2=%s\n",PlayerInfo[playerid][pPass_ver2]);fwrite(hFile, var);
				format(var, 128, "Pass_count2=%d\n",PlayerInfo[playerid][pPass_count2]);fwrite(hFile, var);
				format(var, 128, "Pass_data3=%s\n",PlayerInfo[playerid][pPass_data3]);fwrite(hFile, var);
				format(var, 128, "Pass_inout3=%s\n",PlayerInfo[playerid][pPass_inout3]);fwrite(hFile, var);
				format(var, 128, "Pass_ver3=%s\n",PlayerInfo[playerid][pPass_ver3]);fwrite(hFile, var);
				format(var, 128, "Pass_count3=%d\n",PlayerInfo[playerid][pPass_count3]);fwrite(hFile, var);
				format(var, 128, "Pass_data4=%s\n",PlayerInfo[playerid][pPass_data4]);fwrite(hFile, var);
				format(var, 128, "Pass_inout4=%s\n",PlayerInfo[playerid][pPass_inout4]);fwrite(hFile, var);
				format(var, 128, "Pass_ver4=%s\n",PlayerInfo[playerid][pPass_ver4]);fwrite(hFile, var);
				format(var, 128, "Pass_count4=%d\n",PlayerInfo[playerid][pPass_count4]);fwrite(hFile, var);
				format(var, 128, "PassMode=%d\n",PlayerInfo[playerid][pPassMode]);fwrite(hFile, var);
				format(var, 128, "PassDel=%d\n",PlayerInfo[playerid][pPassDel]);fwrite(hFile, var);
				format(var, 128, "PassLock=%d\n",PlayerInfo[playerid][pPassLock]);fwrite(hFile, var);
				format(var, 128, "PassError=%d\n",PlayerInfo[playerid][pPassError]);fwrite(hFile, var);
				fclose(hFile);
			}
#endif
#if (MOD90INS == 1)
			new strdln[4000];
			format(strdln, sizeof(strdln), "UPDATE Players SET Key = '%s',TDReg = '%s',",PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sDEndConD = %d,DEndConM = %d,DEndConY = %d,", strdln, EndConD,EndConM,EndConY);
			format(strdln, sizeof(strdln), "%sIPAdr = '%s',MinLog = %d,", strdln, PlayerInfo[playerid][pIPAdr],PlayerInfo[playerid][pMinlog]);
			format(strdln, sizeof(strdln), "%sAdminLevel = %d,AdminShadow = %d,", strdln, PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
			format(strdln, sizeof(strdln), "%sAdminLive = %d,AdminScanCom = %d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pAdmscancom]);
			format(strdln, sizeof(strdln), "%sRegistered = %d,Prison = %d,", strdln, PlayerInfo[playerid][pReg],PlayerInfo[playerid][pPrison]);
			format(strdln, sizeof(strdln), "%sPrisonsec = %d,Muted = %d,", strdln, PlayerInfo[playerid][pPrisonsec],PlayerInfo[playerid][pMuted]);
			format(strdln, sizeof(strdln), "%sMutedsec = %d,Money = %d,", strdln, PlayerInfo[playerid][pMutedsec],GetPVarInt(playerid, "PlMon"));
			format(strdln, sizeof(strdln), "%sKills = %d,Deaths = %d,", strdln, PlayerInfo[playerid][pKills],PlayerInfo[playerid][pDeaths]);
			format(strdln, sizeof(strdln), "%sPolice = %d,Deport = %d,", strdln, PlayerInfo[playerid][pPolice],PlayerInfo[playerid][pDeport]);
			format(strdln, sizeof(strdln), "%sRecPM = %d,Wanted = %d,", strdln, PlayerInfo[playerid][pRecPM],PlayerInfo[playerid][pWanted]);
			format(strdln, sizeof(strdln), "%sLock = %d,Gang = %d,GangLvl = %d,", strdln, PlayerInfo[playerid][pLock],PGang[playerid],GangLvl[playerid]);
			format(strdln, sizeof(strdln), "%sPass_data1 = '%s',Pass_inout1 = '%s',", strdln, PlayerInfo[playerid][pPass_data1],PlayerInfo[playerid][pPass_inout1]);
			format(strdln, sizeof(strdln), "%sPass_ver1 = '%s',Pass_count1 = %d,", strdln, PlayerInfo[playerid][pPass_ver1],PlayerInfo[playerid][pPass_count1]);
			format(strdln, sizeof(strdln), "%sPass_data2 = '%s',Pass_inout2 = '%s',", strdln, PlayerInfo[playerid][pPass_data2],PlayerInfo[playerid][pPass_inout2]);
			format(strdln, sizeof(strdln), "%sPass_ver2 = '%s',Pass_count2 = %d,", strdln, PlayerInfo[playerid][pPass_ver2],PlayerInfo[playerid][pPass_count2]);
			format(strdln, sizeof(strdln), "%sPass_data3 = '%s',Pass_inout3 = '%s',", strdln, PlayerInfo[playerid][pPass_data3],PlayerInfo[playerid][pPass_inout3]);
			format(strdln, sizeof(strdln), "%sPass_ver3 = '%s',Pass_count3 = %d,", strdln, PlayerInfo[playerid][pPass_ver3],PlayerInfo[playerid][pPass_count3]);
			format(strdln, sizeof(strdln), "%sPass_data4 = '%s',Pass_inout4 = '%s',", strdln, PlayerInfo[playerid][pPass_data4],PlayerInfo[playerid][pPass_inout4]);
			format(strdln, sizeof(strdln), "%sPass_ver4 = '%s',Pass_count4 = %d,", strdln, PlayerInfo[playerid][pPass_ver4],PlayerInfo[playerid][pPass_count4]);
			format(strdln, sizeof(strdln), "%sPassMode = %d,PassDel = %d,", strdln, PlayerInfo[playerid][pPassMode],PlayerInfo[playerid][pPassDel]);
			format(strdln, sizeof(strdln), "%sPassLock = %d,PassError = %d ", strdln, PlayerInfo[playerid][pPassLock],PlayerInfo[playerid][pPassError]);
			format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, RealName[playerid]);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
		}
	}
	return 1;
}

public ClearChat(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_WHITE, " ");
		}
	}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
	strdel(PlayerInfo[playerid][pTDReg], 0, 64);//очистка времени и даты регистрации
   	new string[256];
	if(strcmp(" ",password, true ) == 0)
	{
    	format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
#if (MOD33INS == 0)
   		ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
#endif
#if (MOD33INS == 1)
   		ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 3);
	    return 1;
	}
#if (MOD90INS == 0 && MOD33INS == 0)
    new string2[64];
	format(string2, sizeof(string2), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//	format(string2, sizeof(string2), "players/%s.ini", playername2);
//	format(string2, sizeof(string2), "%s.ini", playername2);
	new File: UserFile = fopen(string2, io_read);
	if ( UserFile )
	{
	    new PassData[256];
	    new keytmp[256], valtmp[256];
	    fread( UserFile , PassData , sizeof( PassData ) );
	    keytmp = ini_GetKey( PassData );
	    if( strcmp( keytmp , "Key" , true ) == 0 )
		{
			valtmp = ini_GetValue( PassData );
			strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 64);
		}
		if(strcmp(PlayerInfo[playerid][pKey],password, false ) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0 )
		{
  			new key[ 256 ] , val[ 256 ];
	    	new Data[ 256 ];
		    while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pTDReg], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMinlog] = strval( val ); }
				if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
				if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmshad] = strval( val ); }
				if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmlive] = strval( val ); }
				if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmscancom] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrison] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrisonsec] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMutedsec] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "PlMon", strval( val )); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
				if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPolice] = strval( val ); }
				if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeport] = strval( val ); }
				if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRecPM] = strval( val ); }
				if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWanted] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLock] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); PGang[playerid] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); GangLvl[playerid] = strval( val ); }
				if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data1], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout1], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver1], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count1] = strval( val ); }
				if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data2], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout2], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver2], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count2] = strval( val ); }
				if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data3], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout3], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver3], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count3] = strval( val ); }
				if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data4], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout4], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver4], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count4] = strval( val ); }
				if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassMode] = strval( val ); }
				if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassDel] = strval( val ); }
				if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassLock] = strval( val ); }
				if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassError] = strval( val ); }
			}
			fclose(UserFile);
		}
		else
		{
    		format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   			ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
			SetPVarInt(playerid, "DlgCont", 3);
	        fclose(UserFile);
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 10)
			{
				format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW,string);
				strdel(fbanreason[playerid], 0, 256);//очистка причины бана
				strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
				new reason333[256];
				format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
				IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
				SetTimerEx("PlayBan", 300, 0, "i", playerid);
//				Ban(playerid);
			}
	        return 1;
		}
	}
#endif
#if (MOD90INS == 1 && MOD33INS == 0)
	new strdln[4000];
	if(migration[playerid] == 1)//если включен режим миграции аккаунта, то:
	{//читаем аккаунт из fopen
    	new string2[64];
		format(string2, sizeof(string2), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//		format(string2, sizeof(string2), "players/%s.ini", playername2);
//		format(string2, sizeof(string2), "%s.ini", playername2);
		new File: UserFile = fopen(string2, io_read);
		if ( UserFile )
		{
	    	new PassData[256];
	    	new keytmp[256], valtmp[256];
	    	fread( UserFile , PassData , sizeof( PassData ) );
	    	keytmp = ini_GetKey( PassData );
	    	if( strcmp( keytmp , "Key" , true ) == 0 )
			{
				valtmp = ini_GetValue( PassData );
				strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 64);
			}
			if(strcmp(PlayerInfo[playerid][pKey],password, false ) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0 )//если пароль из fopen сходится с набранным паролем,
			{//И пароль из fopen содержит хотя бы 1 символ, то: читаем аккаунт из fopen
  				new key[ 256 ] , val[ 256 ];
	    		new Data[ 256 ];
		    	while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pTDReg], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMinlog] = strval( val ); }
					if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
					if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmshad] = strval( val ); }
					if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmlive] = strval( val ); }
					if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmscancom] = strval( val ); }
					if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
					if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrison] = strval( val ); }
					if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrisonsec] = strval( val ); }
					if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
					if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMutedsec] = strval( val ); }
					if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "PlMon", strval( val )); }
					if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
					if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
					if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPolice] = strval( val ); }
					if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeport] = strval( val ); }
					if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRecPM] = strval( val ); }
					if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWanted] = strval( val ); }
					if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLock] = strval( val ); }
					if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); PGang[playerid] = strval( val ); }
					if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); GangLvl[playerid] = strval( val ); }
					if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data1], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout1], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver1], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count1] = strval( val ); }
					if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data2], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout2], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver2], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count2] = strval( val ); }
					if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data3], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout3], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver3], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count3] = strval( val ); }
					if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data4], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout4], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver4], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count4] = strval( val ); }
					if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassMode] = strval( val ); }
					if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassDel] = strval( val ); }
					if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassLock] = strval( val ); }
					if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassError] = strval( val ); }
				}
				fclose(UserFile);

//эти строки добавлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(strlen(PlayerInfo[playerid][pPass_data1]) == 0) { strmid(PlayerInfo[playerid][pPass_data1], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout1]) == 0) { strmid(PlayerInfo[playerid][pPass_inout1], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver1]) == 0) { strmid(PlayerInfo[playerid][pPass_ver1], "---", 0, 3, 32); }
				if(strlen(PlayerInfo[playerid][pPass_data2]) == 0) { strmid(PlayerInfo[playerid][pPass_data2], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout2]) == 0) { strmid(PlayerInfo[playerid][pPass_inout2], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver2]) == 0) { strmid(PlayerInfo[playerid][pPass_ver2], "---", 0, 3, 32); }
				if(strlen(PlayerInfo[playerid][pPass_data3]) == 0) { strmid(PlayerInfo[playerid][pPass_data3], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout3]) == 0) { strmid(PlayerInfo[playerid][pPass_inout3], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver3]) == 0) { strmid(PlayerInfo[playerid][pPass_ver3], "---", 0, 3, 32); }
				if(strlen(PlayerInfo[playerid][pPass_data4]) == 0) { strmid(PlayerInfo[playerid][pPass_data4], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout4]) == 0) { strmid(PlayerInfo[playerid][pPass_inout4], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver4]) == 0) { strmid(PlayerInfo[playerid][pPass_ver4], "---", 0, 3, 32); }
//---------------------------------- конец -------------------------------------

				format(string, sizeof(string), "DELETE FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
				db_query(playerdb, string);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				PlayerInfo[playerid][pReg] = 1;//делаем отметку, что аккаунт УЖЕ зарегистрирован
				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,AdminScanCom,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,", strdln);
				format(strdln, sizeof(strdln), "%sPolice,Deport,RecPM,Wanted,Lock,Gang,GangLvl,Pass_data1,Pass_inout1,Pass_ver1,Pass_count1,Pass_data2,", strdln);
				format(strdln, sizeof(strdln), "%sPass_inout2,Pass_ver2,Pass_count2,Pass_data3,Pass_inout3,Pass_ver3,Pass_count3,Pass_data4,Pass_inout4,", strdln);
				format(strdln, sizeof(strdln), "%sPass_ver4,Pass_count4,PassMode,PassDel,PassLock,PassError) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,'%s',", strdln, EndConD,EndConM,EndConY,PlayerInfo[playerid][pIPAdr]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMinlog],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pAdmscancom],PlayerInfo[playerid][pReg]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pPrison],PlayerInfo[playerid][pPrisonsec],PlayerInfo[playerid][pMuted]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMutedsec],GetPVarInt(playerid, "PlMon"),PlayerInfo[playerid][pKills]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pDeaths],PlayerInfo[playerid][pPolice],PlayerInfo[playerid][pDeport]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pRecPM],PlayerInfo[playerid][pWanted],PlayerInfo[playerid][pLock]);
				format(strdln, sizeof(strdln), "%s%d,%d,'%s',", strdln, PGang[playerid],GangLvl[playerid],PlayerInfo[playerid][pPass_data1]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout1],PlayerInfo[playerid][pPass_ver1]);
				format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count1],PlayerInfo[playerid][pPass_data2]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout2],PlayerInfo[playerid][pPass_ver2]);
				format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count2],PlayerInfo[playerid][pPass_data3]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout3],PlayerInfo[playerid][pPass_ver3]);
				format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count3],PlayerInfo[playerid][pPass_data4]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout3],PlayerInfo[playerid][pPass_ver4]);
				format(strdln, sizeof(strdln), "%s%d,%d,", strdln, PlayerInfo[playerid][pPass_count4],PlayerInfo[playerid][pPassMode]);
				format(strdln, sizeof(strdln), "%s%d,%d,", strdln, PlayerInfo[playerid][pPassDel],PlayerInfo[playerid][pPassLock]);
				format(strdln, sizeof(strdln), "%s%d)", strdln, PlayerInfo[playerid][pPassError]);
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

				migration[playerid] = 0;//обнуляем режим миграции аккаунта
				if(fexist(string2))//если аккаунт в fopen обнаружен, то:
				{
					fremove(string2);//удаляем аккаунт из fopen
				}
			}
			else//иначе - НЕ читаем аккаунт из fopen
			{
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
	        	fclose(UserFile);
	        	gPlayerLogTries[playerid] += 1;
	        	if(gPlayerLogTries[playerid] == 10)
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					strdel(fbanreason[playerid], 0, 256);//очистка причины бана
					strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
					new reason333[256];
					format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
					IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
					SetTimerEx("PlayBan", 300, 0, "i", playerid);
//					Ban(playerid);
				}
	        	return 1;
			}
		}
	}
	else//иначе - если НЕ включен режим миграции аккаунта, то:
	{//читаем аккаунт из SQLite
		format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
		querydb[playerid] = db_query(playerdb, string);//отправляем запрос на чтение аккаунта из БД
		db_get_field(querydb[playerid], 2, PlayerInfo[playerid][pKey], 64);//читаем пароль из БД
//		new loccor = 0;//переводим коды символов пароля из отрицательного диапазона чисел в положительный диапазон
//		while(loccor <= 64)//(в БД, коды символов от 128 до 255 - представляются в отрицательном диапазоне чисел !!!
//		{//(коды символов Русских букв))
//	    	if(PlayerInfo[playerid][pKey][loccor] == 0) { break; }
//	    	if(PlayerInfo[playerid][pKey][loccor] < 0) { PlayerInfo[playerid][pKey][loccor] = PlayerInfo[playerid][pKey][loccor] + 256; }
//			loccor++;
//		}
		if(strcmp(PlayerInfo[playerid][pKey], password, false) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0)//если пароль из БД сходится с набранным паролем,
		{//И пароль из БД содержит хотя бы 1 символ, то: читаем аккаунт из БД
			new buffer[64];
			db_get_field(querydb[playerid], 3, PlayerInfo[playerid][pTDReg], 64);
			db_get_field(querydb[playerid], 8, buffer, 64); PlayerInfo[playerid][pMinlog] = strval(buffer);
			db_get_field(querydb[playerid], 9, buffer, 64); PlayerInfo[playerid][pAdmin] = strval(buffer);
			db_get_field(querydb[playerid], 10, buffer, 64); PlayerInfo[playerid][pAdmshad] = strval(buffer);
			db_get_field(querydb[playerid], 11, buffer, 64); PlayerInfo[playerid][pAdmlive] = strval(buffer);
			db_get_field(querydb[playerid], 12, buffer, 64); PlayerInfo[playerid][pAdmscancom] = strval(buffer);
			db_get_field(querydb[playerid], 13, buffer, 64); PlayerInfo[playerid][pReg] = strval(buffer);
			db_get_field(querydb[playerid], 14, buffer, 64); PlayerInfo[playerid][pPrison] = strval(buffer);
			db_get_field(querydb[playerid], 15, buffer, 64); PlayerInfo[playerid][pPrisonsec] = strval(buffer);
			db_get_field(querydb[playerid], 16, buffer, 64); PlayerInfo[playerid][pMuted] = strval(buffer);
			db_get_field(querydb[playerid], 17, buffer, 64); PlayerInfo[playerid][pMutedsec] = strval(buffer);
			db_get_field(querydb[playerid], 18, buffer, 64); SetPVarInt(playerid, "PlMon", strval(buffer));
			db_get_field(querydb[playerid], 19, buffer, 64); PlayerInfo[playerid][pKills] = strval(buffer);
			db_get_field(querydb[playerid], 20, buffer, 64); PlayerInfo[playerid][pDeaths] = strval(buffer);
			db_get_field(querydb[playerid], 21, buffer, 64); PlayerInfo[playerid][pPolice] = strval(buffer);
			db_get_field(querydb[playerid], 22, buffer, 64); PlayerInfo[playerid][pDeport] = strval(buffer);
			db_get_field(querydb[playerid], 23, buffer, 64); PlayerInfo[playerid][pRecPM] = strval(buffer);
			db_get_field(querydb[playerid], 24, buffer, 64); PlayerInfo[playerid][pWanted] = strval(buffer);
			db_get_field(querydb[playerid], 25, buffer, 64); PlayerInfo[playerid][pLock] = strval(buffer);
			db_get_field(querydb[playerid], 26, buffer, 64); PGang[playerid] = strval(buffer);
			db_get_field(querydb[playerid], 27, buffer, 64); GangLvl[playerid] = strval(buffer);
			db_get_field(querydb[playerid], 28, PlayerInfo[playerid][pPass_data1], 64);
			db_get_field(querydb[playerid], 29, PlayerInfo[playerid][pPass_inout1], 64);
			db_get_field(querydb[playerid], 30, PlayerInfo[playerid][pPass_ver1], 32);
			db_get_field(querydb[playerid], 31, buffer, 64); PlayerInfo[playerid][pPass_count1] = strval(buffer);
			db_get_field(querydb[playerid], 32, PlayerInfo[playerid][pPass_data2], 64);
			db_get_field(querydb[playerid], 33, PlayerInfo[playerid][pPass_inout2], 64);
			db_get_field(querydb[playerid], 34, PlayerInfo[playerid][pPass_ver2], 32);
			db_get_field(querydb[playerid], 35, buffer, 64); PlayerInfo[playerid][pPass_count2] = strval(buffer);
			db_get_field(querydb[playerid], 36, PlayerInfo[playerid][pPass_data3], 64);
			db_get_field(querydb[playerid], 37, PlayerInfo[playerid][pPass_inout3], 64);
			db_get_field(querydb[playerid], 38, PlayerInfo[playerid][pPass_ver3], 32);
			db_get_field(querydb[playerid], 39, buffer, 64); PlayerInfo[playerid][pPass_count3] = strval(buffer);
			db_get_field(querydb[playerid], 40, PlayerInfo[playerid][pPass_data4], 64);
			db_get_field(querydb[playerid], 41, PlayerInfo[playerid][pPass_inout4], 64);
			db_get_field(querydb[playerid], 42, PlayerInfo[playerid][pPass_ver4], 32);
			db_get_field(querydb[playerid], 43, buffer, 64); PlayerInfo[playerid][pPass_count4] = strval(buffer);
			db_get_field(querydb[playerid], 44, buffer, 64); PlayerInfo[playerid][pPassMode] = strval(buffer);
			db_get_field(querydb[playerid], 45, buffer, 64); PlayerInfo[playerid][pPassDel] = strval(buffer);
			db_get_field(querydb[playerid], 46, buffer, 64); PlayerInfo[playerid][pPassLock] = strval(buffer);
			db_get_field(querydb[playerid], 47, buffer, 64); PlayerInfo[playerid][pPassError] = strval(buffer);
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
		}
		else//иначе - НЕ читаем аккаунт из БД
		{
			db_free_result(querydb[playerid]);//очищаем результат запроса БД (после чтения пароля)
    		format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
			ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
			SetPVarInt(playerid, "DlgCont", 3);
			gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 10)
			{
				format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW,string);
				strdel(fbanreason[playerid], 0, 256);//очистка причины бана
				strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
				new reason333[256];
				format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
				IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
				SetTimerEx("PlayBan", 300, 0, "i", playerid);
//				Ban(playerid);
			}
			return 1;
		}
	}
#endif
#if (MOD90INS == 0 && MOD33INS == 1)
    new string2[64];
	format(string2, sizeof(string2), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//	format(string2, sizeof(string2), "players/%s.ini", playername2);
//	format(string2, sizeof(string2), "%s.ini", playername2);
	new File: UserFile = fopen(string2, io_read);
	if ( UserFile )
	{
	    new PassData[256];
	    new keytmp[256], valtmp[256];
	    fread( UserFile , PassData , sizeof( PassData ) );
	    keytmp = ini_GetKey( PassData );
	    if( strcmp( keytmp , "Key" , true ) == 0 )
		{
			valtmp = ini_GetValue( PassData );
			strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 64);
		}
		if(strcmp(PlayerInfo[playerid][pKey],password, false ) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0 )
		{
  			new key[ 256 ] , val[ 256 ];
	    	new Data[ 256 ];
		    while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pTDReg], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMinlog] = strval( val ); }
				if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
				if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmshad] = strval( val ); }
				if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmlive] = strval( val ); }
				if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmscancom] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrison] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrisonsec] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMutedsec] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "PlMon", strval( val )); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
				if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPolice] = strval( val ); }
				if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeport] = strval( val ); }
				if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRecPM] = strval( val ); }
				if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWanted] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLock] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); PGang[playerid] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); GangLvl[playerid] = strval( val ); }
				if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data1], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout1], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver1], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count1] = strval( val ); }
				if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data2], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout2], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver2], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count2] = strval( val ); }
				if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data3], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout3], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver3], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count3] = strval( val ); }
				if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data4], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout4], val, 0, strlen(val)-1, 64); }
				if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver4], val, 0, strlen(val)-1, 32); }
				if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count4] = strval( val ); }
				if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassMode] = strval( val ); }
				if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassDel] = strval( val ); }
				if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassLock] = strval( val ); }
				if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassError] = strval( val ); }
			}
			fclose(UserFile);
		}
		else
		{
    		format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   			ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
			SetPVarInt(playerid, "DlgCont", 3);
	        fclose(UserFile);
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 10)
			{
				format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW,string);
				strdel(fbanreason[playerid], 0, 256);//очистка причины бана
				strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
				new reason333[256];
				format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
				IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
				SetTimerEx("PlayBan", 300, 0, "i", playerid);
//				Ban(playerid);
			}
	        return 1;
		}
	}
#endif
#if (MOD90INS == 1 && MOD33INS == 1)
	new strdln[4000];
	if(migration[playerid] == 1)//если включен режим миграции аккаунта, то:
	{//читаем аккаунт из fopen
    	new string2[64];
		format(string2, sizeof(string2), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//		format(string2, sizeof(string2), "players/%s.ini", playername2);
//		format(string2, sizeof(string2), "%s.ini", playername2);
		new File: UserFile = fopen(string2, io_read);
		if ( UserFile )
		{
	    	new PassData[256];
	    	new keytmp[256], valtmp[256];
	    	fread( UserFile , PassData , sizeof( PassData ) );
	    	keytmp = ini_GetKey( PassData );
	    	if( strcmp( keytmp , "Key" , true ) == 0 )
			{
				valtmp = ini_GetValue( PassData );
				strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 64);
			}
			if(strcmp(PlayerInfo[playerid][pKey],password, false ) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0 )//если пароль из fopen сходится с набранным паролем,
			{//И пароль из fopen содержит хотя бы 1 символ, то: читаем аккаунт из fopen
  				new key[ 256 ] , val[ 256 ];
	    		new Data[ 256 ];
		    	while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pTDReg], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMinlog] = strval( val ); }
					if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
					if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmshad] = strval( val ); }
					if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmlive] = strval( val ); }
					if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmscancom] = strval( val ); }
					if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
					if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrison] = strval( val ); }
					if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrisonsec] = strval( val ); }
					if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
					if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMutedsec] = strval( val ); }
					if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "PlMon", strval( val )); }
					if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
					if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
					if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPolice] = strval( val ); }
					if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeport] = strval( val ); }
					if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRecPM] = strval( val ); }
					if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWanted] = strval( val ); }
					if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLock] = strval( val ); }
					if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); PGang[playerid] = strval( val ); }
					if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); GangLvl[playerid] = strval( val ); }
					if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data1], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout1], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver1], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count1] = strval( val ); }
					if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data2], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout2], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver2], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count2] = strval( val ); }
					if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data3], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout3], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver3], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count3] = strval( val ); }
					if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_data4], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_inout4], val, 0, strlen(val)-1, 64); }
					if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPass_ver4], val, 0, strlen(val)-1, 32); }
					if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPass_count4] = strval( val ); }
					if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassMode] = strval( val ); }
					if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassDel] = strval( val ); }
					if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassLock] = strval( val ); }
					if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPassError] = strval( val ); }
				}
				fclose(UserFile);

//эти строки добавлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(strlen(PlayerInfo[playerid][pPass_data1]) == 0) { strmid(PlayerInfo[playerid][pPass_data1], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout1]) == 0) { strmid(PlayerInfo[playerid][pPass_inout1], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver1]) == 0) { strmid(PlayerInfo[playerid][pPass_ver1], "---", 0, 3, 32); }
				if(strlen(PlayerInfo[playerid][pPass_data2]) == 0) { strmid(PlayerInfo[playerid][pPass_data2], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout2]) == 0) { strmid(PlayerInfo[playerid][pPass_inout2], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver2]) == 0) { strmid(PlayerInfo[playerid][pPass_ver2], "---", 0, 3, 32); }
				if(strlen(PlayerInfo[playerid][pPass_data3]) == 0) { strmid(PlayerInfo[playerid][pPass_data3], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout3]) == 0) { strmid(PlayerInfo[playerid][pPass_inout3], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver3]) == 0) { strmid(PlayerInfo[playerid][pPass_ver3], "---", 0, 3, 32); }
				if(strlen(PlayerInfo[playerid][pPass_data4]) == 0) { strmid(PlayerInfo[playerid][pPass_data4], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_inout4]) == 0) { strmid(PlayerInfo[playerid][pPass_inout4], "---", 0, 3, 64); }
				if(strlen(PlayerInfo[playerid][pPass_ver4]) == 0) { strmid(PlayerInfo[playerid][pPass_ver4], "---", 0, 3, 32); }
//---------------------------------- конец -------------------------------------

				format(string, sizeof(string), "DELETE FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
				db_query(playerdb, string);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				PlayerInfo[playerid][pReg] = 1;//делаем отметку, что аккаунт УЖЕ зарегистрирован
				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,AdminScanCom,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,", strdln);
				format(strdln, sizeof(strdln), "%sPolice,Deport,RecPM,Wanted,Lock,Gang,GangLvl,Pass_data1,Pass_inout1,Pass_ver1,Pass_count1,Pass_data2,", strdln);
				format(strdln, sizeof(strdln), "%sPass_inout2,Pass_ver2,Pass_count2,Pass_data3,Pass_inout3,Pass_ver3,Pass_count3,Pass_data4,Pass_inout4,", strdln);
				format(strdln, sizeof(strdln), "%sPass_ver4,Pass_count4,PassMode,PassDel,PassLock,PassError) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,'%s',", strdln, EndConD,EndConM,EndConY,PlayerInfo[playerid][pIPAdr]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMinlog],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pAdmscancom],PlayerInfo[playerid][pReg]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pPrison],PlayerInfo[playerid][pPrisonsec],PlayerInfo[playerid][pMuted]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMutedsec],GetPVarInt(playerid, "PlMon"),PlayerInfo[playerid][pKills]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pDeaths],PlayerInfo[playerid][pPolice],PlayerInfo[playerid][pDeport]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pRecPM],PlayerInfo[playerid][pWanted],PlayerInfo[playerid][pLock]);
				format(strdln, sizeof(strdln), "%s%d,%d,'%s',", strdln, PGang[playerid],GangLvl[playerid],PlayerInfo[playerid][pPass_data1]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout1],PlayerInfo[playerid][pPass_ver1]);
				format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count1],PlayerInfo[playerid][pPass_data2]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout2],PlayerInfo[playerid][pPass_ver2]);
				format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count2],PlayerInfo[playerid][pPass_data3]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout3],PlayerInfo[playerid][pPass_ver3]);
				format(strdln, sizeof(strdln), "%s%d,'%s',", strdln, PlayerInfo[playerid][pPass_count3],PlayerInfo[playerid][pPass_data4]);
				format(strdln, sizeof(strdln), "%s'%s','%s',", strdln, PlayerInfo[playerid][pPass_inout3],PlayerInfo[playerid][pPass_ver4]);
				format(strdln, sizeof(strdln), "%s%d,%d,", strdln, PlayerInfo[playerid][pPass_count4],PlayerInfo[playerid][pPassMode]);
				format(strdln, sizeof(strdln), "%s%d,%d,", strdln, PlayerInfo[playerid][pPassDel],PlayerInfo[playerid][pPassLock]);
				format(strdln, sizeof(strdln), "%s%d)", strdln, PlayerInfo[playerid][pPassError]);
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

				migration[playerid] = 0;//обнуляем режим миграции аккаунта
				if(fexist(string2))//если аккаунт в fopen обнаружен, то:
				{
					fremove(string2);//удаляем аккаунт из fopen
				}
			}
			else//иначе - НЕ читаем аккаунт из fopen
			{
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
	        	fclose(UserFile);
	        	gPlayerLogTries[playerid] += 1;
	        	if(gPlayerLogTries[playerid] == 10)
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					strdel(fbanreason[playerid], 0, 256);//очистка причины бана
					strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
					new reason333[256];
					format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
					IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
					SetTimerEx("PlayBan", 300, 0, "i", playerid);
//					Ban(playerid);
				}
	        	return 1;
			}
		}
	}
	else//иначе - если НЕ включен режим миграции аккаунта, то:
	{//читаем аккаунт из SQLite
		format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
		querydb[playerid] = db_query(playerdb, string);//отправляем запрос на чтение аккаунта из БД
		db_get_field(querydb[playerid], 2, PlayerInfo[playerid][pKey], 64);//читаем пароль из БД
//		new loccor = 0;//переводим коды символов пароля из отрицательного диапазона чисел в положительный диапазон
//		while(loccor <= 64)//(в БД, коды символов от 128 до 255 - представляются в отрицательном диапазоне чисел !!!
//		{//(коды символов Русских букв))
//	    	if(PlayerInfo[playerid][pKey][loccor] == 0) { break; }
//	    	if(PlayerInfo[playerid][pKey][loccor] < 0) { PlayerInfo[playerid][pKey][loccor] = PlayerInfo[playerid][pKey][loccor] + 256; }
//			loccor++;
//		}
		if(strcmp(PlayerInfo[playerid][pKey], password, false) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0)//если пароль из БД сходится с набранным паролем,
		{//И пароль из БД содержит хотя бы 1 символ, то: читаем аккаунт из БД
			new buffer[64];
			db_get_field(querydb[playerid], 3, PlayerInfo[playerid][pTDReg], 64);
			db_get_field(querydb[playerid], 8, buffer, 64); PlayerInfo[playerid][pMinlog] = strval(buffer);
			db_get_field(querydb[playerid], 9, buffer, 64); PlayerInfo[playerid][pAdmin] = strval(buffer);
			db_get_field(querydb[playerid], 10, buffer, 64); PlayerInfo[playerid][pAdmshad] = strval(buffer);
			db_get_field(querydb[playerid], 11, buffer, 64); PlayerInfo[playerid][pAdmlive] = strval(buffer);
			db_get_field(querydb[playerid], 12, buffer, 64); PlayerInfo[playerid][pAdmscancom] = strval(buffer);
			db_get_field(querydb[playerid], 13, buffer, 64); PlayerInfo[playerid][pReg] = strval(buffer);
			db_get_field(querydb[playerid], 14, buffer, 64); PlayerInfo[playerid][pPrison] = strval(buffer);
			db_get_field(querydb[playerid], 15, buffer, 64); PlayerInfo[playerid][pPrisonsec] = strval(buffer);
			db_get_field(querydb[playerid], 16, buffer, 64); PlayerInfo[playerid][pMuted] = strval(buffer);
			db_get_field(querydb[playerid], 17, buffer, 64); PlayerInfo[playerid][pMutedsec] = strval(buffer);
			db_get_field(querydb[playerid], 18, buffer, 64); SetPVarInt(playerid, "PlMon", strval(buffer));
			db_get_field(querydb[playerid], 19, buffer, 64); PlayerInfo[playerid][pKills] = strval(buffer);
			db_get_field(querydb[playerid], 20, buffer, 64); PlayerInfo[playerid][pDeaths] = strval(buffer);
			db_get_field(querydb[playerid], 21, buffer, 64); PlayerInfo[playerid][pPolice] = strval(buffer);
			db_get_field(querydb[playerid], 22, buffer, 64); PlayerInfo[playerid][pDeport] = strval(buffer);
			db_get_field(querydb[playerid], 23, buffer, 64); PlayerInfo[playerid][pRecPM] = strval(buffer);
			db_get_field(querydb[playerid], 24, buffer, 64); PlayerInfo[playerid][pWanted] = strval(buffer);
			db_get_field(querydb[playerid], 25, buffer, 64); PlayerInfo[playerid][pLock] = strval(buffer);
			db_get_field(querydb[playerid], 26, buffer, 64); PGang[playerid] = strval(buffer);
			db_get_field(querydb[playerid], 27, buffer, 64); GangLvl[playerid] = strval(buffer);
			db_get_field(querydb[playerid], 28, PlayerInfo[playerid][pPass_data1], 64);
			db_get_field(querydb[playerid], 29, PlayerInfo[playerid][pPass_inout1], 64);
			db_get_field(querydb[playerid], 30, PlayerInfo[playerid][pPass_ver1], 32);
			db_get_field(querydb[playerid], 31, buffer, 64); PlayerInfo[playerid][pPass_count1] = strval(buffer);
			db_get_field(querydb[playerid], 32, PlayerInfo[playerid][pPass_data2], 64);
			db_get_field(querydb[playerid], 33, PlayerInfo[playerid][pPass_inout2], 64);
			db_get_field(querydb[playerid], 34, PlayerInfo[playerid][pPass_ver2], 32);
			db_get_field(querydb[playerid], 35, buffer, 64); PlayerInfo[playerid][pPass_count2] = strval(buffer);
			db_get_field(querydb[playerid], 36, PlayerInfo[playerid][pPass_data3], 64);
			db_get_field(querydb[playerid], 37, PlayerInfo[playerid][pPass_inout3], 64);
			db_get_field(querydb[playerid], 38, PlayerInfo[playerid][pPass_ver3], 32);
			db_get_field(querydb[playerid], 39, buffer, 64); PlayerInfo[playerid][pPass_count3] = strval(buffer);
			db_get_field(querydb[playerid], 40, PlayerInfo[playerid][pPass_data4], 64);
			db_get_field(querydb[playerid], 41, PlayerInfo[playerid][pPass_inout4], 64);
			db_get_field(querydb[playerid], 42, PlayerInfo[playerid][pPass_ver4], 32);
			db_get_field(querydb[playerid], 43, buffer, 64); PlayerInfo[playerid][pPass_count4] = strval(buffer);
			db_get_field(querydb[playerid], 44, buffer, 64); PlayerInfo[playerid][pPassMode] = strval(buffer);
			db_get_field(querydb[playerid], 45, buffer, 64); PlayerInfo[playerid][pPassDel] = strval(buffer);
			db_get_field(querydb[playerid], 46, buffer, 64); PlayerInfo[playerid][pPassLock] = strval(buffer);
			db_get_field(querydb[playerid], 47, buffer, 64); PlayerInfo[playerid][pPassError] = strval(buffer);
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
		}
		else//иначе - НЕ читаем аккаунт из БД
		{
			db_free_result(querydb[playerid]);//очищаем результат запроса БД (после чтения пароля)
    		format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
			ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
			SetPVarInt(playerid, "DlgCont", 3);
			gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 10)
			{
				format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW,string);
				strdel(fbanreason[playerid], 0, 256);//очистка причины бана
				strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
				new reason333[256];
				format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
				IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
				SetTimerEx("PlayBan", 300, 0, "i", playerid);
//				Ban(playerid);
			}
			return 1;
		}
	}
#endif
	printf("* Игрок %s [%d] --> (логирование) .", RealName[playerid], playerid);

	ResetPlayerMoney(playerid);
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pAdmin] = 0;
		PlayerInfo[playerid][pAdmshad] = 0;
		PlayerInfo[playerid][pKills] = 0;
		PlayerInfo[playerid][pDeaths] = 0;
		SetPVarInt(playerid, "PlMon", 1000);
		PlayerInfo[playerid][pAdmscancom] = 0;
		PlayerInfo[playerid][pPolice] = 0;
		PlayerInfo[playerid][pDeport] = 0;
		PlayerInfo[playerid][pRecPM] = 1;
		PlayerInfo[playerid][pWanted] = 0;
		PlayerInfo[playerid][pAdmlive] = 0;
		livdop[playerid] = 0;

		PlayerInfo[playerid][pMinlog] = 0;
		PlayerInfo[playerid][pPrison] = 0;
		PlayerInfo[playerid][pPrisonsec] = 0;
		PlayerInfo[playerid][pMuted] = 0;
		PlayerInfo[playerid][pMutedsec] = 0;
		PlayerInfo[playerid][pLock] = 0;

		strmid(PlayerInfo[playerid][pPass_data1], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout1], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver1], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count1] = 0;
		strmid(PlayerInfo[playerid][pPass_data2], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout2], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver2], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count2] = 0;
		strmid(PlayerInfo[playerid][pPass_data3], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout3], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver3], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count3] = 0;
		strmid(PlayerInfo[playerid][pPass_data4], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout4], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver4], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count4] = 0;
		PlayerInfo[playerid][pPassMode] = MOD4DINS;
		PlayerInfo[playerid][pPassDel] = 0;
		PlayerInfo[playerid][pPassLock] = 0;
		PlayerInfo[playerid][pPassError] = 0;

		PlayerInfo[playerid][pReg] = 1;
	}
	if(PlayerInfo[playerid][pPassMode] != MOD4DINS)//если установлен новый режим паспортов, то:
	{//очистка всех паспортов
		strmid(PlayerInfo[playerid][pPass_data1], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout1], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver1], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count1] = 0;
		strmid(PlayerInfo[playerid][pPass_data2], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout2], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver2], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count2] = 0;
		strmid(PlayerInfo[playerid][pPass_data3], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout3], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver3], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count3] = 0;
		strmid(PlayerInfo[playerid][pPass_data4], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_inout4], "---", 0, 3, 64);
		strmid(PlayerInfo[playerid][pPass_ver4], "---", 0, 3, 32);
		PlayerInfo[playerid][pPass_count4] = 0;
		PlayerInfo[playerid][pPassMode] = MOD4DINS;
		PlayerInfo[playerid][pPassDel] = 0;
		PlayerInfo[playerid][pPassLock] = 0;
		PlayerInfo[playerid][pPassError] = 0;
	}
#if (MOD4DINS >= 1)
	if(PlayerInfo[playerid][pPassLock] == 1)//если паспорт заблокирован, то:
	{
		format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - аккаунт заблокирован системой паспортов !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 1;
	}
#endif
	if(PlayerInfo[playerid][pLock] == 0)//если аккаунт НЕ забанен, то:
	{
		new loctag[64], locdata;
		locdata = 0;//обнуление ошибки
		gpci(playerid, loctag, sizeof(loctag));//чтение gpci-тега
		if(FngpciControl(loctag) == 0)//если ошибка gpci-тега, то:
		{
			locdata = 1;//ошибка 1
		}
		else
		{
			Maskgpci(loctag);
			if(strcmp(loctag, pergpcifirst[playerid], false) != 0)//если gpci-тег не сходится с gpci-тегом при коннекте, то:
			{
				locdata = 2;//ошибка 2
			}
		}
		if(locdata != 0)//если ошибка не равна нулю, то:
		{
			gPlayerLogged[playerid] = 1;//разрешение записи аккаунта
			PlayerInfo[playerid][pPassError]++;//ошибка паспорта +1
#if (MOD4DINS == 0)
			format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - ошибка %d входных данных !",RealName[playerid],playerid,locdata);
			print(string);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
#endif
#if (MOD4DINS >= 1)
			if(PlayerInfo[playerid][pPassError] >= 4)//если ошибок паспорта больше или равно 4, то:
			{
				PlayerInfo[playerid][pPassLock] = 1;//блокировка паспорта
				format(string,sizeof(string),"[pass] Игрок %s [%d] - ошибка %d входных данных (накоплено ошибок: 4).",RealName[playerid],playerid,locdata);
				print(string);
				SendClientMessage(playerid,COLOR_RED,string);
				format(string,sizeof(string),"[pass] Игрок %s [%d] был кикнут - блокировка системой паспортов !",RealName[playerid],playerid,locdata);
				print(string);
				SendClientMessageToAll(COLOR_RED,string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
			printf("[pass] Игрок %s [%d] был кикнут - ошибка %d входных данных (накоплено ошибок: %d).",RealName[playerid],playerid,locdata,PlayerInfo[playerid][pPassError]);
			format(string,sizeof(string),"[pass] Игрок %s [%d] был кикнут - ошибка %d входных данных.",RealName[playerid],playerid,locdata);
			SendClientMessageToAll(COLOR_RED,string);
			format(string,sizeof(string),"[pass] Накоплено ошибок: %d , в случае накопления 4-х ошибок - Ваш аккаунт",PlayerInfo[playerid][pPassError]);
			SendClientMessage(playerid,COLOR_RED,string);
			SendClientMessage(playerid,COLOR_RED,"[pass] будет заблокирован системой паспортов - БЕЗ возможности восстановления !");
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
#endif
		}
#if (MOD4DINS == 0)
		strmid(PlayerInfo[playerid][pPass_data1], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-1
		playconpass[playerid] = 0;//текущий паспорт = 0
#endif
#if (MOD4DINS == 1)
		if(strcmp(PlayerInfo[playerid][pPass_data1], loctag, false) == 0)//если gpci-тег сходится с паспортом-1, то:
		{
			playconpass[playerid] = 1;//текущий паспорт = 1 (использование)
		}
		if(playconpass[playerid] == 0)//если текущий паспорт не определён, то:
		{
			if(strcmp(PlayerInfo[playerid][pPass_data1], "---", false) == 0)//если паспорт-1 пустой, то:
			{
				strmid(PlayerInfo[playerid][pPass_data1], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-1
				playconpass[playerid] = -1;//текущий паспорт = -1 (регистрация)
			}
			else//иначе, если паспорт-1 НЕ пустой, то:
			{
				gPlayerLogged[playerid] = 1;//разрешение записи аккаунта
				PlayerInfo[playerid][pPassLock] = 1;//блокировка паспорта
				format(string,sizeof(string),"[pass] Игрок %s [%d] был кикнут - блокировка системой паспортов !",RealName[playerid],playerid,locdata);
				print(string);
				SendClientMessageToAll(COLOR_RED,string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
		}
#endif
#if (MOD4DINS == 2)
		if(strcmp(PlayerInfo[playerid][pPass_data1], loctag, false) == 0)//если gpci-тег сходится с паспортом-1, то:
		{
			playconpass[playerid] = 1;//текущий паспорт = 1 (использование)
		}
		if(strcmp(PlayerInfo[playerid][pPass_data2], loctag, false) == 0)//если gpci-тег сходится с паспортом-2, то:
		{
			playconpass[playerid] = 2;//текущий паспорт = 2 (использование)
		}
		if(playconpass[playerid] == 0)//если текущий паспорт не определён, то:
		{
			if(strcmp(PlayerInfo[playerid][pPass_data1], "---", false) == 0)//если паспорт-1 пустой, то:
			{
				strmid(PlayerInfo[playerid][pPass_data1], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-1
				playconpass[playerid] = -1;//текущий паспорт = -1 (регистрация)
			}
			else//иначе, если паспорт-1 НЕ пустой, то:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data2], "---", false) == 0)//если паспорт-2 пустой, то:
				{
					strmid(PlayerInfo[playerid][pPass_data2], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-2
					playconpass[playerid] = -2;//текущий паспорт = -2 (регистрация)
				}
				else//иначе, если паспорт-2 НЕ пустой, то:
				{
					gPlayerLogged[playerid] = 1;//разрешение записи аккаунта
					PlayerInfo[playerid][pPassLock] = 1;//блокировка паспорта
					format(string,sizeof(string),"[pass] Игрок %s [%d] был кикнут - блокировка системой паспортов !",RealName[playerid],playerid);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					SetTimerEx("PlayKick", 300, 0, "i", playerid);
					return 1;
				}
			}
		}
#endif
#if (MOD4DINS == 3)
		if(strcmp(PlayerInfo[playerid][pPass_data1], loctag, false) == 0)//если gpci-тег сходится с паспортом-1, то:
		{
			playconpass[playerid] = 1;//текущий паспорт = 1 (использование)
		}
		if(strcmp(PlayerInfo[playerid][pPass_data2], loctag, false) == 0)//если gpci-тег сходится с паспортом-2, то:
		{
			playconpass[playerid] = 2;//текущий паспорт = 2 (использование)
		}
		if(strcmp(PlayerInfo[playerid][pPass_data3], loctag, false) == 0)//если gpci-тег сходится с паспортом-3, то:
		{
			playconpass[playerid] = 3;//текущий паспорт = 3 (использование)
		}
		if(playconpass[playerid] == 0)//если текущий паспорт не определён, то:
		{
			if(strcmp(PlayerInfo[playerid][pPass_data1], "---", false) == 0)//если паспорт-1 пустой, то:
			{
				strmid(PlayerInfo[playerid][pPass_data1], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-1
				playconpass[playerid] = -1;//текущий паспорт = -1 (регистрация)
			}
			else//иначе, если паспорт-1 НЕ пустой, то:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data2], "---", false) == 0)//если паспорт-2 пустой, то:
				{
					strmid(PlayerInfo[playerid][pPass_data2], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-2
					playconpass[playerid] = -2;//текущий паспорт = -2 (регистрация)
				}
				else//иначе, если паспорт-2 НЕ пустой, то:
				{
					if(strcmp(PlayerInfo[playerid][pPass_data3], "---", false) == 0)//если паспорт-3 пустой, то:
					{
						strmid(PlayerInfo[playerid][pPass_data3], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-3
						playconpass[playerid] = -3;//текущий паспорт = -3 (регистрация)
					}
					else//иначе, если паспорт-3 НЕ пустой, то:
					{
						gPlayerLogged[playerid] = 1;//разрешение записи аккаунта
						PlayerInfo[playerid][pPassLock] = 1;//блокировка паспорта
						format(string,sizeof(string),"[pass] Игрок %s [%d] был кикнут - блокировка системой паспортов !",RealName[playerid],playerid);
						print(string);
						SendClientMessageToAll(COLOR_RED,string);
						SetTimerEx("PlayKick", 300, 0, "i", playerid);
						return 1;
					}
				}
			}
		}
#endif
#if (MOD4DINS == 4)
		if(strcmp(PlayerInfo[playerid][pPass_data1], loctag, false) == 0)//если gpci-тег сходится с паспортом-1, то:
		{
			playconpass[playerid] = 1;//текущий паспорт = 1 (использование)
		}
		if(strcmp(PlayerInfo[playerid][pPass_data2], loctag, false) == 0)//если gpci-тег сходится с паспортом-2, то:
		{
			playconpass[playerid] = 2;//текущий паспорт = 2 (использование)
		}
		if(strcmp(PlayerInfo[playerid][pPass_data3], loctag, false) == 0)//если gpci-тег сходится с паспортом-3, то:
		{
			playconpass[playerid] = 3;//текущий паспорт = 3 (использование)
		}
		if(strcmp(PlayerInfo[playerid][pPass_data4], loctag, false) == 0)//если gpci-тег сходится с паспортом-4, то:
		{
			playconpass[playerid] = 4;//текущий паспорт = 4 (использование)
		}
		if(playconpass[playerid] == 0)//если текущий паспорт не определён, то:
		{
			if(strcmp(PlayerInfo[playerid][pPass_data1], "---", false) == 0)//если паспорт-1 пустой, то:
			{
				strmid(PlayerInfo[playerid][pPass_data1], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-1
				playconpass[playerid] = -1;//текущий паспорт = -1 (регистрация)
			}
			else//иначе, если паспорт-1 НЕ пустой, то:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data2], "---", false) == 0)//если паспорт-2 пустой, то:
				{
					strmid(PlayerInfo[playerid][pPass_data2], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-2
					playconpass[playerid] = -2;//текущий паспорт = -2 (регистрация)
				}
				else//иначе, если паспорт-2 НЕ пустой, то:
				{
					if(strcmp(PlayerInfo[playerid][pPass_data3], "---", false) == 0)//если паспорт-3 пустой, то:
					{
						strmid(PlayerInfo[playerid][pPass_data3], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-3
						playconpass[playerid] = -3;//текущий паспорт = -3 (регистрация)
					}
					else//иначе, если паспорт-3 НЕ пустой, то:
					{
						if(strcmp(PlayerInfo[playerid][pPass_data4], "---", false) == 0)//если паспорт-4 пустой, то:
						{
							strmid(PlayerInfo[playerid][pPass_data4], loctag, 0, strlen(loctag), 64);//копируем gpci-тег в паспорт-4
							playconpass[playerid] = -4;//текущий паспорт = -4 (регистрация)
						}
						else//иначе, если паспорт-4 НЕ пустой, то:
						{
							gPlayerLogged[playerid] = 1;//разрешение записи аккаунта
							PlayerInfo[playerid][pPassLock] = 1;//блокировка паспорта
							format(string,sizeof(string),"[pass] Игрок %s [%d] был кикнут - блокировка системой паспортов !",RealName[playerid],playerid);
							print(string);
							SendClientMessageToAll(COLOR_RED,string);
							SetTimerEx("PlayKick", 300, 0, "i", playerid);
							return 1;
						}
					}
				}
			}
		}
#endif
#if (MOD4DINS >= 1)
		if(playconpass[playerid] >= 1)//если использование паспорта, то:
		{
#endif
#if (MOD4DINS == 1)
			format(string,sizeof(string),"[pass] Игрок %s [%d] - используется паспорт: %d (из %d-го) , ошибок: %d (из 4-х).",
			RealName[playerid],playerid,playconpass[playerid],MOD4DINS,PlayerInfo[playerid][pPassError]);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
			format(string,sizeof(string),"[pass] Игрок %s [%d] - используется паспорт: %d (из %d-х) , ошибок: %d (из 4-х).",
			RealName[playerid],playerid,playconpass[playerid],MOD4DINS,PlayerInfo[playerid][pPassError]);
#endif
#if (MOD4DINS >= 1)
			print(string);
			SendClientMessage(playerid,COLOR_YELLOW,string);
		}
		if(playconpass[playerid] <= -1)//если регистрация паспорта, то:
		{
			playconpass[playerid] = playconpass[playerid] * -1;
#endif
#if (MOD4DINS == 1)
			format(string,sizeof(string),"[pass] Игрок %s [%d] - зарегистрирован паспорт: %d (из %d-го) , ошибок: %d (из 4-х).",
			RealName[playerid],playerid,playconpass[playerid],MOD4DINS,PlayerInfo[playerid][pPassError]);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
			format(string,sizeof(string),"[pass] Игрок %s [%d] - зарегистрирован паспорт: %d (из %d-х) , ошибок: %d (из 4-х).",
			RealName[playerid],playerid,playconpass[playerid],MOD4DINS,PlayerInfo[playerid][pPassError]);
#endif
#if (MOD4DINS >= 1)
			print(string);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			new locdata22 = 0;
			if(strcmp(PlayerInfo[playerid][pPass_data1], "---", false) != 0) { locdata22++; }
			if(strcmp(PlayerInfo[playerid][pPass_data2], "---", false) != 0) { locdata22++; }
			if(strcmp(PlayerInfo[playerid][pPass_data3], "---", false) != 0) { locdata22++; }
			if(strcmp(PlayerInfo[playerid][pPass_data4], "---", false) != 0) { locdata22++; }
			format(string,sizeof(string),"[pass] Зарегистрировано паспортов: %d , в случае регистрации паспорта %d - {FF0000}Ваш аккаунт",locdata22,MOD4DINS + 1);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			SendClientMessage(playerid,COLOR_RED,"[pass] будет заблокирован системой паспортов - БЕЗ возможности восстановления !");
		}
#endif
		gettime(timecor[0], timecor[1]);
		getdate(timecor[2], timecor[3], timecor[4]);
		TimCor();//коррекция времени
		DatCor();//коррекция даты
		switch(playconpass[playerid])
		{
		    case 0, 1:
			{
				format(PlayerInfo[playerid][pPass_inout1], 64, "[%02d:%02d - %02d/%02d/%04d] -",
				timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);//время и дата входа паспорта-1
				format(PlayerInfo[playerid][pPass_ver1], 32, "%s", FnGetClVers(playerid));//версия САМП-клиента паспорта-1
				PlayerInfo[playerid][pPass_count1]++;//счётчик коннектов паспорта-1 +1
			}
		    case 2:
			{
				format(PlayerInfo[playerid][pPass_inout2], 64, "[%02d:%02d - %02d/%02d/%04d] -",
				timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);//время и дата входа паспорта-2
				format(PlayerInfo[playerid][pPass_ver2], 32, "%s", FnGetClVers(playerid));//версия САМП-клиента паспорта-2
				PlayerInfo[playerid][pPass_count2]++;//счётчик коннектов паспорта-2 +1
			}
		    case 3:
			{
				format(PlayerInfo[playerid][pPass_inout3], 64, "[%02d:%02d - %02d/%02d/%04d] -",
				timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);//время и дата входа паспорта-3
				format(PlayerInfo[playerid][pPass_ver3], 32, "%s", FnGetClVers(playerid));//версия САМП-клиента паспорта-3
				PlayerInfo[playerid][pPass_count3]++;//счётчик коннектов паспорта-3 +1
			}
		    case 4:
			{
				format(PlayerInfo[playerid][pPass_inout4], 64, "[%02d:%02d - %02d/%02d/%04d] -",
				timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);//время и дата входа паспорта-4
				format(PlayerInfo[playerid][pPass_ver4], 32, "%s", FnGetClVers(playerid));//версия САМП-клиента паспорта-4
				PlayerInfo[playerid][pPass_count4]++;//счётчик коннектов паспорта-4 +1
			}
		}
	}
	if(PlayerInfo[playerid][pLock] == 1)
	{
		format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - аккаунт заблокирован !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		SendClientMessage(playerid,COLOR_YELLOW,"Russian_Drift: {FF0000}Для выяснения причин свяжитесь с администрацией сервера !");
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
//		Kick(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pPrisonsec] == 1){PlayerInfo[playerid][pPrisonsec] = 2;}
	if(PlayerInfo[playerid][pMutedsec] == 1){PlayerInfo[playerid][pMutedsec] = 2;}
	if(PlayerInfo[playerid][pAdmin] < 0)
	{
		dopadm[playerid] = PlayerInfo[playerid][pAdmin] * -1;
	}
	else
	{
		dopadm[playerid] = PlayerInfo[playerid][pAdmin];
	}
	if (dopadm[playerid] == 0 && (PlayerInfo[playerid][pAdmshad] == 1 ||
	PlayerInfo[playerid][pAdmscancom] == 1 || PlayerInfo[playerid][pAdmlive] == 1))
	{
		PlayerInfo[playerid][pAdmshad] = 0;
		PlayerInfo[playerid][pAdmscancom] = 0;
		PlayerInfo[playerid][pAdmlive] = 0;
	}
	if (dopadm[playerid] > 0)
	{
		format(string, sizeof(string), "* Админка %d уровня загружена.",dopadm[playerid]);
		SendClientMessage(playerid, COLOR_WHITE,string);
		AdmUpdate(RealName[playerid], dopadm[playerid], 4);
		if(dopadm[playerid] >= 6)
		{
			new twenlim, restlim;
			Fmadmins(2, RealName[playerid], 0, twenlim, restlim);
			format(string, sizeof(string), " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]",twenlim,restlim);
			SendClientMessage(playerid, COLOR_RED,string);
		}
		if (PlayerInfo[playerid][pAdmshad] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Скрытость выключена.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN, " Скрытость включена.");
		}
		if (PlayerInfo[playerid][pAdmscancom] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Сканирование команд сервера выключено.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN, " Сканирование команд сервера включено.");
		}
		if (dopadm[playerid] >= 5)
		{
			if (PlayerInfo[playerid][pAdmlive] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Бессмертие выключено.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, " Бессмертие включено.");
			}
		}
		else
		{
			PlayerInfo[playerid][pAdmlive] = 0;//убрать бессмертие
			livdop[playerid] = 0;
		}
	}
	if (PlayerInfo[playerid][pPolice] > 0)
	{
		format(string, sizeof(string), "* Уровень %d полиции загружен.",PlayerInfo[playerid][pPolice]);
		SendClientMessage(playerid, COLOR_WHITE,string);
	}
	if (PlayerInfo[playerid][pRecPM] == 0)
	{
		SendClientMessage(playerid, COLOR_RED, " Приём PM от игроков запрещён.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREEN, " Приём PM от игроков разрешён.");
	}
	if(dopadm[playerid] <= 5)
	{
		new twenlim, restlim;
		Fmadmins(0, RealName[playerid], 0, twenlim, restlim);
	}
	if(PlayerInfo[playerid][pAdmin] < 0)
	{
		PlayerInfo[playerid][pAdmin] = dopadm[playerid];
		SendClientMessage(playerid, COLOR_RED, "* Рекомендация: В целях безопасности и защиты своего (АДМИНИСТРАТИВНОГО)");
		SendClientMessage(playerid, COLOR_RED, "* аккаунта - измените свой пароль !!! И НЕ используйте пароль от своего");
		SendClientMessage(playerid, COLOR_RED, "* административного аккаунта на других серверах !!!");
	}

	skinstatplay[playerid] = 0;
	nickstatcol[playerid] = 0;
	TextDrawShowForPlayer(playerid, Times);//включить часы игроку

	scrnetcount[playerid] = 0;//обнуляем переменную контроля сетевых экранов
	gPlayerLogged[playerid] = 1;
	gPlayerAccount[playerid] = 1;
	new dopper;
	dopper = 0;
	OnPlayerRequestClass(playerid, dopper);
//	SpawnPlayer(playerid);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(chatcon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		new dopcis, sstr[256];
		dopcis = FCislit(chatcon[playerid]);
		switch(dopcis)
		{
			case 0: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунд !", chatcon[playerid] * -1);
			case 1: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунду !", chatcon[playerid] * -1);
			case 2: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунды !", chatcon[playerid] * -1);
		}
		SendClientMessage(playerid, COLOR_RED, sstr);
		return 0;//завершаем функцию
	}
	chatcon[playerid]++;//прибавляем 1 к контрольной переменной чата
	new string[256];
	if(playspa[playerid] == 0)//игрок НЕ заспавнился
	{
		printf("-----[Игрок не заспавнился] %s [%d]: %s", RealName[playerid], playerid, text); // Отправляем сообщение в сервер-лог
/*
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - сообщение в чат без спавна !", sendername, playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
*/
		SendClientMessage(playerid,COLOR_RED," Вы ещё не заспавнились, и не можете писать в чат !");
		return 0;
	}
	if(PlayerInfo[playerid][pDeport] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, пока дело о Вашей депортации на слушании !");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
		printf("-----[Игрок на депортации] %s [%d]: %s", RealName[playerid], playerid, text); // Отправляем сообщение в сервер-лог
		return 0;
	}
	if(PlayerInfo[playerid][pMutedsec] > 0)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, Вас заткнули !");
		printf("-----[Игрок заткнут] %s [%d]: %s", RealName[playerid], playerid, text); // Отправляем сообщение в сервер-лог
		return 0;
	}
	SetPlayerChatBubble(playerid, text, COLOR_WHITE, 15.0, 6000);
	if(PlayerInfo[playerid][pWanted] == 0)
	{
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 0 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
	}
	else
	{
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 0 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {FF0000}[Wanted] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {FF0000}[Wanted] {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {FF0000}[Wanted] {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
		{
			format(string, sizeof(string), "%s {FF0000}[Wanted] {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
			SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
			return 0;
		}
	}

	if(PlayerInfo[playerid][pWanted] == 0)
	{
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 0 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
	}
	else
	{
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 0 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {FF0000}[Wanted] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
		if(playspa[playerid] == 1 && PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] > 0)//Gangs system
		{
			format(string, sizeof(string), "[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
			SendClientMessageToAll(GColorDec[PGang[playerid]], string);
			return 0;
		}
	}

	return 1;
}

stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[30];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	if(chatcon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		new dopcis, sstr[256];
		dopcis = FCislit(chatcon[playerid]);
		switch(dopcis)
		{
			case 0: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунд !", chatcon[playerid] * -1);
			case 1: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунду !", chatcon[playerid] * -1);
			case 2: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунды !", chatcon[playerid] * -1);
		}
		SendClientMessage(playerid, COLOR_RED, sstr);
		return 1;//завершаем функцию
	}
	chatcon[playerid]++;//прибавляем 1 к контрольной переменной чата
	//new giveplayerid;
	new idx;
	idx = 0;
	new string[256];
	new strdln[4000];
	strdln[0]++;
	strdln[0]--;
   	new akk[256],ssss[256];
	//new playermoney;
	//new sendername[MAX_PLAYER_NAME];
	//new giveplayer[MAX_PLAYER_NAME];
	//new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	cmd = strtok(cmdtext, idx);
	new stringdop22[256];
	if(PlayerInfo[playerid][pMutedsec] == 0)
	{
		printf(" Игрок %s [%d] ввёл команду: %s .",RealName[playerid],playerid,cmdtext);
		format(stringdop22, sizeof(stringdop22), " Игрок %s [%d] ввёл команду: {FFFF00}%s .",RealName[playerid],playerid,cmdtext);
	}
	if(PlayerInfo[playerid][pMutedsec] > 0)
	{
		printf(" Игрок %s [%d] (заткнут) ввёл команду: %s .",RealName[playerid],playerid,cmdtext);
		format(stringdop22, sizeof(stringdop22), " Игрок %s [%d] {FF0000}(заткнут) {00FF00}ввёл команду: {FFFF00}%s .",RealName[playerid],playerid,cmdtext);
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmscancom] == 1 && PlayerInfo[playerid][pAdmin] < 10)
			{
				SendClientMessage(i, COLOR_GREEN, stringdop22);
			}
		}
	}
	if(strcmp(cmd, "/help", true) == 0 && playspa[playerid] == 0)
	{//если игрок НЕ заспавнился
		SendClientMessage(playerid,COLOR_GRAD1," ----------------------------- Помощь ----------------------------- ");
		SendClientMessage(playerid,COLOR_GREEN,"   Если нет возможности выбора скина и спавна,");
		SendClientMessage(playerid,COLOR_GREEN,"                  используйте команду   /spawn");
		SendClientMessage(playerid,COLOR_GRAD1," ------------------------------------------------------------------------ ");
    	return 1;
	}
	if (strcmp("/spawn", cmdtext, true, 10) == 0 && playspa[playerid] == 0)
	{//если игрок НЕ заспавнился
		SendClientMessage(playerid,COLOR_YELLOW,"Russian_Drift: {00FF00}Вы заспавнились !");
		if(IsPlayerInAnyVehicle(playerid))
		{
			new Float:x, Float:y, Float:z;
			tpdrift[playerid] = 1;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,x,y,z+5);
			SetTimerEx("SecSpaDop", 300, 0, "i", playerid);
		}
		else
		{
			SpawnPlayer(playerid);
		}
    	return 1;
    }
	if(playspa[playerid] == 0)//игрок НЕ заспавнился
	{
		printf("-----[Игрок не заспавнился] %s [%d]: ввёл команду %s .", RealName[playerid], playerid, cmdtext); // Отправляем команду в сервер-лог
/*
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - команда без спавна !", sendername, playerid);
		print(string);
    	SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
*/
		SendClientMessage(playerid,COLOR_RED," Вы ещё не заспавнились ! введите команду /help !");
		return 1;
	}

//==============================================================================
//                              GarHouse
//==============================================================================
    dcmd(removeallhouses, 15, cmdtext);
	dcmd(changeallprices, 15, cmdtext);
	dcmd(removeallhcars, 14, cmdtext);
	dcmd(sellallhouses, 13, cmdtext);
    dcmd(createhouse, 11, cmdtext);
    dcmd(passhouse, 9, cmdtext);//просмотреть пароль дома по ID
    dcmd(relhouses, 9, cmdtext);//перезагрузить систему домов
    dcmd(lchouse, 7, cmdtext);//заблокировать дом по ID
    dcmd(rethouse, 8, cmdtext);//вернуть дом по ID на продажу
	dcmd(removehouse, 11, cmdtext);
	dcmd(changeprice, 11, cmdtext);
	dcmd(changespawn, 11, cmdtext);
	dcmd(removehcar, 10, cmdtext);
	dcmd(changehcar, 10, cmdtext);
	dcmd(sellhouse, 9, cmdtext);
	dcmd(housemenu, 9, cmdtext);
	dcmd(gotohouse, 9, cmdtext);
	dcmd(addhcar, 7, cmdtext);
	dcmd(ghcmds, 6, cmdtext);
//==============================================================================
//                              End GarHouse
//==============================================================================

	if(strcmp(cmd, "/achat", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pPolice] >= 1 || PlayerInfo[playerid][pDeport] == 1)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Админ-чат: (/a)chat [текст]");
				return 1;
			}
			new per55 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[playerid][pAdmin] >= 1 && i != playerid && IsPlayerConnected(i) &&
				(PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pDeport] == 1)) {per55 = 1;}//если пишет админ, и есть любой другой админ или депортированный игрок, то - отправить сообщение
				if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pPolice] > 0 &&
                IsPlayerConnected(i) && PlayerInfo[i][pAdmin] >= 1 &&
				PlayerInfo[i][pAdmshad] == 0) {per55 = 1;}//если пишет полицейский, и есть любой НЕ скрытый админ, то - отправить сообщение
				if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pDeport] == 1 &&
                IsPlayerConnected(i) && PlayerInfo[i][pAdmin] >= 1) {per55 = 1;}//если пишет депортированный игрок, и есть любой админ, то - отправить сообщение
			}
			if(per55 == 0)
			{
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Сейчас на сервере нет других админов !");
				}
				if(PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Сейчас на сервере нет админов !");
				}
				return 1;
			}
			new dopper;//подмена 11-го левела на 10-й
			dopper = PlayerInfo[playerid][pAdmin];
			if (dopper == 11)
			{
				dopper = 10;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				printf(" <AC> Админ %s [%d] (%d LVL): %s", RealName[playerid], playerid, PlayerInfo[playerid][pAdmin], result);
				format(string, sizeof(string), " <AC> Админ %s [%d] (%d LVL): {FFFFFF}%s", RealName[playerid], playerid, dopper, result);
				SendAdminMessage(COLOR_YELLOW, string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
		    			if(PlayerInfo[i][pDeport] == 1)
		    			{
							SendClientMessage(i, COLOR_YELLOW, string);
						}
					}
				}
			}
			else
			{
				if (PlayerInfo[playerid][pDeport] == 1)
				{
					printf(" <AC> [Deport] %s [%d]: %s", RealName[playerid], playerid, result);
					format(string, sizeof(string), " <AC> {FF0000}[Deport] {FFFF00}%s [%d]: {FFFFFF}%s", RealName[playerid], playerid, result);
					SendAdminMessage(COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				else
				{
					if(PlayerInfo[playerid][pPolice] == 1) { printf(" <AC> LSPD %s [%d] (%d LVL): %s", RealName[playerid], playerid, PlayerInfo[playerid][pPolice], result); }
					if(PlayerInfo[playerid][pPolice] == 2) { printf(" <AC> SFPD %s [%d] (%d LVL): %s", RealName[playerid], playerid, PlayerInfo[playerid][pPolice], result); }
					if(PlayerInfo[playerid][pPolice] == 3) { printf(" <AC> LVPD %s [%d] (%d LVL): %s", RealName[playerid], playerid, PlayerInfo[playerid][pPolice], result); }
					if(PlayerInfo[playerid][pPolice] == 1) { format(string, sizeof(string), " <AC> LSPD %s [%d] (%d LVL): {FFFFFF}%s", RealName[playerid], playerid, PlayerInfo[playerid][pPolice], result); }
					if(PlayerInfo[playerid][pPolice] == 2) { format(string, sizeof(string), " <AC> SFPD %s [%d] (%d LVL): {FFFFFF}%s", RealName[playerid], playerid, PlayerInfo[playerid][pPolice], result); }
					if(PlayerInfo[playerid][pPolice] == 3) { format(string, sizeof(string), " <AC> LVPD %s [%d] (%d LVL): {FFFFFF}%s", RealName[playerid], playerid, PlayerInfo[playerid][pPolice], result); }
					SendAdminMessage(COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
			SendClientMessage(playerid, COLOR_RED, " ( Вам нужно иметь уровень полиции, или быть админом )");
		}
		return 1;
	}
	if(strcmp("/pm", cmd, true) == 0)
	{
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, пока дело о Вашей депортации на слушании !");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /pm [ид игрока] [сообщение]");
			return 1;
		}
		new id = strval(tmp);
		if(!IsPlayerConnected(id))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нет такого ид игрока !");
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_RED, " /pm [ид игрока] [сообщение] !");
			return 1;
		}
		if(PlayerInfo[id][pRecPM] == 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Выбранный игрок запретил для себя приём PM !");
			return 1;
		}
		if(playerid != id)
		{
			format(string, sizeof(string), "pm >> %s (%d) >> %s (%d): %s", RealName[playerid], playerid, RealName[id], id, result);
			print(string);
			format(string, sizeof(string), "pm >> %s(%d): %s", RealName[id], id, result);
			SendClientMessage(playerid, 0xF4C330FF, string);
			format(string, sizeof(string), "Вам PM от %s(%d): %s", RealName[playerid], playerid, result);
			SendClientMessage(id, 0xF4C330FF, string);
			if(NETafkPl[id][5] == 1)
			{
				printf("pm >> игрок-получатель сообщения %s (%d) в AFK !!!", RealName[id], id);
				format(string, sizeof(string), "pm >> игрок-получатель сообщения {FF6347}%s(%d) {F4C330}в AFK !!!", RealName[id], id);
				SendClientMessage(playerid, 0xF4C330FF, string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы пишете в PM самому себе ! Выберите другой ид игрока !");
		}
		return 1;
	}
    if(strcmp(cmd, "/g", true) == 0)
	{
		if(PGang[playerid] <= 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не состоите ни в одной из банд !");
			return 1;
		}
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, пока дело о Вашей депортации на слушании !");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /g [текст]");
			return 1;
		}
		new per55 = 0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PGang[i] == PGang[playerid] && i != playerid) {per55 = 1;}
			}
		}
		if(per55 == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Сейчас на сервере нет других игроков из Вашей банды !");
			return 1;
		}
		if(PlayerInfo[playerid][pWanted] == 0)
		{
			if(PlayerInfo[playerid][pPolice] == 0)
			{
				printf(" (gid:%d) <GC> %s [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 1)
			{
				printf(" (gid:%d) <GC> %s [LSPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 2)
			{
				printf(" (gid:%d) <GC> %s [SFPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 3)
			{
				printf(" (gid:%d) <GC> %s [LVPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
		}
		else
		{
			if(PlayerInfo[playerid][pPolice] == 0)
			{
				printf(" (gid:%d) <GC> %s [Wanted][%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {FF0000}[Wanted] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 1)
			{
				printf(" (gid:%d) <GC> %s [Wanted][LSPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 2)
			{
				printf(" (gid:%d) <GC> %s [Wanted][SFPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 3)
			{
				printf(" (gid:%d) <GC> %s [Wanted][LVPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <GC> {%s}[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && PGang[playerid] == PGang[i])
			{
				SendClientMessage(i, COLOR_YELLOW, string);
			}
		}
    	return 1;
	}
    if(strcmp(cmd, "/p", true) == 0)
	{
		if(PlayerInfo[playerid][pPolice] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не состоите в полиции !");
			return 1;
		}
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, пока дело о Вашей депортации на слушании !");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /p [текст]");
			return 1;
		}
		new per55 = 0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pPolice] > 0 && i != playerid) {per55 = 1;}
			}
		}
		if(per55 == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Сейчас на сервере нет других полицейских !");
			return 1;
		}
		if(PlayerInfo[playerid][pWanted] == 0)
		{
			if(PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] <= 0)
			{
				printf(" <PC> %s [LSPD] [%d]: %s", RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> %s {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] <= 0)
			{
				printf(" <PC> %s [SFPD] [%d]: %s", RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> %s {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] <= 0)
			{
				printf(" <PC> %s [LVPD] [%d]: %s", RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> %s {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, result);
			}
		}
		else
		{
			if(PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] <= 0)
			{
				printf(" <PC> %s [Wanted][LSPD] [%d]: %s", RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> %s {FF0000}[Wanted] {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] <= 0)
			{
				printf(" <PC> %s [Wanted][SFPD] [%d]: %s", RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> %s {FF0000}[Wanted] {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] <= 0)
			{
				printf(" <PC> %s [Wanted][LVPD] [%d]: %s", RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> %s {FF0000}[Wanted] {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", RealName[playerid], playerid, result);
			}
		}
		if(PlayerInfo[playerid][pWanted] == 0)
		{
			if(PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] > 0)
			{
				printf(" (gid:%d) <PC> %s [LSPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> {%s}[Банда: %s] %s {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] > 0)
			{
				printf(" (gid:%d) <PC> %s [SFPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> {%s}[Банда: %s] %s {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] > 0)
			{
				printf(" (gid:%d) <PC> %s [LVPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> {%s}[Банда: %s] %s {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
		}
		else
		{
			if(PlayerInfo[playerid][pPolice] == 1 && PGang[playerid] > 0)
			{
				printf(" (gid:%d) <PC> %s [Wanted][LSPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> {%s}[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[LSPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 2 && PGang[playerid] > 0)
			{
				printf(" (gid:%d) <PC> %s [Wanted][SFPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> {%s}[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[SFPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
			if(PlayerInfo[playerid][pPolice] == 3 && PGang[playerid] > 0)
			{
				printf(" (gid:%d) <PC> %s [Wanted][LVPD] [%d]: %s", PGang[playerid], RealName[playerid], playerid, result);
				format(string, sizeof(string), " <PC> {%s}[Банда: %s] %s {FF0000}[Wanted] {2F60FF}[LVPD] {28F90E}[ID:%d]: {E5B884}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]], RealName[playerid], playerid, result);
			}
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && PlayerInfo[i][pPolice] > 0)
			{
				SendClientMessage(i, COLOR_YELLOW, string);
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/statpl", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /statpl 600 или /statpl [ид игрока]");
			return 1;
		}
		new para1 = strval(tmp);
		if(para1 == playerid)
		{
			SendClientMessage(playerid, COLOR_RED, " Для просмотра собственной статистики используйте: /statpl 600 !");
			return 1;
		}
		if(para1 == 600)
		{
			STATPlayer(playerid);
			return 1;
		}
		if(IsPlayerConnected(para1))
		{
			if(gPlayerLogged[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			if(PlayerInfo[para1][pAdmin] >= 1 && PlayerInfo[para1][pAdmshad] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок - админ !");
				return 1;
			}
			if(PlayerInfo[para1][pDeport] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
				return 1;
			}
			switch(PlayerInfo[para1][pPolice])
			{
				case 0: format(string, sizeof(string), " Игрок %s [%d]: {FFFF00}НЕ имеет уровня полиции.", RealName[para1], para1);
				case 1: format(string, sizeof(string), " Игрок %s [%d]: {2F60FF}LSPD {FFFF00}1-LVL полиции.", RealName[para1], para1);
				case 2: format(string, sizeof(string), " Игрок %s [%d]: {2F60FF}SFPD {FFFF00}2-LVL полиции.", RealName[para1], para1);
				case 3: format(string, sizeof(string), " Игрок %s [%d]: {2F60FF}LVPD {FFFF00}3-LVL полиции.", RealName[para1], para1);
			}
			printf(" --> Игрок %s [%d] просмотрел статистику игрока %s [%d] .", RealName[playerid], playerid, RealName[para1], para1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
			SendClientMessage(playerid, COLOR_GREEN, string);
			new sstr1[128], sstr2[128], dopcis;
			dopcis = FCislit(PlayerInfo[para1][pMutedsec]);
			switch(dopcis)
			{
				case 0: format(sstr1, sizeof(sstr1), " Время затыка: {FFFF00}%d секунд. ", PlayerInfo[para1][pMutedsec]);
				case 1: format(sstr1, sizeof(sstr1), " Время затыка: {FFFF00}%d секунда. ", PlayerInfo[para1][pMutedsec]);
				case 2: format(sstr1, sizeof(sstr1), " Время затыка: {FFFF00}%d секунды. ", PlayerInfo[para1][pMutedsec]);
			}
			dopcis = FCislit(PlayerInfo[para1][pPrisonsec]);
			switch(dopcis)
			{
				case 0: format(sstr2, sizeof(sstr2), "{00FF00}Время тюрьмы: {FFFF00}%d секунд.", PlayerInfo[para1][pPrisonsec]);
				case 1: format(sstr2, sizeof(sstr2), "{00FF00}Время тюрьмы: {FFFF00}%d секунда.", PlayerInfo[para1][pPrisonsec]);
				case 2: format(sstr2, sizeof(sstr2), "{00FF00}Время тюрьмы: {FFFF00}%d секунды.", PlayerInfo[para1][pPrisonsec]);
			}
			format(string, sizeof(string), "%s%s", sstr1, sstr2);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(pertrain == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Всем игрокам ЗАПРЕЩЕНО водить поезда !");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, " Всем игрокам РАЗРЕШЕНО водить поезда !");
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
	if(PlayerInfo[playerid][pPrisonsec] > 0)
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в тюрьме.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В тюрьме команды не работают !");
		return 1;
	}
	if(perfrost[playerid] != 600)
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок заморожен.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя, Вы заморожены !");
		return 1;
	}
	if(PlayLock1[0][playerid] != 600)
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок заблокирован.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя, Вы заблокированы !");
		return 1;
	}
	if(CallRemoteFunction("raceplfunc", "d", playerid) != 0)//чтение статуса участника из системы гонок
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе гонок.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В системе гонок команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("raceplfunc2", "d", playerid) != 0)//чтение статуса участника из системы гонок-2
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе гонок-2.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В системе гонок-2 команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе МП.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В системе МП команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе дерби-сумо.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В системе дерби-сумо команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе банков.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В системе банков команды не работают !");
		return 1;
	}
	if (strcmp("/kill", cmdtext, true, 10) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		SetPlayerArmour(playerid,0);
		SetPlayerHealth(playerid,0);
		return 1;
	}
	if (strcmp("/iadminset", cmdtext, true, 10) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] == 10)
			{
				SendClientMessage(playerid, COLOR_RED, " У Вас уже есть уровень главного админа сервера !");
				return 1;
			}
			new dopper;
			format(string, sizeof(string), " *** Игрок %s [%d] сделал себя главным админом на сервере.", RealName[playerid], playerid);
			print(string);
			SendClientMessage(playerid,COLOR_GREY," *** Вы сделали себя главным админом на сервере.");
			dopper = PlayerInfo[playerid][pAdmin];
			PlayerInfo[playerid][pAdmin] = 10;
			AdmUpdate(RealName[playerid], PlayerInfo[playerid][pAdmin], 1);
			new twenlim = 0;
			new restlim = 0;
			Fmadmins(1, RealName[playerid], 0, twenlim, restlim);
			if (dopper <= 4)
			{
				PlayerInfo[playerid][pAdmlive] = 1;//установить бессмертие
				SendClientMessage(playerid, COLOR_GREEN, " Бессмертие включено.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /makeadmin [ид игрока/часть ника] [левел(0-10)]");
				SendClientMessage(playerid, COLOR_GRAD2, " ( дополнительно: [сумма] )");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
 			if(IsPlayerConnected(para1))
 			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[para1][pDeport] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок находится на депортации !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [левел(0-10)] ( дополнительно: [сумма] ) !");
					return 1;
				}
				new level;
				level = strval(tmp);
				if(level < 0 || level > 10)
				{
	 				SendClientMessage(playerid, COLOR_RED, " Уровень админа должен быть от 0 до 10 !");
					return 1;
				}
				new summ1, summ2;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					summ1 = 0;
				}
				else
				{
					summ1 = 1;
					summ2 = strval(tmp);
				}
				new dopper;
				dopper = PlayerInfo[para1][pAdmin];
				if(dopper == level)
				{
	 				SendClientMessage(playerid, COLOR_RED, " У игрока уже есть назначаемый уровень админа !");
					return 1;
				}
				PlayerInfo[para1][pAdmin] = level;//изменение уровня админки
				AdmUpdate(RealName[para1], PlayerInfo[para1][pAdmin], 2);
				new dopper44;
				dopper44 = GetPVarInt(para1, "PlMon");
				if(PlayerInfo[para1][pAdmin] == 0)
				{
					PlayerInfo[para1][pAdmshad] = 0;//убрать скрытость
					format(string, sizeof(string), " *** Админ %s снял админку с игрока %s .", RealName[playerid], RealName[para1]);
					print(string);
					SendAdminMessage(COLOR_RED, string);
					format(string, sizeof(string), " *** Админ %s снял с Вас админку.", RealName[playerid]);
					SendClientMessage(para1, COLOR_RED, string);
					if(summ1 == 1 && summ2 != GetPVarInt(para1, "PlMon"))
					{
						SetPVarInt(para1, "PlMon", summ2);//изменение личного счёта
						format(string, sizeof(string), " *** Личный счёт игрока %s был изменён на: %d $ .", RealName[para1], GetPVarInt(para1, "PlMon"));
						print(string);
						SendAdminMessage(COLOR_RED, string);
						format(string, sizeof(string), " *** Ваш личный счёт был изменён на: %d $ .", GetPVarInt(para1, "PlMon"));
						SendClientMessage(para1, COLOR_RED, string);
						printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, dopper44);
					}
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s дал игроку %s админку %d уровня.", RealName[playerid], RealName[para1], level);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					if(summ1 == 1 && summ2 != GetPVarInt(para1, "PlMon"))
					{
						SetPVarInt(para1, "PlMon", summ2);//изменение личного счёта
						format(string, sizeof(string), " *** Личный счёт игрока %s был изменён на: %d $ .", RealName[para1], GetPVarInt(para1, "PlMon"));
						print(string);
						SendAdminMessage(COLOR_YELLOW, string);
						printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, dopper44);
					}
				}
				if(PlayerInfo[para1][pAdmin] <= 8 && dopper >= 9)
				{
					for(new i = 0; i < 20; i++)//удаление ника админа из per-файла
					{
						if(strcmp(RealName[para1], scrnetper[i], false) == 0)//если ник админа найден, то:
						{
							strdel(scrnetper[i], 0, 64);//очистка слота
							strcat(scrnetper[i], "*** INV_PL_ID");
							ScrNetPerSave(i);//запись изменённого слота в per-файл
						}
					}
				}
				if(PlayerInfo[para1][pAdmin] <= 5 && dopper >= 6)
				{
					new twenlim, restlim;
					Fmadmins(0, RealName[para1], 0, twenlim, restlim);
				}
				if(PlayerInfo[para1][pAdmin] >= 6 && dopper <= 5)
				{
					new twenlim = 0;
					new restlim = 0;
					Fmadmins(1, RealName[para1], 0, twenlim, restlim);
				}
				if(PlayerInfo[para1][pAdmin] >= 5 && dopper <= 4)
				{
					PlayerInfo[para1][pAdmlive] = 1;//установить бессмертие
					SendClientMessage(para1, COLOR_GREEN, " Бессмертие включено.");
				}
				if(PlayerInfo[para1][pAdmin] <= 4 && dopper >= 5)
				{
					PlayerInfo[para1][pAdmlive] = 0;//убрать бессмертие
					SendClientMessage(para1, COLOR_RED, " Бессмертие выключено.");
				}
				if(PlayerInfo[para1][pAdmscancom] == 1)
				{
					PlayerInfo[para1][pAdmscancom] = 0;//убрать сканирование команд сервера
					SendClientMessage(para1, COLOR_RED, " Сканирование команд сервера выключено.");
				}
				if(PlayerInfo[para1][pAdmin] >= 1 && dopper == 0)
				{
					SendClientMessage(para1, COLOR_RED, "* Рекомендация: В целях безопасности и защиты своего (АДМИНИСТРАТИВНОГО)");
					SendClientMessage(para1, COLOR_RED, "* аккаунта - измените свой пароль !!! И НЕ используйте пароль от своего");
					SendClientMessage(para1, COLOR_RED, "* административного аккаунта на других серверах !!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
 	if(strcmp(cmd, "/money", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /money [ид игрока/часть ника] [сумма] [причина]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму и причину !");
				return 1;
			}
			money = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
   			if(IsPlayerConnected(playa))
		    {
				if(gPlayerLogged[playa] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[playa][pDeport] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
					return 1;
				}
				new dopper44;
				dopper44 = GetPVarInt(playa, "PlMon");
				if(money < 0)
				{
					money = money * -1;
					SetPVarInt(playa, "PlMon", GetPVarInt(playa, "PlMon") - money);
					format(string, 256, " *** Админ %s изъял у игрока %s %d $ , причина: %s", RealName[playerid],RealName[playa],money,result);
					print(string);
					if (PlayerInfo[playa][pAdmin] >= 1)
					{
						SendAdminMessage(COLOR_RED, string);
					}
					else
					{
						SendClientMessageToAll(COLOR_RED, string);
					}
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playa], playa, dopper44);
				}
				else
				{
					new twenlim, restlim;
					if(Fmadmins(2, RealName[playerid], money, twenlim, restlim) == 1)
					{
						SetPVarInt(playa, "PlMon", GetPVarInt(playa, "PlMon") + money);
						format(string, 256, " *** Админ %s дал игроку %s %d $ , причина: %s (вернуть с процентами ;)))", RealName[playerid],RealName[playa],money,result);
						print(string);
						if (PlayerInfo[playa][pAdmin] >= 1)
						{
							SendAdminMessage(COLOR_YELLOW, string);
						}
						else
						{
							SendClientMessageToAll(COLOR_YELLOW, string);
						}
						printf(" *** Админ %s >> Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", RealName[playerid],twenlim,restlim);
						printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playa], playa, dopper44);
					}
					else
					{
						if(restlim == 0)
						{
							SendClientMessage(playerid, COLOR_RED, " Нельзя ! Вы израсходовали суточный денежный лимит !");
						}
						else
						{
							SendClientMessage(playerid, COLOR_RED, " Нельзя ! У Вас недостаточный остаток денежного лимита !");
						}
					}
					if(twenlim != 0)
					{
						format(string, 256, " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
						SendClientMessage(playerid, COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/cmchat", true) == 0)
	{
		ClearChat(playerid,150);
		SendClientMessage(playerid, COLOR_GRAD1, " Вы очистили свой чат.");
		return 1;
	}
	if(strcmp(cmd, "/entercar", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /entercar [ид транспорта]");
				return 1;
			}
			new testcar = strval(tmp);
			new modelcar = GetVehicleModel(testcar);
			if(modelcar == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид транспорта] на сервере нет !");
				return 1;
			}
			if(modelcar == 570 || modelcar == 569)
			{
				SendClientMessage(playerid, COLOR_RED, " В вагоне поезда нет места для водителя !");
			}
			else
			{
				if(IsPlayerInAnyVehicle(playerid))
				{//если игрок в авто, то:
					new Float:igx, Float:igy, Float:igz;
					GetPlayerPos(playerid, igx, igy, igz);//выйти самому из авто
					SetPlayerPos(playerid, igx+3, igy+3, igz);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
							{//И этот админ наблюдает за игроком, то:
								admper5[i] = 2;//устанавливаем переключение наблюдения
							}
						}
					}
				}
				SetTimerEx("entcar22", 300, 0, "ii", playerid, testcar);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/time", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /time [время(0-23)]");
				return 1;
			}
			new hour1;
			hour1 = strval(tmp);
			if (hour1 < 0 || hour1 > 23)
			{
				SendClientMessage(playerid, COLOR_RED, " Время: от 0 до 23 !");
				return 1;
			}
			SetWorldTime(hour1);
			GlTime = hour1;
			TimePlay(hour1);
			format(string, sizeof(string), " *** Админ %s установил время на %d часов.", RealName[playerid], hour1);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW,string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/vers", true) == 0)
	{
		SendClientMessage(playerid,COLOR_GREEN," Версия мода: 4.5");
		return 1;
	}
	if(strcmp(cmd, "/gmx", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			format(string, sizeof(string), " *** Админ %s [%d] инициализировал рестарт сервера !", RealName[playerid], playerid);
			print(string);
			SendClientMessageToAll(COLOR_RED,string);
			SendClientMessageToAll(COLOR_RED," Внимание ! Через 30 секунд произойдёт рестарт сервера !");
			restart = SetTimer("RestartS", 30000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/heal", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		if(StopHeal[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
		{//И игрок НЕ админ, то:
			new dopcis;
			dopcis = FCislit(StopHeal[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHeal[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHeal[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHeal[playerid]);
			}
			SendClientMessage(playerid,COLOR_RED,string);
		}
		else//иначе:
		{
			SetPlayerHealth(playerid,100);
			SetPlayerArmour(playerid,100);
			if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
			{
				StopHeal[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
			}
			SendClientMessage(playerid,COLOR_GRAD1," Вы пополнили себе жизнь и броню.");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/drift1", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,2805.03,-1449.16,40.03);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 1");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift2", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
 		SetPlayerPos(playerid,2326.265869,1405.049682,42.820312);
 		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 2");
 		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift3", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,2227.048339,1962.794433,31.779651);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 3");
  		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift4", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
    	SetPlayerPos(playerid,1147.8013,2179.0205,10.8203);
    	SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 4");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift5", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,-761.3758,2755.0085,45.7734);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 5");
  		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift6", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,-2133.962158,918.200073,79.851562);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 6");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift7", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,-2666.582031,573.158508,14.454482);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 7");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift8", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,-2706.266357,406.596466,4.367187);
    	SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 8");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift9", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
  		SetPlayerPos(playerid,-2427.890869,-601.976989,132.558502);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 9");
		return 1;
	}
	if(strcmp(cmd, "/help", true) == 0 && playspa[playerid] == 1)
	{
		SendClientMessage(playerid,COLOR_GRAD1," ---------------------------- Помощь по командам ---------------------------- ");
		SendClientMessage(playerid,COLOR_GREEN,"   /help   /menu   /vers   /drift[1-9]   /spawn   /count [секунды]");
		SendClientMessage(playerid,COLOR_GREEN,"   /dmcount [секунды]   /kill   /heal   /tp   /cmchat   /admins");
		SendClientMessage(playerid,COLOR_GREEN,"   /givecash [ид] [сумма]   /pm [ид] [текст]   /getid   /ondr   /offdr");
		SendClientMessage(playerid,COLOR_GREEN,"   /resdr   /statdr [ид]   /a [текст]   /wantv   /fine   /statpl 600");
		SendClientMessage(playerid,COLOR_GREEN,"   /statpl [ид]   /scrmd [режим]   /mmd   /svt   /rdt   /g [текст]");
		SendClientMessage(playerid,COLOR_GREEN,"   /p [текст]   /report [ид нарушителя] [жалоба]   /dt [виртуальный мир]");
		SendClientMessage(playerid,COLOR_GREEN,"   /rules   /openpm [0-запретить, 1-разрешить]   /hh   /bb   /ocam");
		SendClientMessage(playerid,COLOR_GRAD1," ------------------------------------------------------------------------------------------ ");

		format(strdln, sizeof(strdln), "/help - Помощь по командам\
		\n/menu - Игровое меню\
		\n/vers - Просмотреть версию мода\
		\n/drift[1-9] - ТП к местам дрифта");
		format(strdln, sizeof(strdln), "%s\n/spawn - Заспавниться\
		\n/count [секунды] - Запустить обратный отсчёт\
		\n/dmcount [секунды] - Запустить обратный DM-отсчёт\
		\n/kill - Умереть        /heal - Пополнить себе жизнь и броню", strdln);
		format(strdln, sizeof(strdln), "%s\n/tp - Точка телепорта от клана [Gn_R]\
		\n/cmchat - Очистить свой чат\
		\n/admins - Просмотреть On-Line админов\
		\n/givecash [ид] [сумма] - Передать деньги другому игроку", strdln);
		format(strdln, sizeof(strdln), "%s\n/pm [ид] [текст] - Написать личное сообщение другому игроку\
		\n/getid - Просмотреть ID транспорта и его модель\
		\n/ondr - Подключить себя к дрифт-соревнованию\
		\n/offdr - Отключить себя от дрифт-соревнования", strdln);
		format(strdln, sizeof(strdln), "%s\n/resdr - Обнулить свои очки дрифт-соревнования\
		\n/statdr [ид] - Просмотреть статус подключения другого\
		\n		игрока к дрифт-соревнованию\
		\n/a [текст] - Написать сообщение в админ-чат", strdln);
		format(strdln, sizeof(strdln), "%s\n/wantv - Получить список разыскиваемых игроков\
		\n/fine - Оштрафовать игрока (игроков)\
		\n/statpl 600 - Просмотреть свою частичную статистику\
		\n/statpl [ид] - Просмотреть частичную статистику другого игрока", strdln);
		format(strdln, sizeof(strdln), "%s\n/scrmd [режим] - Установить (временно) режимы экрана\
		\n/mmd - Включить / отключить (временно) Y -режим вызова меню\
		\n/svt - Сохранить временную точку телепорта\
		\n/rdt - ТП на временную точку телепорта", strdln);
		format(strdln, sizeof(strdln), "%s\n/g [текст] - Чат банды        /p [текст] - Чат полиции\
		\n/report [ид нарушителя] [жалоба] - Отправить репорт админам\
		\n/dt [виртуальный мир] - Режим дрифт тренировки        /rules - Правила сервера\
		\n/openpm [0-запретить, 1-разрешить] - Запретить / разрешить", strdln);
		format(strdln, sizeof(strdln), "%s\n		для себя приём личных сообщений ( PM )\
		\n/hh - Поприветствовать всех игроков\
		\n/bb - Попрощаться со всеми игроками\
		\n/ocam - Админ-меню оперативных команд", strdln);
		ShowPlayerDialog(playerid, 2, 0, "Помощь по командам", strdln, "OK", "");
		SetPVarInt(playerid, "DlgCont", 2);

    	return 1;
	}
	if(strcmp(cmd, "/cord", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:x, Float:y, Float:z, Float:Angle;
			GetPlayerPos(playerid, x, y, z);
			if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
			{
				new VID = GetPlayerVehicleID(playerid);
				GetVehicleZAngle(VID, Angle);
			}
			else
			{
				GetPlayerFacingAngle(playerid, Angle);
			}
			format(string, sizeof(string), "x = %f   y = %f   z = %f   поворот = %f   интерьер = %d   виртуальный мир = %d",
			x, y, z, Angle, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
			printf(" *** Админ %s использовал команду /cord .", RealName[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
    if(strcmp(cmd, "/givecash", true) == 0)
	{
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Ваш личный счёт заморожен, пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /givecash [ид игрока] [сумма]");
			return 1;
		}
		if(StopGMoney[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
		{//И игрок НЕ админ, то:
			new dopcis;
			dopcis = FCislit(StopGMoney[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopGMoney[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopGMoney[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopGMoney[playerid]);
			}
			SendClientMessage(playerid,COLOR_RED,string);
			return 1;
		}
		new playset;
		playset = strval(tmp);
		if(playset == playerid)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не можете передать деньги самому себе !");
			return 1;
		}
		if(IsPlayerConnected(playset))
		{
			if(gPlayerLogged[playset] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			if(PlayerInfo[playset][pDeport] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму !");
				return 1;
			}
			new money;
			money = strval(tmp);
			if(money < 0) { SendClientMessage(playerid, COLOR_RED, " Сумма не может быть отрицательным числом !"); return 1; }
			if(money == 0) { SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму !"); return 1; }
			if(GetPVarInt(playerid, "PlMon") < money) { SendClientMessage(playerid, COLOR_RED, " У Вас нет такой суммы."); return 1; }
			new dopper44, dopper55, dopper77;
			dopper44 = GetPVarInt(playerid, "PlMon");
			dopper55 = GetPVarInt(playset, "PlMon");
			dopper77 = dopper55 + money;
			if(dopper77 < dopper55)
			{
				format(string, sizeof(string), " У игрока %s [%d] слишком большая сумма !", RealName[playset], playset);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - money);
			SetPVarInt(playset, "PlMon", GetPVarInt(playset, "PlMon") + money);
			format(string, sizeof(string), " Игрок %s [%d] передал игроку %s [%d] %d $", RealName[playerid], playerid, RealName[playset], playset, money);
			print(string);
			SendAdminMessage(0xF4C330FF, string);
			if (PlayerInfo[playerid][pAdmin] == 0)
			{
				format(string, sizeof(string), " Вы передали игроку %s [%d] %d $", RealName[playset], playset, money);
				SendClientMessage(playerid, 0xF4C330FF, string);
			}
			if (PlayerInfo[playset][pAdmin] == 0)
			{
				format(string, sizeof(string), " Игрок %s [%d] передал Вам %d $", RealName[playerid], playerid, money);
				SendClientMessage(playset, 0xF4C330FF, string);
			}
			if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
			{
				StopGMoney[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
			}
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, dopper44);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playset], playset, dopper55);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
    if(strcmp(cmd, "/count", true) == 0)
	{
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду,");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SendClientMessage(playerid, COLOR_RED," Вы должны быть в транспорте.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /count [секунды(2-12)]");
			return 1;
		}
		new persec;
		persec = strval(tmp);
		if (persec < 2 || persec > 12)
		{
			SendClientMessage(playerid, COLOR_RED, " Секунды: от 2 до 12 !");
			return 1;
		}
		format(string, sizeof(string), "Russian_Drift: {C2A2DA}Игрок %s [%d] запустил отсчёт от %d секунд.", RealName[playerid], playerid, persec);
		print(string);
		SendClientMessageToAll(COLOR_GREEN, string);
		new Float: X, Float:Y, Float: Z, playint, playvw;
		GetPlayerPos(playerid, X, Y, Z);
		playint = GetPlayerInterior(playerid);
		playvw = GetPlayerVirtualWorld(playerid);
		persec++;
		countdown[playerid] = persec;
		for(new i = 0; i < MAX_PLAYERS ; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInRangeOfPoint(i,20.0,X,Y,Z) && GetPlayerInterior(i) == playint &&
				GetPlayerVirtualWorld(i) == playvw)
				{
					if(GetPlayerState(i) != PLAYER_STATE_ONFOOT && countdown[i] == -1) countdown[i] = persec;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/weat", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /weat [ид погоды]");
				return 1;
			}
			new testwea = strval(tmp);
			SetWeather(testwea);
			GlWeat = testwea;
			format(string, sizeof(string), " *** Админ %s установил ID погоды на %d", RealName[playerid], testwea);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
 	if(strcmp(cmd, "/setmon", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /setmon [ид игрока/часть ника] [сумма]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму !");
				return 1;
			}
			money = strval(tmp);
   			if(IsPlayerConnected(playa))
		    {
				if(gPlayerLogged[playa] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[playa][pDeport] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
					return 1;
				}
				if(money < 0) { SendClientMessage(playerid, COLOR_RED, " Сумма не может быть отрицательным числом !"); return 1; }
				new dopper44;
				dopper44 = GetPVarInt(playa, "PlMon");
				new twenlim, restlim;
				if(Fmadmins(2, RealName[playerid], money, twenlim, restlim) == 1)
				{
					SetPVarInt(playa, "PlMon", money);
					format(string, 256, " *** Админ %s установил игроку %s %d $", RealName[playerid],RealName[playa],money);
					print(string);
					if (PlayerInfo[playa][pAdmin] >= 1)
					{
						SendAdminMessage(COLOR_YELLOW, string);
					}
					else
					{
						SendClientMessageToAll(COLOR_YELLOW, string);
					}
					printf(" *** Админ %s >> Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", RealName[playerid],twenlim,restlim);
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playa], playa, dopper44);
				}
				else
				{
					if(restlim == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Вы израсходовали суточный денежный лимит !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! У Вас недостаточный остаток денежного лимита !");
					}
				}
				if(twenlim != 0)
				{
					format(string, 256, " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/grav", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 8)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /grav [гравитация(0.0001-1)]");
				return 1;
			}
			new dopper, dopper22, dopper33, testgra, Float:flgra;
			dopper = strlen(tmp);
			if (dopper < 1 || dopper > 8)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			dopper22 = 0;
			dopper33 = 0;
			for(new i = 0; i < dopper; i++)
			{
				if(tmp[i] < 46 || tmp[i] == 47 || tmp[i] > 57)
				{
					dopper22 = 1;
				}
				if(tmp[i] == 46)
				{
					dopper33++;
				}
			}
			if (dopper22 == 1 || dopper33 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			flgra = floatstr(tmp);
			testgra = 0;
			testgra = floatcmp(0.000100, flgra);
			if(testgra == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			testgra = 0;
			testgra = floatcmp(flgra, 1.000000);
			if(testgra == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			SetGravity(flgra);
			GlGrav = flgra;
			new Float:kgrav22;
			kgrav22 = GlGrav;
			if(kgrav22 == 1.000000) {kgrav22 = 0.999;}
			CoefGrav = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 1300.00);
			CoefGrav22 = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 750.00);
			format(string, sizeof(string), " *** Админ %s установил гравитацию на %f", RealName[playerid], flgra);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/admins", true) == 0)
	{
        AdminsLvl(playerid);
    	return 1;
	}
	if(strcmp(cmd, "/shad", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 9)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /shad [ид игрока/часть ника] [0-убрать скрытость, 1-скрыть]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
 			if(IsPlayerConnected(para1))
 			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if (PlayerInfo[para1][pAdmin] != 0)
				{
					if (PlayerInfo[para1][pAdmin] >= 10 && PlayerInfo[playerid][pAdmin] <= 9)
					{
						SendClientMessage(playerid, COLOR_RED, " Вы не можете изменять скрытость админа 10 уровня !");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [0-убрать скрытость, 1-скрыть] !");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					if(stat < 0 || stat > 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " 0-убрать скрытость, 1-скрыть !");
						return 1;
					}
					if(stat == 0 && PlayerInfo[para1][pAdmshad] == 0)
					{
	 					SendClientMessage(playerid, COLOR_RED, " У выбранного админа уже нет скрытости !");
						return 1;
					}
					if(stat == 1 && PlayerInfo[para1][pAdmshad] == 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " У выбранного админа уже есть скрытость !");
						return 1;
					}
					PlayerInfo[para1][pAdmshad] = stat;
					if(PlayerInfo[para1][pAdmshad] == 1)
					{
						format(string, sizeof(string), " *** Админ %s дал админу %s статус скрытости.", RealName[playerid], RealName[para1]);
						print(string);
						SendAdminMessage(COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), " *** Админ %s убрал с админа %s статус скрытости.", RealName[playerid], RealName[para1]);
						print(string);
						SendAdminMessage(COLOR_RED, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок - не админ !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/live", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			if (PlayerInfo[playerid][pAdmlive] == 1)
			{
				PlayerInfo[playerid][pAdmlive] = 0;
				format(string,sizeof(string)," *** Админ %s выключил собственное бессмертие.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pAdmlive] = 1;
				format(string,sizeof(string)," *** Админ %s включил собственное бессмертие.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/unbanakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 9)
    	{
   			new datacon, dopper;
			datacon = 0;//переменная проверки блокировки аккаунта
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /unbanakk [имя аккаунта]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
				{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Ошибка в имени аккаунта, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Такого аккаунта не существует !");
				return 1;
			}
#if (MOD4DINS >= 1)
			if(admData[playerid][dPassLock] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Аккаунт заблокирован системой паспортов !");
				return 1;
			}
#endif
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(fadm >= 1 && PlayerInfo[playerid][pAdmin] <= 9)//проверка аккаунта на админку
			{
				if(fadm == 11)//подмена 11-го левела на 10-й
				{
					dopper = 10;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(admData[playerid][dLock] == 1 && admData[playerid][dDeport] == 1)//если аккаунт заблокирован, и у игорока статус депортации, то:
			{
				admData[playerid][dDeport] = 0;//убрать статус депортации
			}
			if(admData[playerid][dLock] == 0)//если аккаунт НЕ был заблокирован, то:
			{
				datacon = 1;//записываем в переменную проверки блокировки аккаунта 1
			}
			admData[playerid][dLock] = 0;//сброс блокировки аккаунта
			strdel(ssss, 0, 256);//сборка RCON-команды разбана
			strcat(ssss, "unbanip ");
			strcat(ssss, admData[playerid][dIPAdr]);
			SendRconCommand(ssss);//RCON-команда разбана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
#if (MOD90INS == 0)
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Deport = %d,", admData[playerid][dDeport]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sLock = %d WHERE (Name = '%s')", strdln, admData[playerid][dLock], akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			if(datacon == 1)//если переменная проверки блокировки аккаунта = 1, то:
			{
				format(ssss,sizeof(ssss)," Аккаунт игрока [%s] не заблокирован (не забанен) !", akk);
				print(ssss);
				SendClientMessage(playerid, COLOR_RED, ssss);
				format(ssss,sizeof(ssss)," ( IP: [%s] был удалён из файла samp.ban ) !", admData[playerid][dIPAdr]);
				print(ssss);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
			else//иначе:
			{
				format(ssss,sizeof(ssss)," *** Админ %s разбанил аккаунт игрока [%s] ( IP: [%s] ) .", RealName[playerid], akk, admData[playerid][dIPAdr]);
				print(ssss);
				SendAdminMessage(COLOR_GREEN, ssss);
				format(ssss,sizeof(ssss)," *** Админ %s разбанил аккаунт игрока [%s] .", RealName[playerid], akk);
				for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
				{
					if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
					{
						SendClientMessage(i, COLOR_GREEN, ssss);
					}
				}
			}

			new string222[256], string333[256], idfile;
			idfile = 0;
			new ip333[128];
			ip333 = ConvIP(admData[playerid][dIPAdr]);
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))//читаем аккаунт из бан-листа (если файл существует)
			{
				new File: UserFile44 = fopen(string222, io_read);//чтение аккаунта из бан-листа
				new key44[ 256 ] , val44[ 256 ];
				new Data44[ 256 ];
				while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
				{
					key44 = ini_GetKey( Data44 );
					if( strcmp( key44 , "Data" , true ) == 0 ) { string333 = ini_GetValue( Data44 ); }
					if( strcmp( key44 , "IDFile" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
				}
				fclose(UserFile44);
				strdel(string333, strlen(string333)-1, strlen(string333));//корректировка причины бана
			}
			format(string222,sizeof(string222),"bantime/%d.ini",idfile);
			if(fexist(string222))//если файл временного бана существует, то:
			{
				fremove(string222);//удаление ид-файла временного бана
				printf("[BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) .", akk, idfile);
				format(ssss,sizeof(ssss)," ( Файл временного бана игрока [%s] был удалён ) !", akk);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))
			{
				fremove(string222);//удаляем аккаунт из бан-листа
				format(ssss,sizeof(ssss)," ( Аккаунт игрока [%s] был удалён из бан-листа ) !", akk);
				print(ssss);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
			format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
			if(fexist(string222))
			{
				fremove(string222);//удаляем IP-адрес из бан-листа
				format(ssss,sizeof(ssss)," ( IP-адрес [%s] был удалён из бан-листа ) !", admData[playerid][dIPAdr]);
				print(ssss);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/admtp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			new dopper2 = 0;
			new Float:PosX, Float:PosY, Float:PosZ;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playspa[i] == 1 && (PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmin] <= 10) && i != playerid)
					{
						dopper2 = 1;
						if(PlayerInfo[i][pPrisonsec] > 0)//если админ в тюрьме, то:
						{
							PlayerInfo[i][pPrison]--;
							PlayerInfo[i][pPrisonsec] = 0;
							SpawnPlayer(i);//респавн админа
							SendClientMessage(i, COLOR_GREEN, "* Амнистия ( по команде /admtp )");
							SetTimerEx("DopAdmtp", 1000, 0, "ii", playerid, i);
						}
						else
						{
							if(PlayLock1[0][i] != 600)//если админ заблокирован, то:
							{
								tpdrift[i] = 1;
								PlayLock1[1][i] = GetPlayerInterior(playerid);//изменение интерьера блокировки
								PlayLock1[2][i] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
								GetPlayerPos(playerid, PlayLock2[0][i], PlayLock2[1][i], PlayLock2[2][i]);//изменение координат блокировки
								PlayLock2[1][i] = PlayLock2[1][i] + 1;
							}
							else
							{
								if(admper1[i] != 600)//если админ в наблюдении, то:
								{
									TogglePlayerSpectating(i, 0);//запретить наблюдение для админа
									admper6[i] = 0;//обнуляем отметку о переключении наблюдения
									SetTimerEx("DopAdmtp", 1000, 0, "ii", playerid, i);
								}
								else
								{
									EnterTick33[i] = 1;//обход антикрашера - 3
									tpdrift[i] = 1;
			 						SetPlayerInterior(i, GetPlayerInterior(playerid));
									SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
			   						GetPlayerPos(playerid, PosX, PosY, PosZ);
									SetPlayerPos(i, PosX, PosY+1, PosZ+1);
								}
							}
						}
					}
				}
			}
            if(dopper2 == 1)
            {
				format(string,256," *** Админ %s телепортировал всех админов к себе.",RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Нет доступных админов для ТП к себе !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/mess", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /mess [цвет(0-19)] [сообщение] , или /mess 600");
				return 1;
			}
			new color;
			color = strval(tmp);
			if(color < 0 || (color > 19 && color < 600) || color > 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Цвет(0-19) , или 600 !");
				return 1;
			}
			if(color == 600)
			{
				format(strdln, sizeof(strdln), "{A9C4E4}0 - {FF0000}Красный\
				\n{A9C4E4}1 - {FF3F3F}Светло-красный\
				\n{A9C4E4}2 - {FF3F00}Кирпичный\
				\n{A9C4E4}3 - {BF3F00}Коричневый");
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}4 - {FF7F3F}Светло-коричневый\
				\n{A9C4E4}5 - {FF7F00}Оранжевый\
				\n{A9C4E4}6 - {FFFF00}Жёлтый\
				\n{A9C4E4}7 - {3FFF3F}Светло-зелёный", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}8 - {00FF00}Зелёный\
				\n{A9C4E4}9 - {00BF00}Тёмно-зелёный\
				\n{A9C4E4}10 - {00FFFF}Бирюзовый\
				\n{A9C4E4}11 - {00BFFF}Голубой", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}12 - {3F3FFF}Светло-синий\
				\n{A9C4E4}13 - {0000FF}Синий\
				\n{A9C4E4}14 - {7F3FFF}Светло-фиолетовый\
				\n{A9C4E4}15 - {7F00FF}Фиолетовый", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}16 - {FF00FF}Сиреневый\
				\n{A9C4E4}17 - {7F7F7F}Серый\
				\n{A9C4E4}18 - {FFFFFF}Белый\
				\n{A9C4E4}19 - {333333}Чёрный", strdln);
				ShowPlayerDialog(playerid, 2, 0, "Цвет:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new idx22 = idx;
			new result[256];
			while ((idx22 < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				if (cmdtext[idx22] == 123 && cmdtext[idx22 + 1] == 44)
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
					idx22++;
				}
				else
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
				}
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не написали сообщение !");
				return 1;
			}
			format(string, sizeof(string), "(/mess) Админ %s [%d]: %s", RealName[playerid], playerid, result);
			print(string);
			switch(color)
			{
				case 0: format(string, sizeof(string), "{FF0000}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 1: format(string, sizeof(string), "{FF3F3F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 2: format(string, sizeof(string), "{FF3F00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 3: format(string, sizeof(string), "{BF3F00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 4: format(string, sizeof(string), "{FF7F3F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 5: format(string, sizeof(string), "{FF7F00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 6: format(string, sizeof(string), "{FFFF00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 7: format(string, sizeof(string), "{3FFF3F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 8: format(string, sizeof(string), "{00FF00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 9: format(string, sizeof(string), "{00BF00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 10: format(string, sizeof(string), "{00FFFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 11: format(string, sizeof(string), "{00BFFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 12: format(string, sizeof(string), "{3F3FFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 13: format(string, sizeof(string), "{0000FF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 14: format(string, sizeof(string), "{7F3FFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 15: format(string, sizeof(string), "{7F00FF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 16: format(string, sizeof(string), "{FF00FF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 17: format(string, sizeof(string), "{7F7F7F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 18: format(string, sizeof(string), "{FFFFFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 19: format(string, sizeof(string), "{333333}Админ %s [%d]: %s", RealName[playerid], playerid, result);
			}
			SendClientMessageToAll(COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/fmess", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 8)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /fmess [цвет(0-19)] [сообщение] , или /fmess 600");
				return 1;
			}
			new color;
			color = strval(tmp);
			if(color < 0 || (color > 19 && color < 600) || color > 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Цвет(0-19) , или 600 !");
				return 1;
			}
			if(color == 600)
			{
				format(strdln, sizeof(strdln), "{A9C4E4}0 - {FF0000}Красный\
				\n{A9C4E4}1 - {FF3F3F}Светло-красный\
				\n{A9C4E4}2 - {FF3F00}Кирпичный\
				\n{A9C4E4}3 - {BF3F00}Коричневый");
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}4 - {FF7F3F}Светло-коричневый\
				\n{A9C4E4}5 - {FF7F00}Оранжевый\
				\n{A9C4E4}6 - {FFFF00}Жёлтый\
				\n{A9C4E4}7 - {3FFF3F}Светло-зелёный", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}8 - {00FF00}Зелёный\
				\n{A9C4E4}9 - {00BF00}Тёмно-зелёный\
				\n{A9C4E4}10 - {00FFFF}Бирюзовый\
				\n{A9C4E4}11 - {00BFFF}Голубой", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}12 - {3F3FFF}Светло-синий\
				\n{A9C4E4}13 - {0000FF}Синий\
				\n{A9C4E4}14 - {7F3FFF}Светло-фиолетовый\
				\n{A9C4E4}15 - {7F00FF}Фиолетовый", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}16 - {FF00FF}Сиреневый\
				\n{A9C4E4}17 - {7F7F7F}Серый\
				\n{A9C4E4}18 - {FFFFFF}Белый\
				\n{A9C4E4}19 - {333333}Чёрный", strdln);
				ShowPlayerDialog(playerid, 2, 0, "Цвет:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new idx22 = idx;
			new result[256];
			while ((idx22 < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				if (cmdtext[idx22] == 123 && cmdtext[idx22 + 1] == 44)
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
					idx22++;
				}
				else
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
				}
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не написали сообщение !");
				return 1;
			}
			format(string, sizeof(string), "(/fmess) Админ %s [%d]: %s", RealName[playerid], playerid, result);
			print(string);
			switch(color)
			{
				case 0: format(string, sizeof(string), "{FF0000}%s", result);
				case 1: format(string, sizeof(string), "{FF3F3F}%s", result);
				case 2: format(string, sizeof(string), "{FF3F00}%s", result);
				case 3: format(string, sizeof(string), "{BF3F00}%s", result);
				case 4: format(string, sizeof(string), "{FF7F3F}%s", result);
				case 5: format(string, sizeof(string), "{FF7F00}%s", result);
				case 6: format(string, sizeof(string), "{FFFF00}%s", result);
				case 7: format(string, sizeof(string), "{3FFF3F}%s", result);
				case 8: format(string, sizeof(string), "{00FF00}%s", result);
				case 9: format(string, sizeof(string), "{00BF00}%s", result);
				case 10: format(string, sizeof(string), "{00FFFF}%s", result);
				case 11: format(string, sizeof(string), "{00BFFF}%s", result);
				case 12: format(string, sizeof(string), "{3F3FFF}%s", result);
				case 13: format(string, sizeof(string), "{0000FF}%s", result);
				case 14: format(string, sizeof(string), "{7F3FFF}%s", result);
				case 15: format(string, sizeof(string), "{7F00FF}%s", result);
				case 16: format(string, sizeof(string), "{FF00FF}%s", result);
				case 17: format(string, sizeof(string), "{7F7F7F}%s", result);
				case 18: format(string, sizeof(string), "{FFFFFF}%s", result);
				case 19: format(string, sizeof(string), "{333333}%s", result);
			}
			SendClientMessageToAll(COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/tweap", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /tweap [ид игрока/часть ника]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
 			if(IsPlayerConnected(para1))
 			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				ResetPlayerWeapons(para1);//отбираем оружие и предметы
				format(string, sizeof(string), " *** Админ %s отобрал у игрока %s все предметы и всё оружие.", RealName[playerid], RealName[para1]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/banakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 6)
    	{
   			new dopper;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /banakk [имя аккаунта] [причина]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Такого аккаунта не существует !");
				return 1;
			}
#if (MOD4DINS >= 1)
			if(admData[playerid][dPassLock] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Аккаунт заблокирован системой паспортов !");
				return 1;
			}
#endif
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(fadm >= 1 && PlayerInfo[playerid][pAdmin] <= 9)//проверка аккаунта на админку
			{
				if(fadm == 11)//подмена 11-го левела на 10-й
				{
					dopper = 10;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(admData[playerid][dLock] == 1)//если аккаунт был заблокирован, то:
			{
				format(ssss,sizeof(ssss)," Аккаунт игрока [%s] уже заблокирован (забанен) !", akk);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			admData[playerid][dLock] = 1;//блокировка аккаунта
			strdel(ssss, 0, 256);//сборка RCON-команды бана
			strcat(ssss, "banip ");
			strcat(ssss, admData[playerid][dIPAdr]);
			SendRconCommand(ssss);//RCON-команда бана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
#if (MOD90INS == 0)
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Lock = %d ", admData[playerid][dLock]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] ( IP: [%s] ) , причина: %s", RealName[playerid], akk, admData[playerid][dIPAdr], result);
			print(ssss);
			SendAdminMessage(COLOR_RED, ssss);
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] , причина: %s", RealName[playerid], akk, result);
			for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
				{
					SendClientMessage(i, COLOR_RED, ssss);
				}
			}

			new reason[128];
    		if(!strlen(result))//делаем отметку, если причина не указана
			{
				format(reason, 128, "* Причина не указана. (команда /banakk) Админ: [ %s ]", RealName[playerid]);
			}
			else
			{
				format(reason, 128, "%s (команда /banakk) Админ: [ %s ]", result, RealName[playerid]);
			}

			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты

			new string999[256], stringdop[256];
			format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - %s",admData[playerid][dIPAdr],timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
			format(string999,sizeof(string999),"banlist/players/%s.ini",akk);
			new File: hFile44 = fopen(string999, io_write);//запись файла бан-листа
			if (hFile44)
			{
				new var[256];
				format(var, 256, "Data=%s\n",stringdop);fwrite(hFile44, var);
				format(var, 256, "IDFile=%d\n",0);fwrite(hFile44, var);
				fclose(hFile44);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/banakktm", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 5)
    	{
   			new dopper, csut, csut22;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /banakktm [имя аккаунта] [число суток] [причина]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Такого аккаунта не существует !");
				return 1;
			}
#if (MOD4DINS >= 1)
			if(admData[playerid][dPassLock] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Аккаунт заблокирован системой паспортов !");
				return 1;
			}
#endif
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(fadm >= 1 && PlayerInfo[playerid][pAdmin] <= 9)//проверка аккаунта на админку
			{
				if(fadm == 11)//подмена 11-го левела на 10-й
				{
					dopper = 10;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(admData[playerid][dLock] == 1)//если аккаунт был заблокирован, то:
			{
				format(ssss,sizeof(ssss)," Аккаунт игрока [%s] уже заблокирован (забанен) !", akk);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			csut = strval(tmp);
			if(csut < 1 || csut > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Число суток бана должно быть от 1 до 25 !");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			admData[playerid][dLock] = 1;//блокировка аккаунта
			strdel(ssss, 0, 256);//сборка RCON-команды бана
			strcat(ssss, "banip ");
			strcat(ssss, admData[playerid][dIPAdr]);
			SendRconCommand(ssss);//RCON-команда бана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
#if (MOD90INS == 0)
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Lock = %d ", admData[playerid][dLock]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] на %d суток ( IP: [%s] ) , причина: %s", RealName[playerid], akk, csut, admData[playerid][dIPAdr], result);
			print(ssss);
			SendAdminMessage(COLOR_RED, ssss);
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] на %d суток , причина: %s", RealName[playerid], akk, csut, result);
			for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
				{
					SendClientMessage(i, COLOR_RED, ssss);
				}
			}

			new reason[128];
    		if(!strlen(result))//делаем отметку, если причина не указана
			{
				format(reason, 128, "* Причина не указана. (/banakktm на %d суток) Админ: [ %s ]", csut, RealName[playerid]);
			}
			else
			{
				format(reason, 128, "%s (/banakktm на %d суток) Админ: [ %s ]", result, csut, RealName[playerid]);
			}

			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты

			new string999[256];
			csut22 = ProcUnban(csut);//вычисление дня разбана
			new doplll, doplll22, doplll33;//запись ид-файла временного бана
			doplll = 1;//переменная цикла
			doplll22 = 0;//маркерная переменная
			while(doplll < 1001)//создаём неполный цикл
			{
				format(string999,sizeof(string999),"bantime/%d.ini",doplll);
				if(!fexist(string999))//если файла с именем ид-переменной (doplll) нету, то:
				{//создаём такой файл
					doplll22 = 1;//устанавливаем маркерную переменную
					new File: hFile55 = fopen(string999, io_write);//запись файла
					if (hFile55)
					{
						new var[64];
						format(var, 64, "Login=%s\n",akk);fwrite(hFile55, var);
						format(var, 64, "IPAdr=%s\n",admData[playerid][dIPAdr]);fwrite(hFile55, var);
						format(var, 64, "Dataunban=%d\n",csut22);fwrite(hFile55, var);
						fclose(hFile55);
					}
					printf("[BanTime] Временному бану игрока [%s] был присвоен ид [%d] .", akk, doplll);
					break;//завершаем неполный цикл
				}
				doplll++;//инкрементируем переменную цикла, и продолжаем цикл
			}
			doplll33 = doplll;//подготовка ид-файла к записи в бан-лист
			if(doplll22 == 0)//если после окончания цикла, маркерная переменная НЕ была установлена, то:
			{//передаём админам сообщение о переполнении таблицы временных банов
				doplll33 = 0;//ид-файла = 0 (файл НЕ создан)
				print("[BanTime] Превышен лимит файлов в таблице временных банов !!!");
				SendAdminMessage(COLOR_RED, " * Превышен лимит файлов в таблице временных банов !!!");
				print("[BanTime] Временный бан НЕ был сохранён !!!");
				SendAdminMessage(COLOR_RED, " * Временный бан НЕ был сохранён !!!");
			}

			new stringdop[256];
			format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - %s",admData[playerid][dIPAdr],timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
			format(string999,sizeof(string999),"banlist/players/%s.ini",akk);
			new File: hFile44 = fopen(string999, io_write);//запись файла бан-листа
			if (hFile44)
			{
				new var[256];
				format(var, 256, "Data=%s\n",stringdop);fwrite(hFile44, var);
				format(var, 256, "IDFile=%d\n",doplll33);fwrite(hFile44, var);
				fclose(hFile44);
			}

		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/line", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /line 0 , или");
				SendClientMessage(playerid, COLOR_GRAD2, " /line [трасса(1-5)] [0-отключить, 1-подключить] ,");
				SendClientMessage(playerid, COLOR_GRAD2, " или /line 100 - отключить ВСЕ трассы");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if ((para1 < 0 || para1 > 5) && para1 != 100)
			{
				SendClientMessage(playerid, COLOR_RED, " Номер трассы от 1 до 5 , или 0 , или 100 !");
				return 1;
			}
			if (para1 == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " --- Статистика трасс ---");
				format(string,sizeof(string)," Тр.1-[%d] Тр.2-[%d] Тр.3-[%d] Тр.4-[%d] Тр.5-[%d]", LineStat[1], LineStat[2],
				LineStat[3], LineStat[4], LineStat[5]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				printf(" *** Админ %s просмотрел статистику трасс.", RealName[playerid]);
				return 1;
			}
			if (para1 == 100)
			{
				LineOff1();
				LineOff2();
				LineOff3();
				LineOff4();
				LineOff5();
				LineStat[1] = 0;
				LineStat[2] = 0;
				LineStat[3] = 0;
				LineStat[4] = 0;
				LineStat[5] = 0;
				SaveLine();//запись статуса трасс
				format(string,sizeof(string)," *** Админ %s отключил ВСЕ трассы.", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [0-отключить, 1-подключить] !");
				return 1;
			}
			new stat;
			stat = strval(tmp);
			if (stat < 0 || stat > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " 0-отключить, 1-подключить !");
				return 1;
			}
			if (stat == LineStat[para1] && stat == 0)
			{
				format(string,sizeof(string)," Трасса %d уже отключена !", para1);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			if (stat == LineStat[para1] && stat == 1)
			{
				format(string,sizeof(string)," Трасса %d уже подключена !", para1);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			if (stat == 0)
			{
				LineStat[para1] = stat;
				SaveLine();//запись статуса трасс
				format(string,sizeof(string)," *** Админ %s отключил трассу %d .", RealName[playerid], para1);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				if(para1 == 1) { LineOff1(); }
				if(para1 == 2) { LineOff2(); }
				if(para1 == 3) { LineOff3(); }
				if(para1 == 4) { LineOff4(); }
				if(para1 == 5) { LineOff5(); }
				return 1;
			}
			if (stat == 1)
			{
				LineStat[para1] = stat;
				SaveLine();//запись статуса трасс
				format(string,sizeof(string)," *** Админ %s подключил трассу %d .", RealName[playerid], para1);
				print(string);
				SendClientMessageToAll(COLOR_GREEN, string);
				if(para1 == 1) { LineOn1(); }
				if(para1 == 2) { LineOn2(); }
				if(para1 == 3) { LineOn3(); }
				if(para1 == 4) { LineOn4(); }
				if(para1 == 5) { LineOn5(); }
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if (strcmp("/untouch", cmdtext, true, 10) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] == 11)
			{
				SendClientMessage(playerid, COLOR_RED, " У Вас уже есть уровень главного (неприкасаемого) админа сервера !");
				return 1;
			}
			new dopper;
			format(string, sizeof(string), " *** Игрок %s [%d] сделал себя главным (неприкасаемым) админом на сервере.", RealName[playerid], playerid);
			print(string);
			SendClientMessage(playerid,COLOR_GREY," *** Вы сделали себя главным (неприкасаемым) админом на сервере.");
			dopper = PlayerInfo[playerid][pAdmin];
			PlayerInfo[playerid][pAdmin] = 11;
			AdmUpdate(RealName[playerid], PlayerInfo[playerid][pAdmin], 1);
			new twenlim = 0;
			new restlim = 0;
			Fmadmins(1, RealName[playerid], 0, twenlim, restlim);
			if (dopper <= 4)
			{
				PlayerInfo[playerid][pAdmlive] = 1;//установить бессмертие
				SendClientMessage(playerid, COLOR_GREEN, " Бессмертие включено.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/openpm", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openpm [0-запретить приём PM, 1-разрешить приём PM]");
			return 1;
		}
		new para1;
		para1 = strval(tmp);
		if (para1 < 0 || para1 > 1)
		{
			SendClientMessage(playerid, COLOR_RED, " [0-запретить приём PM, 1-разрешить приём PM] !");
			return 1;
		}
		if (PlayerInfo[playerid][pRecPM] == 0 && para1 == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Приём PM от игроков уже запрещён !");
			return 1;
		}
		if (PlayerInfo[playerid][pRecPM] == 1 && para1 == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Приём PM от игроков уже разрешён !");
			return 1;
		}
		if(para1 == 0)
		{
			PlayerInfo[playerid][pRecPM] = 0;
			printf(" Игрок %s [%d] запретил для себя приём PM от игроков.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_RED, " Вы запретили для себя приём PM от игроков.");
		}
		else
		{
			PlayerInfo[playerid][pRecPM] = 1;
			printf(" Игрок %s [%d] разрешил для себя приём PM от игроков.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_GREEN, " Вы разрешили для себя приём PM от игроков.");
		}
		return 1;
 	}
	if(strcmp(cmd, "/admakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 10)
    	{
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /admakk [имя аккаунта] [админ LVL(0-10)] ( дополнительно:");
				SendClientMessage(playerid, COLOR_GRAD2, " [LVL полиции(0-3)] [депортация(0-1)] [разрешение приёма PM(0-1)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [скрытость админа(0-1)] [сумма] ),");
				SendClientMessage(playerid, COLOR_GRAD2, " или /admakk [имя аккаунта] 98 - экспортировать аккаунт в файл,");
				SendClientMessage(playerid, COLOR_GRAD2, " или /admakk [имя аккаунта] 99 [пароль] - сменить пароль,");
				SendClientMessage(playerid, COLOR_GRAD2, " или /admakk [имя аккаунта] 100 - просмотреть аккаунт");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			new entpass[64], level, oldlevel, police1, police2, deport1, deport2;
			new razres1, razres2, scrit1, scrit2, summ1, summ2, dopper;
			dopper = 0;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [админ LVL(0-10), или 98, или 99, или 100] ( дополнительно: [LVL полиции(0-3)]");
				SendClientMessage(playerid, COLOR_RED, " [депортация(0-1)] [разрешение приёма PM(0-1)] [скрытость админа(0-1)] [сумма] ) !");
				return 1;
			}
			level = strval(tmp);
			if((level < 0 || level > 10) && level != 98 && level != 99 && level != 100)
			{
	 			SendClientMessage(playerid, COLOR_RED, " Уровень админа должен быть от 0 до 10 , (или 98, или 99, или 100) !");
				return 1;
			}
			if(level == 99)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " /admakk [имя аккаунта] 99 [пароль] !");
					return 1;
				}
 				if(strlen(tmp) < 3 || strlen(tmp) > 20)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
					return 1;
				}
 				if(PassControl(tmp) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
					SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
					return 1;
				}
				strdel(entpass, 0, 64);
				strcat(entpass, tmp);
			}
			else
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					police1 = 0;
				}
				else
				{
					police1 = 1;
					police2 = strval(tmp);
					if(police2 < 0 || police2 > 3)
					{
	 					SendClientMessage(playerid, COLOR_RED, " LVL полиции должен быть от 0 до 3 !");
						return 1;
					}
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					deport1 = 0;
				}
				else
				{
					deport1 = 1;
					deport2 = strval(tmp);
					if(deport2 < 0 || deport2 > 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " Депортация должна быть 0 или 1 !");
						return 1;
					}
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					razres1 = 0;
				}
				else
				{
					razres1 = 1;
					razres2 = strval(tmp);
					if(razres2 < 0 || razres2 > 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " Разрешение приёма PM должно быть 0 или 1 !");
						return 1;
					}
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					scrit1 = 0;
				}
				else
				{
					scrit1 = 1;
					scrit2 = strval(tmp);
					if(scrit2 < 0 || scrit2 > 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " Скрытость админа должна быть 0 или 1 !");
						return 1;
					}
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					summ1 = 0;
				}
				else
				{
					summ1 = 1;
					summ2 = strval(tmp);
				}
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Ошибка чтения аккаунта игрока !");
				return 1;
			}
			if(level == 98)
			{
				new locstr[128];
				format(locstr, sizeof(locstr), "players/export/%s.ini", akk);
				if(fexist(locstr))//если аккаунт уже был экспортирован, то:
				{
					fremove(locstr);//удаляем старый экспортированный аккаунт
				}
				new File: hFile = fopen(locstr, io_write);//запись экспортированного аккаунта
				if (hFile)
				{
					new var[128];
					format(var, 128, "Key=%s\n",admData[playerid][dKey]);fwrite(hFile, var);
					format(var, 128, "TDReg=%s\n",admData[playerid][dTDReg]);fwrite(hFile, var);
					format(var, 128, "DEndConD=%d\n",admData[playerid][dEndConD]);fwrite(hFile, var);
					format(var, 128, "DEndConM=%d\n",admData[playerid][dEndConM]);fwrite(hFile, var);
					format(var, 128, "DEndConY=%d\n",admData[playerid][dEndConY]);fwrite(hFile, var);
					format(var, 128, "IPAdr=%s\n",admData[playerid][dIPAdr]);fwrite(hFile, var);
					format(var, 128, "MinLog=%d\n",admData[playerid][dMinlog]);fwrite(hFile, var);
					format(var, 128, "AdminLevel=%d\n",admData[playerid][dAdmin]);fwrite(hFile, var);
					format(var, 128, "AdminShadow=%d\n",admData[playerid][dAdmshad]);fwrite(hFile, var);
					format(var, 128, "AdminLive=%d\n",admData[playerid][dAdmlive]);fwrite(hFile, var);
					format(var, 128, "AdminScanCom=%d\n",admData[playerid][dAdmscancom]);fwrite(hFile, var);
					format(var, 128, "Registered=%d\n",admData[playerid][dReg]);fwrite(hFile, var);
					format(var, 128, "Prison=%d\n",admData[playerid][dPrison]);fwrite(hFile, var);
					format(var, 128, "Prisonsec=%d\n",admData[playerid][dPrisonsec]);fwrite(hFile, var);
					format(var, 128, "Muted=%d\n",admData[playerid][dMuted]);fwrite(hFile, var);
					format(var, 128, "Mutedsec=%d\n",admData[playerid][dMutedsec]);fwrite(hFile, var);
					format(var, 128, "Money=%d\n",admData[playerid][dMoney]);fwrite(hFile, var);
					format(var, 128, "Kills=%d\n",admData[playerid][dKills]);fwrite(hFile, var);
					format(var, 128, "Deaths=%d\n",admData[playerid][dDeaths]);fwrite(hFile, var);
					format(var, 128, "Police=%d\n",admData[playerid][dPolice]);fwrite(hFile, var);
					format(var, 128, "Deport=%d\n",admData[playerid][dDeport]);fwrite(hFile, var);
					format(var, 128, "RecPM=%d\n",admData[playerid][dRecPM]);fwrite(hFile, var);
					format(var, 128, "Wanted=%d\n",admData[playerid][dWanted]);fwrite(hFile, var);
					format(var, 128, "Lock=%d\n",admData[playerid][dLock]);fwrite(hFile, var);
					format(var, 128, "Gang=%d\n",admData[playerid][dGang]);fwrite(hFile, var);
					format(var, 128, "GangLvl=%d\n",admData[playerid][dGangLvl]);fwrite(hFile, var);
					format(var, 128, "Pass_data1=%s\n",admData[playerid][dPass_data1]);fwrite(hFile, var);
					format(var, 128, "Pass_inout1=%s\n",admData[playerid][dPass_inout1]);fwrite(hFile, var);
					format(var, 128, "Pass_ver1=%s\n",admData[playerid][dPass_ver1]);fwrite(hFile, var);
					format(var, 128, "Pass_count1=%d\n",admData[playerid][dPass_count1]);fwrite(hFile, var);
					format(var, 128, "Pass_data2=%s\n",admData[playerid][dPass_data2]);fwrite(hFile, var);
					format(var, 128, "Pass_inout2=%s\n",admData[playerid][dPass_inout2]);fwrite(hFile, var);
					format(var, 128, "Pass_ver2=%s\n",admData[playerid][dPass_ver2]);fwrite(hFile, var);
					format(var, 128, "Pass_count2=%d\n",admData[playerid][dPass_count2]);fwrite(hFile, var);
					format(var, 128, "Pass_data3=%s\n",admData[playerid][dPass_data3]);fwrite(hFile, var);
					format(var, 128, "Pass_inout3=%s\n",admData[playerid][dPass_inout3]);fwrite(hFile, var);
					format(var, 128, "Pass_ver3=%s\n",admData[playerid][dPass_ver3]);fwrite(hFile, var);
					format(var, 128, "Pass_count3=%d\n",admData[playerid][dPass_count3]);fwrite(hFile, var);
					format(var, 128, "Pass_data4=%s\n",admData[playerid][dPass_data4]);fwrite(hFile, var);
					format(var, 128, "Pass_inout4=%s\n",admData[playerid][dPass_inout4]);fwrite(hFile, var);
					format(var, 128, "Pass_ver4=%s\n",admData[playerid][dPass_ver4]);fwrite(hFile, var);
					format(var, 128, "Pass_count4=%d\n",admData[playerid][dPass_count4]);fwrite(hFile, var);
					format(var, 128, "PassMode=%d\n",admData[playerid][dPassMode]);fwrite(hFile, var);
					format(var, 128, "PassDel=%d\n",admData[playerid][dPassDel]);fwrite(hFile, var);
					format(var, 128, "PassLock=%d\n",admData[playerid][dPassLock]);fwrite(hFile, var);
					format(var, 128, "PassError=%d\n",admData[playerid][dPassError]);fwrite(hFile, var);
					fclose(hFile);
				}
				if(!fexist(locstr))//если аккаунт НЕ был экспортирован, то:
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка !! Аккаунт НЕ был экспортирован ! Для экспортирования");
					SendClientMessage(playerid, COLOR_RED, " аккаунта создайте путь: scriptfiles/players/export/ !");
				}
				else//иначе, (если аккаунта был экспортирован), то:
				{
					printf(" *** Админ %s экспортировал аккаунт игрока [%s] .", RealName[playerid], akk);
					format(ssss, sizeof(ssss), " Вы экспортировали аккаунт игрока [%s] .", akk);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, ssss);
				}
				return 1;
			}
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(level == 100)
			{
				new dopdata44;
				dopdata44 = 0;
				for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
				{
	   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
			    	{
						if(strcmp(akk, RealName[i], false) == 0) { dopdata44 = 1; }
					}
				}
				new datagang;
				if(admData[playerid][dGang] == -600)
				{
					datagang = 0;
				}
				else
				{
					datagang = admData[playerid][dGang];
				}
				printf(" *** Админ %s [%d] просмотрел аккаунт игрока %s .", RealName[playerid], playerid, akk);

				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
				format(ssss,sizeof(ssss),"           *** Аккаунт игрока [%s] ***", akk);
				SendClientMessage(playerid, COLOR_WHITE, ssss);
				if(dopdata44 == 1)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! Аккаунт игрока On-Line !");
				}
				format(ssss,sizeof(ssss)," Время и дата регистрации: [ %s ]", admData[playerid][dTDReg]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Дата последнего входа на сервер: [ %02d/%02d/%04d ]", admData[playerid][dEndConD],admData[playerid][dEndConM],admData[playerid][dEndConY]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Пароль: [%s] IP: [%s] Админ LVL: [%d] Скрытость админа: [%d] Сканирование команд сервера: [%d]", admData[playerid][dKey],admData[playerid][dIPAdr],fadm,admData[playerid][dAdmshad],admData[playerid][dAdmscancom]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Посадок в тюрьму: [%d] Секунд тюрьмы: [%d] Число затыков: [%d] Секунд затыка: [%d]", admData[playerid][dPrison],admData[playerid][dPrisonsec],admData[playerid][dMuted],admData[playerid][dMutedsec]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Убийств: [%d] Смертей: [%d] Розыск: [%d] LVL полиции: [%d] Депортация: [%d] Разрешение приёма PM: [%d]", admData[playerid][dKills],admData[playerid][dDeaths],admData[playerid][dWanted],admData[playerid][dPolice],admData[playerid][dDeport],admData[playerid][dRecPM]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Денег: [%d $] Минут на сервере: [%d] Бессмертие: [%d] Блокировка аккаунта: [%d]", admData[playerid][dMoney],admData[playerid][dMinlog],admData[playerid][dAdmlive],admData[playerid][dLock]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				if(fadm >= 6)
				{
					new twenlim, restlim;
					Fmadmins(2, akk, 0, twenlim, restlim);
					format(ssss,sizeof(ssss)," Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
					SendClientMessage(playerid, COLOR_GRAD1, ssss);
				}
				format(ssss,sizeof(ssss)," ID банды: [%d] Уровень в банде: [%d]", datagang,admData[playerid][dGangLvl]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
#if (MOD4DINS >= 1)
				if(admData[playerid][dPassLock] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Внимание !!! Аккаунт заблокирован системой паспортов,");
					SendClientMessage(playerid, COLOR_RED, " БЕЗ возможности восстановления !!!");
				}
#endif
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");

				new string222[256];
				new ip333[128];
				ip333 = ConvIP(admData[playerid][dIPAdr]);
				format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
				if(fexist(string222))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! Аккаунт обнаружен в бан-листе !");
				}
				format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
				if(fexist(string222))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! IP-адрес обнаружен в бан-листе !");
				}

				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			if(level == 99)
			{
				if(strcmp(admData[playerid][dKey], entpass, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Аккаунт игрока остался без изменений !");
					return 1;
				}
				printf(" *** Админ %s сменил пароль аккаунту игрока [%s] на (%s) FP: (%s) .", RealName[playerid], akk, entpass, admData[playerid][dKey]);
				format(ssss, sizeof(ssss), " Вы сменили пароль аккаунту игрока [%s] на (%s) FP: (%s) .", akk, entpass, admData[playerid][dKey]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, ssss);
				strdel(admData[playerid][dKey], 0, 32);
				strmid(admData[playerid][dKey], entpass, 0, strlen(entpass), 32);
			}
			else
			{
				if(level == fadm && (police1 == 0 || police2 == admData[playerid][dPolice]) && (deport1 == 0 || deport2 == admData[playerid][dDeport]) &&
				(razres1 == 0 || razres2 == admData[playerid][dRecPM]) && (scrit1 == 0 || scrit2 == admData[playerid][dAdmshad]) && (summ1 == 0 || summ2 == admData[playerid][dMoney]))
				{
	 				SendClientMessage(playerid, COLOR_RED, " Аккаунт игрока остался без изменений !");
					return 1;
				}
				if(level == 0 && level != fadm)
				{
					dopper = 1;
					AdmUpdate(akk, level, 3);
					admData[playerid][dAdmshad] = 0;//убрать скрытость
					admData[playerid][dAdmlive] = 0;//убрать бессмертие
					admData[playerid][dAdmscancom] = 0;//убрать сканирование команд сервера
					admData[playerid][dAdmin] = level;//изменение уровня админки
					format(ssss, sizeof(ssss), " *** Админ %s снял админку с аккаунта игрока [%s] .", RealName[playerid], akk);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					if(oldlevel >= 9)
					{
						for(new i = 0; i < 20; i++)//удаление ника админа из per-файла
						{
							if(strcmp(akk, scrnetper[i], false) == 0)//если ник админа найден, то:
							{
								strdel(scrnetper[i], 0, 64);//очистка слота
								strcat(scrnetper[i], "*** INV_PL_ID");
								ScrNetPerSave(i);//запись изменённого слота в per-файл
							}
						}
					}
					new twenlim, restlim;
					Fmadmins(0, akk, 0, twenlim, restlim);
				}
				if(level > 0 && level != fadm)
				{
					dopper = 1;
					AdmUpdate(akk, level, 3);
					oldlevel = fadm;//сохранение старого уровня админки
					admData[playerid][dAdmshad] = 0;//убрать скрытость
					if(admData[playerid][dAdmin] <= 0)//изменение уровня админки
					{
						admData[playerid][dAdmin] = level * -1;
					}
					else
					{
						admData[playerid][dAdmin] = level;
					}
					format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] админку %d уровня.", RealName[playerid], akk, level);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					if(level <= 8 && oldlevel >= 9)
					{
						for(new i = 0; i < 20; i++)//удаление ника админа из per-файла
						{
							if(strcmp(akk, scrnetper[i], false) == 0)//если ник админа найден, то:
							{
								strdel(scrnetper[i], 0, 64);//очистка слота
								strcat(scrnetper[i], "*** INV_PL_ID");
								ScrNetPerSave(i);//запись изменённого слота в per-файл
							}
						}
					}
					if(level <= 5 && oldlevel >= 6)
					{
						new twenlim, restlim;
						Fmadmins(0, akk, 0, twenlim, restlim);
					}
					if(level >= 6 && oldlevel <= 5)
					{
						new twenlim = 0;
						new restlim = 0;
						Fmadmins(1, akk, 0, twenlim, restlim);
					}
					if(level <= 4 && oldlevel >= 5)
					{
						admData[playerid][dAdmlive] = 0;//выключить бессмертие
					}
					if(level >= 5 && oldlevel <= 4)
					{
						admData[playerid][dAdmlive] = 1;//включить бессмертие
					}
				}
				if(police1 == 1 && police2 != admData[playerid][dPolice])
				{
					dopper = 1;
					admData[playerid][dPolice] = police2;//изменение уровня полиции
					if(admData[playerid][dPolice] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s снял с аккаунта игрока [%s] уровень полиции.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					else
					{
						format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] %d уровень полиции.", RealName[playerid], akk, admData[playerid][dPolice]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
				}
				if(deport1 == 1 && deport2 != admData[playerid][dDeport])
				{
					dopper = 1;
					admData[playerid][dDeport] = deport2;//изменение депортации
					if(admData[playerid][dDeport] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s снял с аккаунта игрока [%s] депортацию.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					else
					{
						admData[playerid][dAdmin] = 0;//убрать админ LVL
						admData[playerid][dAdmshad] = 0;//убрать скрытость
						admData[playerid][dAdmlive] = 0;//убрать бессмертие
						admData[playerid][dMoney] = 1000;//установка личного счёта
						format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] депортацию.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
				}
				if(razres1 == 1 && razres2 != admData[playerid][dRecPM])
				{
					dopper = 1;
					admData[playerid][dRecPM] = razres2;//изменение разрешения приёма PM
					if(admData[playerid][dRecPM] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s снял с аккаунта игрока [%s] разрешение приёма PM.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					else
					{
						format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] разрешение приёма PM.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
				}
				if(scrit1 == 1 && scrit2 != admData[playerid][dAdmshad] && level != 0)
				{
					dopper = 1;
					admData[playerid][dAdmshad] = scrit2;//изменение скрытости админа
					if(admData[playerid][dAdmshad] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s убрал с аккаунта игрока [%s] статус скрытости админа.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					else
					{
						format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] статус скрытости админа.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
				}
				if(summ1 == 1 && summ2 != admData[playerid][dMoney] && admData[playerid][dDeport] == 0)
				{
					new dopper44;
					dopper44 = admData[playerid][dMoney];
					dopper = 1;
					admData[playerid][dMoney] = summ2;//изменение личного счёта
					format(ssss, sizeof(ssss), " *** Личный счёт аккаунта игрока [%s] был изменён на: %d $ .", akk, admData[playerid][dMoney]);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					printf("[moneysys] Предыдущая сумма аккаунта игрока %s : %d $", akk, dopper44);
				}
				if(dopper == 0)
				{
	 				SendClientMessage(playerid, COLOR_RED, " Аккаунт игрока остался без изменений !");
					return 1;
				}
			}
#if (MOD90INS == 0)
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Key = '%s',",admData[playerid][dKey]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sAdminLevel = %d,AdminShadow = %d,", strdln, admData[playerid][dAdmin],admData[playerid][dAdmshad]);
			format(strdln, sizeof(strdln), "%sAdminLive = %d,AdminScanCom = %d,", strdln, admData[playerid][dAdmlive],admData[playerid][dAdmscancom]);
			format(strdln, sizeof(strdln), "%sMoney = %d,Police = %d,", strdln, admData[playerid][dMoney],admData[playerid][dPolice]);
			format(strdln, sizeof(strdln), "%sDeport = %d,RecPM = %d,", strdln, admData[playerid][dDeport],admData[playerid][dRecPM]);
			format(strdln, sizeof(strdln), "%sLock = %d WHERE (Name = '%s')", strdln, admData[playerid][dLock], akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/cortime", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /cortime 2 , или");
				SendClientMessage(playerid, COLOR_GRAD2, " /cortime [реальное время(0-выключить, 1-включить)] ...");
				SendClientMessage(playerid, COLOR_GRAD2, " ... [часы(-23 - 23)] [минуты(-59 - 59)] ...");
				SendClientMessage(playerid, COLOR_GRAD2, " ... [число(-30 - 30)] [месяц(-11 - 11)] [год(-99 - 99)]");
				return 1;
			}
			new perrt, per1, per2, per3, per4, per5;
			perrt = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per4 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per5 = strval(tmp);
			if (perrt < 0 || perrt > 2)
			{
				SendClientMessage(playerid, COLOR_RED, " Реальное время [0-выключить, 1-включить] , или 2 !");
				return 1;
			}
			if (per1 < -23 || per1 > 24)
			{
				SendClientMessage(playerid, COLOR_RED, " Часы от -23 до 23 !");
				return 1;
			}
			if (per2 < -59 || per2 > 59)
			{
				SendClientMessage(playerid, COLOR_RED, " Минуты от -59 до 59 !");
				return 1;
			}
			if (per3 < -30 || per3 > 30)
			{
				SendClientMessage(playerid, COLOR_RED, " Число от -30 до 30 !");
				return 1;
			}
			if (per4 < -11 || per4 > 11)
			{
				SendClientMessage(playerid, COLOR_RED, " Месяц от -11 до 11 !");
				return 1;
			}
			if (per5 < -99 || per5 > 99)
			{
				SendClientMessage(playerid, COLOR_RED, " Год от -99 до 99 !");
				return 1;
			}
			if (perrt == 2)
			{
				ReadCorTime();//чтение коррекции времени
				gettime(timecor[0], timecor[1]);
				getdate(timecor[2], timecor[3], timecor[4]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," Время сервера: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Данные коррекции: Статус реального времени: [%d]", timecor[8]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Часы: [%d] Минуты: [%d] Число: [%d] Месяц: [%d] Год: [%d]", CorTime[0], CorTime[1], CorTime[2], CorTime[3], CorTime[4]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				TimCor();//коррекция времени
				DatCor();//коррекция даты
				format(string,sizeof(string)," Время после коррекции: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел настройки коррекции времени сервера.", RealName[playerid], playerid);
				print(string);
				return 1;
			}
			new dopdata;
			dopdata = 0;
			if(perrt != timecor[8])
			{
			    dopdata = 1;
			}
            timecor[8] = perrt;
			CorTime[0] = per1;
			CorTime[1] = per2;
			CorTime[2] = per3;
			CorTime[3] = per4;
			CorTime[4] = per5;
			SaveCorTime();//запись коррекции времени
			ReadCorTime();//чтение коррекции времени
			new per;
			CallRemoteFunction("dopfunction", "d", per);//чтение коррекции времени фильтрскриптом keyscan
			format(string,sizeof(string)," *** Админ %s [%d] скорректировал время и дату (RT: [%d] , %d , %d , %d , %d , %d) .", RealName[playerid], playerid, timecor[8], CorTime[0], CorTime[1], CorTime[2], CorTime[3], CorTime[4]);
			print(string);
			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			SendClientMessage(playerid, COLOR_GREEN, "------------------------------------------------------------------------------------------");
			SendClientMessage(playerid, COLOR_GREEN, " Данные коррекции были успешно записаны :");
			format(string,sizeof(string)," Статус реального времени: [%d]", timecor[8]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string,sizeof(string)," Часы: [%d] Минуты: [%d] Число: [%d] Месяц: [%d] Год: [%d]", CorTime[0], CorTime[1], CorTime[2], CorTime[3], CorTime[4]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TimCor();//коррекция времени
			DatCor();//коррекция даты
			format(string,sizeof(string)," Время после коррекции: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			SendClientMessage(playerid, COLOR_GREEN, "------------------------------------------------------------------------------------------");
			if(dopdata == 1)
			{
			    oldhour = timecor[0] - 1;
				if(oldhour < 0) { oldhour = oldhour + 2; }
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/servcon", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon [ид настройки(0-16)] ( 0- без имени сервера,");
				SendClientMessage(playerid, COLOR_GRAD2, " 1- задать имя сервера, 2- без пароля сервера, 3- задать пароль сервера,");
				SendClientMessage(playerid, COLOR_GRAD2, " 4- без имени карты сервера, 5- задать имя карты сервера, 6- без имени");
				SendClientMessage(playerid, COLOR_GRAD2, " web-страницы сервера, 7- задать имя web-страницы сервера, 8- разрешить");
				SendClientMessage(playerid, COLOR_GRAD2, " RCON-доступ (rcon 1), 9- запретить RCON-доступ (rcon 0), 10- убрать");
				SendClientMessage(playerid, COLOR_GRAD2, " перезагружаемый FS , 11- задать перезагружаемый FS , 12- задать час");
				SendClientMessage(playerid, COLOR_GRAD2, " перезагрузки сервера, 13- задать лимит пакетов анти-DDoS защиты,");
				SendClientMessage(playerid, COLOR_GRAD2, " 14- задать лимит переданных байт на сервер, 15- задать лимит считанных");
				SendClientMessage(playerid, COLOR_GRAD2, " байт с сервера, 16- просмотреть настройки )");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 16)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 16 !");
				return 1;
			}
			if(para1 == 0)
			{
				strdel(servname,0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("hostname");//RCON-команда БЕЗ имени сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал имя сервера.", RealName[playerid],playerid);
				print(string);
				print(" *** Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали имя сервера.");
				SendClientMessage(playerid, COLOR_RED, " Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
			}
			if(para1 == 1)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 1 [имя сервера]");
					return 1;
				}
				if(strlen(result) > 64)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени сервера не должна превышать 64 символа !");
					return 1;
				}
				if(strlen(servname) > 0 && strcmp(servname, result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя сервера !");
					return 1;
				}
				strdel(servname,0,256);
				strcat(servname, result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени сервера
				strcat(ssss, "hostname ");
				strcat(ssss, servname);
				SendRconCommand(ssss);//RCON-команда имени сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новое имя сервера (%s)", RealName[playerid],playerid,servname);
				print(string);
				format(string, sizeof(string), " Вы задали новое имя сервера (%s)", servname);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 2)
			{
				strdel(servpass,0,256);
				strcat(servpass, "0");
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени сервера
				strcat(ssss, "password ");
				strcat(ssss, servpass);
				SendRconCommand(ssss);//RCON-команда БЕЗ пароля сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал пароль сервера.", RealName[playerid],playerid);
				print(string);
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали пароль сервера.");
			}
			if(para1 == 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 3 [пароль сервера]");
					return 1;
				}
				if(strlen(tmp) < 2 || strlen(tmp) > 12 || tmp[0] == '0')
				{
					SendClientMessage(playerid, COLOR_RED, " Длина пароля сервера должна быть от 2 до 12 символов,");
					SendClientMessage(playerid, COLOR_RED, " И ПЕРВЫЙ символ пароля НЕ должен равняться НУЛЮ !");
					return 1;
				}
				if(strlen(servpass) > 0 && strcmp(servpass, tmp, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старый пароль сервера !");
					return 1;
				}
				strdel(servpass,0,256);
				strcat(servpass, tmp);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды пароля сервера
				strcat(ssss, "password ");
				strcat(ssss, servpass);
				SendRconCommand(ssss);//RCON-команда пароля сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новый пароль сервера (%s)", RealName[playerid],playerid,servpass);
				print(string);
				format(string, sizeof(string), " Вы задали новый пароль сервера (%s)", servpass);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 4)
			{
				strdel(servmap,0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("mapname");//RCON-команда БЕЗ имени карты сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал имя карты сервера (по умолчанию: San Andreas) .", RealName[playerid],playerid);
				print(string);
				print(" *** Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали имя карты сервера (по умолчанию: San Andreas) .");
				SendClientMessage(playerid, COLOR_RED, " Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
			}
			if(para1 == 5)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 5 [имя карты сервера]");
					return 1;
				}
				if(strlen(result) > 32)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени карты сервера не должна превышать 32 символа !");
					return 1;
				}
				if(strlen(servmap) > 0 && strcmp(servmap, result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя карты сервера !");
					return 1;
				}
				strdel(servmap,0,256);
				strcat(servmap, result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени карты сервера
				strcat(ssss, "mapname ");
				strcat(ssss, servmap);
				SendRconCommand(ssss);//RCON-команда имени карты сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новое имя карты сервера (%s)", RealName[playerid],playerid,servmap);
				print(string);
				format(string, sizeof(string), " Вы задали новое имя карты сервера (%s)", servmap);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 6)
			{
				strdel(servurl,0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("weburl");//RCON-команда БЕЗ имени web-страницы сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал имя web-страницы сервера.", RealName[playerid],playerid);
				print(string);
				print(" *** Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали имя web-страницы сервера.");
				SendClientMessage(playerid, COLOR_RED, " Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
			}
			if(para1 == 7)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 7 [имя web-страницы сервера]");
					return 1;
				}
				if(strlen(result) > 64)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени web-страницы сервера не должна превышать 64 символа !");
					return 1;
				}
				if(strlen(servurl) > 0 && strcmp(servurl, result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя web-страницы сервера !");
					return 1;
				}
				strdel(servurl,0,256);
				strcat(servurl, result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени web-страницы сервера
				strcat(ssss, "weburl ");
				strcat(ssss, servurl);
				SendRconCommand(ssss);//RCON-команда имени web-страницы сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новое имя web-страницы сервера (%s)", RealName[playerid],playerid,servurl);
				print(string);
				format(string, sizeof(string), " Вы задали новое имя web-страницы сервера (%s)", servurl);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 8)
			{
				status = 1;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("rcon 1");//RCON-команда разрешения RCON-доступа
				format(string, sizeof(string), " *** Админ %s [%d] разрешил RCON-доступ (rcon 1)", RealName[playerid],playerid);
				print(string);
				SendClientMessage(playerid, COLOR_GREEN, " Вы разрешили RCON-доступ (rcon 1)");
			}
			if(para1 == 9)
			{
				status = 0;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("rcon 0");//RCON-команда запрета RCON-доступа
				format(string, sizeof(string), " *** Админ %s [%d] запретил RCON-доступ (rcon 0)", RealName[playerid],playerid);
				print(string);
				SendClientMessage(playerid, COLOR_GREEN, " Вы запретили RCON-доступ (rcon 0)");
			}
			if(para1 == 10)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 10 [номер слота FS(0-15)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота FS от 0 до 15 !");
					return 1;
				}
				strdel(relfs[para2],0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал %d слот FS .", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы убрали %d слот FS .", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 11)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 11 [номер слота FS(0-15)] [имя FS]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота FS от 0 до 15 !");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_RED, " Имя FS не задано !");
					return 1;
				}
				if(strlen(result) > 64)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени FS не должна превышать 64 символа !");
					return 1;
				}
				if(strlen(relfs[para2]) > 0 && strcmp(relfs[para2], result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя FS !");
					return 1;
				}
				strdel(relfs[para2],0,256);
				strcat(relfs[para2], result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал %d слот FS (%s)", RealName[playerid],playerid,para2,relfs[para2]);
				print(string);
				format(string, sizeof(string), " Вы задали %d слот FS (%s)", para2,relfs[para2]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 12)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 12 [час перезагрузки сервера(0-23)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 23)
				{
					SendClientMessage(playerid, COLOR_RED, " Час перезагрузки сервера от 0 до 23 !");
					return 1;
				}
				if(para2 == servchas)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старый час перезагрузки сервера !");
					return 1;
				}
				servchas = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал час перезагрузки сервера (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали час перезагрузки сервера (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 13)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 13 [лимит пакетов(200-8000)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 200 || para2 > 8000)
				{
					SendClientMessage(playerid, COLOR_RED, " Лимит пакетов от 200 до 8000 !");
					return 1;
				}
				if(para2 == packlim)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое значение лимита пакетов !");
					return 1;
				}
				packlim = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				new dopstr[32];
				strdel(dopstr,0,32);
				valstr(dopstr, packlim);//преобразование лимита пакетов в строку
				strdel(ssss, 0, 256);//сборка RCON-команды лимита пакетов
				strcat(ssss, "messageholelimit ");
				strcat(ssss, dopstr);
#if (MOD11INS >= 3)
				SendRconCommand(ssss);//RCON-команда лимита пакетов
#endif
				format(string, sizeof(string), " *** Админ %s [%d] задал лимит пакетов анти-DDoS защиты (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали лимит пакетов анти-DDoS защиты (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 14)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 14 [лимит переданных байт(10000-500000)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 10000 || para2 > 500000)
				{
					SendClientMessage(playerid, COLOR_RED, " Лимит переданных байт от 10000 до 500000 !");
					return 1;
				}
				if(para2 == NETrecCon)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое значение лимита переданных байт !");
					return 1;
				}
				NETrecCon = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал лимит переданных байт на сервер (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали лимит переданных байт на сервер (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 15)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 15 [лимит считанных байт(10000-500000)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 10000 || para2 > 500000)
				{
					SendClientMessage(playerid, COLOR_RED, " Лимит считанных байт от 10000 до 500000 !");
					return 1;
				}
				if(para2 == NETsenCon)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое значение лимита считанных байт !");
					return 1;
				}
				NETsenCon = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал лимит считанных байт с сервера (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали лимит считанных байт с сервера (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 16)
			{
				new para77[64];
				if(strlen(servpass) == 0 || (strlen(servpass) == 1 && servpass[0] == '0'))//если нет пароля сервера, то:
				{
					strdel(para77,0,64);
				}
				else//иначе, (если есть пароль сервера), то:
				{
					format(para77,sizeof(para77),"%s", servpass);
				}
				ReadServCon();//чтение конфигурации сервера
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," Имя сервера: [%s] Час перезагрузки сервера: [%d]", servname,servchas);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Пароль: [%s] Карта: [%s] web-страница: [%s]", para77,servmap,servurl);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," RCON-доступ: [%d] (1-разрешено(rcon 1), 0-запрещено(rcon 0))", status);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Лимит пакетов: [%d] Лимит переданных байт: [%d] Лимит считанных байт: [%d]", packlim,NETrecCon,NETsenCon);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " Перезагружаемые фильтрскрипты:");
				format(string,sizeof(string)," Слот 0: [%s] Слот 1: [%s] Слот 2: [%s] Слот 3: [%s]", relfs[0],relfs[1],relfs[2],relfs[3]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 4: [%s] Слот 5: [%s] Слот 6: [%s] Слот 7: [%s]", relfs[4],relfs[5],relfs[6],relfs[7]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 8: [%s] Слот 9: [%s] Слот 10: [%s] Слот 11: [%s]", relfs[8],relfs[9],relfs[10],relfs[11]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 12: [%s] Слот 13: [%s] Слот 14: [%s] Слот 15: [%s]", relfs[12],relfs[13],relfs[14],relfs[15]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел настройки конфигурации сервера.", RealName[playerid], playerid);
				print(string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/ondr", true) == 0)
	{
		if(compdrift[playerid] >= 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже подключены к дрифт-соревнованию !");
		}
		else
		{
			compdrift[playerid] = 0;
			format(string, sizeof(string), " --> Игрок %s [%d] подключил себя к дрифт-соревнованию.", RealName[playerid],playerid);
			print(string);
			SendAdminMessage(COLOR_GREEN, string);
   			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_GREEN, " Вы подключили себя к дрифт-соревнованию.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/offdr", true) == 0)
	{
		if(compdrift[playerid] < 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже отключены от дрифт-соревнования !");
		}
		else
		{
			compdrift[playerid] = -1000000;
			format(string, sizeof(string), " --> Игрок %s [%d] отключил себя от дрифт-соревнования.", RealName[playerid],playerid);
			print(string);
			SendAdminMessage(COLOR_RED, string);
   			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы отключили себя от дрифт-соревнования.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/resdr", true) == 0)
	{
		if(compdrift[playerid] < 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя !!!, Вы отключены от дрифт-соревнования !");
    		return 1;
		}
		if(compdrift[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Ваши очки уже обнулены !");
		}
		else
		{
			compdrift[playerid] = 0;
			format(string, sizeof(string), " --> Игрок %s [%d] обнулил свои очки дрифт-соревнования.", RealName[playerid],playerid);
			print(string);
			SendAdminMessage(COLOR_YELLOW, string);
   			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, " Вы обнулили свои очки дрифт-соревнования.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/statdr", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /statdr [ид игрока]");
			return 1;
		}
		new para1 = strval(tmp);
		if(IsPlayerConnected(para1))
		{
			if(gPlayerLogged[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[para1][pAdmin] >= 1 && PlayerInfo[para1][pAdmshad] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не можете просмотреть статистику админа !");
				return 1;
			}
			if(compdrift[para1] < 0)
			{
				format(string, sizeof(string), " Игрок %s [%d] НЕ подключен к дрифт-соревнованию.", RealName[para1], para1);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				format(string, sizeof(string), " Игрок %s [%d] подключен к дрифт-соревнованию.", RealName[para1], para1);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			printf(" --> Игрок %s [%d] просмотрел статус подключения игрока %s [%d] к дрифт-соревнованию.", RealName[playerid], playerid, RealName[para1], para1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
	if(strcmp(cmd, "/edgangs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /edgangs [режим (0- по ид банды, 1- по ид игрока из банды)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ид банды или игрока] [ид настройки (0- просмотреть основную информацию");
				SendClientMessage(playerid, COLOR_GRAD2, " о банде, 1- установить название банды, 2- отменить спавн банды,");
				SendClientMessage(playerid, COLOR_GRAD2, " 3- ТП на спавн банды)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим 0 или 1 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид банды] [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о банде, 1- установить название банды, 2- отменить спавн банды,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн банды)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				format(string,sizeof(string),"gangs/%i.ini",para2);
				if(!fexist(string) || para2 >= (MAX_GANGS - 1))
				{
					SendClientMessage(playerid,COLOR_RED," Такого [ид банды] не существует !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о банде, 1- установить название банды, 2- отменить спавн банды,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн банды)]");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
					return 1;
				}
				if(para3 == 0)
				{
					new dopper[16];
					strdel(dopper, 0, 16);
					strmid(dopper, GColor[para2], 0, 6, sizeof(dopper));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), " Цвет: [%s] Название: [%s]", dopper, GName[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_GRAD1, " Спавн банды:");
					format(string, sizeof(string), " x = %f   y = %f   z = %f", GSpawnX[para2], GSpawnY[para2], GSpawnZ[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " интерьер = %d   виртуальный мир = %d", GInter[para2], GWorld[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Лидер: [%s] Число игроков: [%d]", GHead[para2], GPlayers[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Регистрация: [ %s ] ID: [%d]", GTDReg[para2], para2);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					printf(" *** Админ %s просмотрел информацию о банде [ID: %d]", RealName[playerid], para2);
					return 1;
				}
				if(para3 == 1)
				{
					new result[128];
					format(result, sizeof(result), "Default - %d", para2);
					if(strcmp(GName[para2],result,false) == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Название банды уже установлено !");
						return 1;
					}
					strdel(GName[para2], 0, 130);//очищаем назване банды
					strcat(GName[para2], result);//устанавливаем назване банды
					GangSave(para2);//запись ID банды в файл
					format(string, sizeof(string), " *** Админ %s установил название банды %s [ID: %d]", RealName[playerid], GName[para2], para2);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 2)
				{
					if(GSpawnX[para2] == 0.00 && GSpawnY[para2] == 0.00 && GSpawnZ[para2] == 0.00 &&
					GInter[para2] == 0 && GWorld[para2] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Спавн банды уже отменён !");
						return 1;
					}
					GSpawnX[para2] = 0.00;//обнуляем спавн банды
					GSpawnY[para2] = 0.00;
					GSpawnZ[para2] = 0.00;
					GInter[para2] = 0;
					GWorld[para2] = 0;
					GangSave(para2);//запись ID банды в файл
					format(string, sizeof(string), " *** Админ %s отменил спавн банды %s [ID: %d]", RealName[playerid], GName[para2], para2);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 3)
				{
					if(admper1[playerid] != 600)
					{
						SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта опция не работает !");
						return 1;
					}
					if(GSpawnX[para2] == 0.00 && GSpawnY[para2] == 0.00 && GSpawnZ[para2] == 0.00 &&
					GInter[para2] == 0 && GWorld[para2] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Место спавна банды не назначено !");
						return 1;
					}
					SetPlayerInterior(playerid, GInter[para2]);
					SetPlayerVirtualWorld(playerid, GWorld[para2]);
					SetPlayerPos(playerid, GSpawnX[para2], GSpawnY[para2], GSpawnZ[para2]);
					format(string, sizeof(string), " *** Админ %s телепортировался на спавн банды %s [ID: %d]", RealName[playerid], GName[para2], para2);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
			}
			if(para1 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид игрока] [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о банде, 1- установить название банды, 2- отменить спавн банды,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн банды)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(gPlayerLogged[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PGang[para2] <= 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок не состоит ни в одной из банд !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о банде, 1- установить название банды, 2- отменить спавн банды,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн банды)]");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
					return 1;
				}
				if(para3 == 0)
				{
					new dopper[16];
					strdel(dopper, 0, 16);
					strmid(dopper, GColor[PGang[para2]], 0, 6, sizeof(dopper));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), " Цвет: [%s] Название: [%s]", dopper, GName[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_GRAD1, " Спавн банды:");
					format(string, sizeof(string), " x = %f   y = %f   z = %f", GSpawnX[PGang[para2]], GSpawnY[PGang[para2]], GSpawnZ[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " интерьер = %d   виртуальный мир = %d", GInter[PGang[para2]], GWorld[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Лидер: [%s] Число игроков: [%d]", GHead[PGang[para2]], GPlayers[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Регистрация: [ %s ] ID: [%d]", GTDReg[PGang[para2]], PGang[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					printf(" *** Админ %s просмотрел информацию о банде [ID: %d]", RealName[playerid], PGang[para2]);
					return 1;
				}
				if(para3 == 1)
				{
					new result[128];
					format(result, sizeof(result), "Default - %d", PGang[para2]);
					if(strcmp(GName[PGang[para2]],result,false) == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Название банды уже установлено !");
						return 1;
					}
					strdel(GName[PGang[para2]], 0, 130);//очищаем назване банды
					strcat(GName[PGang[para2]], result);//устанавливаем назване банды
					GangSave(PGang[para2]);//запись ID банды в файл
					format(string, sizeof(string), " *** Админ %s установил название банды %s [ID: %d]", RealName[playerid], GName[PGang[para2]], PGang[para2]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
				}
				if(para3 == 2)
				{
					if(GSpawnX[PGang[para2]] == 0.00 && GSpawnY[PGang[para2]] == 0.00 && GSpawnZ[PGang[para2]] == 0.00 &&
					GInter[PGang[para2]] == 0 && GWorld[PGang[para2]] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Спавн банды уже отменён !");
						return 1;
					}
					GSpawnX[PGang[para2]] = 0.00;//обнуляем спавн банды
					GSpawnY[PGang[para2]] = 0.00;
					GSpawnZ[PGang[para2]] = 0.00;
					GInter[PGang[para2]] = 0;
					GWorld[PGang[para2]] = 0;
					GangSave(PGang[para2]);//запись ID банды в файл
					format(string, sizeof(string), " *** Админ %s отменил спавн банды %s [ID: %d]", RealName[playerid], GName[PGang[para2]], PGang[para2]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 3)
				{
					if(admper1[playerid] != 600)
					{
						SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта опция не работает !");
						return 1;
					}
					if(GSpawnX[PGang[para2]] == 0.00 && GSpawnY[PGang[para2]] == 0.00 && GSpawnZ[PGang[para2]] == 0.00 &&
					GInter[PGang[para2]] == 0 && GWorld[PGang[para2]] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Место спавна банды не назначено !");
						return 1;
					}
					SetPlayerInterior(playerid, GInter[PGang[para2]]);
					SetPlayerVirtualWorld(playerid, GWorld[PGang[para2]]);
					SetPlayerPos(playerid, GSpawnX[PGang[para2]], GSpawnY[PGang[para2]], GSpawnZ[PGang[para2]]);
					format(string, sizeof(string), " *** Админ %s телепортировался на спавн банды %s [ID: %d]", RealName[playerid], GName[PGang[para2]], PGang[para2]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/editadmins", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			if(cmdtext[idx] == 0)
			{
				LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
#if (MOD90INS == 0)
				format(strdln,sizeof(strdln),"В первом ключе указан уровень админа, во втором ключе\
				\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
				\n   2 - с помощью команды   /makeadmin\n   3 - с помощью команды   /admakk\
				\n   4 - с помощью обычного логирования\n        (аккаунт админа был перенесён на данный сервер)");
#endif
#if (MOD90INS == 1)
				format(strdln,sizeof(strdln),"В первом ключе указан уровень админа, во втором ключе\
				\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
				\n   2 - с помощью команды   /makeadmin\n   3 - с помощью команды   /admakk\
				\n   4 - с помощью обычного логирования\n        (аккаунт админа был изменён в базе данных сервера)");
#endif
				format(strdln,sizeof(strdln),"%s\n   5 - после дисконнекта (админ очистил\
				\n        свой слот регистрации, но остался админом)\
				\n   6 - с помощью импортирования данных\n   7 - после удаления аккаунта админа командой   /delakk\n",strdln);
				format(strdln,sizeof(strdln),"%s\nСлот  0: %s\nСлот  1: %s\nСлот  2: %s\nСлот  3: %s\nСлот  4: %s\nСлот  5: %s\
				\nСлот  6: %s\nСлот  7: %s\nСлот  8: %s\nСлот  9: %s\nСлот 10: %s\nСлот 11: %s\nСлот 12: %s\nСлот 13: %s\
				\nСлот 14: %s\nСлот 15: %s\nСлот 16: %s\nСлот 17: %s\nСлот 18: %s\nСлот 19: %s",strdln,
				LogAdm[0],LogAdm[1],LogAdm[2],LogAdm[3],LogAdm[4],LogAdm[5],LogAdm[6],LogAdm[7],LogAdm[8],LogAdm[9],
				LogAdm[10],LogAdm[11],LogAdm[12],LogAdm[13],LogAdm[14],LogAdm[15],LogAdm[16],LogAdm[17],LogAdm[18],LogAdm[19]);
				ShowPlayerDialog(playerid, 22, 0, "Регистрации админов:", strdln, "Далее", "Отмена");
				SetPVarInt(playerid, "DlgCont", 22);
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел журнал регистрации админов сервера.", RealName[playerid], playerid);
				print(string);
				return 1;
			}
			if(cmdtext[idx] == 32 && cmdtext[idx+1] == 32)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			new para22, para33[8], para1[16], pass1[8], pass2[8];
			strdel(para33, 0, 8);
			strdel(para1, 0, 16);
			strdel(pass1, 0, 8);
			strdel(pass2, 0, 8);
			strcat(para1, tmp);
			strmid(pass1, PlayerInfo[playerid][pKey], strlen(PlayerInfo[playerid][pKey])-3, strlen(PlayerInfo[playerid][pKey]));
			if(strlen(para1) != 4 && strlen(para1) != 5)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			if(strlen(para1) == 4)
			{
				strmid(pass2, para1, strlen(para1)-4, strlen(para1)-1);
				strmid(para33, para1, strlen(para1)-1, strlen(para1));
				para22 = strval(para33);
			}
			else
			{
				strmid(pass2, para1, strlen(para1)-5, strlen(para1)-2);
				strmid(para33, para1, strlen(para1)-2, strlen(para1));
			}
			if(strcmp(pass1, pass2, false) != 0)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			para22 = strval(para33);
			if(para22 < 0 || para22 > 99)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			if(!strlen(LogAdm[para22]))
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			strdel(LogAdm[para22], 0, 256);
			SaveLogAdm();
			printf(" *** Админ %s [%d] очистил %d слот регистрации админов.", RealName[playerid], playerid, para22);
			format(string, sizeof(string), " Вы очистили %d слот регистрации админов.", para22);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
		}
		return 1;
	}
	if(strcmp(cmd, "/nucexp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 7)
		{
			if(nucexplos == 0)
			{
				SetWeather(19);
				GlWeat = 19;
				SetWorldTime(0);
				GlTime = 0;
				TimePlay(0);
				new Float:sx,Float:sy,Float:sz;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						SnowONOFF[i] = 1;
						EnterTick33[i] = 1;//обход антикрашера - 3
						SetPlayerArmour(i,0);
						SetPlayerHealth(i,0);
						GetPlayerCameraPos(i,sx,sy,sz);
						snowobj[i] = CreatePlayerObject(i,18864, sx, sy, sz-5, 0.0, 0.0, 0.0, 300.0);
					}
				}
				format(string, sizeof(string), " *** Админ %s произвёл ядерный взрыв !!!", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				nucexplos = 1;
				nucexptime = 0;
			}
			else
			{
				SetWeather(1);
				GlWeat = 1;
				if(timecor[8] == 1)//если включено реальное время, то:
				{
					ReadCorTime();//чтение коррекции времени
					gettime(timecor[0], timecor[1]);
					TimCor();//коррекция времени
					SetWorldTime(timecor[0]);
					GlTime = timecor[0];
					TimePlay(timecor[0]);
				}
				else
				{
					SetWorldTime(12);
					GlTime = 12;
					TimePlay(12);
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						SnowONOFF[i] = 0;
						DestroyPlayerObject(i,snowobj[i]);
					}
				}
				format(string, sizeof(string), " *** Админ %s ликвидировал последствия ядерного взрыва.", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_GREEN, string);
				nucexplos = 0;
				nucexptime = 0;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/scrmd", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrmd [режим] ( 0- надпись ''Drift level'' ,");
			SendClientMessage(playerid, COLOR_GRAD2, " 1- спидометр, 2- дрифт счётчик, 3- надпись ''уровень дрифта''");
			SendClientMessage(playerid, COLOR_GRAD2, " (у себя над головой), 4- просмотр ников других игроков, 5- часы )");
			return 1;
		}
		new para1 = strval(tmp);
		if(para1 < 0 || para1 > 5)
		{
			SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 5 !");
			return 1;
		}
		if(para1 == 0)
		{
			if(scrmod[0][playerid] == 0)
			{
				scrmod[0][playerid] = 1;
				printf(" --> Игрок %s [%d] отключил надпись ''Drift level'' .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили надпись ''Drift level'' .");
			}
			else
			{
				scrmod[0][playerid] = 0;
				printf(" --> Игрок %s [%d] включил надпись ''Drift level'' .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили надпись ''Drift level'' .");
			}
		}
		if(para1 == 1)
		{
			if(scrmod[1][playerid] == 0)
			{
				scrmod[1][playerid] = 1;
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					R_Vehicle[playerid] = VehicleSpeed_1;
					PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
					TextDrawHideForPlayer(playerid, KMH);
				}
				printf(" --> Игрок %s [%d] отключил спидометр.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили спидометр.");
			}
			else
			{
				scrmod[1][playerid] = 0;
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					new String[64];

					TextDrawShowForPlayer(playerid, KMH);

					format(String, sizeof(String), "%d", GetPlayerSpeed(playerid));
					PlayerTextDrawSetString(playerid, VehicleSpeed[playerid], String);
					PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);

					R_Vehicle[playerid] = VehicleSpeed_2;
				}
				printf(" --> Игрок %s [%d] включил спидометр.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили спидометр.");
			}
		}
		if(para1 == 2)
		{
			if(scrmod[2][playerid] == 0)
			{
				scrmod[2][playerid] = 1;
				printf(" --> Игрок %s [%d] отключил дрифт счётчик.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили дрифт счётчик.");
			}
			else
			{
				scrmod[2][playerid] = 0;
				printf(" --> Игрок %s [%d] включил дрифт счётчик.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили дрифт счётчик.");
			}
		}
		if(para1 == 3)
		{
			if(dmplay[playerid] != 0)//если игрок в DM-зоне, то:
			{
				SendClientMessage(playerid, COLOR_RED, " В DM-зонах выбранная опция НЕ работает !");
				return 1;
			}
			if(scrmod[3][playerid] == 0)
			{
				scrmod[3][playerid] = 1;
				Delete3DTextLabel(Level3D[playerid]);
				printf(" --> Игрок %s [%d] отключил надпись ''уровень дрифта'' (у себя над головой) .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили надпись ''уровень дрифта'' (у себя над головой) .");
			}
			else
			{
				scrmod[3][playerid] = 0;
				Level3D[playerid] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
				LevelStats[playerid] = 0;
				printf(" --> Игрок %s [%d] включил надпись ''уровень дрифта'' (у себя над головой) .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили надпись ''уровень дрифта'' (у себя над головой) .");
			}
		}
		if(para1 == 4)
		{
			if(scrmod[4][playerid] == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					ShowPlayerNameTagForPlayer(playerid, i, false);
				}
				scrmod[4][playerid] = 1;
				printf(" --> Игрок %s [%d] отключил просмотр ников других игроков.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили просмотр ников других игроков.");
			}
			else
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					ShowPlayerNameTagForPlayer(playerid, i, true);
				}
				scrmod[4][playerid] = 0;
				printf(" --> Игрок %s [%d] включил просмотр ников других игроков.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили просмотр ников других игроков.");
			}
		}
		if(para1 == 5)
		{
			if(scrmod[5][playerid] == 0)
			{
				scrmod[5][playerid] = 1;
				TextDrawHideForPlayer(playerid, Times);//выключить часы игроку
				printf(" --> Игрок %s [%d] отключил часы.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили часы.");
			}
			else
			{
				scrmod[5][playerid] = 0;
				TextDrawShowForPlayer(playerid, Times);//включить часы игроку
				printf(" --> Игрок %s [%d] включил часы.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили часы.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/svt", true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
 		new Float:ConX, Float:ConY, Float:ConZ;
		GetPlayerPos(playerid, ConX, ConY, ConZ);
		new vw = GetPlayerVirtualWorld(playerid);
		if(GetPlayerInterior(playerid) != 0 || vw < 0 || (vw > 990 && vw < 18001) || vw > 18999 ||
		(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) || ConZ < -600 || ConZ > 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В данном месте сохранение позиции невозможно !");
			return 1;
		}
		TpPosP[playerid] = vw;
		GetPlayerPos(playerid, TpDestP[playerid][0],TpDestP[playerid][1],TpDestP[playerid][2]);
		if (GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
		{
			GetVehicleZAngle(GetPlayerVehicleID(playerid), TpDestP[playerid][3]);
		}
		else
		{
			GetPlayerFacingAngle(playerid, TpDestP[playerid][3]);
		}
		SendClientMessage(playerid, COLOR_YELLOW, " Вы сохранили позицию телепорта.");
		return 1;
	}
	if(strcmp(cmd, "/rdt", true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		if (GetPlayerState(playerid) == 2)
		{
			new regm = 2, per1 = 0, per2, Float:per3;
			per2 = TpPosP[playerid];
			per3 = TpDestP[playerid][3];
			StopDrift(playerid,regm,per1,per2,Float:per3,Float:TpDestP[playerid][0],Float:TpDestP[playerid][1],Float:TpDestP[playerid][2]+1);
		}
		else
		{
			tpdrift[playerid] = 1;
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, TpPosP[playerid]);
			SetPlayerPos(playerid, TpDestP[playerid][0],TpDestP[playerid][1],TpDestP[playerid][2]+1);
			SetPlayerFacingAngle(playerid, TpDestP[playerid][3]);
			SetCameraBehindPlayer(playerid);
		}
		if(TpDestP[playerid][0] > -3200 && TpDestP[playerid][0] < 3200 &&
		TpDestP[playerid][1] > -3200 && TpDestP[playerid][1] < 3200)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы были телепортированы на сохранённую позицию.");
		}
		else
		{
			SetTimerEx("DubTlp", 1000, 0, "i", playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/menu", true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

    	return 1;
	}
	if(strcmp(cmd, "/plclr", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /plclr [ид настройки (0- узнать ники невидимых на");
				SendClientMessage(playerid, COLOR_GRAD2, " радаре полностью (или частично) игроков, 1- включить игроку");
				SendClientMessage(playerid, COLOR_GRAD2, " видимый ник (дополнительно - ид игрока), 2- включить ВСЕМ");
				SendClientMessage(playerid, COLOR_GRAD2, " невидимым полностью (или частично) игрокам видимые ники,");
				SendClientMessage(playerid, COLOR_GRAD2, " 3- установить игроку цвет ника (дополнительно - ид игрока))]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
				return 1;
			}
			if(para1 == 0)
			{
				new dopper;
				dopper = 0;
				new locper, dop11, dop22, dop33;
				SendClientMessage(playerid, COLOR_YELLOW, " Невидимые на радаре полностью");
				SendClientMessage(playerid, COLOR_YELLOW, " (или частично) игроки:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) && playspa[i] == 1)
					{//если игрок в коннекте, и заспавнен, то:
						locper = 0;
						dop11 = GetPlayerColor(i);
						dop22 = 0;
						dop33 = 268435456;
						for(new j = 0; j < 8; j++)//перевод десятичного цвет в шестнадцатиричный
						{//(корректировать старший знаковый бит (если число в отрицательном диапазоне) не будем
							dop22 = dop11 / dop33;//из-за ненадобности старших трёх байт)
							dop11 = dop11 - (dop22 * dop33);
							if(j == 6) { locper = locper + dop22 * 16; }//если обнаружен 4-й (младший) байт (7-й и 8-й ниблы), то:
							if(j == 7) { locper = locper + dop22; }//сразу переводим 4-й байт в десятичное число
							dop33 = dop33 / 16;
						}
						if(locper < 128)
						{//если игрок невидимый полностью (или частично), то:
							dopper = 1;
							format(string, sizeof(string), " --- %s [%d]", RealName[i], i);
							SendClientMessage(playerid, COLOR_YELLOW, string);
						}
					}
				}
				if(dopper == 0)
				{
					SendClientMessage(playerid, COLOR_YELLOW, " --- не обнаружено.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, " ----------------------------------------");
				}
				printf(" *** Админ %s просмотрел ники невидимых игроков.", RealName[playerid]);
				return 1;
			}
			if(para1 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " /plclr 1 [ид игрока] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(playspa[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Игрок ещё не заспавнился !");
					return 1;
				}
				ColorPlay[para2] = ColNick[8];//включаем игроку видимый ник
				SetPlayerColor(para2, ColorPlay[para2]);
			    for(new i=0;i<MAX_PLAYERS;i++)
				{
					SetPlayerMarkerForPlayer(i, para2, ColorPlay[para2]);
				}
				format(string, sizeof(string), " *** Админ %s включил игроку %s видимый ник.", RealName[playerid], RealName[para2]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
			if(para1 == 2)
			{
				new dopper;
				dopper = 0;
				new locper, dop11, dop22, dop33;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) && playspa[i] == 1)
					{//если игрок в коннекте, и заспавнен, то:
						locper = 0;
						dop11 = GetPlayerColor(i);
						dop22 = 0;
						dop33 = 268435456;
						for(new j = 0; j < 8; j++)//перевод десятичного цвет в шестнадцатиричный
						{//(корректировать старший знаковый бит (если число в отрицательном диапазоне) не будем
							dop22 = dop11 / dop33;//из-за ненадобности старших трёх байт)
							dop11 = dop11 - (dop22 * dop33);
							if(j == 6) { locper = locper + dop22 * 16; }//если обнаружен 4-й (младший) байт (7-й и 8-й ниблы), то:
							if(j == 7) { locper = locper + dop22; }//сразу переводим 4-й байт в десятичное число
							dop33 = dop33 / 16;
						}
						if(locper < 128)
						{//если игрок невидимый полностью (или частично), то:
							dopper = 1;
							ColorPlay[i] = ColNick[8];//включаем игроку видимый ник
							SetPlayerColor(i, ColorPlay[i]);
			    			for(new k=0;k<MAX_PLAYERS;k++)
							{
								SetPlayerMarkerForPlayer(k, i, ColorPlay[i]);
							}
						}
					}
				}
				if(dopper == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Невидимых на радаре полностью (или частично) игроков не обнаружено.");
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s включил ВСЕМ невидимым полностью (или частично) игрокам видимые ники.", RealName[playerid]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
				}
				return 1;
			}
			if(para1 == 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " /plclr 3 [ид игрока] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(playspa[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Игрок ещё не заспавнился !");
					return 1;
				}
				ColorPlay[para2] = ColNick[17];//устанавливаем игроку цвет ника
				SetPlayerColor(para2, ColorPlay[para2]);
			    for(new i=0;i<MAX_PLAYERS;i++)
				{
					SetPlayerMarkerForPlayer(i, para2, ColorPlay[para2]);
				}
				format(string, sizeof(string), " *** Админ %s установил игроку %s цвет ника.", RealName[playerid], RealName[para2]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/banlst", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /banlst [режим (0- по имени аккаунта,");
				SendClientMessage(playerid, COLOR_GRAD2, " 1- по IP-адресу] [имя аккаунта или IP-адрес]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим 0 или 1 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(para1 == 0)
			{
				if(InpNameControl(tmp) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
					SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(tmp) < 1 || strlen(tmp) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
					return 1;
				}
				format(string,sizeof(string),"banlist/players/%s.ini",tmp);
				if(!fexist(string))
				{
					SendClientMessage(playerid,COLOR_RED," Аккаунт в бан-листе не найден !");
					return 1;
				}
				new ssss11[256], ssss22[256], ssss33[256], idfile;
				new File: UserFile = fopen(string, io_read);//чтение файла
				new key[ 256 ] , val[ 256 ];
				new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
					if( strcmp( key , "IDFile" , true ) == 0 ) { val = ini_GetValue( Data ); idfile = strval( val ); }
				}
				fclose(UserFile);
				strdel(ssss11, strlen(ssss11)-1, strlen(ssss11));//корректировка причины бана
				idfile++;
				idfile--;

				new i = 0, j = 0, m = 0;//разделение строки
				m = strlen(ssss11);
				while(ssss11[i] != 32)
				{
					ssss33[i] = ssss11[i];
					i++;
					j++;
				}
				ssss33[j] = 0;
				ssss33[j+1] = 0;
				i++;
				j = 0;
				while(i <= m)
				{
					ssss22[j] = ssss11[i];
					i++;
					j++;
				}
				ssss22[j] = 0;
				ssss22[j+1] = 0;

				format(string, sizeof(string), " [%s] -{FFFF00} %s", tmp, ssss22);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), " [%s] -{FFFF00} IP-адрес: %s", tmp, ssss33);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), " *** Админ %s просмотрел аккаунт игрока [%s] в бан-листе.", RealName[playerid], tmp);
				print(string);
				return 1;
			}
			if(para1 == 1)
			{
				new dltmp;
				dltmp = strlen(tmp);
				if(dltmp < 1 || dltmp > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина IP-адреса должна быть от 1 до 15 символов !");
					return 1;
				}
				new dopper111 = 0;
				new dopper222 = 0;
				for(new i = 0; i < dltmp; i++)
				{
					if((tmp[i] < 48 || tmp[i] > 57) && tmp[i] != '.') {dopper111 = 1;}
					if(tmp[i] == '.') {dopper222++;}
				}
				if(dopper111 == 1 || dopper222 > 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				for(new i = 0; i < 4; i++)//очистка локальной части массива ipper
				{
					for(new j = 0; j < 32; j++)
					{
						ipper[playerid][i][j] = 0;
					}
				}
				new ind1, ind2;//разделение IP-адреса
				ind1 = -1;
				for(new i = 0; i < 4; i++)
				{
					ind1++;
					ind2 = 0;
					while(tmp[ind1] != '.')
					{
						if(ind1 > dltmp)
						{
							break;
						}
						ipper[playerid][i][ind2] = tmp[ind1];
						ind1++;
						ind2++;
					}
				}
				dopper111 = 0;
				for(new i = 0; i < 4; i++)
				{
					if(strlen(ipper[playerid][i]) != 0 && strlen(ipper[playerid][i]) > 3) {dopper111 = 1;}
					if(strlen(ipper[playerid][i]) != 0 && strval(ipper[playerid][i]) > 255) {dopper111 = 1;}
				}
    			if(dopper111 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				new ind3 = 0;
				new ip222[128];
				new ssss11[256];
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) != 0 &&
				strlen(ipper[playerid][2]) != 0 && strlen(ipper[playerid][3]) != 0)
				{//если IP-адрес набран полностью, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s.%s.%s.%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2], ipper[playerid][3]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s_%s_%s_%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2], ipper[playerid][3]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) != 0 &&
				strlen(ipper[playerid][2]) != 0 && strlen(ipper[playerid][3]) == 0)
				{//если IP-адрес набран тремя группами цифр, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s.%s.%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s_%s_%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s.*] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
//---------------------------------- конец -------------------------------------
					for(new i = 0; i < 26; i++)//поиск дополнительных имён файлов
					{
						new ip444[128];
						new ip555[128];
						if(i == 0)
						{
							format(ip444, sizeof(ip444), "%s.*", ip222);//сборка дополнительных IP-адресов
							format(ip555, sizeof(ip555), "%s_C", ip333);//сборка дополнительных имён файлов
						}
						else
						{
							format(ip444, sizeof(ip444), "%s.%d*", ip222, i);//сборка дополнительных IP-адресов
							format(ip555, sizeof(ip555), "%s_%dC", ip333, i);//сборка дополнительных имён файлов
						}
						format(string,sizeof(string),"banlist/ipadr/%s.ini",ip555);
						if(fexist(string))
						{
							ind3 = 1;
							strdel(ssss11, 0, 256);
							new File: UserFile = fopen(string, io_read);//чтение файла
							new key[ 256 ];
							new Data[ 256 ];
							while ( fread( UserFile , Data , sizeof( Data ) ) )
							{
								key = ini_GetKey( Data );
								if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
							}
							fclose(UserFile);
							format(string, sizeof(string), " [%s] -{FFFF00} %s", ip444, ssss11);
							SendClientMessage(playerid, COLOR_GREEN, string);
						}
					}
				}
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) != 0 &&
				strlen(ipper[playerid][2]) == 0 && strlen(ipper[playerid][3]) == 0)
				{//если IP-адрес набран двумя группами цифр, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s.%s", ipper[playerid][0], ipper[playerid][1]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s_%s", ipper[playerid][0], ipper[playerid][1]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s.*.*] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
//---------------------------------- конец -------------------------------------
					for(new i = 0; i < 26; i++)//поиск дополнительных имён файлов
					{
						for(new j = 0; j < 26; j++)
						{
							new ip444[128];
							new ip555[128];
							if(i == 0 && j == 0)
							{
								format(ip444, sizeof(ip444), "%s.*.*", ip222);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_C_C", ip333);//сборка дополнительных имён файлов
							}
							if(i == 0 && j != 0)
							{
								format(ip444, sizeof(ip444), "%s.*.%d*", ip222, j);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_C_%dC", ip333, j);//сборка дополнительных имён файлов
							}
							if(i != 0 && j == 0)
							{
								format(ip444, sizeof(ip444), "%s.%d*.*", ip222, i);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_%dC_C", ip333, i);//сборка дополнительных имён файлов
							}
							if(i != 0 && j != 0)
							{
								format(ip444, sizeof(ip444), "%s.%d*.%d*", ip222, i, j);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_%dC_%dC", ip333, i, j);//сборка дополнительных имён файлов
							}
							format(string,sizeof(string),"banlist/ipadr/%s.ini",ip555);
							if(fexist(string))
							{
								ind3 = 1;
								strdel(ssss11, 0, 256);
								new File: UserFile = fopen(string, io_read);//чтение файла
								new key[ 256 ];
								new Data[ 256 ];
								while ( fread( UserFile , Data , sizeof( Data ) ) )
								{
									key = ini_GetKey( Data );
									if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
								}
								fclose(UserFile);
								format(string, sizeof(string), " [%s] -{FFFF00} %s", ip444, ssss11);
								SendClientMessage(playerid, COLOR_GREEN, string);
							}
						}
					}
				}
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) == 0 &&
				strlen(ipper[playerid][2]) == 0 && strlen(ipper[playerid][3]) == 0)
				{//если IP-адрес набран одной группой цифр, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s", ipper[playerid][0]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s", ipper[playerid][0]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s.*.*.*] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
//---------------------------------- конец -------------------------------------
					for(new i = 0; i < 26; i++)//поиск дополнительных имён файлов
					{
						for(new j = 0; j < 26; j++)
						{
							for(new k = 0; k < 26; k++)
							{
								new ip444[128];
								new ip555[128];
								if(i == 0 && j == 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.*.*.*", ip222);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_C_C", ip333);//сборка дополнительных имён файлов
								}
								if(i == 0 && j == 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.*.*.%d*", ip222, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_C_%dC", ip333, k);//сборка дополнительных имён файлов
								}
								if(i == 0 && j != 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.*.%d*.*", ip222, j);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_%dC_C", ip333, j);//сборка дополнительных имён файлов
								}
								if(i == 0 && j != 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.*.%d*.%d*", ip222, j, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_%dC_%dC", ip333, j, k);//сборка дополнительных имён файлов
								}
								if(i != 0 && j == 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.*.*", ip222, i);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_C_C", ip333, i);//сборка дополнительных имён файлов
								}
								if(i != 0 && j == 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.*.%d*", ip222, i, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_C_%dC", ip333, i, k);//сборка дополнительных имён файлов
								}
								if(i != 0 && j != 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.%d*.*", ip222, i, j);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_%dC_C", ip333, i, j);//сборка дополнительных имён файлов
								}
								if(i != 0 && j != 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.%d*.%d*", ip222, i, j, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_%dC_%dC", ip333, i, j, k);//сборка дополнительных имён файлов
								}
								format(string,sizeof(string),"banlist/ipadr/%s.ini",ip555);
								if(fexist(string))
								{
									ind3 = 1;
									strdel(ssss11, 0, 256);
									new File: UserFile = fopen(string, io_read);//чтение файла
									new key[ 256 ];
									new Data[ 256 ];
									while ( fread( UserFile , Data , sizeof( Data ) ) )
									{
										key = ini_GetKey( Data );
										if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
									}
									fclose(UserFile);
									format(string, sizeof(string), " [%s] -{FFFF00} %s", ip444, ssss11);
									SendClientMessage(playerid, COLOR_GREEN, string);
								}
							}
						}
					}
				}
				if(ind3 == 0)
				{
					SendClientMessage(playerid,COLOR_RED," IP-адрес в бан-листе не найден !");
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s просмотрел IP-адрес [%s] в бан-листе.", RealName[playerid], ip222);
					print(string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/tadm", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /tadm [ид настройки (0- запретить всем");
				SendClientMessage(playerid, COLOR_GRAD2, " игрокам водить поезда, 1- разрешить всем игрокам водить");
				SendClientMessage(playerid, COLOR_GRAD2, " поезда, 2- вернуть все поезда на места их спавна, 3-");
				SendClientMessage(playerid, COLOR_GRAD2, " просмотреть статус резрешения)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
				return 1;
			}
			if(para1 == 0)
			{
				if(pertrain == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Запрет уже в действии !");
				}
				else
				{
					pertrain = 0;
					format(string, sizeof(string), " *** Админ %s запретил всем игрокам водить поезда.", RealName[playerid]);
					print(string);
					SendClientMessageToAll(COLOR_RED, string);
				}
				return 1;
			}
			if(para1 == 1)
			{
				if(pertrain == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Разрешение уже в действии !");
				}
				else
				{
					pertrain = 1;
					format(string, sizeof(string), " *** Админ %s разрешил всем игрокам водить поезда.", RealName[playerid]);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
				}
				return 1;
			}
			if(para1 == 2)
			{
				new car;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{//проверить всех игроков
					if(IsPlayerConnected(i))
					{
						car = GetPlayerVehicleID(i);
						if(TrainID[0] <= car <= TrainID22[0] || TrainID[1] <= car <= TrainID22[1] ||
						TrainID[2] <= car <= TrainID22[2] || TrainID[3] <= car <= TrainID22[3] ||
						TrainID[4] <= car <= TrainID22[4] || TrainID[5] <= car <= TrainID22[5] ||
						TrainID[6] <= car <= TrainID22[6] || TrainID[7] <= car <= TrainID22[7])
						{//если игрок в поезде или в вагоне, то слапнуть игрока
							new Float:x, Float:y, Float:z, Float:hp;
							tpdrift[i] = 1;
							EnterTick33[i] = 1;//обход антикрашера - 3
							GetPlayerHealth(i,hp);
							SetPlayerHealth(i,hp-5);
							GetPlayerPos(i,x,y,z);
							SetPlayerPos(i,x+3,y+3,z+5);
						}
					}
				}
    			for(new i = 0; i < 8; i++)
				{
					SetVehicleToRespawn(TrainID[i]);//респавн всех поездов
					SetVehicleToRespawn(TrainID[i]+1);
					SetVehicleToRespawn(TrainID[i]+2);
					SetVehicleToRespawn(TrainID[i]+3);
				}
				format(string, sizeof(string), " *** Админ %s вернул все поезда на места их спавна.", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				return 1;
			}
			if(para1 == 3)
			{
				if(pertrain == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Всем игрокам ЗАПРЕЩЕНО водить поезда !");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN, " Всем игрокам РАЗРЕШЕНО водить поезда !");
				}
				printf(" *** Админ %s просмотрел статус разрешения на вождение поездов.", RealName[playerid]);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/muteakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 2)
    	{
   			new dopper,csec;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /muteakk [имя аккаунта] [число секунд");
				SendClientMessage(playerid, COLOR_GRAD2, " (чтобы разоткнуть, введите 3 секунды)] [причина]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Такого аккаунта не существует !");
				return 1;
			}
#if (MOD4DINS >= 1)
			if(admData[playerid][dPassLock] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Аккаунт заблокирован системой паспортов !");
				return 1;
			}
#endif
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(fadm >= 1 && PlayerInfo[playerid][pAdmin] <= 9)//проверка аккаунта на админку
			{
				if(fadm == 11)//подмена 11-го левела на 10-й
				{
					dopper = 10;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /muteakk [имя аккаунта] [число секунд] [причина] !");
				return 1;
			}
			csec = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(csec != 3)//заткнуть игрока
			{
				if(csec < 5) {csec = 5;}
				if(admData[playerid][dMutedsec] == 0)//если игрок НЕ заткнут, то:
				{
					admData[playerid][dMuted]++;
				}
				admData[playerid][dMutedsec] = csec;
			}
			else//разоткнуть игрока
			{
				if(admData[playerid][dMutedsec] > 0)//если игрок заткнут, то:
				{
  					admData[playerid][dMuted]--;
					admData[playerid][dMutedsec] = 0;
				}
				else
				{
			  		SendClientMessage(playerid, COLOR_RED, " Выбранный игрок не заткнут !");
					return 1;
				}
			}
#if (MOD90INS == 0)
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Muted = %d,", admData[playerid][dMuted]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sMutedsec = %d WHERE (Name = '%s')", strdln, admData[playerid][dMutedsec], akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			if(csec != 3)//заткнуть игрока
			{
				new dopcis;
				dopcis = FCislit(csec);
				switch(dopcis)
				{
					case 0: format(ssss, sizeof(ssss), " *** Админ %s заткнул аккаунт игрока %s на %d секунд , причина: %s", RealName[playerid], akk, csec, result);
					case 1: format(ssss, sizeof(ssss), " *** Админ %s заткнул аккаунт игрока %s на %d секунду , причина: %s", RealName[playerid], akk, csec, result);
					case 2: format(ssss, sizeof(ssss), " *** Админ %s заткнул аккаунт игрока %s на %d секунды , причина: %s", RealName[playerid], akk, csec, result);
				}
				print(ssss);
				SendClientMessageToAll(COLOR_RED, ssss);
			}
			else//разоткнуть игрока
			{
				format(ssss, sizeof(ssss), " *** Админ %s разоткнул аккаунт игрока %s , причина: амнистия ;)))", RealName[playerid], akk);
				print(ssss);
				SendClientMessageToAll(COLOR_GREEN, ssss);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/prisonakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 2)
    	{
   			new dopper,csec;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /prisonakk [имя аккаунта] [число секунд");
				SendClientMessage(playerid, COLOR_GRAD2, " (чтобы освободить, введите 3 секунды)] [причина]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Такого аккаунта не существует !");
				return 1;
			}
#if (MOD4DINS >= 1)
			if(admData[playerid][dPassLock] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Аккаунт заблокирован системой паспортов !");
				return 1;
			}
#endif
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(fadm >= 1 && PlayerInfo[playerid][pAdmin] <= 9)//проверка аккаунта на админку
			{
				if(fadm == 11)//подмена 11-го левела на 10-й
				{
					dopper = 10;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /prisonakk [имя аккаунта] [число секунд] [причина] !");
				return 1;
			}
			csec = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(csec != 3)//посадить игрока
			{
				if(csec < 5) {csec = 5;}
				if(admData[playerid][dPrisonsec] == 0)//если не в тюрьме, то:
				{
					admData[playerid][dPrison]++;
				}
				admData[playerid][dPrisonsec] = csec;
			}
			else//освободить игрока
			{
				if(admData[playerid][dPrisonsec] > 0)//если игрок в тюрьме, то:
				{
  					admData[playerid][dPrison]--;
					admData[playerid][dPrisonsec] = 0;
				}
				else
				{
			  		SendClientMessage(playerid, COLOR_RED, " Выбранный игрок не сидит в тюрьме !");
					return 1;
				}
			}
#if (MOD90INS == 0)
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Prison = %d,", admData[playerid][dPrison]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sPrisonsec = %d WHERE (Name = '%s')", strdln, admData[playerid][dPrisonsec], akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			if(csec != 3)//посадить игрока
			{
				new dopcis;
				dopcis = FCislit(csec);
				switch(dopcis)
				{
					case 0: format(ssss, sizeof(ssss), " *** Админ %s посадил аккаунт игрока %s в тюрьму на %d секунд , причина: %s", RealName[playerid], akk, csec, result);
					case 1: format(ssss, sizeof(ssss), " *** Админ %s посадил аккаунт игрока %s в тюрьму на %d секунду , причина: %s", RealName[playerid], akk, csec, result);
					case 2: format(ssss, sizeof(ssss), " *** Админ %s посадил аккаунт игрока %s в тюрьму на %d секунды , причина: %s", RealName[playerid], akk, csec, result);
				}
				print(ssss);
				SendClientMessageToAll(COLOR_RED, ssss);
			}
			else//освободить игрока
			{
				format(ssss, sizeof(ssss), " *** Админ %s освободил аккаунт игрока %s , причина: амнистия ;)))", RealName[playerid], akk);
				print(ssss);
				SendClientMessageToAll(COLOR_GREEN, ssss);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/openip", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openip [ид настройки(0-2)] ( 0- очистить слот");
				SendClientMessage(playerid, COLOR_GRAD2, " IP-адреса, 1- добавить IP-адрес в слот, 2- просмотреть настройки )");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 2)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 2 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openip 0 [номер слота IP-адреса(0-39)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 39)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота IP-адреса от 0 до 39 !");
					return 1;
				}
				if(strlen(OpenIP[para2]) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный слот пустой !");
					return 1;
				}
				strdel(OpenIP[para2],0,256);
				OpenIP22[para2] = 0;
				SaveOpenIP();//запись IP-слотов
				ReadOpenIP();//чтение IP-слотов
				format(string, sizeof(string), " *** Админ %s [%d] очистил %d слот IP-адреса .", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы очистили %d слот IP-адреса .", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openip 1 [номер слота IP-адреса(0-39)]");
					SendClientMessage(playerid, COLOR_GRAD2, " [максимум подключений с заданного IP-адреса(2-10)] [IP-адрес]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 39)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота IP-адреса от 0 до 39 !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				new para3;
				para3 = strval(tmp);
				if(para3 < 2 || para3 > 10)
				{
					SendClientMessage(playerid, COLOR_RED, " Максимум подключений с заданного IP-адреса от 2 до 10 !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				new dltmp;
				dltmp = strlen(tmp);
				if(dltmp < 7 || dltmp > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина IP-адреса должна быть от 7 до 15 символов !");
					return 1;
				}
				new dopper111 = 0;
				new dopper222 = 0;
				for(new i = 0; i < dltmp; i++)
				{
					if((tmp[i] < 48 || tmp[i] > 57) && tmp[i] != '.' && tmp[i] != '*') {dopper111 = 1;}
					if(tmp[i] == '.') {dopper222++;}
				}
				if(dopper111 == 1 || dopper222 != 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				for(new i = 0; i < 4; i++)//очистка локальной части массива ipper44
				{
					for(new j = 0; j < 32; j++)
					{
						ipper44[playerid][i][j] = 0;
					}
				}
				new ind1, ind2;//разделение IP-адреса
				ind1 = -1;
				for(new i = 0; i < 4; i++)
				{
					ind1++;
					ind2 = 0;
					while(tmp[ind1] != '.')
					{
						if(ind1 > dltmp)
						{
							break;
						}
						ipper44[playerid][i][ind2] = tmp[ind1];
						ind1++;
						ind2++;
					}
				}
				dopper111 = 0;
				for(new i = 0; i < 4; i++)
				{
					if(strlen(ipper44[playerid][i]) < 1 || strlen(ipper44[playerid][i]) > 3) {dopper111 = 1;}
				}
    			if(dopper111 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
    			if(strfind(ipper44[playerid][0], "*", true) != -1)
				{
					SendClientMessage(playerid, COLOR_RED, " IP-адрес НЕ может начинаться с шаблона !");
					return 1;
				}
    			if(strval(ipper44[playerid][0]) > 255)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				dopper111 = 0;
    			if((strfind(ipper44[playerid][1], "*", true) == -1 && strfind(ipper44[playerid][2], "*", true) != -1 && strfind(ipper44[playerid][3], "*", true) != -1 &&
				strlen(ipper44[playerid][2]) == 1 && strlen(ipper44[playerid][3]) == 1) ||
				(strfind(ipper44[playerid][1], "*", true) == -1 && strfind(ipper44[playerid][2], "*", true) == -1 && strfind(ipper44[playerid][3], "*", true) == -1))
				{
					dopper111 = 1;
				}
    			if(dopper111 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Шаблон указан не верно !");
					return 1;
				}
				new ind3 = 1;//проверка каждой группы цифр на максимально допустимый адрес
				new ind4 = 0;
				while(ind3 < 4)
				{
					if(ipper44[playerid][ind3][0] != '*')
					{
						if(strval(ipper44[playerid][ind3]) > 255) {ind4 = 1;}
					}
					ind3++;
				}
    			if(ind4 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				new ip333[128];//сборка IP-адреса
				format(ip333, sizeof(ip333), "%s.%s.%s.%s", ipper44[playerid][0], ipper44[playerid][1], ipper44[playerid][2], ipper44[playerid][3]);
				if((strcmp(ip333, OpenIP[para2], false) == 0 && strlen(OpenIP[para2]) != 0) && para3 == OpenIP22[para2])
				{
					SendClientMessage(playerid, COLOR_RED, " Максимум подключений с заданного IP-адреса и набранный");
					SendClientMessage(playerid, COLOR_RED, " Вами IP-адрес уже записаны в выбранном слоте !");
					return 1;
				}
				dopper111 = 0;
				dopper222 = 0;
				while(dopper111 < 40)//поиск повторного IP-адреса
				{
					if(strcmp(ip333, OpenIP[dopper111], false) == 0 && strlen(OpenIP[dopper111]) != 0 && dopper111 != para2)
					{//если IP-адреса найден, И слот НЕ равен нулю, И это НЕ выбранный слот, то:
						dopper222 = 1;
						break;
					}
					dopper111++;
				}
    			if(dopper222 == 1)
				{
					format(string, sizeof(string), " Набранный Вами IP-адрес уже записан в %d слоте !", dopper111);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				dopper111 = 0;
				dopper222 = 0;
				new ip555[128];
    			if(ipper44[playerid][3][0] != 42)//если IP-адрес был набран полностью (НЕ шаблоном), то:
				{
					format(ip555, sizeof(ip555), "%s.%s.*.*", ipper44[playerid][0], ipper44[playerid][1]);//преобразование IP-адреса в шаблон
					while(dopper111 < 40)//поиск повторного IP-адреса (шаблона)
					{
						if(strcmp(ip555, OpenIP[dopper111], false) == 0 && strlen(OpenIP[dopper111]) != 0 && dopper111 != para2)
						{//если шаблон IP-адреса найден, И слот НЕ равен нулю, И это НЕ выбранный слот, то:
							dopper222 = 1;
							break;
						}
						dopper111++;
					}
    				if(dopper222 == 1)
					{
						format(string, sizeof(string), " Набранный Вами IP-адрес уже записан в шаблоне, в %d слоте !", dopper111);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
				}
				else//если IP-адрес был набран как шаблон, то:
				{
					new dopper333;
					new dopper444;
					while(dopper111 < 40)//поиск повторного IP-адреса (уже входящего в набранный шаблон)
					{
						if(strlen(OpenIP[dopper111]) != 0 && dopper111 != para2)
						{//если слот НЕ равен нулю, И это НЕ выбранный слот, то:
							if(OpenIP[dopper111][strlen(OpenIP[dopper111])-1] != 42)
							{//если IP-адреса НЕ шаблон, то:
								dopper333 = 0;//преобразование IP-адреса в шаблон
								dopper444 = 0;
								while(dopper333 <= strlen(OpenIP[dopper111]))
								{
									if(OpenIP[dopper111][dopper333] == 46) { dopper444++; }
									ip555[dopper333] = OpenIP[dopper111][dopper333];
									dopper333++;
									if(dopper444 == 2) { break; }
								}
								ip555[dopper333] = 42;
								dopper333++;
								ip555[dopper333] = 46;
								dopper333++;
								ip555[dopper333] = 42;
								dopper333++;
								ip555[dopper333] = 0;
								dopper333++;
								ip555[dopper333] = 0;
								if(strcmp(ip333, ip555, false) == 0)
								{//если набранный шаблон IP-адреса найден в преобразованном шаблоне, то:
									dopper222 = 1;
									break;
								}
							}
						}
						dopper111++;
					}
    				if(dopper222 == 1)
					{
						format(string, sizeof(string), " IP-адрес из набранного Вами шаблона уже записан в %d слоте !", dopper111);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
				}
				strdel(OpenIP[para2],0,256);
				strcat(OpenIP[para2], ip333);
				OpenIP22[para2] = para3;
				SaveOpenIP();//запись IP-слотов
				ReadOpenIP();//чтение IP-слотов
				format(string, sizeof(string), " *** Админ %s [%d] добавил %d слот IP-адреса [%d:::%s]", RealName[playerid],playerid,para2,para3,OpenIP[para2]);
				print(string);
				format(string, sizeof(string), " Вы добавили %d слот IP-адреса [%d:::%s]", para2,para3,OpenIP[para2]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 2)
			{
				ReadOpenIP();//чтение IP-слотов
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," Слот 0: [%d:::%s] Слот 1: [%d:::%s] Слот 2: [%d:::%s] Слот 3: [%d:::%s]",
				OpenIP22[0],OpenIP[0],OpenIP22[1],OpenIP[1],OpenIP22[2],OpenIP[2],OpenIP22[3],OpenIP[3]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 4: [%d:::%s] Слот 5: [%d:::%s] Слот 6: [%d:::%s] Слот 7: [%d:::%s]",
				OpenIP22[4],OpenIP[4],OpenIP22[5],OpenIP[5],OpenIP22[6],OpenIP[6],OpenIP22[7],OpenIP[7]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 8: [%d:::%s] Слот 9: [%d:::%s] Слот 10: [%d:::%s] Слот 11: [%d:::%s]",
				OpenIP22[8],OpenIP[8],OpenIP22[9],OpenIP[9],OpenIP22[10],OpenIP[10],OpenIP22[11],OpenIP[11]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 12: [%d:::%s] Слот 13: [%d:::%s] Слот 14: [%d:::%s] Слот 15: [%d:::%s]",
				OpenIP22[12],OpenIP[12],OpenIP22[13],OpenIP[13],OpenIP22[14],OpenIP[14],OpenIP22[15],OpenIP[15]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 16: [%d:::%s] Слот 17: [%d:::%s] Слот 18: [%d:::%s] Слот 19: [%d:::%s]",
				OpenIP22[16],OpenIP[16],OpenIP22[17],OpenIP[17],OpenIP22[18],OpenIP[18],OpenIP22[19],OpenIP[19]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 20: [%d:::%s] Слот 21: [%d:::%s] Слот 22: [%d:::%s] Слот 23: [%d:::%s]",
				OpenIP22[20],OpenIP[20],OpenIP22[21],OpenIP[21],OpenIP22[22],OpenIP[22],OpenIP22[23],OpenIP[23]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 24: [%d:::%s] Слот 25: [%d:::%s] Слот 26: [%d:::%s] Слот 27: [%d:::%s]",
				OpenIP22[24],OpenIP[24],OpenIP22[25],OpenIP[25],OpenIP22[26],OpenIP[26],OpenIP22[27],OpenIP[27]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 28: [%d:::%s] Слот 29: [%d:::%s] Слот 30: [%d:::%s] Слот 31: [%d:::%s]",
				OpenIP22[28],OpenIP[28],OpenIP22[29],OpenIP[29],OpenIP22[30],OpenIP[30],OpenIP22[31],OpenIP[31]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 32: [%d:::%s] Слот 33: [%d:::%s] Слот 34: [%d:::%s] Слот 35: [%d:::%s]",
				OpenIP22[32],OpenIP[32],OpenIP22[33],OpenIP[33],OpenIP22[34],OpenIP[34],OpenIP22[35],OpenIP[35]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 36: [%d:::%s] Слот 37: [%d:::%s] Слот 38: [%d:::%s] Слот 39: [%d:::%s]",
				OpenIP22[36],OpenIP[36],OpenIP22[37],OpenIP[37],OpenIP22[38],OpenIP[38],OpenIP22[39],OpenIP[39]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел настройки команды /openip сервера.", RealName[playerid], playerid);
				print(string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/mmd", true) == 0)
	{
		if(GetPVarInt(playerid, "MnMode") == 1)
		{
			SetPVarInt(playerid, "MnMode", 2);
			printf(" --> Игрок %s [%d] включил Y -режим вызова меню.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_GREEN, " Вы включили Y -режим вызова меню.");
		}
		else
		{
			SetPVarInt(playerid, "MnMode", 1);
			printf(" --> Игрок %s [%d] отключил Y -режим вызова меню.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_RED, " Вы отключили Y -режим вызова меню.");
		}
    	return 1;
	}
	if(strcmp(cmd, "/playtp", true) == 0)
	{
   		if(PlayerInfo[playerid][pAdmin] >= 2)
    	{
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /playtp [ид игрока кого ТП] [ид игрока к кому ТП]");
				return 1;
			}
			new playtp1;
			playtp1 = strval(tmp);
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /playtp [ид игрока кого ТП] [ид игрока к кому ТП] !");
				return 1;
			}
			new playtp2;
			playtp2 = strval(tmp);
			if(!IsPlayerConnected(playtp1))
			{
				SendClientMessage(playerid, COLOR_RED, " Игрока, кого ТП, нет на сервере !");
				return 1;
			}
			if(!IsPlayerConnected(playtp2))
			{
				SendClientMessage(playerid, COLOR_RED, " Игрока, к кому ТП, нет на сервере !");
				return 1;
			}
			if(playtp1 == playtp2)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ТП игрока к самому себе !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 4 && PlayerInfo[playtp1][pAdmin] >= 5)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Уровень админки игрока, кого ТП, выше Вашего !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[playtp1][pAdmin] == 10)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП - админ 10-го уровня !");
				return 1;
			}
			if(PlayerInfo[playtp1][pAdmin] == 11)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, защищён !");
				return 1;
			}
			if(PlayerInfo[playtp2][pAdmin] == 11)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, к кому ТП, защищён !");
				return 1;
			}
			if(PlayerInfo[playtp1][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, сидит в тюрьме !");
				return 1;
			}
			if(perfrost[playtp1] != 600 && perfrost[playtp1] != playerid)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, заморожен ! ( + был заморожен НЕ Вами ! )");
				return 1;
			}
			if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] != playerid)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, заблокирован ! ( + был заблокирован НЕ Вами ! )");
				return 1;
			}
			if(admper1[playtp1] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, занят наблюдением !");
				return 1;
			}
			if(admper1[playtp2] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, к кому ТП, занят наблюдением !");
				return 1;
			}
			if(playspa[playtp1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, ещё не заспавнился !");
				return 1;
			}
			if(playspa[playtp2] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, к кому ТП, ещё не заспавнился !");
				return 1;
			}
			new dopper1, dopper2, dopper3, dopper4;
			dopper1 = 0;
			dopper2 = 0;
			dopper3 = 0;
			dopper4 = 0;
			new Float:ConX, Float:ConY, Float:ConZ;
			GetPlayerPos(playtp2, ConX, ConY, ConZ);

			if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

			if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
			(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
			(GetPlayerInterior(playtp2) == 15 || GetPlayerInterior(playtp2) == 14)) { dopper3 = 1; }

			GetPlayerPos(playtp1, ConX, ConY, ConZ);

			if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper2 = 1; }

			if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
			(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
			(GetPlayerInterior(playtp1) == 15 || GetPlayerInterior(playtp1) == 14)) { dopper4 = 1; }

			if(dopper1 == 1 && dopper2 == 0)//если игрока телепортируем c основной карты на админ-остров, то:
			{
				if(PlayerInfo[playtp1][pAdmin] == 0 && GetPVarInt(playtp1, "TotPr") == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " У игрока, кого ТП, нет защитного тотема !");
					return 1;
				}
				SpectateStop(playtp1);//отключение наблюдения (если за игроком наблюдает полицейский)
				format(string,256," *** Админ %s телепортировал игрока %s к игроку %s .",RealName[playerid],RealName[playtp1],RealName[playtp2]);
				print(string);
				SendAdminMessage(COLOR_RED,string);
				if(PlayerInfo[playtp1][pAdmin] == 0)
				{
					format(string,256," *** Админ %s телепортировал Вас к игроку %s .",RealName[playerid],RealName[playtp2]);
					SendClientMessage(playtp1,COLOR_RED,string);
				}
				new Float:PosX, Float:PosY, Float:PosZ;
				PlayCRTP[playtp1] = 1;//блокировка контроля координат
				new nmod = GetVehicleModel(GetPlayerVehicleID(playtp1));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playtp1,PosX,PosY,PosZ);
					SetPlayerPos(playtp1,PosX+3,PosY+3,PosZ+5);
				}
				tpdrift[playtp1] = 1;
				if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] == playerid)
				{//если игрок заблокирован, то ТП заблокированного игрока
					PlayLock1[1][playtp1] = GetPlayerInterior(playtp2);//изменение интерьера блокировки
					PlayLock1[2][playtp1] = GetPlayerVirtualWorld(playtp2);//изменение виртуального мира блокировки
					GetPlayerPos(playtp2, PlayLock2[0][playtp1], PlayLock2[1][playtp1], PlayLock2[2][playtp1]);//изменение координат блокировки
					PlayLock2[1][playtp1] = PlayLock2[1][playtp1] + 1;
				}
				else//иначе - ТП НЕ заблокированного игрока
				{
					SetPlayerInterior(playtp1, GetPlayerInterior(playtp2));
					SetPlayerVirtualWorld(playtp1, GetPlayerVirtualWorld(playtp2));
					GetPlayerPos(playtp2, PosX, PosY, PosZ);
					SetPlayerPos(playtp1, PosX, PosY+1, PosZ+1);
				}
			}
			else//если игрока телепортируем в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
			{
				format(string,256," *** Админ %s телепортировал игрока %s к игроку %s .",RealName[playerid],RealName[playtp1],RealName[playtp2]);
				print(string);
				SendAdminMessage(COLOR_RED,string);
				if(PlayerInfo[playtp1][pAdmin] == 0)
				{
					format(string,256," *** Админ %s телепортировал Вас к игроку %s .",RealName[playerid],RealName[playtp2]);
					SendClientMessage(playtp1,COLOR_RED,string);
				}
				new Float:PosX, Float:PosY, Float:PosZ;
				PlayCRTP[playtp1] = 1;//блокировка контроля координат
				new nmod = GetVehicleModel(GetPlayerVehicleID(playtp1));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playtp1,PosX,PosY,PosZ);
					SetPlayerPos(playtp1,PosX+3,PosY+3,PosZ+5);
				}
				if(dopper3 == 1 && dopper4 == 0)//если игрока телепортируем НЕ С дерби НА дерби, то:
				{
					tpdrift[playtp1] = 1;
					if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] == playerid)
					{//если игрок заблокирован, то ТП заблокированного игрока
						PlayLock1[1][playtp1] = GetPlayerInterior(playtp2);//изменение интерьера блокировки
						PlayLock1[2][playtp1] = GetPlayerVirtualWorld(playtp2);//изменение виртуального мира блокировки
						GetPlayerPos(playtp2, PlayLock2[0][playtp1], PlayLock2[1][playtp1], PlayLock2[2][playtp1]);//изменение координат блокировки
						PlayLock2[1][playtp1] = PlayLock2[1][playtp1] + 1;
					}
					else//иначе - ТП НЕ заблокированного игрока
					{
						SetPlayerInterior(playtp1, GetPlayerInterior(playtp2));
						SetPlayerVirtualWorld(playtp1, GetPlayerVirtualWorld(playtp2));
						GetPlayerPos(playtp2, PosX, PosY, PosZ);
						SetPlayerPos(playtp1, PosX, PosY+1, PosZ+1);
					}
				}
				else//если игрока телепортируем в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
				{
					if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] == playerid)
					{//если игрок заблокирован, то ТП заблокированного игрока
						tpdrift[playtp1] = 1;
						PlayLock1[1][playtp1] = GetPlayerInterior(playtp2);//изменение интерьера блокировки
						PlayLock1[2][playtp1] = GetPlayerVirtualWorld(playtp2);//изменение виртуального мира блокировки
						GetPlayerPos(playtp2, PlayLock2[0][playtp1], PlayLock2[1][playtp1], PlayLock2[2][playtp1]);//изменение координат блокировки
						PlayLock2[1][playtp1] = PlayLock2[1][playtp1] + 1;
					}
					else//иначе - ТП НЕ заблокированного игрока
					{
						if(GetPlayerState(playtp1) == 2)//если игрок на месте водителя, то:
						{
							new regm = 1, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;
							per1 = GetPlayerInterior(playtp2);
							per2 = GetPlayerVirtualWorld(playtp2);
							GetPlayerPos(playtp2, PosX, PosY, PosZ);
							cor1 = PosX;
							cor2 = PosY+1;
							cor3 = PosZ+1;
							StopDrift(playtp1,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
						}
						else//иначе:
						{
							tpdrift[playtp1] = 1;
							SetPlayerInterior(playtp1, GetPlayerInterior(playtp2));
							SetPlayerVirtualWorld(playtp1, GetPlayerVirtualWorld(playtp2));
							GetPlayerPos(playtp2, PosX, PosY, PosZ);
							SetPlayerPos(playtp1, PosX, PosY+1, PosZ+1);
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/report", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 1)
        {
			SendClientMessage(playerid, COLOR_RED, " Админ не может отправить репорт !");
			return 1;
		}
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, пока дело о Вашей депортации на слушании !");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /report [ид нарушителя] [жалоба]");
			return 1;
		}
		new para1;
		para1 = strval(tmp);
		if(para1 == playerid)
        {
			SendClientMessage(playerid, COLOR_RED, " Нельзя жаловаться на самого себя !");
			return 1;
		}
		if(!IsPlayerConnected(para1))
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид нарушителя] на сервере нет !");
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_RED, " /report [ид нарушителя] [жалоба] !");
			return 1;
		}
        if(StopReport[playerid] != 0)//если переменная задержки НЕ равна 0, то:
		{
			new dopcis;
			dopcis = FCislit(StopReport[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopReport[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopReport[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopReport[playerid]);
			}
			SendClientMessage(playerid, COLOR_RED, string);
			return 1;
		}
		new per55 = 0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
//				if(PlayerInfo[i][pAdmin] >= 1) {per55 = 1;}//поиск всех админов
				if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmshad] == 0) {per55 = 1;}//поиск только НЕ скрытых админов
			}
		}
		if(per55 == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Ваша жалоба не отправлена, нет админов на сервере !");
			return 1;
		}
		format(string, sizeof(string), " <Report> {FFFF00}игрок %s [%d] пожаловался на игрока %s [%d] , причина: %s", RealName[playerid], playerid, RealName[para1], para1, result);
		print(string);
		SendAdminMessage(COLOR_RED, string);
		SendClientMessage(playerid, COLOR_YELLOW, " Ваша жалоба отправлена админам, ожидайте её рассмотрения.");
		StopReport[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
		return 1;
	}
	if(strcmp("/dt", cmd, true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		new dopper1 = 0;//меркерная переменная = 0
		new Float:ConX, Float:ConY, Float:ConZ;
		GetPlayerPos(playerid, ConX, ConY, ConZ);
		if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||//если игрок в дерби зонах, то:
		(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
		(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper1 = 1; }//меркерная переменная = 1
		if(dopper1 == 0 && GetPlayerInterior(playerid) != 0)//если игрок НЕ в дерби зонах, И в доме (или другом интерьере) то:
		{
			SendClientMessage(playerid, COLOR_RED, " Команда работает только на основной карте, или в ДТ мирах !");
			return 1;
		}
		new plvw;
		plvw = GetPlayerVirtualWorld(playerid);
		if(plvw < 0 || plvw > 990)
		{
			SendClientMessage(playerid, COLOR_RED, " Команда работает только на основной карте, или в ДТ мирах !");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /dt [виртуальный мир (0-990)]");
			return 1;
		}
		new ii = strval(tmp);
		if(ii < 0 || ii > 990)
		{
			SendClientMessage(playerid, COLOR_RED, " /dt [виртуальный мир (0-990)] !");
			return 1;
		}
		if(ii > 0)
		{
			if(ii == plvw)
			{
				format(string, sizeof(string), " Вы уже находитесь в %d виртуальном мире !!!", ii);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			SetPlayerVirtualWorld(playerid, ii);
			if(GetPlayerState(playerid) == 2)
			{//если игрок на месте водителя, то:
				new carpl;
				carpl = GetPlayerVehicleID(playerid);//получение ид авто инициатора
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerVehicleID(i) == carpl && playerid != i)//если игрок в авто инициатора, то:
						{//установить пассажирам интерьер и виртуальный мир игрока
							SetPlayerInterior(i, GetPlayerInterior(playerid));
							SetPlayerVirtualWorld(i, ii);
							format(string, sizeof(string), "Russian_Drift: {00FF00}Ваш виртуальный мир был изменён на {FF0000}%d {00FF00}(Вы в режиме дрифт тренировки)", ii);
							SendClientMessage(i, COLOR_YELLOW, string);
							SendClientMessage(i, COLOR_GREEN, "Для отключения режима дрифт тренировки используйте команду: {FF0000}/dt 0");
						}
					}
				}
				LinkVehicleToInterior(carpl, GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
				SetVehicleVirtualWorld(carpl, ii);//установить транспорту виртуальный мир игрока
			}
			format(string, sizeof(string), "Russian_Drift: {00FF00}Ваш виртуальный мир был изменён на {FF0000}%d {00FF00}(Вы в режиме дрифт тренировки)", ii);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_GREEN, "Для отключения режима дрифт тренировки используйте команду: {FF0000}/dt 0");
		}
		else
		{
			if(ii == plvw)
			{
				SendClientMessage(playerid, COLOR_RED, " У Вас уже выключен режим дрифт тренировки !!!");
				return 1;
			}
			SetPlayerVirtualWorld(playerid, ii);
			if(GetPlayerState(playerid) == 2)
			{//если игрок на месте водителя, то:
				new carpl;
				carpl = GetPlayerVehicleID(playerid);//получение ид авто инициатора
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerVehicleID(i) == carpl && playerid != i)//если игрок в авто инициатора, то:
						{//установить пассажирам интерьер и виртуальный мир игрока
							SetPlayerInterior(i, GetPlayerInterior(playerid));
							SetPlayerVirtualWorld(i, ii);
							SendClientMessage(i, COLOR_YELLOW, "Russian_Drift: {FF0000}Режим дрифт тренировки был выключен");
						}
					}
				}
				LinkVehicleToInterior(carpl, GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
				SetVehicleVirtualWorld(carpl, ii);//установить транспорту виртуальный мир игрока
			}
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Режим дрифт тренировки выключен");
		}
		return 1;
	}
	if(strcmp(cmd, "/scancom", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (PlayerInfo[playerid][pAdmscancom] == 1)
			{
				PlayerInfo[playerid][pAdmscancom] = 0;
				format(string,sizeof(string)," *** Админ %s выключил сканирование команд сервера.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pAdmscancom] = 1;
				format(string,sizeof(string)," *** Админ %s включил сканирование команд сервера.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/wantv", true) == 0)
	{
		if (PlayerInfo[playerid][pPolice] >= 1 || PlayerInfo[playerid][pAdmin] >= 4)
		{
			new dopper;
			dopper = 0;
			SendClientMessage(playerid, COLOR_YELLOW, " Список разыскиваемых игроков:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playspa[i] == 1 && PlayerInfo[i][pWanted] == 1 && PlayerInfo[playerid][pPolice] >= 1 && PlayerInfo[playerid][pAdmin] < 4)
					{
						dopper = 1;
						format(string, sizeof(string), " --- {E03515} %s [%d]", RealName[i], i);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
					if(gPlayerLogged[i] == 1 && PlayerInfo[i][pWanted] == 1 && PlayerInfo[playerid][pAdmin] >= 4)
					{
						dopper = 1;
						format(string, sizeof(string), " --- {E03515} %s [%d]", RealName[i], i);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
			if(dopper == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, " --- не обнаружено.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, " ----------------------------------------");
			}
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				printf(" *** Админ %s просмотрел список разыскиваемых игроков.", RealName[playerid]);
			}
			else
			{
				printf(" *** Полицейский %s просмотрел список разыскиваемых игроков.", RealName[playerid]);
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не состоите в полиции !");
		}
		return 1;
	}
	if(strcmp(cmd, "/fine", true) == 0)
	{
		if (PlayerInfo[playerid][pPolice] >= 1)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			new Float: X, Float:Y, Float: Z, playvw;
			GetPlayerPos(playerid, X, Y, Z);
			playvw = GetPlayerVirtualWorld(playerid);
			new per55 = 0;
			for(new i = 0; i < MAX_PLAYERS ; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[playerid][pPolice] == 1)
					{
						if(IsPlayerInRangeOfPoint(i, 40.0, X, Y, Z) && GetPlayerVirtualWorld(i) == playvw &&
						PlayerInfo[i][pWanted] == 1 && i != playerid)
						{
							SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") - 50000);
							PlayerInfo[i][pWanted] = 0;
							per55 = 1;
							format(string,sizeof(string)," *** Полицейский %s оштрафовал игрока %s на 50000 $ за превышение скорости (или чит-телепорт) .", RealName[playerid], RealName[i]);
							print(string);
							SendClientMessageToAll(COLOR_RED, string);
						}
					}
					if(PlayerInfo[playerid][pPolice] == 2)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, X, Y, Z) && GetPlayerVirtualWorld(i) == playvw &&
						PlayerInfo[i][pWanted] == 1 && i != playerid)
						{
							SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") - 50000);
							PlayerInfo[i][pWanted] = 0;
							per55 = 1;
							format(string,sizeof(string)," *** Полицейский %s оштрафовал игрока %s на 50000 $ за превышение скорости (или чит-телепорт) .", RealName[playerid], RealName[i]);
							print(string);
							SendClientMessageToAll(COLOR_RED, string);
						}
					}
					if(PlayerInfo[playerid][pPolice] == 3)
					{
						if(IsPlayerInRangeOfPoint(i, 20.0, X, Y, Z) && GetPlayerVirtualWorld(i) == playvw &&
						PlayerInfo[i][pWanted] == 1 && i != playerid)
						{
							SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") - 50000);
							PlayerInfo[i][pWanted] = 0;
							per55 = 1;
							format(string,sizeof(string)," *** Полицейский %s оштрафовал игрока %s на 50000 $ за превышение скорости (или чит-телепорт) .", RealName[playerid], RealName[i]);
							print(string);
							SendClientMessageToAll(COLOR_RED, string);
						}
					}
				}
			}
			if(per55 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нарушителей поблизости не обнаружено !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не состоите в полиции !");
		}
		return 1;
	}
	if(strcmp(cmd, "/wanted", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /wanted [ид игрока] [0-убрать из розыска, 1-объявить в розыск]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(!IsPlayerConnected(para1))
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
				return 1;
			}
			if(gPlayerLogged[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /wanted [ид игрока] [0-убрать из розыска, 1-объявить в розыск] !");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			if(para2 < 0 || para2 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " [0-убрать из розыска, 1-объявить в розыск] !");
				return 1;
			}
			if(PlayerInfo[para1][pWanted] == 0 && para2 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранного игрока уже нет в розыске !");
				return 1;
			}
			if(PlayerInfo[para1][pWanted] == 1 && para2 == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок уже объявлен в розыск !");
				return 1;
			}
			PlayerInfo[para1][pWanted] = para2;
			if(PlayerInfo[para1][pWanted] == 0)
			{
				format(string, sizeof(string), " *** Админ %s убрал из розыска игрока %s .", RealName[playerid], RealName[para1]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				if(PlayerInfo[para1][pAdmin] == 0)
				{
					format(string, sizeof(string), " *** Админ %s убрал с Вас розыск.", RealName[playerid]);
					SendClientMessage(para1, COLOR_GREEN, string);
				}
			}
			else
			{
				format(string, sizeof(string), " *** Админ %s объявил в розыск игрока %s .", RealName[playerid], RealName[para1]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
				if(PlayerInfo[para1][pAdmin] == 0)
				{
					format(string, sizeof(string), " *** Админ %s объявил Вас в розыск.", RealName[playerid]);
					SendClientMessage(para1, COLOR_RED, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/setweap", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /setweap [ид игрока] [ид предмета или оружия(1-46)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [число патронов, зарядов, или штук(1-50000)] или /setweap 600");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 == 600)
			{
				format(strdln, sizeof(strdln), "1 - Кастет     2 - Клюшка для гольфа\
				\n3 - Резиновая дубинка     4 - Нож\
				\n5 - Бейсбольная бита     6 - Лопата\
				\n7 - Кий     8 - Катана");
				format(strdln, sizeof(strdln), "%s\n9 - Бензопила     14 - Букет цветов\
				\n15 - Трость     16 - Граната\
				\n17 - Слезоточивый газ     18 - Коктейль Молотова\
				\n22 - Пистолет     23 - Пистолет с глушителем", strdln);
				format(strdln, sizeof(strdln), "%s\n24 - Дезерт иигл     25 - Дробовик\
				\n26 - Обрез     27 - SPAZ 12\
				\n28 - Узи     29 - MP5\
				\n30 - АК-47     31 - М4", strdln);
				format(strdln, sizeof(strdln), "%s\n32 - Tes9     33 - Винтовка\
				\n34 - Снайперская винтовка     35 - Ракетная установка\
				\n36 - РПГ     37 - Огнемёт\
				\n38 - Minigun     39 - Взрывчатка", strdln);
				format(strdln, sizeof(strdln), "%s\n41 - Баллончик с краской     42 - Огнетушитель\
				\n43 - Фотоаппарат     44 - Очки ночного видения\
				\n45 - Инфракрасные очки     46 - Парашют", strdln);
				ShowPlayerDialog(playerid, 2, 0, "ID предметов и оружия:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(!IsPlayerConnected(para1))
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
				return 1;
			}
			if(playspa[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не заспавнился !");
				return 1;
			}
			if(PlayerInfo[para1][pDeport] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
				return 1;
			}
			if(DerbyID[para1] == 2)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Выбранный игрок в зоне дерби !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /setweap [ид игрока] [ид предмета или оружия(1-46)]");
				SendClientMessage(playerid, COLOR_RED, " [число патронов, зарядов, или штук(1-50000)] или /setweap 600 !");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			if(para2 < 1 || para2 > 46 || para2 == 10 || para2 == 11 || para2 == 12 || para2 == 13 ||
			para2 == 19 || para2 == 20 || para2 == 21 || para2 == 40)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид предмета или оружия] нет в списке команды !");
				return 1;
			}
			new para5 = 0;
			if(para2 >= 16 && para2 <= 39) { para5 = 1; }
			new para3;
			if(para5 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [число патронов, зарядов, или штук(1-50000)] !");
					return 1;
				}
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 50000)
				{
					SendClientMessage(playerid, COLOR_RED, " Число патронов, зарядов, или штук - от 1 до 50000 !");
					return 1;
				}
			}
			new para4[64];
		 	new para6 = 0;
			switch(para2)
			{
				case 1: format(para4, sizeof(para4), "Кастет");
				case 2: format(para4, sizeof(para4), "Клюшку для гольфа");
				case 3: format(para4, sizeof(para4), "Резиновую дубинку");
				case 4: format(para4, sizeof(para4), "Нож");
				case 5: format(para4, sizeof(para4), "Бейсбольную биту");
				case 6: format(para4, sizeof(para4), "Лопату");
				case 7: format(para4, sizeof(para4), "Кий");
				case 8: format(para4, sizeof(para4), "Катану");
				case 9: format(para4, sizeof(para4), "Бензопилу");
				case 14: format(para4, sizeof(para4), "Букет цветов");
				case 15: format(para4, sizeof(para4), "Трость");
				case 16: format(para4, sizeof(para4), "Гранату");
				case 17: format(para4, sizeof(para4), "Слезоточивый газ");
				case 18: format(para4, sizeof(para4), "Коктейль Молотова");
				case 22: format(para4, sizeof(para4), "Пистолет");
				case 23: format(para4, sizeof(para4), "Пистолет с глушителем");
				case 24: format(para4, sizeof(para4), "Дезерт иигл");
				case 25: format(para4, sizeof(para4), "Дробовик");
				case 26: format(para4, sizeof(para4), "Обрез");
				case 27: format(para4, sizeof(para4), "SPAZ 12");
				case 28: format(para4, sizeof(para4), "Узи");
				case 29: format(para4, sizeof(para4), "MP5");
				case 30: format(para4, sizeof(para4), "АК-47");
				case 31: format(para4, sizeof(para4), "М4");
				case 32: format(para4, sizeof(para4), "Tes9");
				case 33: format(para4, sizeof(para4), "Винтовку");
				case 34: format(para4, sizeof(para4), "Снайперскую винтовку");
				case 35: format(para4, sizeof(para4), "Ракетную установку"), para6 = 1;
				case 36: format(para4, sizeof(para4), "РПГ"), para6 = 1;
				case 37: format(para4, sizeof(para4), "Огнемёт"), para6 = 1;
				case 38: format(para4, sizeof(para4), "Minigun"), para6 = 1;
				case 39: format(para4, sizeof(para4), "Взрывчатку");
				case 41: format(para4, sizeof(para4), "Баллончик с краской");
				case 42: format(para4, sizeof(para4), "Огнетушитель");
				case 43: format(para4, sizeof(para4), "Фотоаппарат");
				case 44: format(para4, sizeof(para4), "Очки ночного видения"), para6 = 1;
				case 45: format(para4, sizeof(para4), "Инфракрасные очки"), para6 = 1;
				case 46: format(para4, sizeof(para4), "Парашют");
			}
			if(PlayerInfo[para1][pAdmin] == 0 && para6 == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот предмет или оружие можно дать только админу !");
				return 1;
			}
			if(para5 == 0)
			{
				GivePlayerWeapon(para1, para2, 1000);
			}
			else
			{
				if(para2 == 37)
				{
					GivePlayerWeapon(para1, para2, para3 * 10);
				}
				else
				{
					GivePlayerWeapon(para1, para2, para3);
					if(para2 == 39) { GivePlayerWeapon(para1, 40, 10); }
				}
			}
			if(para5 == 0)
			{
				format(string, sizeof(string), " *** Админ %s дал игроку %s %s .", RealName[playerid], RealName[para1], para4);
			}
			else
			{
				if(para2 >= 16 && para2 <= 18)
				{
					format(string, sizeof(string), " *** Админ %s дал игроку %s %s ( %d штук ) .", RealName[playerid], RealName[para1], para4, para3);
				}
				if((para2 >= 35 && para2 <= 37) || para2 == 39)
				{
					format(string, sizeof(string), " *** Админ %s дал игроку %s %s и %d зарядов.", RealName[playerid], RealName[para1], para4, para3);
				}
				if((para2 >= 22 && para2 <= 34) || para2 == 38)
				{
					format(string, sizeof(string), " *** Админ %s дал игроку %s %s и %d патронов.", RealName[playerid], RealName[para1], para4, para3);
				}
			}
			print(string);
			SendClientMessageToAll(COLOR_GREEN, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/setweapall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /setweapall [ид предмета или оружия(1-46)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [число патронов, зарядов, или штук(1-50000)] или /setweapall 600");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			if(para2 == 600)
			{
				format(strdln, sizeof(strdln), "1 - Кастет     2 - Клюшка для гольфа\
				\n3 - Резиновая дубинка     4 - Нож\
				\n5 - Бейсбольная бита     6 - Лопата\
				\n7 - Кий     8 - Катана");
				format(strdln, sizeof(strdln), "%s\n9 - Бензопила     14 - Букет цветов\
				\n15 - Трость     16 - Граната\
				\n17 - Слезоточивый газ     18 - Коктейль Молотова\
				\n22 - Пистолет     23 - Пистолет с глушителем", strdln);
				format(strdln, sizeof(strdln), "%s\n24 - Дезерт иигл     25 - Дробовик\
				\n26 - Обрез     27 - SPAZ 12\
				\n28 - Узи     29 - MP5\
				\n30 - АК-47     31 - М4", strdln);
				format(strdln, sizeof(strdln), "%s\n32 - Tes9     33 - Винтовка\
				\n34 - Снайперская винтовка     35 - Ракетная установка\
				\n36 - РПГ     37 - Огнемёт\
				\n38 - Minigun     39 - Взрывчатка", strdln);
				format(strdln, sizeof(strdln), "%s\n41 - Баллончик с краской     42 - Огнетушитель\
				\n43 - Фотоаппарат     44 - Очки ночного видения\
				\n45 - Инфракрасные очки     46 - Парашют", strdln);
				ShowPlayerDialog(playerid, 2, 0, "ID предметов и оружия:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(para2 < 1 || para2 > 46 || para2 == 10 || para2 == 11 || para2 == 12 || para2 == 13 ||
			para2 == 19 || para2 == 20 || para2 == 21 || para2 == 40)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид предмета или оружия] нет в списке команды !");
				return 1;
			}
			new para5 = 0;
			if(para2 >= 16 && para2 <= 39) { para5 = 1; }
			new para3;
			if(para5 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [число патронов, зарядов, или штук(1-50000)] !");
					return 1;
				}
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 50000)
				{
					SendClientMessage(playerid, COLOR_RED, " Число патронов, зарядов, или штук - от 1 до 50000 !");
					return 1;
				}
			}
			new para4[64];
		 	new para6 = 0;
			switch(para2)
			{
				case 1: format(para4, sizeof(para4), "Кастету");
				case 2: format(para4, sizeof(para4), "Клюшке для гольфа");
				case 3: format(para4, sizeof(para4), "Резиновой дубинке");
				case 4: format(para4, sizeof(para4), "Ножу");
				case 5: format(para4, sizeof(para4), "Бейсбольной бите");
				case 6: format(para4, sizeof(para4), "Лопате");
				case 7: format(para4, sizeof(para4), "Кию");
				case 8: format(para4, sizeof(para4), "Катане");
				case 9: format(para4, sizeof(para4), "Бензопиле");
				case 14: format(para4, sizeof(para4), "Букету цветов");
				case 15: format(para4, sizeof(para4), "Трости");
				case 16: format(para4, sizeof(para4), "Гранате");
				case 17: format(para4, sizeof(para4), "Слезоточивому газу");
				case 18: format(para4, sizeof(para4), "Коктейлю Молотова");
				case 22: format(para4, sizeof(para4), "Пистолету");
				case 23: format(para4, sizeof(para4), "Пистолету с глушителем");
				case 24: format(para4, sizeof(para4), "Дезерт иигл");
				case 25: format(para4, sizeof(para4), "Дробовику");
				case 26: format(para4, sizeof(para4), "Обрезу");
				case 27: format(para4, sizeof(para4), "SPAZ 12");
				case 28: format(para4, sizeof(para4), "Узи");
				case 29: format(para4, sizeof(para4), "MP5");
				case 30: format(para4, sizeof(para4), "АК-47");
				case 31: format(para4, sizeof(para4), "М4");
				case 32: format(para4, sizeof(para4), "Tes9");
				case 33: format(para4, sizeof(para4), "Винтовке");
				case 34: format(para4, sizeof(para4), "Снайперской винтовке");
				case 35: format(para4, sizeof(para4), "Ракетной установке"), para6 = 1;
				case 36: format(para4, sizeof(para4), "РПГ"), para6 = 1;
				case 37: format(para4, sizeof(para4), "Огнемёту"), para6 = 1;
				case 38: format(para4, sizeof(para4), "Minigun"), para6 = 1;
				case 39: format(para4, sizeof(para4), "Взрывчатке");
				case 41: format(para4, sizeof(para4), "Баллончику с краской");
				case 42: format(para4, sizeof(para4), "Огнетушителю");
				case 43: format(para4, sizeof(para4), "Фотоаппарату");
				case 44: format(para4, sizeof(para4), "Очкам ночного видения"), para6 = 1;
				case 45: format(para4, sizeof(para4), "Инфракрасным очкам"), para6 = 1;
				case 46: format(para4, sizeof(para4), "Парашюту");
			}
			new para777 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playspa[i] == 1 && PlayerInfo[i][pAdmin] >= 1 && para6 == 1 && DerbyID[i] == 0)
					{
						if(para5 == 0)
						{
							para777 = 1;
							GivePlayerWeapon(i, para2, 1000);
						}
						else
						{
							para777 = 1;
							if(para2 == 37)
							{
								GivePlayerWeapon(i, para2, para3 * 10);
							}
							else
							{
								GivePlayerWeapon(i, para2, para3);
								if(para2 == 39) { GivePlayerWeapon(i, 40, 10); }
							}
						}
					}
					if(playspa[i] == 1 && para6 == 0 && DerbyID[i] == 0 && PlayerInfo[i][pDeport] == 0)
					{
						if(para5 == 0)
						{
							para777 = 1;
							GivePlayerWeapon(i, para2, 1000);
						}
						else
						{
							para777 = 1;
							if(para2 == 37)
							{
								GivePlayerWeapon(i, para2, para3 * 10);
							}
							else
							{
								GivePlayerWeapon(i, para2, para3);
								if(para2 == 39) { GivePlayerWeapon(i, 40, 10); }
							}
						}
					}
				}
			}
			if(para777 == 1)
			{
				if(para5 == 0)
				{
					format(string, sizeof(string), " *** Админ %s раздал всем игрокам по %s .", RealName[playerid], para4);
				}
				else
				{
					if(para2 >= 16 && para2 <= 18)
					{
						format(string, sizeof(string), " *** Админ %s раздал всем игрокам по %s ( по %d штук каждому ) .", RealName[playerid], para4, para3);
					}
					if((para2 >= 35 && para2 <= 37) || para2 == 39)
					{
						format(string, sizeof(string), " *** Админ %s раздал всем игрокам по %s , и по %d зарядов каждому.", RealName[playerid], para4, para3);
					}
					if((para2 >= 22 && para2 <= 34) || para2 == 38)
					{
						format(string, sizeof(string), " *** Админ %s раздал всем игрокам по %s , и по %d патронов каждому.", RealName[playerid], para4, para3);
					}
				}
				print(string);
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Ни один из игроков не получил назначенный Вами ИД предмета или оружия !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
 	if(strcmp(cmd, "/setmonall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 7)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /setmonall [сумма]");
				return 1;
			}
			new money;
			money = strval(tmp);
			if(money < 0) { SendClientMessage(playerid, COLOR_RED, " Сумма не может быть отрицательным числом !"); return 1; }
			new para22 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(gPlayerLogged[i] == 1 && PlayerInfo[i][pDeport] == 0)
					{
						para22++;
					}
				}
			}
			para22 = para22 * money;
			new twenlim, restlim;
			if(Fmadmins(2, RealName[playerid], para22, twenlim, restlim) == 1)
			{
				new dopper44;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(gPlayerLogged[i] == 1 && PlayerInfo[i][pDeport] == 0)
						{
							if(money > 1000) { dopper44 = GetPVarInt(i, "PlMon"); }
							SetPVarInt(i, "PlMon", money);
							if(money > 1000)
							{
								printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[i], i, dopper44);
							}
						}
					}
				}
				format(string, 256, " *** Админ %s установил всем игрокам по %d $", RealName[playerid],money);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				printf(" *** Админ %s >> Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", RealName[playerid],twenlim,restlim);
			}
			else
			{
				if(restlim == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя ! Вы израсходовали суточный денежный лимит !");
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя ! У Вас недостаточный остаток денежного лимита !");
				}
			}
			if(twenlim != 0)
			{
				format(string, 256, " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
 	if(strcmp(cmd, "/moneyall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 7)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /moneyall [сумма] [причина]");
				return 1;
			}
			new money;
			money = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			new dopper44;
			if(money < 0)
			{
				money = money * -1;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(gPlayerLogged[i] == 1 && PlayerInfo[i][pDeport] == 0)
						{
							if(money > 1000) { dopper44 = GetPVarInt(i, "PlMon"); }
							SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") - money);
							if(money > 1000)
							{
								printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[i], i, dopper44);
							}
						}
					}
				}
				format(string, 256, " *** Админ %s изъял у всех игроков по %d $ , причина: %s", RealName[playerid],money,result);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
			}
			else
			{
				new para22 = 0;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(gPlayerLogged[i] == 1 && PlayerInfo[i][pDeport] == 0)
						{
							para22++;
						}
					}
				}
				para22 = para22 * money;
				new twenlim, restlim;
				if(Fmadmins(2, RealName[playerid], para22, twenlim, restlim) == 1)
				{
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(gPlayerLogged[i] == 1 && PlayerInfo[i][pDeport] == 0)
							{
								if(money > 1000) { dopper44 = GetPVarInt(i, "PlMon"); }
								SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") + money);
								if(money > 1000)
								{
									printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[i], i, dopper44);
								}
							}
						}
					}
					format(string, 256, " *** Админ %s раздал всем игрокам по %d $ , причина: %s (вернуть с процентами ;)))", RealName[playerid],money,result);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW, string);
					printf(" *** Админ %s >> Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", RealName[playerid],twenlim,restlim);
				}
				else
				{
					if(restlim == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Вы израсходовали суточный денежный лимит !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! У Вас недостаточный остаток денежного лимита !");
					}
				}
				if(twenlim != 0)
				{
					format(string, 256, " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/playtpall", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			new dopper1, dopper2;
			dopper1 = 0;
			dopper2 = 0;
			new Float:PosX, Float:PosY, Float:PosZ;
			GetPlayerPos(playerid, PosX, PosY, PosZ);
			if(-15500 >= PosX >= -20000 && 15500 <= PosY <= 20000) { dopper1 = 1; }
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playspa[i] == 1 && (PlayerInfo[i][pAdmin] >= 0 && PlayerInfo[i][pAdmin] <= 10) && i != playerid)
					{
						if(PlayerInfo[i][pPrisonsec] == 0)//если игрок (или админ) НЕ в тюрьме, то:
						{
							if(dopper1 == 0 ||//если ТП НЕ на админ-остров, ИЛИ
							(dopper1 == 1 && PlayerInfo[i][pAdmin] >= 1) ||//ТП НА админ-остров админа, ИЛИ
							(dopper1 == 1 && PlayerInfo[i][pAdmin] == 0 && GetPVarInt(i, "TotPr") == 1))//ТП НА админ-остров игрока с защитным тотемом, то:
							{//телепортируем
								dopper2 = 1;
								if(PlayLock1[0][i] != 600)//если игрок заблокирован, то:
								{
									PlayCRTP[i] = 1;//блокировка контроля координат
									tpdrift[i] = 1;
									PlayLock1[1][i] = GetPlayerInterior(playerid);//изменение интерьера блокировки
									PlayLock1[2][i] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
									GetPlayerPos(playerid, PlayLock2[0][i], PlayLock2[1][i], PlayLock2[2][i]);//изменение координат блокировки
									PlayLock2[1][i] = PlayLock2[1][i] + 1;
								}
								else
								{
									if(admper1[i] != 600)//если игрок в наблюдении, то:
									{
										TogglePlayerSpectating(i, 0);//запретить наблюдение для игрока
										admper6[i] = 0;//обнуляем отметку о переключении наблюдения
										SetTimerEx("DopPlaytp", 1000, 0, "ii", playerid, i);
									}
									else
									{
										EnterTick33[i] = 1;//обход антикрашера - 3
										PlayCRTP[i] = 1;//блокировка контроля координат
										tpdrift[i] = 1;
			 							SetPlayerInterior(i, GetPlayerInterior(playerid));
										SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
			   							GetPlayerPos(playerid, PosX, PosY, PosZ);
										SetPlayerPos(i, PosX, PosY+1, PosZ+1);
									}
								}
							}
						}
						if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pPrisonsec] > 0)//если админ в тюрьме, то:
						{
							dopper2 = 1;
							PlayerInfo[i][pPrison]--;
							PlayerInfo[i][pPrisonsec] = 0;
							SpawnPlayer(i);//респавн админа
							SendClientMessage(i, COLOR_GREEN, "* Амнистия ( по команде /playtpall )");
							SetTimerEx("DopAdmtp", 1000, 0, "ii", playerid, i);
						}
					}
				}
			}
            if(dopper2 == 1)
            {
				format(string,256," *** Админ %s телепортировал всех игроков к себе.",RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Нет доступных игроков (или админов) для ТП к себе !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/tpset", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 7)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /tpset [координата X] [координата Y] [координата Z]");
				return 1;
			}
			new cor1, cor2, cor3, Float:fcor1, Float:fcor2, Float:fcor3;
			cor1 = strval(tmp);
			if(cor1 < -19500 || cor1 > 19500)
			{
				SendClientMessage(playerid, COLOR_RED, " Координата X от -19500 до 19500 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [координата Y] [координата Z] !");
				return 1;
			}
			cor2 = strval(tmp);
			if(cor2 < -19500 || cor2 > 19500)
			{
				SendClientMessage(playerid, COLOR_RED, " Координата Y от -19500 до 19500 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [координата Z] !");
				return 1;
			}
			cor3 = strval(tmp);
			if(cor3 < -500 || cor3 > 19500)
			{
				SendClientMessage(playerid, COLOR_RED, " Координата Z от -500 до 19500 !");
				return 1;
			}
			format(string, sizeof(string), "%d", cor1);
			fcor1 = floatstr(string);
			format(string, sizeof(string), "%d", cor2);
			fcor2 = floatstr(string);
			format(string, sizeof(string), "%d", cor3);
			fcor3 = floatstr(string);
			SetPlayerPos(playerid, fcor1, fcor2, fcor3);
			printf(" *** Админ %s телепортировался в координаты: X = %f   Y = %f   Z = %f", RealName[playerid], fcor1, fcor2, fcor3);
			format(string, sizeof(string), " Вы телепортировались в координаты: X = %f   Y = %f   Z = %f", fcor1, fcor2, fcor3);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/rules", true) == 0)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Запрещается использовать {FF0000}читы {FFFFFF}на сервере !!!");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Запрещается {FF0000}материться, спамить, флудить, устраивать флейм {87CEFA}(словестную войну)");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}в любом из чатов сервера {87CEFA}(общий чат, админ-чат, чаты банд, чат полиции) {FFFFFF},");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}а так же, в системе личных сообщений {87CEFA}( /pm ) {FFFFFF}!!!");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Запрещается мешать проведению {FF0000}мероприятий {FFFFFF}на сервере !!!");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {87CEFA}(устраивать DM (расстреливать игроков) на гонках, дрифт-соревнованиях, и.т.п.)");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Если Вы увидели нарушителя, сообщите админам в {FF0000}/report");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Для телепортов на дрифт зоны используйте команды: {2F60FF}/drift1 - /drift9");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Не оскорбляйте {FF0000}других игроков и админов {FFFFFF}! И не забывайте, что {FF0000}админы - тоже люди {FFFFFF}!");
    	return 1;
	}
	if(strcmp(cmd, "/hh", true) == 0)
	{
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду,");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		if(StopHH[playerid] != 0)//если переменная задержки НЕ равна 0, то:
		{
			new dopcis;
			dopcis = FCislit(StopHH[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHH[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHH[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHH[playerid]);
			}
			SendClientMessage(playerid,COLOR_RED,string);
		}
		else//иначе:
		{
			format(string, sizeof(string), "..::%s(%d) {00CCFF}приветствует {00ACFF}всех {0083FF}игроков!!!::..", RealName[playerid], playerid);
			SendClientMessageToAll(0x00EEFFFF, string);
			StopHH[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
		}
    	return 1;
	}
	if(strcmp(cmd, "/bb", true) == 0)
	{
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду,");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		if(StopBB[playerid] != 0)//если переменная задержки НЕ равна 0, то:
		{
			new dopcis;
			dopcis = FCislit(StopBB[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopBB[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopBB[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopBB[playerid]);
			}
			SendClientMessage(playerid,COLOR_RED,string);
		}
		else//иначе:
		{
			format(string, sizeof(string), "..::%s(%d) {00CCFF}прощается {00ACFF}со всеми!!!::..", RealName[playerid], playerid);
			SendClientMessageToAll(0x00EEFFFF, string);
			StopBB[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
		}
    	return 1;
	}
	if(strcmp(cmd, "/jetpack", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /jetpack [ид игрока]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(IsPlayerConnected(para1))
		    {
				if(playspa[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не заспавнился !");
					return 1;
				}
				if(admper1[para1] != 600)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кому Вы хотите дать JetPack - в режиме наблюдения !");
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[para1][pAdmin] >= 10)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы не можете дать JetPack админу 10-го уровня !");
					return 1;
				}
				if(IsPlayerInAnyVehicle(para1))
				{//если игрок в авто, то:
					new Float:X, Float:Y, Float:Z;//высадить игрока из авто
					GetPlayerPos(para1, X, Y, Z);
					SetPlayerPos(para1, X+3, Y+3, Z+3);
				}
				SetPlayerSpecialAction(para1, 2);
				format(string, sizeof(string), " *** Админ %s дал игроку %s JetPack .", RealName[playerid], RealName[para1]);
				print(string);
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
    	return 1;
	}
	if(strcmp(cmd, "/explode", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /explode [ид игрока]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(IsPlayerConnected(para1))
		    {
				if(playspa[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не заспавнился !");
					return 1;
				}
				if(admper1[para1] != 600)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого Вы хотите взорвать - в режиме наблюдения !");
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[para1][pAdmin] >= 10)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы не можете взорвать админа 10-го уровня !");
					return 1;
				}
				new Float:x, Float:y, Float:z;
				GetPlayerPos(para1, x, y, z);
				CreateExplosion(x, y, z, 10, 10.0);
				CreateExplosion(x, y, z, 10, 10.0);
				format(string, sizeof(string), " *** Админ %s взорвал игрока %s .", RealName[playerid], RealName[para1]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
    	return 1;
	}
	if (strcmp(cmd,"/radpl",true) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 8)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREY, " Используйте: /radpl [ид игрока] [радио(1-12)]");
				SendClientMessage(playerid, COLOR_GREY, " или /radpl 600");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 == 600)
			{
				format(strdln, sizeof(strdln), "1 - %s\n2 - %s\n3 - %s\n4 - %s\n5 - %s\n6 - %s\n7 - %s\n8 - %s\
				\n9 - %s\n10 - %s\n11 - %s\n12 - %s", NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4],
				NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8], NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
				ShowPlayerDialog(playerid, 2, 0, "Список радио", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(!IsPlayerConnected(para1))
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
				return 1;
			}
			if(para1 == playerid)
			{
				SendClientMessage(playerid, COLOR_RED, " Чтобы включить радио самому себе, используйте меню сервера !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[para1][pAdmin] >= 10)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не можете включить радио админу 10-го уровня !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Радио(1-12) !");
				return 1;
			}
			new para2 = strval(tmp);
			if(para2 < 1 || para2 > 12)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого радио нет !");
				return 1;
			}
			NRadio[para1] = para2;//номер подключаемого радио
			StopAudioStreamForPlayer(para1);//отключим любой другой поток
			PlayAudioStreamForPlayer(para1, STRadio[para2]);//подключим поток с музыкой
			format(string, sizeof(string), " *** Админ %s включил Вам радио %s", RealName[playerid], NMRadio[para2]);
			SendClientMessage(para1, COLOR_GREEN, string);
			SendClientMessage(para1, COLOR_GREEN, " Для выключения используйте: {A9C4E4}Игровой меню --> {FFFF00}Радио --> {027FFE}Выключить радио");
			format(string, sizeof(string), " *** Aдмин %s включил игроку %s радио %s", RealName[playerid], RealName[para1], NMRadio[para2]);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
 					if(PlayerInfo[i][pAdmin] >= 1 && i != para1)
   					{
						SendClientMessage(i, COLOR_GREEN, string);
					}
				}
			}
			printf("[radio] Aдмин %s включил игроку %s радио %s .", RealName[playerid], RealName[para1], NMRadio[para2]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
	    return 1;
    }
	if (strcmp(cmd,"/radall",true) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 9)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREY, " Используйте: /radall [радио(1-12)]");
				SendClientMessage(playerid, COLOR_GREY, " или /radall 600");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 == 600)
			{
				format(strdln, sizeof(strdln), "1 - %s\n2 - %s\n3 - %s\n4 - %s\n5 - %s\n6 - %s\n7 - %s\n8 - %s\
				\n9 - %s\n10 - %s\n11 - %s\n12 - %s", NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4],
				NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8], NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
				ShowPlayerDialog(playerid, 2, 0, "Список радио", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(para1 < 1 || (para1 > 12 && para1 != 600))
			{
				SendClientMessage(playerid, COLOR_RED, " Такого радио нет !");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if((PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[i][pAdmin] <= 9) || PlayerInfo[playerid][pAdmin] >= 10)
					{
						NRadio[i] = para1;//номер подключаемого радио
						StopAudioStreamForPlayer(i);//отключим любой другой поток
						PlayAudioStreamForPlayer(i, STRadio[para1]);//подключим поток с музыкой
						format(string, sizeof(string), " *** Админ %s включил всем радио %s", RealName[playerid], NMRadio[para1]);
						SendClientMessage(i, COLOR_GREEN, string);
						SendClientMessage(i, COLOR_GREEN, " Для выключения используйте: {A9C4E4}Игровой меню --> {FFFF00}Радио --> {027FFE}Выключить радио");
					}
					if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[i][pAdmin] >= 10)
					{
						format(string, sizeof(string), " *** Админ %s включил всем радио %s", RealName[playerid], NMRadio[para1]);
						SendClientMessage(i, COLOR_GREEN, string);
					}
				}
			}
			printf("[radio] Aдмин %s включил всем радио %s .", RealName[playerid], NMRadio[para1]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
	    return 1;
    }
	if(strcmp(cmd, "/edplgangs", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 10)
    	{
			tmp = strtok(cmdtext, idx);
    		if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /edplgangs [режим (0- On-Line игрок, 1- Off-Line игрок)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ид игрока (режим 0), или имя аккаунта (режим 1)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ид банды, или: 0 - удалить игрока из банды, -600 - запретить приглашать");
				SendClientMessage(playerid, COLOR_GRAD2, " игрока в банду] ( дополнительно: [уровень в банде (от 1 до 6)] )");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " [режим (0- On-Line игрок, 1- Off-Line игрок)] !");
				return 1;
			}
			akk = strtok(cmdtext, idx);
			if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_RED, " [ид игрока (режим 0), или имя аккаунта (режим 1)] !");
				return 1;
			}
			new para2;
			if(para1 == 0)
			{
				para2 = strval(akk);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(gPlayerLogged[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
			}
			if(para1 == 1)
			{
				if(InpNameControl(akk) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
					SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(akk) < 1 || strlen(akk) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
					return 1;
				}
#if (MOD90INS == 0)
				format(string,sizeof(string),"players/%s.ini",akk);
//        		format(string,sizeof(string),"%s.ini",akk);
				if(!fexist(string))
				{
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
#endif
#if (MOD90INS == 1)
				format(string,sizeof(string),"players/%s.ini",akk);
//        		format(string,sizeof(string),"%s.ini",akk);
				if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
				{//проверим регистрацию в SQLite
					format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
					querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
					if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
					{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
						db_free_result(querydb[playerid]);//очищаем результат запроса БД
						SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
						return 1;
					}
					else
					{
						db_free_result(querydb[playerid]);//очищаем результат запроса БД
					}
				}
#endif
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [ид банды, или 0 , или -600] !");
				return 1;
			}
			new para3 = strval(tmp);
			if(para3 < 0 && para3 != -600)
			{
				SendClientMessage(playerid, COLOR_RED, " [ид банды, или 0 , или -600] !");
				return 1;
			}
			new para4 = 0;
			if(para3 > 0)
			{
				new string22[256];
				format(string22,sizeof(string22),"gangs/%i.ini",para3);
				if(!fexist(string22) || para3 >= (MAX_GANGS - 1))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид банды] на сервере нет !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [уровень в банде (от 1 до 6)] !");
					return 1;
				}
				para4 = strval(tmp);
				if(para4 < 1 || para4 > 6)
				{
					SendClientMessage(playerid, COLOR_RED, " [уровень в банде (от 1 до 6)] !");
					return 1;
				}
			}
			if(para1 == 0)
			{
				if(PGang[para2] == para3 && GangLvl[para2] == para4)
				{
					SendClientMessage(playerid,COLOR_RED," У выбранного игрока уже установлены назначаемые данные !");
					return 1;
				}
				if(para3 == -600)
				{
					if(PGang[para2] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s запретил приглашать игрока %s в банду (/edplgangs) .", RealName[playerid], RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(PGang[para2] > 0)
					{
						if(idgangsave[para2] > 0)//если ID банды для записи - активен, то:
						{
							new perloc;
							idgangsave[para2] = 0;//очистка ID банды для записи
							perloc = 0;
							while(perloc < MAX_PLAYERS)//цикл для всех игроков
							{
								if(PGang[para2] == PGang[perloc] && para2 != perloc)
								{//если есть хотя бы один игрок из банды выходящего, то:
									idgangsave[perloc] = PGang[para2];
									break;
								}
								perloc++;
							}
						}

						format(ssss, sizeof(ssss), " *** Админ %s удалил игрока %s из банды (ид: %d) ,", RealName[playerid], RealName[para2], PGang[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и запретил приглашать игрока %s в банду (/edplgangs) .", RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[PGang[para2]]--;//делаем в банде -1 игрок
						GangSave(PGang[para2]);//записываем банду
					}
				}
				if(para3 == 0)
				{
					if(PGang[para2] == -600)
					{
						format(ssss, sizeof(ssss), " *** Админ %s разрешил приглашать игрока %s в банду (/edplgangs) .", RealName[playerid], RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(PGang[para2] > 0)
					{
						if(idgangsave[para2] > 0)//если ID банды для записи - активен, то:
						{
							new perloc;
							idgangsave[para2] = 0;//очистка ID банды для записи
							perloc = 0;
							while(perloc < MAX_PLAYERS)//цикл для всех игроков
							{
								if(PGang[para2] == PGang[perloc] && para2 != perloc)
								{//если есть хотя бы один игрок из банды выходящего, то:
									idgangsave[perloc] = PGang[para2];
									break;
								}
								perloc++;
							}
						}

						format(ssss, sizeof(ssss), " *** Админ %s удалил игрока %s из банды (ид: %d) ,", RealName[playerid], RealName[para2], PGang[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и разрешил приглашать игрока %s в банду (/edplgangs) .", RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[PGang[para2]]--;//делаем в банде -1 игрок
						GangSave(PGang[para2]);//записываем банду
					}
				}
				if(para3 > 0)
				{
					if(PGang[para2] == -600 || PGang[para2] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s приписал игрока %s к банде (ид: %d) ,", RealName[playerid], RealName[para2], para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил игроку %s уровень %d в этой банде (/edplgangs) .", RealName[para2], para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень лидера, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого лидера банды
							strcat(GHead[para3], RealName[para2]);//назначить имя нового лидера банды
						}
						GPlayers[para3]++;//делаем в банде +1 игрок
						GangSave(para3);//записываем банду

						if(GSkin[para3][para4-1] < 500)
						{//если на уровне установлен скин, то сменить скин приписанному игроку
							SetPVarInt(para2, "PlSkin", GSkin[para3][para4-1]);
							SetPlayerSkin(para2, GetPVarInt(para2, "PlSkin"));
						}
						ColorPlay[para2] = GColorDec[para3];
						SetPlayerColor(para2, ColorPlay[para2]);//устанавливаем цвет ника
						for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
						{
							SetPlayerMarkerForPlayer(i, para2, GColorDec[para3]);
						}

						new dopper = 0;
						for(new i = 0; i < MAX_PLAYERS; i++)//подготовка к записи ID банды
						{
							if(para3 > 0 && para3 == idgangsave[i])
							{//если игрок состоит в банде, и ID его банды уже есть в списке, то:
								dopper = 1;
							}
						}
						if(para3 > 0 && dopper == 0)
						{//если игрок состоит в банде, и ID его банды НЕ был найден в списке, то:
							idgangsave[para2] = para3;//записываем в список ID банды игрока
						}
					}
					if(PGang[para2] == para3)
					{
						format(ssss, sizeof(ssss), " *** Админ %s назначил игроку %s уровень %d в его банде (/edplgangs) .", RealName[playerid], RealName[para2], para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень лидера, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого лидера банды
							strcat(GHead[para3], RealName[para2]);//назначить имя нового лидера банды
						}
						GangSave(para3);//записываем банду

						if(GSkin[para3][para4-1] < 500)
						{//если на уровне установлен скин, то сменить скин приписанному игроку
							SetPVarInt(para2, "PlSkin", GSkin[para3][para4-1]);
							SetPlayerSkin(para2, GetPVarInt(para2, "PlSkin"));
						}
					}
					if(PGang[para2] != para3 && PGang[para2] != -600 && PGang[para2] != 0)
					{
						if(idgangsave[para2] > 0)//если ID банды для записи - активен, то:
						{
							new perloc;
							idgangsave[para2] = 0;//очистка ID банды для записи
							perloc = 0;
							while(perloc < MAX_PLAYERS)//цикл для всех игроков
							{
								if(PGang[para2] == PGang[perloc] && para2 != perloc)
								{//если есть хотя бы один игрок из банды выходящего, то:
									idgangsave[perloc] = PGang[para2];
									break;
								}
								perloc++;
							}
						}

						format(ssss, sizeof(ssss), " *** Админ %s удалил игрока %s из банды (ид: %d) ,", RealName[playerid], RealName[para2], PGang[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** приписал игрока %s к банде (ид: %d) ,", RealName[para2], para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил игроку %s уровень %d в этой банде (/edplgangs) .", RealName[para2], para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень лидера, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого лидера банды
							strcat(GHead[para3], RealName[para2]);//назначить имя нового лидера банды
						}
						GPlayers[PGang[para2]]--;//делаем в банде -1 игрок
						GangSave(PGang[para2]);//записываем банду
						GPlayers[para3]++;//делаем в банде +1 игрок
						GangSave(para3);//записываем банду

						if(GSkin[para3][para4-1] < 500)
						{//если на уровне установлен скин, то сменить скин приписанному игроку
							SetPVarInt(para2, "PlSkin", GSkin[para3][para4-1]);
							SetPlayerSkin(para2, GetPVarInt(para2, "PlSkin"));
						}
						ColorPlay[para2] = GColorDec[para3];
						SetPlayerColor(para2, ColorPlay[para2]);//устанавливаем цвет ника
						for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
						{
							SetPlayerMarkerForPlayer(i, para2, GColorDec[para3]);
						}

						new dopper = 0;
						for(new i = 0; i < MAX_PLAYERS; i++)//подготовка к записи ID банды
						{
							if(para3 > 0 && para3 == idgangsave[i])
							{//если игрок состоит в банде, и ID его банды уже есть в списке, то:
								dopper = 1;
							}
						}
						if(para3 > 0 && dopper == 0)
						{//если игрок состоит в банде, и ID его банды НЕ был найден в списке, то:
							idgangsave[para2] = para3;//записываем в список ID банды игрока
						}
					}
				}
				PGang[para2] = para3;
				GangLvl[para2] = para4;
			}
			if(para1 == 1)
			{
				strdel(dAccName[playerid], 0, 64);
				strcat(dAccName[playerid], akk);
				if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка чтения аккаунта игрока !");
					return 1;
				}
#if (MOD4DINS >= 1)
				if(admData[playerid][dPassLock] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Аккаунт заблокирован системой паспортов !");
					return 1;
				}
#endif
				if(admData[playerid][dGang] == para3 && admData[playerid][dGangLvl] == para4)
				{
					SendClientMessage(playerid,COLOR_RED," У выбранного игрока уже установлены назначаемые данные !");
					return 1;
				}
				if(para3 == -600)
				{
					if(admData[playerid][dGang] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s запретил приглашать аккаунт игрока %s в банду (/edplgangs) .", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(admData[playerid][dGang] > 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s удалил аккаунт игрока %s из банды (ид: %d) ,", RealName[playerid], akk, admData[playerid][dGang]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и запретил приглашать аккаунт игрока %s в банду (/edplgangs) .", akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[admData[playerid][dGang]]--;//делаем в банде -1 игрок
						GangSave(admData[playerid][dGang]);//записываем банду
					}
				}
				if(para3 == 0)
				{
					if(admData[playerid][dGang] == -600)
					{
						format(ssss, sizeof(ssss), " *** Админ %s разрешил приглашать аккаунт игрока %s в банду (/edplgangs) .", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(admData[playerid][dGang] > 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s удалил аккаунт игрока %s из банды (ид: %d) ,", RealName[playerid], akk, admData[playerid][dGang]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и разрешил приглашать аккаунт игрока %s в банду (/edplgangs) .", akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[admData[playerid][dGang]]--;//делаем в банде -1 игрок
						GangSave(admData[playerid][dGang]);//записываем банду
					}
				}
				if(para3 > 0)
				{
					if(admData[playerid][dGang] == -600 || admData[playerid][dGang] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s приписал аккаунт игрока %s к банде (ид: %d) ,", RealName[playerid], akk, para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил аккаунту игрока %s уровень %d в этой банде (/edplgangs) .", akk, para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень лидера, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого лидера банды
							strcat(GHead[para3], akk);//назначить имя нового лидера банды
						}
						GPlayers[para3]++;//делаем в банде +1 игрок
						GangSave(para3);//записываем банду
					}
					if(admData[playerid][dGang] == para3)
					{
						format(ssss, sizeof(ssss), " *** Админ %s назначил аккаунту игрока %s уровень %d в его банде (/edplgangs) .", RealName[playerid], akk, para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень лидера, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого лидера банды
							strcat(GHead[para3], akk);//назначить имя нового лидера банды
						}
						GangSave(para3);//записываем банду
					}
					if(admData[playerid][dGang] != para3 && admData[playerid][dGang] != -600 && admData[playerid][dGang] != 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s удалил аккаунт игрока %s из банды (ид: %d) ,", RealName[playerid], akk, admData[playerid][dGang]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** приписал аккаунт игрока %s к банде (ид: %d) ,", akk, para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил аккаунту игрока %s уровень %d в этой банде (/edplgangs) .", akk, para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень лидера, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого лидера банды
							strcat(GHead[para3], akk);//назначить имя нового лидера банды
						}
						GPlayers[admData[playerid][dGang]]--;//делаем в банде -1 игрок
						GangSave(admData[playerid][dGang]);//записываем банду
						GPlayers[para3]++;//делаем в банде +1 игрок
						GangSave(para3);//записываем банду
					}
				}
				admData[playerid][dGang] = para3;
				admData[playerid][dGangLvl] = para4;
#if (MOD90INS == 0)
				strdel(dAccName[playerid], 0, 64);
				strcat(dAccName[playerid], akk);
				AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
				format(strdln, sizeof(strdln), "UPDATE Players SET Gang = %d,", admData[playerid][dGang]);//создаём запрос БД
				format(strdln, sizeof(strdln), "%sGangLvl = %d WHERE (Name = '%s')", strdln, admData[playerid][dGangLvl], akk);
				db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
#if (MOD90INS == 1)
	if(strcmp(cmd, "/delakktm", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
    	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /delakktm 99 , или");
				SendClientMessage(playerid, COLOR_GRAD2, " /delakktm [число] [месяц] [год]");

				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 1 || (para1 > 31 && para1 != 99))
			{
				SendClientMessage(playerid, COLOR_RED, " /delakktm 99 , или /delakktm [число] [месяц] [год] !");
				return 1;
			}
			if(para1 == 99)
			{
				new locquery[128], dopper;
				format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (IDCopy = 1)");//создаём запрос БД
				querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
				dopper = db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД

				printf(" *** Админ %s [%d] просмотрел общее число аккаунтов в БД (%d) .", RealName[playerid], playerid, dopper);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "----------------------------------------------------------");
				format(string,sizeof(string)," Всего аккаунтов в БД: %d", dopper);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "----------------------------------------------------------");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /delakktm [число] [месяц] [год] !");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /delakktm [число] [месяц] [год] !");
				return 1;
			}
			new para3;
			para3 = strval(tmp);
			if(para3 > EndConY || (para3 == EndConY && para2 > EndConM) ||
			(para3 == EndConY && para2 == EndConM && para1 >= EndConD))
			{
				SendClientMessage(playerid, COLOR_RED, " Дата очистки не может быть позднее или равна сегодняшней дате !");
				return 1;
			}
			new locquery[256];
			new dopper44 = 0;

			format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (DEndConY < %d AND AdminLevel = 0)", para3);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
			dopper44 = dopper44 + db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД, и прибавим это число к счётчику
			db_free_result(querydb[playerid]);//очищаем результат запроса БД

			format(locquery, sizeof(locquery), "DELETE FROM Players WHERE (DEndConY < %d AND AdminLevel = 0)", para3);
			db_query(playerdb, locquery);//отправляем запрос на удаление аккаунта (аккаунтов) из БД

			format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (DEndConY = %d AND DEndConM < %d AND AdminLevel = 0)", para3, para2);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
			dopper44 = dopper44 + db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД, и прибавим это число к счётчику
			db_free_result(querydb[playerid]);//очищаем результат запроса БД

			format(locquery, sizeof(locquery), "DELETE FROM Players WHERE (DEndConY = %d AND DEndConM < %d AND AdminLevel = 0)", para3, para2);
			db_query(playerdb, locquery);//отправляем запрос на удаление аккаунта (аккаунтов) из БД

			format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (DEndConY = %d AND DEndConM = %d AND DEndConD <= %d AND AdminLevel = 0)", para3, para2, para1);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
			dopper44 = dopper44 + db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД, и прибавим это число к счётчику
			db_free_result(querydb[playerid]);//очищаем результат запроса БД

			format(locquery, sizeof(locquery), "DELETE FROM Players WHERE (DEndConY = %d AND DEndConM = %d AND DEndConD <= %d AND AdminLevel = 0)", para3, para2, para1);
			db_query(playerdb, locquery);//отправляем запрос на удаление аккаунта (аккаунтов) из БД

			printf(" *** Админ %s [%d] удалил %d аккаунтов из БД.", RealName[playerid], playerid, dopper44);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "--------------------------------------------------------------------");
			format(string,sizeof(string)," Было удалено аккаунтов из БД: %d", dopper44);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "--------------------------------------------------------------------");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#endif
	if(strcmp(cmd, "/delcar", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /delcar [ид авто]");
				return 1;
			}
			new carid;
			carid = strval(tmp);
			if (carid < 1 || carid > 10000)
			{
				SendClientMessage(playerid, COLOR_RED, " ИД авто: от 1 до 10000 !");
				return 1;
			}
			if(TrainID[0] <= carid <= TrainID22[0] || TrainID[1] <= carid <= TrainID22[1] ||
			TrainID[2] <= carid <= TrainID22[2] || TrainID[3] <= carid <= TrainID22[3] ||
			TrainID[4] <= carid <= TrainID22[4] || TrainID[5] <= carid <= TrainID22[5] ||
			TrainID[6] <= carid <= TrainID22[6] || TrainID[7] <= carid <= TrainID22[7])
			{//если уничтожаемый транспорт поезд или вагон сервера, то ничего не уничтожать
				SendClientMessage(playerid, COLOR_RED, " Этот транспорт уничтожить нельзя !");
				return 1;
			}
			if(CallRemoteFunction("myobjvehfunc", "d", carid) != 0)//чтение ИД транспорта из скпипта myobj
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это отдельно созданный транспорт !");
				return 1;
			}
			if(CallRemoteFunction("garagefunction", "d", carid) != 0)//чтение ИД транспорта из системы гаражей
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы гаражей !");
				return 1;
			}
			if(CallRemoteFunction("mpsysvehfunc", "d", carid) != 0)//чтение ИД транспорта из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы МП !");
				return 1;
			}
			if(CallRemoteFunction("dssysvehfunc", "d", carid) != 0)//чтение ИД транспорта из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы дерби-сумо !");
				return 1;
			}
			if(CallRemoteFunction("basesysvehfunc", "d", carid) != 0)//чтение ИД транспорта из системы баз
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы баз !");
				return 1;
			}
			if(CallRemoteFunction("vehsys3vehfunc", "d", carid) != 0)//чтение ИД транспорта из системы личного транспорта vehsys3
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это личный транспорт игрока !");
				return 1;
			}
			new locper = 0;
			new locper55 = 0;
			while(locper < MAX_PLAYERS)//удалить любой транспорт
			{
				if(IsPlayerConnected(locper))//дальнейшее выполняем если игрок в коннекте
				{
					if(GetPlayerVehicleID(locper) == carid)
					{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
						EnterTick33[locper] = 1;//обход антикрашера - 3
					}
				}
			 	if(carid == playcar[locper])//если удаляемый транспорт - личный транспорт игрока, то:
			 	{
					locper55 = 1;
					break;
			 	}
				if(carid == neon[locper][2])//удалить чужой неон и чужую мигалку на свободном транспорте
				{
					DestroyObject(neon[locper][0]);//убрать неон
					DestroyObject(neon[locper][1]);//убрать неон
					neon[locper][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[locper][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[locper][2] = 0;//несуществующий ид транспорта с неоном
					DestroyObject(migalka[locper][0]);//убрать мигалку
					migalka[locper][0] = 0;//присваиваем мигалке несуществующий номер объекта
					migalka[locper][1] = 0;//несуществующий ид транспорта с мигалкой
				}
				locper++;
			}
			if(locper55 == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это личный транспорт игрока !");
				return 1;
			}
			new model, car22;
			model = GetVehicleModel(carid);
			car22 = DestroyVehicle(carid);
			if(car22 == 1)
			{
				playcarvw[carid] = -100;//обнулить виртуальный мир транспорта игрока
			}
			if(car22 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид транспорта] на сервере нет !");
				return 1;
			}
			format(string, sizeof(string), " *** Админ %s уничтожил транспорт   ID: %d   Модель: %d .", RealName[playerid], carid, model);
			print(string);
			format(string, sizeof(string), " Транспорт уничтожен !   ID: %d   Модель: %d", carid, model);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/deltr", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			new model, cnt;
			cnt = 0;
			for(new i = 1; i < 10001; i++)
			{
				if((i < TrainID[0] || i > TrainID22[0]) && (i < TrainID[1] || i > TrainID22[1]) &&
				(i < TrainID[2] || i > TrainID22[2]) && (i < TrainID[3] || i > TrainID22[3]) &&
				(i < TrainID[4] || i > TrainID22[4]) && (i < TrainID[5] || i > TrainID22[5]) &&
				(i < TrainID[6] || i > TrainID22[6]) && (i < TrainID[7] || i > TrainID22[7]))
				{//если уничтожаемый транспорт НЕ поезд или вагон сервера, то:
					model = GetVehicleModel(i);
					if(model == 537 || model == 538 || model == 569 || model == 570)
					{
						DestroyVehicle(i);
						cnt++;
					}
				}
			}
			if(cnt != 0)
			{
				format(string, sizeof(string), " Было уничтожено %d свободных единиц поездов или вагонов !", cnt);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Свободных поездов или вагонов не было найдено !");
			}
			format(string, sizeof(string), " *** Админ %s уничтожил %d свободных единиц поездов или вагонов.", RealName[playerid], cnt);
			print(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/tweaprad", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			new Float: X, Float:Y, Float: Z, playvw;
			GetPlayerPos(playerid, X, Y, Z);
			playvw = GetPlayerVirtualWorld(playerid);
			new per55 = 0;
			for(new i = 0; i < MAX_PLAYERS ; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsPlayerInRangeOfPoint(i, 100.0, X, Y, Z) && GetPlayerVirtualWorld(i) == playvw && i != playerid)
					{
						per55 = 1;
						ResetPlayerWeapons(i);//отбираем оружие и предметы
					}
				}
			}
			if(per55 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Игроков поблизости не обнаружено !");
			}
			else
			{
				format(string, sizeof(string), " *** Админ %s отобрал у всех игроков все предметы и всё оружие", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				format(string, sizeof(string), " *** в радиусе 100 координатных единиц.");
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
#if (MOD77INS == 1)
	if(strcmp(cmd, "/dataakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 9)
    	{
   			new dopper;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /dataakk [имя аккаунта]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			strdel(dAccName[playerid], 0, 64);
			strcat(dAccName[playerid], akk);
			if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
			{
				SendClientMessage(playerid, COLOR_RED, " Такого аккаунта не существует !");
				return 1;
			}
			new fadm;
			if(admData[playerid][dAdmin] < 0)
			{
				fadm = admData[playerid][dAdmin] * -1;
			}
			else
			{
				fadm = admData[playerid][dAdmin];
			}
			if(fadm >= 10 && PlayerInfo[playerid][pAdmin] <= 9)//проверка аккаунта на админку 10-го лвл
			{
				if(fadm == 11)//подмена 11-го левела на 10-й
				{
					dopper = 10;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			new dopdata44;
			dopdata44 = 0;
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
	   			if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
			    {
					if(strcmp(akk, RealName[i], false) == 0) { dopdata44 = 1; }
				}
			}
			new dopdata2;
			if(admData[playerid][dGang] == -600)
			{
				dopdata2 = 0;
			}
			else
			{
				dopdata2 = admData[playerid][dGang];
			}
			printf(" *** Админ %s [%d] просмотрел аккаунт игрока %s . Без пароля !", RealName[playerid], playerid, akk);

			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
			format(ssss,sizeof(ssss),"           *** Аккаунт игрока [%s] *** ( Без пароля ! )", akk);
			SendClientMessage(playerid, COLOR_WHITE, ssss);
			if(dopdata44 == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! Аккаунт игрока On-Line !");
			}
			format(ssss,sizeof(ssss)," Время и дата регистрации: [ %s ]", admData[playerid][dTDReg]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Дата последнего входа на сервер: [ %02d/%02d/%04d ]", admData[playerid][dEndConD],admData[playerid][dEndConM],admData[playerid][dEndConY]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," IP: [%s] Админ LVL: [%d] Скрытость админа: [%d] Сканирование команд сервера: [%d]", admData[playerid][dIPAdr],fadm,admData[playerid][dAdmshad],admData[playerid][dAdmscancom]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Посадок в тюрьму: [%d] Секунд тюрьмы: [%d] Число затыков: [%d] Секунд затыка: [%d]", admData[playerid][dPrison],admData[playerid][dPrisonsec],admData[playerid][dMuted],admData[playerid][dMutedsec]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Убийств: [%d] Смертей: [%d] Розыск: [%d] LVL полиции: [%d] Депортация: [%d] Разрешение приёма PM: [%d]", admData[playerid][dKills],admData[playerid][dDeaths],admData[playerid][dWanted],admData[playerid][dPolice],admData[playerid][dDeport],admData[playerid][dRecPM]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Денег: [%d $] Минут на сервере: [%d] Бессмертие: [%d] Блокировка аккаунта: [%d]", admData[playerid][dMoney],admData[playerid][dMinlog],admData[playerid][dAdmlive],admData[playerid][dLock]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			if(fadm >= 6)
			{
				new twenlim, restlim;
				Fmadmins(2, akk, 0, twenlim, restlim);
				format(ssss,sizeof(ssss)," Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
			}
			format(ssss,sizeof(ssss)," ID банды: [%d] Уровень в банде: [%d]", dopdata2,admData[playerid][dGangLvl]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
#endif
#if (MOD77INS == 1 && MOD4DINS >= 1)
			if(admData[playerid][dPassLock] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Внимание !!! Аккаунт заблокирован системой паспортов,");
				SendClientMessage(playerid, COLOR_RED, " БЕЗ возможности восстановления !!!");
			}
#endif
#if (MOD77INS == 1)
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
#endif
	if(strcmp(cmd, "/sid", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
   			new dopss[64];
			new dopper;
			dopper = 0;
			dopss = strtok(cmdtext, idx);
    		if(!strlen(dopss))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /sid [первый символ ника]");
				return 1;
			}
			if(strlen(dopss) < 1 || strlen(dopss) > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Должен быть только ОДИН первый символ ника !");
				return 1;
			}

			format(string, sizeof(string), " Список ID игроков с первым символом ника ''%s'' :", dopss);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(dopss[0] == RealName[i][0])
					{
						dopper = 1;
						format(string, sizeof(string), " --- {E03515} %s [%d]", RealName[i], i);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
			if(dopper == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, " --- не обнаружено.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, " ----------------------------------------");
			}
			printf(" *** Админ %s [%d] просмотрел список ID игроков ( /sid ) .", RealName[playerid], playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
#if (MOD90INS == 1 && MOD77INS == 1)
	if(strcmp(cmd, "/akksrc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			new locIP[64], srcakk[64], adrip[128], dopper44, dopper55;
			akk = strtok(cmdtext, idx);
			if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /akksrc [имя аккаунта] [режим поиска");
				SendClientMessage(playerid, COLOR_GRAD2, " (0- по шаблону XX.XX.*.*, 1- по шаблону XX.XX.XX.*)]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
			else
			{
				new buffer[64], admlvl;//читаем данные из БД
				db_get_field(querydb[playerid], 7, locIP, 64);//IPAdr
				db_get_field(querydb[playerid], 9, buffer, 64); admlvl = strval(buffer);//AdminLevel
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				if(admlvl < 0) { admlvl = admlvl * -1; }
				if(PlayerInfo[playerid][pAdmin] == 9 && admlvl >= 10)
				{
					SendClientMessage(playerid,COLOR_RED," Вы не можете просмотреть аккаунт админа 10-го уровня !");
					return 1;
				}
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [режим поиска (0- по шаблону XX.XX.*.*, 1- по шаблону XX.XX.XX.*)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим поиска 0 или 1 !");
				return 1;
			}
			new para2, para3, locIP44[64];
			para2 = 0;
			para3 = 0;
			while(para2 < 64)
			{
				if((para1 == 0 && para3 == 2) || (para1 == 1 && para3 == 3))
				{
					locIP44[para2] = 0;
					para2++;
					locIP44[para2] = 0;
					break;
				}
				if(locIP[para2] == '.') { para3++; }
				locIP44[para2] = locIP[para2];
				para2++;
			}
			format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE IPAdr GLOB '%s*'", locIP44);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД (поиск всех IP с началом locIP44)
			dopper44 = db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД
			dopper55 = dopper44 - 1;
			if(dopper44 == 0)
			{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				SendClientMessage(playerid,COLOR_RED," Ошибка чтения данных из БД !");
				return 1;
			}
			else//читаем данные из БД
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-------------------------------------------------------------------------------");
				if(para1 == 0)
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.*.* )", dopper44);
				}
				else
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.XX.* )", dopper44);
				}
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
		        for(new i = 0; i < dopper44; i++)
		        {
					db_get_field(querydb[playerid], 1, srcakk, 64);//Name
					db_get_field(querydb[playerid], 7, adrip, 128);//IPAdr
					if(i < dopper55)//если обрабатывается НЕ последняя строка, то:
					{
		            	db_next_row(querydb[playerid]);///переходим к следующей строке результат запроса БД
					}
					format(ssss,sizeof(ssss)," %d). Аккаунт: [%s] IP: [%s]", i+1, srcakk, adrip);
					if(strcmp(akk, srcakk, false) == 0)
					{
						SendClientMessage(playerid, COLOR_YELLOW, ssss);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
					}
		        }
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				if(para1 == 0)
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.*.* )", dopper44);
				}
				else
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.XX.* )", dopper44);
				}
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-------------------------------------------------------------------------------");
				printf(" *** Админ %s [%d] просмотрел совпадения IP аккаунта игрока %s .", RealName[playerid], playerid, akk);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#endif
    if(strcmp(cmd, "/dmcount", true) == 0)
	{
    	if(PlayerInfo[playerid][pDeport] == 1)
    	{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду,");
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		if(dmplay[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Команда работает ТОЛЬКО в DM-зонах !");
			return 1;
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
		{
			SendClientMessage(playerid, COLOR_RED," Вы должны быть НЕ в транспорте.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /dmcount [секунды(2-12)]");
			return 1;
		}
		new persec;
		persec = strval(tmp);
		if (persec < 2 || persec > 12)
		{
			SendClientMessage(playerid, COLOR_RED, " Секунды: от 2 до 12 !");
			return 1;
		}
		format(string, sizeof(string), "Russian_Drift: {C2A2DA}Игрок %s [%d] запустил DM-отсчёт от %d секунд.", RealName[playerid], playerid, persec);
		print(string);
		new Float: X, Float:Y, Float: Z, playint, playvw;
		GetPlayerPos(playerid, X, Y, Z);
		playint = GetPlayerInterior(playerid);
		playvw = GetPlayerVirtualWorld(playerid);
		persec++;
		countdown22[playerid] = persec;
		for(new i = 0; i < MAX_PLAYERS ; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInRangeOfPoint(i,300.0,X,Y,Z) && GetPlayerInterior(i) == playint &&
				GetPlayerVirtualWorld(i) == playvw)
				{
					SendClientMessage(i, COLOR_RED, string);
					if(GetPlayerState(i) == PLAYER_STATE_ONFOOT && countdown22[i] == -1) countdown22[i] = persec;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/madmins", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 10)
    	{
			new para1, para2, para3, para4, f[256];
			tmp = strtok(cmdtext, idx);
    		if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /madmins [режим (0- по ИД админа, 1- по нику админа)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ИД админа / ник админа] [ИД настройки (0- просмотреть суточный");
				SendClientMessage(playerid, COLOR_GRAD2, " денежный лимит админа, 1- установить суточный денежный лимит для");
				SendClientMessage(playerid, COLOR_GRAD2, " админа, 2- удалить суточный денежный лимит админа)]");
				return 1;
			}
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим 0 или 1 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ИД админа] [ИД настройки] !");
					return 1;
				}
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранного [ИД админа] на сервере нет !");
					return 1;
				}
				if(gPlayerLogged[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный [ИД админа] ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[para2][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный [ИД админа] - не админ !");
					return 1;
				}
				if(PlayerInfo[para2][pAdmin] <= 5)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный [ИД админа] - ниже 6 lvl !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ИД настройки (0- просмотреть суточный денежный лимит админа,");
					SendClientMessage(playerid, COLOR_RED, " 1- установить суточный денежный лимит для админа,");
					SendClientMessage(playerid, COLOR_RED, " 2- удалить суточный денежный лимит админа)] !");
					return 1;
				}
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 2)
				{
					SendClientMessage(playerid, COLOR_RED, " ИД настройки от 0 до 2 !");
					return 1;
				}
				if(para3 == 0)
				{
					new twenlim = 0;
					new restlim = 0;
					format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
					if(!fexist(f))
					{
						Fmadmins(1, RealName[para2], 0, twenlim, restlim);
					}
					else
					{
						Fmadmins(2, RealName[para2], 0, twenlim, restlim);
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
					format(ssss,sizeof(ssss)," Админ: [%s] Денежный лимит: [%d] Остаток лимита: [%d]", RealName[para2], twenlim, restlim);
					SendClientMessage(playerid, COLOR_GRAD1, ssss);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
					printf(" *** Админ %s [%d] просмотрел суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
					return 1;
				}
				if(para3 == 1)
				{
					tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [суточный денежный лимит] !");
						return 1;
					}
					para4 = strval(tmp);
					if(para4 < 0 || para4 > 2147000000)
					{
						SendClientMessage(playerid, COLOR_RED, " Суточный денежный лимит от 0 до 2'147'000'000 !");
						return 1;
					}
					new twenlim = 0;
					new restlim = 0;
					format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
					if(!fexist(f))
					{
						Fmadmins(1, RealName[para2], 0, twenlim, restlim);
					}
					else
					{
						Fmadmins(2, RealName[para2], 0, twenlim, restlim);
					}
					if(para4 == twenlim)
					{
						format(string, sizeof(string), " Набранный Вами суточный денежный лимит уже установлен для админа %s !", RealName[para2]);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
					Fmadmins(1, RealName[para2], 0, para4, para4);
					if(para4 != 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s установил админу %s суточный денежный лимит в %d $ .", RealName[playerid], RealName[para2], para4);
						printf(" *** Админ %s [%d] установил админу %s [%d] суточный денежный лимит в %d $ ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2, para4);
					}
					else
					{
						format(ssss, sizeof(ssss), " *** Админ %s снял с админа %s суточный денежный лимит.", RealName[playerid], RealName[para2]);
						printf(" *** Админ %s [%d] снял с админа %s [%d] суточный денежный лимит ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
					}
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					return 1;
				}
				if(para3 == 2)
				{
					format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
					if(!fexist(f))
					{
						para4 = 0;
					}
					else
					{
						para4 = 1;
					}
					if(para4 == 1)
					{
						new twenlim, restlim;
						Fmadmins(0, RealName[para2], 0, twenlim, restlim);
						format(ssss,sizeof(ssss)," Вы удалили суточный денежный лимит админа %s .", RealName[para2]);
						SendClientMessage(playerid, COLOR_YELLOW, ssss);
						printf(" *** Админ %s [%d] удалил суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
					}
					else
					{
						format(string, sizeof(string), " Суточный денежный лимит админа %s уже был удалён !", RealName[para2]);
						SendClientMessage(playerid, COLOR_RED, string);
					}
					return 1;
				}
			}
			if(para1 == 1)
			{
				akk = strtok(cmdtext, idx);
	    		if(!strlen(akk))
				{
					SendClientMessage(playerid, COLOR_RED, " [ник админа] [ИД настройки] !");
					return 1;
				}
				if(InpNameControl(akk) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник админа содержит недопустимые");
					SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(akk) < 1 || strlen(akk) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника админа должна быть от 1 до 25 символов !");
					return 1;
				}
				para2 = 0;//поиск ника админа среди он-лайн игроков
				new doppara = 0;
				while(para2 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(para2) && gPlayerLogged[para2] == 1)
					{
						if(strcmp(akk, RealName[para2], false) == 0)
						{
							doppara = 1;
							break;
						}
					}
					para2++;
				}
				if(doppara == 0)//если ник админа НЕ найден, то:
				{//поиск ника админа в аккаунтах игроков
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], akk);
					if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранного ника админа не существует !");
						return 1;
					}
#if (MOD4DINS >= 1)
					if(admData[playerid][dPassLock] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Внимание ! Аккаунт (ник админа) заблокирован системой паспортов !");
					}
#endif
					new fadm;
					if(admData[playerid][dAdmin] < 0)
					{
						fadm = admData[playerid][dAdmin] * -1;
					}
					else
					{
						fadm = admData[playerid][dAdmin];
					}
					if(fadm == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - не админ !");
						return 1;
					}
					if(fadm <= 5)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - ниже 6 lvl !");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [ИД настройки (0- просмотреть суточный денежный лимит админа,");
						SendClientMessage(playerid, COLOR_RED, " 1- установить суточный денежный лимит для админа,");
						SendClientMessage(playerid, COLOR_RED, " 2- удалить суточный денежный лимит админа)] !");
						return 1;
					}
					para3 = strval(tmp);
					if(para3 < 0 || para3 > 2)
					{
						SendClientMessage(playerid, COLOR_RED, " ИД настройки от 0 до 2 !");
						return 1;
					}
					if(para3 == 0)
					{
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", akk);
						if(!fexist(f))
						{
							Fmadmins(1, akk, 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, akk, 0, twenlim, restlim);
						}
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - Off-Line .");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						format(ssss,sizeof(ssss)," Админ: [%s] Денежный лимит: [%d] Остаток лимита: [%d]", akk, twenlim, restlim);
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						printf(" *** Админ %s [%d] просмотрел суточный денежный лимит админа %s ( /madmins ) .", RealName[playerid], playerid, akk);
						return 1;
					}
					if(para3 == 1)
					{
						tmp = strtok(cmdtext, idx);
			    		if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_RED, " [суточный денежный лимит] !");
							return 1;
						}
						para4 = strval(tmp);
						if(para4 < 0 || para4 > 2147000000)
						{
							SendClientMessage(playerid, COLOR_RED, " Суточный денежный лимит от 0 до 2'147'000'000 !");
							return 1;
						}
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", akk);
						if(!fexist(f))
						{
							Fmadmins(1, akk, 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, akk, 0, twenlim, restlim);
						}
						if(para4 == twenlim)
						{
							format(string, sizeof(string), " Набранный Вами суточный денежный лимит уже установлен для админа %s !", akk);
							SendClientMessage(playerid, COLOR_RED, string);
							return 1;
						}
						Fmadmins(1, akk, 0, para4, para4);
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - Off-Line .");
						if(para4 != 0)
						{
							format(ssss, sizeof(ssss), " *** Админ %s установил админу %s суточный денежный лимит в %d $ .", RealName[playerid], akk, para4);
							printf(" *** Админ %s [%d] установил админу %s суточный денежный лимит в %d $ ( /madmins ) .", RealName[playerid], playerid, akk, para4);
						}
						else
						{
							format(ssss, sizeof(ssss), " *** Админ %s снял с админа %s суточный денежный лимит.", RealName[playerid], akk);
							printf(" *** Админ %s [%d] снял с админа %s суточный денежный лимит ( /madmins ) .", RealName[playerid], playerid, akk);
						}
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						return 1;
					}
					if(para3 == 2)
					{
						format(f, sizeof(f), "madmins/%s.ini", akk);
						if(!fexist(f))
						{
							para4 = 0;
						}
						else
						{
							para4 = 1;
						}
						if(para4 == 1)
						{
							new twenlim, restlim;
							Fmadmins(0, akk, 0, twenlim, restlim);
							SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - Off-Line .");
							format(ssss,sizeof(ssss)," Вы удалили суточный денежный лимит админа %s .", akk);
							SendClientMessage(playerid, COLOR_YELLOW, ssss);
							printf(" *** Админ %s [%d] удалил суточный денежный лимит админа %s ( /madmins ) .", RealName[playerid], playerid, akk);
						}
						else
						{
							format(string, sizeof(string), " Суточный денежный лимит админа %s уже был удалён !", akk);
							SendClientMessage(playerid, COLOR_RED, string);
						}
						return 1;
					}
				}
				else//иначе (если ник админа был найден среди он-лайн игроков), то:
				{
					if(PlayerInfo[para2][pAdmin] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - не админ !");
						return 1;
					}
					if(PlayerInfo[para2][pAdmin] <= 5)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - ниже 6 lvl !");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [ИД настройки (0- просмотреть суточный денежный лимит админа,");
						SendClientMessage(playerid, COLOR_RED, " 1- установить суточный денежный лимит для админа,");
						SendClientMessage(playerid, COLOR_RED, " 2- удалить суточный денежный лимит админа)] !");
						return 1;
					}
					para3 = strval(tmp);
					if(para3 < 0 || para3 > 2)
					{
						SendClientMessage(playerid, COLOR_RED, " ИД настройки от 0 до 2 !");
						return 1;
					}
					if(para3 == 0)
					{
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
						if(!fexist(f))
						{
							Fmadmins(1, RealName[para2], 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, RealName[para2], 0, twenlim, restlim);
						}
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - On-Line .");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						format(ssss,sizeof(ssss)," Админ: [%s] Денежный лимит: [%d] Остаток лимита: [%d]", RealName[para2], twenlim, restlim);
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						printf(" *** Админ %s [%d] просмотрел суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
						return 1;
					}
					if(para3 == 1)
					{
						tmp = strtok(cmdtext, idx);
			    		if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_RED, " [суточный денежный лимит] !");
							return 1;
						}
						para4 = strval(tmp);
						if(para4 < 0 || para4 > 2147000000)
						{
							SendClientMessage(playerid, COLOR_RED, " Суточный денежный лимит от 0 до 2'147'000'000 !");
							return 1;
						}
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
						if(!fexist(f))
						{
							Fmadmins(1, RealName[para2], 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, RealName[para2], 0, twenlim, restlim);
						}
						if(para4 == twenlim)
						{
							format(string, sizeof(string), " Набранный Вами суточный денежный лимит уже установлен для админа %s !", RealName[para2]);
							SendClientMessage(playerid, COLOR_RED, string);
							return 1;
						}
						Fmadmins(1, RealName[para2], 0, para4, para4);
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - On-Line .");
						if(para4 != 0)
						{
							format(ssss, sizeof(ssss), " *** Админ %s установил админу %s суточный денежный лимит в %d $ .", RealName[playerid], RealName[para2], para4);
							printf(" *** Админ %s [%d] установил админу %s [%d] суточный денежный лимит в %d $ ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2, para4);
						}
						else
						{
							format(ssss, sizeof(ssss), " *** Админ %s снял с админа %s суточный денежный лимит.", RealName[playerid], RealName[para2]);
							printf(" *** Админ %s [%d] снял с админа %s [%d] суточный денежный лимит ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
						}
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						return 1;
					}
					if(para3 == 2)
					{
						format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
						if(!fexist(f))
						{
							para4 = 0;
						}
						else
						{
							para4 = 1;
						}
						if(para4 == 1)
						{
							new twenlim, restlim;
							Fmadmins(0, RealName[para2], 0, twenlim, restlim);
							SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - On-Line .");
							format(ssss,sizeof(ssss)," Вы удалили суточный денежный лимит админа %s .", RealName[para2]);
							SendClientMessage(playerid, COLOR_YELLOW, ssss);
							printf(" *** Админ %s [%d] удалил суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
						}
						else
						{
							format(string, sizeof(string), " Суточный денежный лимит админа %s уже был удалён !", RealName[para2]);
							SendClientMessage(playerid, COLOR_RED, string);
						}
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/ocam", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pPolice] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /ocam [ид игрока]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
 			if(IsPlayerConnected(para1))
 			{
			    player[playerid] = para1;
				format(playtarget[playerid], MAX_PLAYER_NAME, "%s", RealName[player[playerid]]);
			    if(((PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 10) || PlayerInfo[playerid][pPolice] >= 2) && PlayerInfo[player[playerid]][pAdmin] >= 11)
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок защищён !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				new stringdd[128];
				new strdlndd[1024];
				format(strdlndd,sizeof(strdlndd),"Тп к нему (1)\nТп его к себе (1)\nНаблюдать (1)\nСнять наблюдение (1)\
				\nПополнить жизнь и броню (2)\nБан постоянный (6)\nБан временный (5)\nКик (3)\nДепортировать (4)\
				\nОтменить депортацию (4)\nЗаблокировать (1)\nРазблокировать (1)\nЗаморозить (1)\nРазморозить (1)\nУбить (2)\
				\nЗаткнуть (1)\nПосадить в тюрьму (1)");
				format(strdlndd,sizeof(strdlndd),"%s\nТп себя в тюрьму (1)\nТп себя в полицейский участок (1)\
				\nПросмотреть статистику (1)\nСменить скин (2)\nУзнать IP (1)\nСлапнуть (2)\nПодключить к дрифт-соревнованию (1)\
				\nОтключить от дрифт-соревнования (1)\nОбнулить очки дрифт-соревнования (1)\nСтатус дрифт-соревнования (1)", strdlndd);
				format(stringdd,sizeof(stringdd),"Админ-меню. ( %s [%d] )",playtarget[playerid],player[playerid]);
				ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,stringdd,strdlndd,"Выбор","Отмена");
				SetPVarInt(playerid, "DlgCont", 5);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Для доступа к админ-меню Вам нужно иметь 2-LVL полиции, или быть админом !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/scrnetper", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrnetper [режим (0- удалить ник админа из определённого");
				SendClientMessage(playerid, COLOR_GRAD2, " per-слота, 1- добавить ник админа в любой свободный per-слот, 2-");
				SendClientMessage(playerid, COLOR_GRAD2, " просмотреть записи в per-слотах] [номер per-слота (только для режима 0),");
				SendClientMessage(playerid, COLOR_GRAD2, " ник админа (только для режима 1)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 2)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим от 0 до 2 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер per-слота (0-19)] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 19)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер per-слота от 0 до 19 !");
					return 1;
				}
				if(strcmp(scrnetper[para2], "*** INV_PL_ID", false) == 0)
				{
					format(string, sizeof(string), " per-слот %d не содержит никa админа !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				strdel(scrnetper[para2], 0, 64);//очистка слота
				strcat(scrnetper[para2], "*** INV_PL_ID");
				ScrNetPerSave(para2);//запись изменённого слота в per-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s удалил ник админа из per-слота %d .", RealName[playerid], para2);
				print(string);
				SendAdminMessage22(COLOR_RED, string, 1, 9);
				return 1;
			}
			if(para1 == 1)
			{
				new locname[64];
				locname = strtok(cmdtext, idx);
				if(InpNameControl(locname) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник админа содержит недопустимые символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(locname) < 1 || strlen(locname) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника админа должна быть от 1 до 25 символов !");
					return 1;
				}
				new locplid;//для он-лайн - ид админа, для офф-лайн - -600
				new locdata1 = 0;//поиск ника админа среди он-лайн игроков
				new locdata2 = 0;
				while(locdata1 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(locdata1) && gPlayerLogged[locdata1] == 1)
					{
						if(strcmp(locname, RealName[locdata1], false) == 0)
						{
							locdata2 = 1;
							locplid = locdata1;
							break;
						}
					}
					locdata1++;
				}
				if(locdata2 == 0)//если ник админа НЕ найден, то:
				{//поиск ника админа в аккаунтах игроков
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
					{
						SendClientMessage(playerid, COLOR_RED, " Такого ника админа не существует !");
						return 1;
					}
#if (MOD4DINS >= 1)
					if(admData[playerid][dPassLock] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Аккаунт (ник админа) заблокирован системой паспортов !");
						return 1;
					}
#endif
					locplid = -600;
				}
				new fadm;
				if(locplid >= 0)//если ник админа он-лайн, то:
				{
					fadm = PlayerInfo[locplid][pAdmin];
				}
				else//иначе, если ник админа офф-лайн, то:
				{
					fadm = admData[playerid][dAdmin];
				}
				if(fadm < 0) { fadm = fadm * -1; }
				if(fadm < 9)
				{
					format(string, sizeof(string), " Добавляемый ник - должен быть админом 9 лвл или выше !");
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(scrnetper[locdata1], "*** INV_PL_ID", false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нет свободного per-слота для добавления ника админа !");
					return 1;
				}
				new locslnum;
				locslnum = locdata1;
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(locname, scrnetper[locdata1], false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 1)
				{
					format(string, sizeof(string), " Добавляемый ник админа - уже имеется !");
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				strdel(scrnetper[locslnum], 0, 64);//очистка слота
				strcat(scrnetper[locslnum], locname);//копирование ника админа в слот
				ScrNetPerSave(locslnum);//запись изменённого слота в per-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s добавил ник админа %s в per-слот %d .", RealName[playerid], locname, locslnum);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 9);
				return 1;
			}
			if(para1 == 2)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				SendClientMessage(playerid, COLOR_WHITE, " --- per-слоты : ---");
				for(new i = 0; i < 20; i++)
				{
					if(strcmp(scrnetper[i], "*** INV_PL_ID", false) == 0)
					{
						format(string, sizeof(string), " per-слот %d : пустой", i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						format(string, sizeof(string), " per-слот %d : ник админа [%s]", i, scrnetper[i]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел записи в per-слотах.", RealName[playerid]);
				print(string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/scrnet1", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			if(FnConAdmScrNet(RealName[playerid]) == -1)
			{
				SendClientMessage(playerid, COLOR_RED, " Для Вас, в данный момент, эта команда - НЕ доступна !");
				return 1;
			}
			if(conopen222 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Команда временно не доступна !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrnet1 [режим (0- удалить группу IP-адресов из");
				SendClientMessage(playerid, COLOR_GRAD2, " определённой IP-строки, 1- добавить группу IP-адресов в любую свободную");
				SendClientMessage(playerid, COLOR_GRAD2, " IP-строку, 2- просмотреть запись в определённой IP-строке, 3- просмотреть");
				SendClientMessage(playerid, COLOR_GRAD2, " IP-строки - в которые входит определённый IP-адрес] [номер IP-строки");
				SendClientMessage(playerid, COLOR_GRAD2, " (только для режима 0), группа IP-адресов (только для режима 1), номер");
				SendClientMessage(playerid, COLOR_GRAD2, " IP-строки (только для режима 2), IP-адрес (только для режима 3)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим от 0 до 3 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер IP-строки] !");
					return 1;
				}
				new para2, locdata1;
				para2 = strval(tmp);
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (NumSt = %d AND Active = 1)", para2);//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					format(string, sizeof(string), " IP-строка %d не содержит группу IP-адресов !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				ScrNet1Save(playerid, 3, para2);//запись изменённой строки в БД (удаление записи из строки)
				format(string, sizeof(string), "[scrnet] *** Админ %s удалил группу IP-адресов из IP-строки %d сетевого экрана 1 .", RealName[playerid], para2);
				print(string);
				SendAdminMessage22(COLOR_RED, string, 1, 3);
			    new fld[128];
			    format(fld, sizeof(fld), "data/scrnet1/np1%05d.ini", para2);
				if(fexist(fld))//если np-файл существует, то:
				{
					format(string, sizeof(string), "[scrnet] * Для IP-строки %d существует np-файл !", para2);
					print(string);
					SendClientMessage(playerid, 0x40CF40FF, string);
				}
				return 1;
			}
			if(para1 == 1)
			{
				new locstr1[128], locstr2[128], locstr3[128];
				strdel(locstr1, 0, 128);
				strdel(locstr2, 0, 128);
				strdel(locstr3, 0, 128);
				locstr1 = strtok(cmdtext, idx);
				locstr2 = strtok(cmdtext, idx);
				locstr3 = strtok(cmdtext, idx);
				if(strlen(locstr1) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " [группа IP-адресов (a.a.a.a - b.b.b.b)] !");
					return 1;
				}
				if(strlen(locstr1) < 7 || strlen(locstr1) > 15 || strlen(locstr2) != 1 || locstr2[0] != 45 ||
				strlen(locstr3) < 7 || strlen(locstr3) > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании группы IP-адресов !");
					return 1;
				}
				strcat(locstr1, " ");
				strcat(locstr1, locstr2);
				strcat(locstr1, " ");
				strcat(locstr1, locstr3);
				if(ScrNetCC(playerid, locstr1, 1, 0) == 0)
				{//проверка группы IP-адресов на ошибки и посторонние символы
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании группы IP-адресов !");
					return 1;
				}
				new locdata1;
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (Active = 1 ");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAND %d = SN1b1 AND %d = SN1b2 AND %d = SN1b3 AND %d = SN1b4 ", strdln, scrnet1b[0][playerid], scrnet1b[1][playerid], scrnet1b[2][playerid], scrnet1b[3][playerid]);
				format(strdln, sizeof(strdln), "%sAND %d = SN1e1 AND %d = SN1e2 AND %d = SN1e3 AND %d = SN1e4)", strdln, scrnet1e[0][playerid], scrnet1e[1][playerid], scrnet1e[2][playerid], scrnet1e[3][playerid]);
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locdata1 >= 1)//если была найдена хотя бы 1 строка с совпадающеё группой IP-адресов в БД, то:
				{
					SendClientMessage(playerid, COLOR_RED, " Добавляемая группа IP-адресов - уже имеется !");
					return 1;
				}
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (IDCopy = 1 AND Active = 0)");//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				if(locdata1 >= 1)//если была найдена хотя бы 1 строка с удалённой записью в БД, то:
				{
					new buffer[64];
					db_get_field(qscrnet1db[playerid], 1, buffer, 64);//читаем из первой найденой записи БД номер строки
					db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
					locdata1 = strval(buffer);
					ScrNet1Save(playerid, 2, locdata1);//запись изменённой строки в БД (замена старой строки новыми данными)
				}
				else//иначе, если строк с удалённой записью НЕ найдено в БД, то:
				{
					db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
					format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (IDCopy = 1)");//создаём запрос БД
					qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
					locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
					db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
					ScrNet1Save(playerid, 1, locdata1);//запись изменённой строки в БД (добавление новой строки)
				}
				format(string, sizeof(string), "[scrnet] *** Админ %s добавил группу IP-адресов [%s] в IP-строку %d сетевого экрана 1 .", RealName[playerid], locstr1, locdata1);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 3);
			    new fld[128];
			    format(fld, sizeof(fld), "data/scrnet1/np1%05d.ini", locdata1);
				if(fexist(fld))//если np-файл существует, то:
				{
					format(string, sizeof(string), "[scrnet] * Для IP-строки %d существует np-файл !", locdata1);
					print(string);
					SendClientMessage(playerid, 0x40CF40FF, string);
				}
				return 1;
			}
			if(para1 == 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер IP-строки] !");
					return 1;
				}
				new para2, locdata1;
				para2 = strval(tmp);
				if(para2 < 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер IP-строки - от 0 и больше !");
					return 1;
				}
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (IDCopy = 1 AND NumSt = %d)", para2);//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
					format(string, sizeof(string), " IP-строка %d не найдена !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
				}
				else//иначе, если строка была найдена в БД, то:
				{
					new buffer[64], locdata2, locdata3[64], fld[128];
					db_get_field(qscrnet1db[playerid], 1, buffer, 64); locdata1 = strval(buffer);//NumSt
					db_get_field(qscrnet1db[playerid], 2, buffer, 64); locdata2 = strval(buffer);//Active
					db_get_field(qscrnet1db[playerid], 3, buffer, 64); scrnet1b[0][playerid] = strval(buffer);//SN1b1
					db_get_field(qscrnet1db[playerid], 4, buffer, 64); scrnet1b[1][playerid] = strval(buffer);//SN1b2
					db_get_field(qscrnet1db[playerid], 5, buffer, 64); scrnet1b[2][playerid] = strval(buffer);//SN1b3
					db_get_field(qscrnet1db[playerid], 6, buffer, 64); scrnet1b[3][playerid] = strval(buffer);//SN1b4
					db_get_field(qscrnet1db[playerid], 7, buffer, 64); scrnet1e[0][playerid] = strval(buffer);//SN1e1
					db_get_field(qscrnet1db[playerid], 8, buffer, 64); scrnet1e[1][playerid] = strval(buffer);//SN1e2
					db_get_field(qscrnet1db[playerid], 9, buffer, 64); scrnet1e[2][playerid] = strval(buffer);//SN1e3
					db_get_field(qscrnet1db[playerid], 10, buffer, 64); scrnet1e[3][playerid] = strval(buffer);//SN1e4
					db_get_field(qscrnet1db[playerid], 13, locdata3, 64);//NameAdm
					db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					if(locdata2 == 0)
					{
						format(string, sizeof(string), " Сетевой экран 1, IP-строка %d - НЕ активная !", locdata1);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), " IP-строка %d : [%d.%d.%d.%d - %d.%d.%d.%d] : удалена админом [%s]", locdata1,
						scrnet1b[0][playerid], scrnet1b[1][playerid], scrnet1b[2][playerid], scrnet1b[3][playerid],
						scrnet1e[0][playerid], scrnet1e[1][playerid], scrnet1e[2][playerid], scrnet1e[3][playerid], locdata3);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					    format(fld, sizeof(fld), "data/scrnet1/np1%05d.ini", locdata1);
						if(fexist(fld))//если np-файл существует, то:
						{
							format(string, sizeof(string), "[scrnet] * Для IP-строки %d существует np-файл !", locdata1);
							SendClientMessage(playerid, 0x40CF40FF, string);
						}
					}
					else
					{
						format(string, sizeof(string), " Сетевой экран 1, IP-строка %d - Активная", locdata1);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), " IP-строка %d : [%d.%d.%d.%d - %d.%d.%d.%d] : добавлена админом [%s]", locdata1,
						scrnet1b[0][playerid], scrnet1b[1][playerid], scrnet1b[2][playerid], scrnet1b[3][playerid],
						scrnet1e[0][playerid], scrnet1e[1][playerid], scrnet1e[2][playerid], scrnet1e[3][playerid], locdata3);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					    format(fld, sizeof(fld), "data/scrnet1/np1%05d.ini", locdata1);
						if(fexist(fld))//если np-файл существует, то:
						{
							format(string, sizeof(string), "[scrnet] * Для IP-строки %d существует np-файл !", locdata1);
							SendClientMessage(playerid, 0x40CF40FF, string);
						}
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел запись в IP-строке %d сетевого экрана 1 .", RealName[playerid], locdata1);
					print(string);
				}
				return 1;
			}
			if(para1 == 3)
			{
				new locstr1[128];
				strdel(locstr1, 0, 128);
				locstr1 = strtok(cmdtext, idx);
				if(strlen(locstr1) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " [IP-адрес (x.x.x.x)] !");
					return 1;
				}
				new locipdata[4];
				if(FnIPCon(locstr1, locipdata) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				new locipdata22;//собираем из IP-адреса данные - для поиска в БД
				locipdata22 = (locipdata[0] * 65536) + (locipdata[1] * 256) + locipdata[2];
				new locdata1, locmark1, locmark2, fld[128];
				locmark1 = 0;//обнуляем маркер определения первой стоки
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (Active = 1 ");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAND %d >= SN1b123 AND %d <= SN1e123)", strdln, locipdata22, locipdata22);
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				if(locdata1 != 0)//если в БД была найдена хотя бы одна строка, то:
				{
					new buffer[64], locdata2[3], locdata3[64];
					for(new i = 0; i < locdata1; i++)
					{
						locmark2 = 0;//обнуляем маркер определения текущей строки
						db_get_field(qscrnet1db[playerid], 1, buffer, 64); locdata2[0] = strval(buffer);//NumSt
						db_get_field(qscrnet1db[playerid], 3, buffer, 64); scrnet1b[0][playerid] = strval(buffer);//SN1b1
						db_get_field(qscrnet1db[playerid], 4, buffer, 64); scrnet1b[1][playerid] = strval(buffer);//SN1b2
						db_get_field(qscrnet1db[playerid], 5, buffer, 64); scrnet1b[2][playerid] = strval(buffer);//SN1b3
						db_get_field(qscrnet1db[playerid], 6, buffer, 64); scrnet1b[3][playerid] = strval(buffer);//SN1b4
						db_get_field(qscrnet1db[playerid], 7, buffer, 64); scrnet1e[0][playerid] = strval(buffer);//SN1e1
						db_get_field(qscrnet1db[playerid], 8, buffer, 64); scrnet1e[1][playerid] = strval(buffer);//SN1e2
						db_get_field(qscrnet1db[playerid], 9, buffer, 64); scrnet1e[2][playerid] = strval(buffer);//SN1e3
						db_get_field(qscrnet1db[playerid], 10, buffer, 64); scrnet1e[3][playerid] = strval(buffer);//SN1e4
						db_get_field(qscrnet1db[playerid], 11, buffer, 64); locdata2[1] = strval(buffer);//SN1b123
						db_get_field(qscrnet1db[playerid], 12, buffer, 64); locdata2[2] = strval(buffer);//SN1e123
						db_get_field(qscrnet1db[playerid], 13, locdata3, 64);//NameAdm
						if(locipdata22 == locdata2[1] && locipdata22 == locdata2[2])
						{//если IP-адрес равен начальному И конечному значению из БД, то:
							if(locipdata[3] >= scrnet1b[3][playerid] && locipdata[3] <= scrnet1e[3][playerid])
							{//если 4-я группа IP-адреса входит в диапазон значений из БД, то:
								locmark2 = 1;//устанавливаем маркер определения текущей строки
							}
						}
						if(locipdata22 == locdata2[1] && locipdata22 < locdata2[2])
						{//если IP-адрес равен начальному значению из БД, И меньше конечного значения из БД, то:
							if(locipdata[3] >= scrnet1b[3][playerid])
							{//если 4-я группа IP-адреса больше или равна начальному значению из БД, то:
								locmark2 = 1;//устанавливаем маркер определения текущей строки
							}
						}
						if(locipdata22 > locdata2[1] && locipdata22 == locdata2[2])
						{//если IP-адрес больше начального значения из БД, И равен конечному значению из БД, то:
							if(locipdata[3] <= scrnet1e[3][playerid])
							{//если 4-я группа IP-адреса меньше или равна конечному значению из БД, то:
								locmark2 = 1;//устанавливаем маркер определения текущей строки
							}
						}
						if(locipdata22 > locdata2[1] && locipdata22 < locdata2[2])
						{//если IP-адрес больше начального значения из БД, И меньше конечного значения из БД, то:
							locmark2 = 1;//устанавливаем маркер определения текущей строки
						}
						if(locmark2 == 1)//если маркер определения текущей строки был установлен, то:
						{
							if(locmark1 == 0)//если маркер определения первой стоки равен нулю, то:
							{
								locmark1 = 1;//устанавливаем маркер определения первой стоки
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
								format(string, sizeof(string), " --- IP-строки сетевого экрана 1 - в которые входит IP-адрес [%s] ---", locstr1);
							}
							format(string, sizeof(string), " IP-строка %d : [%d.%d.%d.%d - %d.%d.%d.%d] : добавлена админом [%s]", locdata2[0],
							scrnet1b[0][playerid], scrnet1b[1][playerid], scrnet1b[2][playerid], scrnet1b[3][playerid],
							scrnet1e[0][playerid], scrnet1e[1][playerid], scrnet1e[2][playerid], scrnet1e[3][playerid], locdata3);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						    format(fld, sizeof(fld), "data/scrnet1/np1%05d.ini", locdata2[0]);
							if(fexist(fld))//если np-файл существует, то:
							{
								format(string, sizeof(string), "[scrnet] * Для IP-строки %d существует np-файл !", locdata2[0]);
								SendClientMessage(playerid, 0x40CF40FF, string);
							}
						}
						if(locdata1 != 1)//если в БД было найдено больше одной строки, то:
						{
							db_next_row(qscrnet1db[playerid]);///переходим к следующей строке результат запроса БД
						}
					}
				}
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locmark1 == 1)//если маркер определения первой стоки был установлен, то:
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел IP-строки сетевого экрана 1 - в которые входит IP-адрес [%s] .", RealName[playerid], locstr1);
					print(string);
				}
				else//иначе, если маркер определения первой стоки НЕ был установлен, то:
				{
					SendClientMessage(playerid, COLOR_RED, " Заданный IP-адрес не входит ни в одну из IP-строк !");
				}
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/scrnetnp1", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			if(FnConAdmScrNet(RealName[playerid]) == -1)
			{
				SendClientMessage(playerid, COLOR_RED, " Для Вас, в данный момент, эта команда - НЕ доступна !");
				return 1;
			}
			if(conopen222 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Команда временно не доступна !");
				return 1;
			}
			new locdata1, locdata2;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrnetnp1 [режим (0- удалить ник или паспорт игрока из");
				SendClientMessage(playerid, COLOR_GRAD2, " определённого np-слота, 1- добавить ник игрока в любой свободный np-слот,");
				SendClientMessage(playerid, COLOR_GRAD2, " 2- скопировать паспорт игрока в любой свободный np-слот, 3-просмотреть");
				SendClientMessage(playerid, COLOR_GRAD2, " записи в np-слотах] [номер IP-строки сетевого экрана 1 (0-99990)] [номер");
				SendClientMessage(playerid, COLOR_GRAD2, " np-слота (только для режима 0), ник игрока (только для режимов 1 и 2)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [номер паспорта игрока (только для режима 2)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим от 0 до 3 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [номер IP-строки сетевого экрана 1 (0-99990)] !");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			if(para2 < 0 || para2 > 99990)
			{
				SendClientMessage(playerid, COLOR_RED, " Номер IP-строки сетевого экрана 1 от 0 до 99990 !");
				return 1;
			}
			if(para1 == 0)
			{
				if(ScrNet1LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					format(string, sizeof(string), " np-файл %d не содержит ни одной записи !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер np-слота (0-19)] !");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 19)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер np-слота от 0 до 19 !");
					return 1;
				}
				if(strcmp(scrnetnamegl[playerid][para3], "*** INV_PL_ID", false) == 0 &&
				strcmp(scrnetpassgl[playerid][para3], "*** INV_PASS_ID", false) == 0)
				{
					format(string, sizeof(string), " np-слот %d не содержит ника или паспорта игрока !", para3);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				strdel(scrnetnamegl[playerid][para3], 0, 64);//очистка слота
				strcat(scrnetnamegl[playerid][para3], "*** INV_PL_ID");
				strdel(scrnetpassgl[playerid][para3], 0, 64);//очистка слота
				strcat(scrnetpassgl[playerid][para3], "*** INV_PASS_ID");
				ScrNet1SaveNamePass(playerid, para2, para3);//запись изменённого слота в np-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s удалил ник или паспорт игрока из np-слота %d сетевого экрана 1 (IP-строка %d) .", RealName[playerid], para3, para2);
				print(string);
				SendAdminMessage22(COLOR_RED, string, 1, 3);
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (NumSt = %d AND Active = 1)", para2);//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-строки !", para2);
					print(string);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				return 1;
			}
			if(para1 == 1)
			{
				new locname[64];
				locname = strtok(cmdtext, idx);
				if(InpNameControl(locname) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник игрока содержит недопустимые символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(locname) < 1 || strlen(locname) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника игрока должна быть от 1 до 25 символов !");
					return 1;
				}
				locdata1 = 0;//поиск ника игрока среди он-лайн игроков
				locdata2 = 0;
				while(locdata1 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(locdata1) && gPlayerLogged[locdata1] == 1)
					{
						if(strcmp(locname, RealName[locdata1], false) == 0)
						{
							locdata2 = 1;
							break;
						}
					}
					locdata1++;
				}
				if(locdata2 == 0)//если ник игрока НЕ найден, то:
				{//поиск ника игрока в аккаунтах игроков
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
					{
						SendClientMessage(playerid, COLOR_RED, " Такого ника игрока не существует !");
						return 1;
					}
#if (MOD4DINS >= 1)
					if(admData[playerid][dPassLock] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Аккаунт (ник игрока) заблокирован системой паспортов !");
						return 1;
					}
#endif
				}
				if(ScrNet1LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					for(new i = 0; i < 20; i++)
					{
						format(scrnetnamegl[playerid][i], 64, "*** INV_PL_ID");//очищаем np-слоты
						format(scrnetpassgl[playerid][i], 64, "*** INV_PASS_ID");
					}
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(scrnetnamegl[playerid][locdata1], "*** INV_PL_ID", false) == 0 &&
					strcmp(scrnetpassgl[playerid][locdata1], "*** INV_PASS_ID", false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нет свободного np-слота для добавления ника игрока !");
					return 1;
				}
				new locslnum;
				locslnum = locdata1;
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(locname, scrnetnamegl[playerid][locdata1], false) == 0 &&
					strcmp("*** INV_PASS_ID", scrnetpassgl[playerid][locdata1], false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Добавляемый ник игрока - уже имеется !");
					return 1;
				}
				strdel(scrnetnamegl[playerid][locslnum], 0, 64);//очистка слота
				strcat(scrnetnamegl[playerid][locslnum], locname);//копирование ника игрока в слот
				ScrNet1SaveNamePass(playerid, para2, locslnum);//запись изменённого слота в np-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s добавил ник игрока %s в np-слот %d сетевого экрана 1 (IP-строка %d) .", RealName[playerid], locname, locslnum, para2);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 3);
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (NumSt = %d AND Active = 1)", para2);//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-строки !", para2);
					print(string);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				return 1;
			}
			if(para1 == 2)
			{
				new locname[64];
				locname = strtok(cmdtext, idx);
				if(InpNameControl(locname) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник игрока содержит недопустимые символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(locname) < 1 || strlen(locname) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника игрока должна быть от 1 до 25 символов !");
					return 1;
				}
				new locplid;//для он-лайн - ид игрока, для офф-лайн - -600
				locdata1 = 0;//поиск ника игрока среди он-лайн игроков
				locdata2 = 0;
				while(locdata1 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(locdata1) && gPlayerLogged[locdata1] == 1)
					{
						if(strcmp(locname, RealName[locdata1], false) == 0)
						{
							locdata2 = 1;
							locplid = locdata1;
							break;
						}
					}
					locdata1++;
				}
				if(locdata2 == 0)//если ник игрока НЕ найден, то:
				{//поиск ника игрока в аккаунтах игроков
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
					{
						SendClientMessage(playerid, COLOR_RED, " Такого ника игрока не существует !");
						return 1;
					}
#if (MOD4DINS >= 1)
					if(admData[playerid][dPassLock] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Аккаунт (ник игрока) заблокирован системой паспортов !");
						return 1;
					}
#endif
					locplid = -600;
				}
				if(ScrNet1LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					for(new i = 0; i < 20; i++)
					{
						format(scrnetnamegl[playerid][i], 64, "*** INV_PL_ID");//очищаем np-слоты
						format(scrnetpassgl[playerid][i], 64, "*** INV_PASS_ID");
					}
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(scrnetnamegl[playerid][locdata1], "*** INV_PL_ID", false) == 0 &&
					strcmp(scrnetpassgl[playerid][locdata1], "*** INV_PASS_ID", false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нет свободного np-слота для копирования паспорта игрока !");
					return 1;
				}
				new locslnum;
				locslnum = locdata1;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					switch(MOD4DINS)
					{
						case 0, 1: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1)] !");
						case 2: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-2)] !");
						case 3: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-3)] !");
						case 4: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-4)] !");
					}
					return 1;
				}
				new para4;
				para4 = strval(tmp);
#if (MOD4DINS >= 0 && MOD4DINS <= 1)
				if(para4 != 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер паспорта игрока = 1 !");
					return 1;
				}
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
				if(para4 < 1 || para4 > MOD4DINS)
				{
					format(string, sizeof(string), " Номер паспорта игрока от 1 до %d !", MOD4DINS);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
#endif
				new locpass[64];
				if(locplid >= 0)//если ник игрока он-лайн, то:
				{
					switch(para4)
					{
						case 1: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data1]);
						case 2: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data2]);
						case 3: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data3]);
						case 4: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data4]);
					}
				}
				else//иначе, если ник игрока офф-лайн, то:
				{
					switch(para4)
					{
						case 1: format(locpass, sizeof(locpass), admData[playerid][dPass_data1]);
						case 2: format(locpass, sizeof(locpass), admData[playerid][dPass_data2]);
						case 3: format(locpass, sizeof(locpass), admData[playerid][dPass_data3]);
						case 4: format(locpass, sizeof(locpass), admData[playerid][dPass_data4]);
					}
				}
				if(strcmp(locpass, "---", false) == 0)//если паспорт пустой, то:
				{
					format(string, sizeof(string), " Паспорт %d игрока НЕ зарегистрирован, или уже был очищен !", para4);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				else
				{
					if(strcmp(locpass, "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)//если паспорт - мобильная версия на базе Андроид, то:
					{
						format(string, sizeof(string), " Паспорт %d игрока - мобильной версии, и НЕ может быть скопирован !", para4);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(locpass, scrnetpassgl[playerid][locdata1], false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 1)
				{
					format(string, sizeof(string), " Копируемый паспорт %d игрока - уже имеется !", para4);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				strdel(scrnetnamegl[playerid][locslnum], 0, 64);//очистка слота
				strcat(scrnetnamegl[playerid][locslnum], locname);//копирование ника игрока в слот
				strdel(scrnetpassgl[playerid][locslnum], 0, 64);//очистка слота
				strcat(scrnetpassgl[playerid][locslnum], locpass);//копирование паспорта игрока в слот
				ScrNet1SaveNamePass(playerid, para2, locslnum);//запись изменённого слота в np-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s скопировал паспорт %d игрока %s в np-слот %d сетевого экрана 1 (IP-строка %d) .", RealName[playerid], para4, locname, locslnum, para2);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 3);
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (NumSt = %d AND Active = 1)", para2);//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-строки !", para2);
					print(string);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				return 1;
			}
			if(para1 == 3)
			{
				if(ScrNet1LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					format(string, sizeof(string), " np-файл %d не содержит ни одной записи !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				format(string, sizeof(string), " --- Сетевой экран 1, IP-строка %d : ---", para2);
				SendClientMessage(playerid, COLOR_WHITE, string);
				for(new i = 0; i < 20; i++)
				{
					if(strcmp(scrnetnamegl[playerid][i], "*** INV_PL_ID", false) == 0 &&
					strcmp(scrnetpassgl[playerid][i], "*** INV_PASS_ID", false) == 0)
					{
						format(string, sizeof(string), " np-слот %d : пустой", i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						if(scrnetpassgl[playerid][i][0] == 42)
						{
							format(string, sizeof(string), " np-слот %d : ник игрока [%s]", i, scrnetnamegl[playerid][i]);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						else
						{
							format(string, sizeof(string), " np-слот %d : паспорт игрока [%s]", i, scrnetnamegl[playerid][i]);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
					}
				}
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (NumSt = %d AND Active = 1)", para2);//создаём запрос БД
				qscrnet1db[playerid] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[playerid]);//очищаем результат запроса БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-строки !", para2);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел записи в np-слотах сетевого экрана 1 (IP-строка %d) .", RealName[playerid], para2);
				print(string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/scrnet2", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			if(FnConAdmScrNet(RealName[playerid]) == -1)
			{
				SendClientMessage(playerid, COLOR_RED, " Для Вас, в данный момент, эта команда - НЕ доступна !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrnet2 [режим (0- удалить группу IP-адресов из");
				SendClientMessage(playerid, COLOR_GRAD2, " определённого IP-слота, 1- добавить группу IP-адресов в любой свободный");
				SendClientMessage(playerid, COLOR_GRAD2, " IP-слот, 2- просмотреть записи в IP-слотах, 3- просмотреть IP-строки - в");
				SendClientMessage(playerid, COLOR_GRAD2, " которые входит определённый IP-адрес] [номер IP-слота (только для режима 0),");
				SendClientMessage(playerid, COLOR_GRAD2, " группа IP-адресов (только для режима 1), номер группы записей для просмотра");
				SendClientMessage(playerid, COLOR_GRAD2, " от 1 до 8 (только для режима 2), IP-адрес (только для режима 3)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим от 0 до 3 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер IP-слота] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 199)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер IP-слота от 0 до 199 !");
					return 1;
				}
				if(scrnet2b[0][para2] == 256)
				{
					format(string, sizeof(string), " IP-слот %d не содержит группу IP-адресов !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				for(new i = 0; i < 4; i++)//очистка слота
				{
					scrnet2b[i][para2] = 256;
					scrnet2e[i][para2] = -1;
				}
				scrnet2b123[para2] = -1;
				scrnet2e123[para2] = -1;
				ScrNet2Save(para2);//запись изменённого слота в файл
				format(string, sizeof(string), "[scrnet] *** Админ %s удалил группу IP-адресов из IP-слота %d сетевого экрана 2 .", RealName[playerid], para2);
				print(string);
				SendAdminMessage22(COLOR_RED, string, 1, 3);
			    new fld[128];
			    format(fld, sizeof(fld), "data/scrnet2/np2%03d.ini", para2);
				if(fexist(fld))//если np-файл существует, то:
				{
					format(string, sizeof(string), "[scrnet] * Для IP-слота %d существует np-файл !", para2);
					print(string);
					SendClientMessage(playerid, 0x40CF40FF, string);
				}
				return 1;
			}
			if(para1 == 1)
			{
				new locstr1[128], locstr2[128], locstr3[128];
				strdel(locstr1, 0, 128);
				strdel(locstr2, 0, 128);
				strdel(locstr3, 0, 128);
				locstr1 = strtok(cmdtext, idx);
				locstr2 = strtok(cmdtext, idx);
				locstr3 = strtok(cmdtext, idx);
				if(strlen(locstr1) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " [группа IP-адресов (a.a.a.a - b.b.b.b)] !");
					return 1;
				}
				if(strlen(locstr1) < 7 || strlen(locstr1) > 15 || strlen(locstr2) != 1 || locstr2[0] != 45 ||
				strlen(locstr3) < 7 || strlen(locstr3) > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании группы IP-адресов !");
					return 1;
				}
				strcat(locstr1, " ");
				strcat(locstr1, locstr2);
				strcat(locstr1, " ");
				strcat(locstr1, locstr3);
				new locdata1 = 0;
				new locdata2 = 0;
				while(locdata1 < 200)
				{
					if(scrnet2b[0][locdata1] == 256)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нет свободного IP-слота для добавления группы IP-адресов !");
					return 1;
				}
				new locslnum;
				locslnum = locdata1;
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 200)
				{
					format(locstr3, sizeof(locstr3), "%d.%d.%d.%d - %d.%d.%d.%d",
					scrnet2b[0][locdata1], scrnet2b[1][locdata1], scrnet2b[2][locdata1], scrnet2b[3][locdata1],
					scrnet2e[0][locdata1], scrnet2e[1][locdata1], scrnet2e[2][locdata1], scrnet2e[3][locdata1]);
					if(strcmp(locstr1, locstr3, false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Добавляемая группа IP-адресов - уже имеется !");
					return 1;
				}
				if(ScrNetCC(0, locstr1, 2, locslnum) == 0)
				{//проверка группы IP-адресов на ошибки и посторонние символы
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании группы IP-адресов !");
					return 1;
				}
				ScrNet2Save(locslnum);//запись изменённого слота в файл
				format(string, sizeof(string), "[scrnet] *** Админ %s добавил группу IP-адресов [%s] в IP-слот %d сетевого экрана 2 .", RealName[playerid], locstr1, locslnum);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 3);
			    new fld[128];
			    format(fld, sizeof(fld), "data/scrnet2/np2%03d.ini", locslnum);
				if(fexist(fld))//если np-файл существует, то:
				{
					format(string, sizeof(string), "[scrnet] * Для IP-слота %d существует np-файл !", locslnum);
					print(string);
					SendClientMessage(playerid, 0x40CF40FF, string);
				}
				return 1;
			}
			if(para1 == 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер группы записей для просмотра (1-8)] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 1 || para2 > 8)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер группы записей для просмотра от 1 до 8 !");
					return 1;
				}
				new locdata1 = (para2 - 1) * 25;
				new locdata2 = ((para2 - 1) * 25) + 25;
			    new fld[128];
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				for(new i = locdata1; i < locdata2; i++)
				{
					if(scrnet2b[0][i] == 256)
					{
						format(string, sizeof(string), " Сетевой экран 2, IP-слот %d : пустой", i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					    format(fld, sizeof(fld), "data/scrnet2/np2%03d.ini", i);
						if(fexist(fld))//если np-файл существует, то:
						{
							format(string, sizeof(string), "[scrnet] * Для IP-слота %d существует np-файл !", i);
							SendClientMessage(playerid, 0x40CF40FF, string);
						}
					}
					else
					{
						format(string, sizeof(string), " Сетевой экран 2, IP-слот %d : [%d.%d.%d.%d - %d.%d.%d.%d]", i,
						scrnet2b[0][i], scrnet2b[1][i], scrnet2b[2][i], scrnet2b[3][i],
						scrnet2e[0][i], scrnet2e[1][i], scrnet2e[2][i], scrnet2e[3][i]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					    format(fld, sizeof(fld), "data/scrnet2/np2%03d.ini", i);
						if(fexist(fld))//если np-файл существует, то:
						{
							format(string, sizeof(string), "[scrnet] * Для IP-слота %d существует np-файл !", i);
							SendClientMessage(playerid, 0x40CF40FF, string);
						}
					}
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел записи в IP-слотах от %d до %d сетевого экрана 2 .", RealName[playerid], locdata1, locdata2 - 1);
				print(string);
				return 1;
			}
			if(para1 == 3)
			{
				new locstr1[128];
				strdel(locstr1, 0, 128);
				locstr1 = strtok(cmdtext, idx);
				if(strlen(locstr1) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " [IP-адрес (x.x.x.x)] !");
					return 1;
				}
				new locipdata[4];
				if(FnIPCon(locstr1, locipdata) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				new locipdata22;//собираем из IP-адреса данные - для поиска в сетевом экране 1
				locipdata22 = (locipdata[0] * 65536) + (locipdata[1] * 256) + locipdata[2];
				new locmark1, locmark2, fld[128];
				locmark1 = 0;//обнуляем маркер определения первой стоки
				for(new i = 0; i < 200; i++)
				{
					locmark2 = 0;//обнуляем маркер определения текущей строки
					if(locipdata22 >= scrnet2b123[i] && locipdata22 <= scrnet2e123[i])
					{
						if(locipdata22 == scrnet2b123[i] && locipdata22 == scrnet2e123[i])
						{//если IP-адрес равен начальному И конечному значению, то:
							if(locipdata[3] >= scrnet2b[3][i] && locipdata[3] <= scrnet2e[3][i])
							{//если 4-я группа IP-адреса входит в диапазон значений, то:
								locmark2 = 1;//устанавливаем маркер определения текущей строки
							}
						}
						if(locipdata22 == scrnet2b123[i] && locipdata22 < scrnet2e123[i])
						{//если IP-адрес равен начальному значению, И меньше конечного значения, то:
							if(locipdata[3] >= scrnet2b[3][i])
							{//если 4-я группа IP-адреса больше или равна начальному значению, то:
								locmark2 = 1;//устанавливаем маркер определения текущей строки
							}
						}
						if(locipdata22 > scrnet2b123[i] && locipdata22 == scrnet2e123[i])
						{//если IP-адрес больше начального значения, И равен конечному значению, то:
							if(locipdata[3] <= scrnet2e[3][i])
							{//если 4-я группа IP-адреса меньше или равна конечному значению, то:
								locmark2 = 1;//устанавливаем маркер определения текущей строки
							}
						}
						if(locipdata22 > scrnet2b123[i] && locipdata22 < scrnet2e123[i])
						{//если IP-адрес больше начального значения, И меньше конечного значения, то:
							locmark2 = 1;//устанавливаем маркер определения текущей строки
						}
						if(locmark2 == 1)//если маркер определения текущей строки был установлен, то:
						{
							if(locmark1 == 0)//если маркер определения первой стоки равен нулю, то:
							{
								locmark1 = 1;//устанавливаем маркер определения первой стоки
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
								format(string, sizeof(string), " --- IP-слоты сетевого экрана 2 - в которые входит IP-адрес [%s] ---", locstr1);
							}
							format(string, sizeof(string), " IP-слот %d : [%d.%d.%d.%d - %d.%d.%d.%d]", i,
							scrnet2b[0][i], scrnet2b[1][i], scrnet2b[2][i], scrnet2b[3][i],
							scrnet2e[0][i], scrnet2e[1][i], scrnet2e[2][i], scrnet2e[3][i]);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						    format(fld, sizeof(fld), "data/scrnet2/np2%03d.ini", i);
							if(fexist(fld))//если np-файл существует, то:
							{
								format(string, sizeof(string), "[scrnet] * Для IP-слота %d существует np-файл !", i);
								SendClientMessage(playerid, 0x40CF40FF, string);
							}
						}
					}
				}
				if(locmark1 == 1)//если маркер определения первой стоки был установлен, то:
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел IP-слоты сетевого экрана 2 - в которые входит IP-адрес [%s] .", RealName[playerid], locstr1);
					print(string);
				}
				else//иначе, если маркер определения первой стоки НЕ был установлен, то:
				{
					SendClientMessage(playerid, COLOR_RED, " Заданный IP-адрес не входит ни в один из IP-слотов !");
				}
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/scrnetnp2", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			if(FnConAdmScrNet(RealName[playerid]) == -1)
			{
				SendClientMessage(playerid, COLOR_RED, " Для Вас, в данный момент, эта команда - НЕ доступна !");
				return 1;
			}
			new locdata1, locdata2;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrnetnp2 [режим (0- удалить ник или паспорт игрока из");
				SendClientMessage(playerid, COLOR_GRAD2, " определённого np-слота, 1- добавить ник игрока в любой свободный np-слот,");
				SendClientMessage(playerid, COLOR_GRAD2, " 2- скопировать паспорт игрока в любой свободный np-слот, 3-просмотреть");
				SendClientMessage(playerid, COLOR_GRAD2, " записи в np-слотах] [номер IP-слота сетевого экрана 2 (0-199)] [номер");
				SendClientMessage(playerid, COLOR_GRAD2, " np-слота (только для режима 0), ник игрока (только для режимов 1 и 2)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [номер паспорта игрока (только для режима 2)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим от 0 до 3 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [номер IP-слота сетевого экрана 2 (0-199)] !");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			if(para2 < 0 || para2 > 199)
			{
				SendClientMessage(playerid, COLOR_RED, " Номер IP-слота сетевого экрана 2 от 0 до 199 !");
				return 1;
			}
			if(para1 == 0)
			{
				if(ScrNet2LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					format(string, sizeof(string), " np-файл %d не содержит ни одной записи !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [номер np-слота (0-19)] !");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 19)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер np-слота от 0 до 19 !");
					return 1;
				}
				if(strcmp(scrnetnamegl[playerid][para3], "*** INV_PL_ID", false) == 0 &&
				strcmp(scrnetpassgl[playerid][para3], "*** INV_PASS_ID", false) == 0)
				{
					format(string, sizeof(string), " np-слот %d не содержит ника или паспорта игрока !", para3);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				strdel(scrnetnamegl[playerid][para3], 0, 64);//очистка слота
				strcat(scrnetnamegl[playerid][para3], "*** INV_PL_ID");
				strdel(scrnetpassgl[playerid][para3], 0, 64);//очистка слота
				strcat(scrnetpassgl[playerid][para3], "*** INV_PASS_ID");
				ScrNet2SaveNamePass(playerid, para2, para3);//запись изменённого слота в np-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s удалил ник или паспорт игрока из np-слота %d сетевого экрана 2 (IP-слот %d) .", RealName[playerid], para3, para2);
				print(string);
				SendAdminMessage22(COLOR_RED, string, 1, 3);
				if(scrnet2b[0][para2] == 256)
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-слота !", para2);
					print(string);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				return 1;
			}
			if(para1 == 1)
			{
				new locname[64];
				locname = strtok(cmdtext, idx);
				if(InpNameControl(locname) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник игрока содержит недопустимые символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(locname) < 1 || strlen(locname) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника игрока должна быть от 1 до 25 символов !");
					return 1;
				}
				locdata1 = 0;//поиск ника игрока среди он-лайн игроков
				locdata2 = 0;
				while(locdata1 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(locdata1) && gPlayerLogged[locdata1] == 1)
					{
						if(strcmp(locname, RealName[locdata1], false) == 0)
						{
							locdata2 = 1;
							break;
						}
					}
					locdata1++;
				}
				if(locdata2 == 0)//если ник игрока НЕ найден, то:
				{//поиск ника игрока в аккаунтах игроков
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
					{
						SendClientMessage(playerid, COLOR_RED, " Такого ника игрока не существует !");
						return 1;
					}
#if (MOD4DINS >= 1)
					if(admData[playerid][dPassLock] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Аккаунт (ник игрока) заблокирован системой паспортов !");
						return 1;
					}
#endif
				}
				if(ScrNet2LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					for(new i = 0; i < 20; i++)
					{
						format(scrnetnamegl[playerid][i], 64, "*** INV_PL_ID");//очищаем np-слоты
						format(scrnetpassgl[playerid][i], 64, "*** INV_PASS_ID");
					}
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(scrnetnamegl[playerid][locdata1], "*** INV_PL_ID", false) == 0 &&
					strcmp(scrnetpassgl[playerid][locdata1], "*** INV_PASS_ID", false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нет свободного np-слота для добавления ника игрока !");
					return 1;
				}
				new locslnum;
				locslnum = locdata1;
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(locname, scrnetnamegl[playerid][locdata1], false) == 0 &&
					strcmp("*** INV_PASS_ID", scrnetpassgl[playerid][locdata1], false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Добавляемый ник игрока - уже имеется !");
					return 1;
				}
				strdel(scrnetnamegl[playerid][locslnum], 0, 64);//очистка слота
				strcat(scrnetnamegl[playerid][locslnum], locname);//копирование ника игрока в слот
				ScrNet2SaveNamePass(playerid, para2, locslnum);//запись изменённого слота в np-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s добавил ник игрока %s в np-слот %d сетевого экрана 2 (IP-слот %d) .", RealName[playerid], locname, locslnum, para2);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 3);
				if(scrnet2b[0][para2] == 256)
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-слота !", para2);
					print(string);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				return 1;
			}
			if(para1 == 2)
			{
				new locname[64];
				locname = strtok(cmdtext, idx);
				if(InpNameControl(locname) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник игрока содержит недопустимые символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(locname) < 1 || strlen(locname) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника игрока должна быть от 1 до 25 символов !");
					return 1;
				}
				new locplid;//для он-лайн - ид игрока, для офф-лайн - -600
				locdata1 = 0;//поиск ника игрока среди он-лайн игроков
				locdata2 = 0;
				while(locdata1 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(locdata1) && gPlayerLogged[locdata1] == 1)
					{
						if(strcmp(locname, RealName[locdata1], false) == 0)
						{
							locdata2 = 1;
							locplid = locdata1;
							break;
						}
					}
					locdata1++;
				}
				if(locdata2 == 0)//если ник игрока НЕ найден, то:
				{//поиск ника игрока в аккаунтах игроков
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
					{
						SendClientMessage(playerid, COLOR_RED, " Такого ника игрока не существует !");
						return 1;
					}
#if (MOD4DINS >= 1)
					if(admData[playerid][dPassLock] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Аккаунт (ник игрока) заблокирован системой паспортов !");
						return 1;
					}
#endif
					locplid = -600;
				}
				if(ScrNet2LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					for(new i = 0; i < 20; i++)
					{
						format(scrnetnamegl[playerid][i], 64, "*** INV_PL_ID");//очищаем np-слоты
						format(scrnetpassgl[playerid][i], 64, "*** INV_PASS_ID");
					}
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(scrnetnamegl[playerid][locdata1], "*** INV_PL_ID", false) == 0 &&
					strcmp(scrnetpassgl[playerid][locdata1], "*** INV_PASS_ID", false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Нет свободного np-слота для копирования паспорта игрока !");
					return 1;
				}
				new locslnum;
				locslnum = locdata1;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					switch(MOD4DINS)
					{
						case 0, 1: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1)] !");
						case 2: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-2)] !");
						case 3: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-3)] !");
						case 4: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-4)] !");
					}
					return 1;
				}
				new para4;
				para4 = strval(tmp);
#if (MOD4DINS >= 0 && MOD4DINS <= 1)
				if(para4 != 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер паспорта игрока = 1 !");
					return 1;
				}
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
				if(para4 < 1 || para4 > MOD4DINS)
				{
					format(string, sizeof(string), " Номер паспорта игрока от 1 до %d !", MOD4DINS);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
#endif
				new locpass[64];
				if(locplid >= 0)//если ник игрока он-лайн, то:
				{
					switch(para4)
					{
						case 1: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data1]);
						case 2: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data2]);
						case 3: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data3]);
						case 4: format(locpass, sizeof(locpass), PlayerInfo[locplid][pPass_data4]);
					}
				}
				else//иначе, если ник игрока офф-лайн, то:
				{
					switch(para4)
					{
						case 1: format(locpass, sizeof(locpass), admData[playerid][dPass_data1]);
						case 2: format(locpass, sizeof(locpass), admData[playerid][dPass_data2]);
						case 3: format(locpass, sizeof(locpass), admData[playerid][dPass_data3]);
						case 4: format(locpass, sizeof(locpass), admData[playerid][dPass_data4]);
					}
				}
				if(strcmp(locpass, "---", false) == 0)//если паспорт пустой, то:
				{
					format(string, sizeof(string), " Паспорт %d игрока НЕ зарегистрирован, или уже был очищен !", para4);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				else
				{
					if(strcmp(locpass, "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)//если паспорт - мобильная версия на базе Андроид, то:
					{
						format(string, sizeof(string), " Паспорт %d игрока - мобильной версии, и НЕ может быть скопирован !", para4);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
				}
				locdata1 = 0;
				locdata2 = 0;
				while(locdata1 < 20)
				{
					if(strcmp(locpass, scrnetpassgl[playerid][locdata1], false) == 0)
					{
						locdata2 = 1;
						break;
					}
					locdata1++;
				}
				if(locdata2 == 1)
				{
					format(string, sizeof(string), " Копируемый паспорт %d игрока - уже имеется !", para4);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				strdel(scrnetnamegl[playerid][locslnum], 0, 64);//очистка слота
				strcat(scrnetnamegl[playerid][locslnum], locname);//копирование ника игрока в слот
				strdel(scrnetpassgl[playerid][locslnum], 0, 64);//очистка слота
				strcat(scrnetpassgl[playerid][locslnum], locpass);//копирование паспорта игрока в слот
				ScrNet2SaveNamePass(playerid, para2, locslnum);//запись изменённого слота в np-файл
				format(string, sizeof(string), "[scrnet] *** Админ %s скопировал паспорт %d игрока %s в np-слот %d сетевого экрана 2 (IP-слот %d) .", RealName[playerid], para4, locname, locslnum, para2);
				print(string);
				SendAdminMessage22(COLOR_YELLOW, string, 1, 3);
				if(scrnet2b[0][para2] == 256)
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-слота !", para2);
					print(string);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				return 1;
			}
			if(para1 == 3)
			{
				if(ScrNet2LoadNamePass(playerid, para2) == 0)//если np-файла не существует, то:
				{
					format(string, sizeof(string), " np-файл %d не содержит ни одной записи !", para2);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				format(string, sizeof(string), " --- Сетевой экран 2, IP-слот %d : ---", para2);
				SendClientMessage(playerid, COLOR_WHITE, string);
				for(new i = 0; i < 20; i++)
				{
					if(strcmp(scrnetnamegl[playerid][i], "*** INV_PL_ID", false) == 0 &&
					strcmp(scrnetpassgl[playerid][i], "*** INV_PASS_ID", false) == 0)
					{
						format(string, sizeof(string), " np-слот %d : пустой", i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						if(scrnetpassgl[playerid][i][0] == 42)
						{
							format(string, sizeof(string), " np-слот %d : ник игрока [%s]", i, scrnetnamegl[playerid][i]);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						else
						{
							format(string, sizeof(string), " np-слот %d : паспорт игрока [%s]", i, scrnetnamegl[playerid][i]);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
					}
				}
				if(scrnet2b[0][para2] == 256)
				{
					format(string, sizeof(string), "[scrnet] * Для np-файла %d НЕ существует IP-слота !", para2);
					SendClientMessage(playerid, 0xCF4040FF, string);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
				format(string, sizeof(string), "[scrnet] *** Админ %s просмотрел записи в np-слотах сетевого экрана 2 (IP-слот %d) .", RealName[playerid], para2);
				print(string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/scrnetv", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(scrnetv[playerid] == 1)
			{
				scrnetv[playerid] = 0;
				format(string,sizeof(string)," *** Админ %s выключил просмотр действий сетевых экранов.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
				return 1;
			}
			else
			{
				scrnetv[playerid] = 1;
				format(string,sizeof(string)," *** Админ %s включил просмотр действий сетевых экранов.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#if (MOD90INS == 1 && MOD7AINS == 1)
	if(strcmp(cmd, "/passrc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			new passdata[9][64], srcakk[64], dopper44, dopper55, plock;
			akk = strtok(cmdtext, idx);
			if(!strlen(akk))
			{
#endif
#if (MOD90INS == 1 && MOD7AINS == 1 && MOD4DINS >= 0 && MOD4DINS <= 1)
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /passrc [имя аккаунта] [номер паспорта аккаунта (1)]");
#endif
#if (MOD90INS == 1 && MOD7AINS == 1 && MOD4DINS >= 2 && MOD4DINS <= 4)
				format(string, sizeof(string), " Используйте: /passrc [имя аккаунта] [номер паспорта аккаунта (1-%d)]", MOD4DINS);
				SendClientMessage(playerid, COLOR_GRAD2, string);
#endif
#if (MOD90INS == 1 && MOD7AINS == 1)
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
			else
			{
				new buffer[64], admlvl;//читаем данные из БД
				db_get_field(querydb[playerid], 9, buffer, 64); admlvl = strval(buffer);//AdminLevel
				db_get_field(querydb[playerid], 28, passdata[1], 64);//Pass_data1
				db_get_field(querydb[playerid], 32, passdata[2], 64);//Pass_data2
				db_get_field(querydb[playerid], 36, passdata[3], 64);//Pass_data3
				db_get_field(querydb[playerid], 40, passdata[4], 64);//Pass_data4
				db_get_field(querydb[playerid], 46, buffer, 64); plock = strval(buffer);//PassLock
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				if(admlvl < 0) { admlvl = admlvl * -1; }
				if(PlayerInfo[playerid][pAdmin] == 9 && admlvl >= 10)
				{
					SendClientMessage(playerid,COLOR_RED," Вы не можете просмотреть аккаунт админа 10-го уровня !");
					return 1;
				}
				if(plock == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Внимание ! Аккаунт заблокирован системой паспортов !");
				}
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				switch(MOD4DINS)
				{
					case 0, 1: SendClientMessage(playerid, COLOR_RED, " [номер паспорта аккаунта (1)] !");
					case 2: SendClientMessage(playerid, COLOR_RED, " [номер паспорта аккаунта (1-2)] !");
					case 3: SendClientMessage(playerid, COLOR_RED, " [номер паспорта аккаунта (1-3)] !");
					case 4: SendClientMessage(playerid, COLOR_RED, " [номер паспорта аккаунта (1-4)] !");
				}
				return 1;
			}
			new para1;
			para1 = strval(tmp);
#endif
#if (MOD90INS == 1 && MOD7AINS == 1 && MOD4DINS >= 0 && MOD4DINS <= 1)
			if(para1 != 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Номер паспорта аккаунта = 1 !");
				return 1;
			}
#endif
#if (MOD90INS == 1 && MOD7AINS == 1 && MOD4DINS >= 2 && MOD4DINS <= 4)
			if(para1 < 1 || para1 > MOD4DINS)
			{
				format(string, sizeof(string), " Номер паспорта аккаунта от 1 до %d !", MOD4DINS);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
#endif
#if (MOD90INS == 1 && MOD7AINS == 1)
			if(strcmp(passdata[para1], "---", false) == 0)//если паспорт пустой, то:
			{
				format(string, sizeof(string), " Паспорт %d аккаунта НЕ зарегистрирован, или был очищен !", para1);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			new para2;
			if(strcmp(passdata[para1], "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)
			{//если паспорт - мобильная версия на базе Андроид, то:
				para2 = 0;
			}
			else//иначе, если паспорт - НЕ мобильная версия на базе Андроид, то:
			{
				para2 = 1;
			}
			format(strdln, sizeof(strdln), "SELECT * FROM Players WHERE (Pass_data1 = '%s' ", passdata[para1]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sOR Pass_data2 = '%s' OR Pass_data3 = '%s' ", strdln, passdata[para1], passdata[para1]);
			format(strdln, sizeof(strdln), "%sOR Pass_data4 = '%s')", strdln, passdata[para1]);
			querydb[playerid] = db_query(playerdb, strdln);//отправляем запрос БД (поиск всех паспортов passdata[para1])
			dopper44 = db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД
			dopper55 = dopper44 - 1;
			if(dopper44 == 0)
			{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				SendClientMessage(playerid,COLOR_RED," Ошибка чтения данных из БД !");
				return 1;
			}
			else//читаем данные из БД
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-------------------------------------------------------------------------------");
				if(plock == 1)
				{
					format(ssss,sizeof(ssss)," Внимание ! Аккаунт %s заблокирован системой паспортов !", akk);
					SendClientMessage(playerid, COLOR_RED, ssss);
				}
				if(para2 == 0)
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( аккаунт %s , паспорт %d [MOB] )", dopper44, akk, para1);
				}
				else
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( аккаунт %s , паспорт %d [PC] )", dopper44, akk, para1);
				}
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
		        for(new i = 0; i < dopper44; i++)
		        {
					db_get_field(querydb[playerid], 1, srcakk, 64);//Name
					db_get_field(querydb[playerid], 28, passdata[5], 64);//Pass_data1
					db_get_field(querydb[playerid], 32, passdata[6], 64);//Pass_data2
					db_get_field(querydb[playerid], 36, passdata[7], 64);//Pass_data3
					db_get_field(querydb[playerid], 40, passdata[8], 64);//Pass_data4
					if(i < dopper55)//если обрабатывается НЕ последняя строка, то:
					{
		            	db_next_row(querydb[playerid]);///переходим к следующей строке результат запроса БД
					}
					if(strcmp(passdata[para1], passdata[5], false) == 0)
					{
						format(ssss,sizeof(ssss)," %d). Аккаунт: [%s] Паспорт: [1]", i+1, srcakk);
					}
					if(strcmp(passdata[para1], passdata[6], false) == 0)
					{
						format(ssss,sizeof(ssss)," %d). Аккаунт: [%s] Паспорт: [2]", i+1, srcakk);
					}
					if(strcmp(passdata[para1], passdata[7], false) == 0)
					{
						format(ssss,sizeof(ssss)," %d). Аккаунт: [%s] Паспорт: [3]", i+1, srcakk);
					}
					if(strcmp(passdata[para1], passdata[8], false) == 0)
					{
						format(ssss,sizeof(ssss)," %d). Аккаунт: [%s] Паспорт: [4]", i+1, srcakk);
					}
					if(strcmp(akk, srcakk, false) == 0)
					{
						SendClientMessage(playerid, COLOR_YELLOW, ssss);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
					}
		        }
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				if(para2 == 0)
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( аккаунт %s , паспорт %d [MOB] )", dopper44, akk, para1);
				}
				else
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( аккаунт %s , паспорт %d [PC] )", dopper44, akk, para1);
				}
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				if(plock == 1)
				{
					format(ssss,sizeof(ssss)," Внимание ! Аккаунт %s заблокирован системой паспортов !", akk);
					SendClientMessage(playerid, COLOR_RED, ssss);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-------------------------------------------------------------------------------");
				printf("[pass] *** Админ %s просмотрел совпадения паспорта %d аккаунта игрока %s .", RealName[playerid], para1, akk);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#endif
#if (MOD4DINS >= 1)
	if(strcmp(cmd, "/cvpass", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /cvpass [режим (0- по ИД игрока, 1- по нику игрока)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ИД игрока / ник игрока] [действие (0- очистить паспорт игрока,");
				SendClientMessage(playerid, COLOR_GRAD2, " 1- очистить ошибки входных данных, 2- просмотреть все паспорта");
				SendClientMessage(playerid, COLOR_GRAD2, " игрока] [номер паспорта игрока (только для действия 0)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим от 0 до 1 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ИД игрока] [действие] ( [номер паспорта игрока] ) !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ИД игрока] на сервере нет !");
					return 1;
				}
				if(gPlayerLogged[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[para2][pAdmin] >= 10)
				{
#endif
#if (MOD4DINS == 1)
					SendClientMessage(playerid, COLOR_RED, " Вы не можете очистить или просмотреть паспорт админа 10-го уровня !");
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					SendClientMessage(playerid, COLOR_RED, " Вы не можете очистить или просмотреть паспорта админа 10-го уровня !");
#endif
#if (MOD4DINS >= 1)
					return 1;
				}
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [действие (0- очистить паспорт игрока, 1- очистить ошибки");
					SendClientMessage(playerid, COLOR_RED, " входных данных, 2- просмотреть все паспорта игрока]");
					SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (только для действия 0)] !");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 2)
				{
					SendClientMessage(playerid, COLOR_RED, " Действие от 0 до 2 !");
					return 1;
				}
				if(para3 == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						switch(MOD4DINS)
						{
							case 1: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1)] !");
							case 2: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-2)] !");
							case 3: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-3)] !");
							case 4: SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (1-4)] !");
						}
						return 1;
					}
					new para4;
					para4 = strval(tmp);
#endif
#if (MOD4DINS == 1)
					if(para4 != 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Номер паспорта игрока = 1 !");
						return 1;
					}
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					if(para4 < 1 || para4 > MOD4DINS)
					{
						format(string, sizeof(string), " Номер паспорта игрока от 1 до %d !", MOD4DINS);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
#endif
#if (MOD4DINS >= 1)
					if(playconpass[para2] == para4)
					{
						SendClientMessage(playerid, COLOR_RED, " Очистить используемый паспорт игрока - нельзя !");
						return 1;
					}
					new locpass[64];
					switch(para4)
					{
						case 1: format(locpass, sizeof(locpass), PlayerInfo[para2][pPass_data1]);
						case 2: format(locpass, sizeof(locpass), PlayerInfo[para2][pPass_data2]);
						case 3: format(locpass, sizeof(locpass), PlayerInfo[para2][pPass_data3]);
						case 4: format(locpass, sizeof(locpass), PlayerInfo[para2][pPass_data4]);
					}
					if(strcmp(locpass, "---", false) == 0)//если паспорт пустой, то:
					{
						format(string, sizeof(string), " Паспорт %d игрока НЕ зарегистрирован, или уже был очищен !", para4);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
					PlayerInfo[para2][pPassDel]++;//счётчик очистки паспортов +1
					switch(para4)//очистка паспортов
					{
						case 1:
						{
							format(PlayerInfo[para2][pPass_data1], 64, "---");
							format(PlayerInfo[para2][pPass_inout1], 64, "---");
							format(PlayerInfo[para2][pPass_ver1], 32, "---");
							PlayerInfo[para2][pPass_count1] = 0;
						}
						case 2:
						{
							format(PlayerInfo[para2][pPass_data2], 64, "---");
							format(PlayerInfo[para2][pPass_inout2], 64, "---");
							format(PlayerInfo[para2][pPass_ver2], 32, "---");
							PlayerInfo[para2][pPass_count2] = 0;
						}
						case 3:
						{
							format(PlayerInfo[para2][pPass_data3], 64, "---");
							format(PlayerInfo[para2][pPass_inout3], 64, "---");
							format(PlayerInfo[para2][pPass_ver3], 32, "---");
							PlayerInfo[para2][pPass_count3] = 0;
						}
						case 4:
						{
							format(PlayerInfo[para2][pPass_data4], 64, "---");
							format(PlayerInfo[para2][pPass_inout4], 64, "---");
							format(PlayerInfo[para2][pPass_ver4], 32, "---");
							PlayerInfo[para2][pPass_count4] = 0;
						}
					}
					format(string, sizeof(string), "[pass] *** Админ %s очистил паспорт %d игрока %s , всего очисток: %d .", RealName[playerid], para4, RealName[para2], PlayerInfo[para2][pPassDel]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 1)
				{
					if(PlayerInfo[para2][pPassError] == 0)//если НЕТ ошибок входных данных, то:
					{
						SendClientMessage(playerid, COLOR_RED, " Ошибок входных данных у игрока - НЕТ, или ошибки уже были очищены !");
						return 1;
					}
					PlayerInfo[para2][pPassError] = 0;//очистка ошибок входных данных
					PlayerInfo[para2][pPassDel]++;//счётчик очистки паспортов +1
					format(string, sizeof(string), "[pass] *** Админ %s очистил ошибки входных данных игрока %s , всего очисток: %d .", RealName[playerid], RealName[para2], PlayerInfo[para2][pPassDel]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 2)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
#endif
#if (MOD4DINS == 1)
					format(string, sizeof(string), " --- Паспорт игрока %s [%d] : ---", RealName[para2], para2);
					SendClientMessage(playerid, COLOR_WHITE, string);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					format(string, sizeof(string), " --- Паспорта игрока %s [%d] : ---", RealName[para2], para2);
					SendClientMessage(playerid, COLOR_WHITE, string);
#endif
#if (MOD4DINS >= 1)
					if((PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[para2][pAdmin] == 0) ||
					(PlayerInfo[playerid][pAdmin] <= 9 && playerid == para2))
					{
						FnPrnPass(5, playerid, para2);//печать для админа /cvpass , данные от он-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
					}
					if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[para2][pAdmin] >= 1 && playerid != para2)
					{
						FnPrnPass(6, playerid, para2);//печать для админа /cvpass , данные от он-лайн админа [pPass_ver1]
					}
					if(PlayerInfo[playerid][pAdmin] >= 10)
					{
						FnPrnPass(5, playerid, para2);//печать для админа /cvpass , данные от он-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
					}
					format(string, sizeof(string), " Всего очисток: [%d] Ошибок входных данных: [%d] (из 4-х)", PlayerInfo[para2][pPassDel], PlayerInfo[para2][pPassError]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
#endif
#if (MOD4DINS == 1)
					format(string, sizeof(string), "[pass] *** Админ %s просмотрел паспорт игрока %s .", RealName[playerid], RealName[para2]);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					format(string, sizeof(string), "[pass] *** Админ %s просмотрел все паспорта игрока %s .", RealName[playerid], RealName[para2]);
#endif
#if (MOD4DINS >= 1)
					print(string);
					return 1;
				}
			}
			if(para1 == 1)
			{
				new locname[64];
				locname = strtok(cmdtext, idx);
	    		if(!strlen(locname))
				{
					SendClientMessage(playerid, COLOR_RED, " [ник игрока] [действие] ( [номер паспорта игрока] ) !");
					return 1;
				}
				if(InpNameControl(locname) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Ник игрока содержит недопустимые символы: знак процентов, или ~ !");
					return 1;
				}
				if(strlen(locname) < 1 || strlen(locname) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника игрока должна быть от 1 до 25 символов !");
					return 1;
				}
				for(new i = 0; i < MAX_PLAYERS; i++)//проверка ника на On-Line
				{
	   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
			    	{
						if(strcmp(locname, RealName[i], false) == 0)
						{
							format(string, sizeof(string), " Ошибка, ник игрока %s On-Line !", locname);
							SendClientMessage(playerid, COLOR_RED, string);
							return 1;
						}
					}
				}
				strdel(dAccName[playerid], 0, 64);
				strcat(dAccName[playerid], locname);
				if(AccDataLoadUn(playerid) == 0)//чтение аккаунта
				{
					SendClientMessage(playerid, COLOR_RED, " Такого ника игрока не существует !");
					return 1;
				}
				if(admData[playerid][dPassLock] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Аккаунт (ник игрока) заблокирован системой паспортов !");
					return 1;
				}
				new fadm;
				fadm = admData[playerid][dAdmin];
				if(fadm < 0) { fadm = fadm * -1; }
				if(PlayerInfo[playerid][pAdmin] <= 9 && fadm >= 10)
				{
#endif
#if (MOD4DINS == 1)
					SendClientMessage(playerid, COLOR_RED, " Вы не можете очистить или просмотреть паспорт ника админа 10-го уровня !");
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					SendClientMessage(playerid, COLOR_RED, " Вы не можете очистить или просмотреть паспорта ника админа 10-го уровня !");
#endif
#if (MOD4DINS >= 1)
					return 1;
				}
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [действие (0- очистить паспорт игрока, 1- очистить ошибки");
					SendClientMessage(playerid, COLOR_RED, " входных данных, 2- просмотреть все паспорта игрока]");
					SendClientMessage(playerid, COLOR_RED, " [номер паспорта игрока (только для действия 0)] !");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 2)
				{
					SendClientMessage(playerid, COLOR_RED, " Действие от 0 до 2 !");
					return 1;
				}
				if(para3 == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						switch(MOD4DINS)
						{
							case 1: SendClientMessage(playerid, COLOR_RED, " [номер паспорта ника игрока (1)] !");
							case 2: SendClientMessage(playerid, COLOR_RED, " [номер паспорта ника игрока (1-2)] !");
							case 3: SendClientMessage(playerid, COLOR_RED, " [номер паспорта ника игрока (1-3)] !");
							case 4: SendClientMessage(playerid, COLOR_RED, " [номер паспорта ника игрока (1-4)] !");
						}
						return 1;
					}
					new para4;
					para4 = strval(tmp);
#endif
#if (MOD4DINS == 1)
					if(para4 != 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Номер паспорта ника игрока = 1 !");
						return 1;
					}
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					if(para4 < 1 || para4 > MOD4DINS)
					{
						format(string, sizeof(string), " Номер паспорта ника игрока от 1 до %d !", MOD4DINS);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
#endif
#if (MOD4DINS >= 1)
					new locpass[64];
					switch(para4)
					{
						case 1: format(locpass, sizeof(locpass), admData[playerid][dPass_data1]);
						case 2: format(locpass, sizeof(locpass), admData[playerid][dPass_data2]);
						case 3: format(locpass, sizeof(locpass), admData[playerid][dPass_data3]);
						case 4: format(locpass, sizeof(locpass), admData[playerid][dPass_data4]);
					}
					if(strcmp(locpass, "---", false) == 0)//если паспорт пустой, то:
					{
						format(string, sizeof(string), " Паспорт %d ника игрока НЕ зарегистрирован, или уже был очищен !", para4);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
					admData[playerid][dPassDel]++;//счётчик очистки паспортов +1
					switch(para4)//очистка паспортов
					{
						case 1:
						{
							format(admData[playerid][dPass_data1], 64, "---");
							format(admData[playerid][dPass_inout1], 64, "---");
							format(admData[playerid][dPass_ver1], 32, "---");
							admData[playerid][dPass_count1] = 0;
#endif
#if (MOD4DINS >= 1 && MOD90INS == 1)
							format(strdln, sizeof(strdln), "UPDATE Players SET ");//создаём запрос БД
							format(strdln, sizeof(strdln), "%sPass_data1 = '%s',Pass_inout1 = '%s',", strdln, admData[playerid][dPass_data1],admData[playerid][dPass_inout1]);
							format(strdln, sizeof(strdln), "%sPass_ver1 = '%s',Pass_count1 = %d,", strdln, admData[playerid][dPass_ver1],admData[playerid][dPass_count1]);
							format(strdln, sizeof(strdln), "%sPassDel = %d WHERE (Name = '%s')", strdln, admData[playerid][dPassDel], locname);
							db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
#if (MOD4DINS >= 1)
						}
						case 2:
						{
							format(admData[playerid][dPass_data2], 64, "---");
							format(admData[playerid][dPass_inout2], 64, "---");
							format(admData[playerid][dPass_ver2], 32, "---");
							admData[playerid][dPass_count2] = 0;
#endif
#if (MOD4DINS >= 1 && MOD90INS == 1)
							format(strdln, sizeof(strdln), "UPDATE Players SET ");//создаём запрос БД
							format(strdln, sizeof(strdln), "%sPass_data2 = '%s',Pass_inout2 = '%s',", strdln, admData[playerid][dPass_data2],admData[playerid][dPass_inout2]);
							format(strdln, sizeof(strdln), "%sPass_ver2 = '%s',Pass_count2 = %d,", strdln, admData[playerid][dPass_ver2],admData[playerid][dPass_count2]);
							format(strdln, sizeof(strdln), "%sPassDel = %d WHERE (Name = '%s')", strdln, admData[playerid][dPassDel], locname);
							db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
#if (MOD4DINS >= 1)
						}
						case 3:
						{
							format(admData[playerid][dPass_data3], 64, "---");
							format(admData[playerid][dPass_inout3], 64, "---");
							format(admData[playerid][dPass_ver3], 32, "---");
							admData[playerid][dPass_count3] = 0;
#endif
#if (MOD4DINS >= 1 && MOD90INS == 1)
							format(strdln, sizeof(strdln), "UPDATE Players SET ");//создаём запрос БД
							format(strdln, sizeof(strdln), "%sPass_data3 = '%s',Pass_inout3 = '%s',", strdln, admData[playerid][dPass_data3],admData[playerid][dPass_inout3]);
							format(strdln, sizeof(strdln), "%sPass_ver3 = '%s',Pass_count3 = %d,", strdln, admData[playerid][dPass_ver3],admData[playerid][dPass_count3]);
							format(strdln, sizeof(strdln), "%sPassDel = %d WHERE (Name = '%s')", strdln, admData[playerid][dPassDel], locname);
							db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
#if (MOD4DINS >= 1)
						}
						case 4:
						{
							format(admData[playerid][dPass_data4], 64, "---");
							format(admData[playerid][dPass_inout4], 64, "---");
							format(admData[playerid][dPass_ver4], 32, "---");
							admData[playerid][dPass_count4] = 0;
#endif
#if (MOD4DINS >= 1 && MOD90INS == 1)
							format(strdln, sizeof(strdln), "UPDATE Players SET ");//создаём запрос БД
							format(strdln, sizeof(strdln), "%sPass_data4 = '%s',Pass_inout4 = '%s',", strdln, admData[playerid][dPass_data4],admData[playerid][dPass_inout4]);
							format(strdln, sizeof(strdln), "%sPass_ver4 = '%s',Pass_count4 = %d,", strdln, admData[playerid][dPass_ver4],admData[playerid][dPass_count4]);
							format(strdln, sizeof(strdln), "%sPassDel = %d WHERE (Name = '%s')", strdln, admData[playerid][dPassDel], locname);
							db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
#if (MOD4DINS >= 1)
						}
					}
#endif
#if (MOD4DINS >= 1 && MOD90INS == 0)
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD4DINS >= 1)
					format(string, sizeof(string), "[pass] *** Админ %s очистил паспорт %d ника игрока %s , всего очисток: %d .", RealName[playerid], para4, locname, admData[playerid][dPassDel]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 1)
				{
					if(admData[playerid][dPassError] == 0)//если НЕТ ошибок входных данных, то:
					{
						SendClientMessage(playerid, COLOR_RED, " Ошибок входных данных у ника игрока - НЕТ, или ошибки уже были очищены !");
						return 1;
					}
					admData[playerid][dPassDel]++;//счётчик очистки паспортов +1
					admData[playerid][dPassError] = 0;//очистка ошибок входных данных
#endif
#if (MOD4DINS >= 1 && MOD90INS == 0)
					strdel(dAccName[playerid], 0, 64);
					strcat(dAccName[playerid], locname);
					AccDataSaveFo(playerid);//запись изменённого аккаунта
#endif
#if (MOD4DINS >= 1 && MOD90INS == 1)
					format(strdln, sizeof(strdln), "UPDATE Players SET PassError = %d,", admData[playerid][dPassError]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sPassDel = %d WHERE (Name = '%s')", strdln, admData[playerid][dPassDel], locname);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
#if (MOD4DINS >= 1)
					format(string, sizeof(string), "[pass] *** Админ %s очистил ошибки входных данных ника игрока %s , всего очисток: %d .", RealName[playerid], locname, admData[playerid][dPassDel]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 2)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
#endif
#if (MOD4DINS == 1)
					format(string, sizeof(string), " --- Паспорт ника игрока %s : ---", locname);
					SendClientMessage(playerid, COLOR_WHITE, string);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					format(string, sizeof(string), " --- Паспорта ника игрока %s : ---", locname);
					SendClientMessage(playerid, COLOR_WHITE, string);
#endif
#if (MOD4DINS >= 1)
					if((PlayerInfo[playerid][pAdmin] <= 9 && fadm == 0) ||
					(PlayerInfo[playerid][pAdmin] <= 9 && strcmp(RealName[playerid], locname, false) == 0))
					{
						FnPrnPass(7, playerid, 0);//печать для админа /cvpass , данные от офф-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
					}
					if(PlayerInfo[playerid][pAdmin] <= 9 && fadm >= 1 && strcmp(RealName[playerid], locname, false) != 0)
					{
						FnPrnPass(8, playerid, 0);//печать для админа /cvpass , данные от офф-лайн админа [pPass_ver1]
					}
					if(PlayerInfo[playerid][pAdmin] >= 10)
					{
						FnPrnPass(7, playerid, 0);//печать для админа /cvpass , данные от офф-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
					}
					format(string, sizeof(string), " Всего очисток: [%d] Ошибок входных данных: [%d] (из 4-х)", admData[playerid][dPassDel], admData[playerid][dPassError]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
#endif
#if (MOD4DINS == 1)
					format(string, sizeof(string), "[pass] *** Админ %s просмотрел паспорт ника игрока %s .", RealName[playerid], locname);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
					format(string, sizeof(string), "[pass] *** Админ %s просмотрел все паспорта ника игрока %s .", RealName[playerid], locname);
#endif
#if (MOD4DINS >= 1)
					print(string);
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#endif

//------------------------------ BusSystem -------------------------------------
	if(strcmp(cmd, "/helpbus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			SendClientMessage(playerid, 0x00FFFFFF, " -------------------------- Система бизнесов -------------------------- ");
			SendClientMessage(playerid, 0x00FFFFFF, "   /helpbus - помощь по командам BusSystem");
			SendClientMessage(playerid, 0x00FFFFFF, "   /createbus - создать бизнес");
			SendClientMessage(playerid, 0x00FFFFFF, "   /removebus - удалить бизнес по его ID");
			SendClientMessage(playerid, 0x00FFFFFF, "   /removebusall - удалить все бизнесы");
			SendClientMessage(playerid, 0x00FFFFFF, "   /gotobus - телепортироваться к бизнесу по его ID");
			SendClientMessage(playerid, 0x00FFFFFF, "   /reloadbus - перезагрузка системы бизнесов");
			SendClientMessage(playerid, 0x00FFFFFF, " --------------------------------------------------------------------------------- ");
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/createbus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x00FFFFFF, " Используйте: /createbus [стоимость(100-1000000 $)] [число минут, через");
				SendClientMessage(playerid, 0x00FFFFFF, " которое бизнес будет приносить доход(10-120)] [доход от бизнеса");
				SendClientMessage(playerid, 0x00FFFFFF, " за минуты он-лайн игры(100-1000000 $)] [название бизнеса(от 3 до 32 символов)]");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 100 || para1 > 1000000)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Стоимость от 100 $ до 1000000 $ !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFF0000FF, " /createbus [стоимость] [число минут] [доход] [название бизнеса] !");
				return 1;
			}
			new para2 = strval(tmp);
			if(para2 < 10 || para2 > 120)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Число минут от 10 до 120 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFF0000FF, " /createbus [стоимость] [число минут] [доход] [название бизнеса] !");
				return 1;
			}
			new para3 = strval(tmp);
			if(para3 < 100 || para3 > 1000000)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Доход от 100 $ до 1000000 $ !");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(strlen(result) < 3 || strlen(result) > 32)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Название от 3 до 32 символов !");
				return 1;
			}
//------------------------------------------------------------------------------
//если убрать комментарий, то: безнесы можно будет создавать ТОЛЬКО в 0-м интерьере, и на основной карте !
/*
			if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнес можно создать только в 0-м интерьере, и на основной карте !");
				return 1;
			}
*/
//------------------------------------------------------------------------------
			new para4 = 0;
			new para5 = 0;
			while(para4 < BUS_MAX)
			{
				if(buscount[para4] == 0)
				{
					para5 = 1;
					break;
				}
				para4++;
			}
			if(para5 == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Превышен лимит создания бизнесов !");
				SendClientMessage(playerid, 0xFF0000FF, " Для продолжения - увеличьте максимум бизнесов на сервере !");
				return 1;
			}
			buscount[para4] = 1;//создаём бизнес
			busvw[para4] = GetPlayerVirtualWorld(playerid);//задаём виртуальный мир бизнеса
			busint[para4] = GetPlayerInterior(playerid);//задаём интерьер бизнеса
			GetPlayerPos(playerid, buscordx[para4], buscordy[para4], buscordz[para4]);//задаём координаты бизнеса
			strdel(busname[para4], 0, 64);//задаём название бизнеса
			strcat(busname[para4], result);
			strdel(busplayname[para4], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
			strcat(busplayname[para4], "*** INV_PL_ID");
		    buscost[para4] = para1;//задаём стоимость бизнеса
		    busminute[para4] = para2;//задаём, через сколько минут бизнес будет приносить доход
		    busincome[para4] = para3;//задаём доход от бизнеса
		    busday[para4] = 0;//даём бизнесу право на его перекупку (покупку)
			busmoney[para4] = busminute[para4];//копируем в счётчик минут бизнеса - минуты бизнеса

    		new file, f[256];//запись бизнеса в файл
	    	format(f, 256, "bussystem/%i.ini", para4);
			file = ini_createFile(f);
			if(file >= 0)
			{
		    	ini_setString(file, "BusName", busname[para4]);
		    	ini_setString(file, "PlayName", busplayname[para4]);
		    	ini_setInteger(file, "Cost", buscost[para4]);
		    	ini_setInteger(file, "Minute", busminute[para4]);
		    	ini_setInteger(file, "Income", busincome[para4]);
		    	ini_setInteger(file, "Day", busday[para4]);
		    	ini_setInteger(file, "BusVW", busvw[para4]);
		    	ini_setInteger(file, "BusInt", busint[para4]);
		    	ini_setFloat(file, "CordX", buscordx[para4]);
		    	ini_setFloat(file, "CordY", buscordy[para4]);
		    	ini_setFloat(file, "CordZ", buscordz[para4]);
		    	ini_setInteger(file, "Count", busmoney[para4]);
				ini_closeFile(file);
			}

			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, para4, busplayname[para4],
			busvw[para4], buscordx[para4], buscordy[para4], buscordz[para4]);
			PickupID[para4] = CreateDynamicPickup(1274, 1, buscordx[para4], buscordy[para4], buscordz[para4],
			busvw[para4], busint[para4], -1, 100.0);//создаём пикап бизнеса
			MapIconID[para4] = CreateDynamicMapIcon(buscordx[para4], buscordy[para4], buscordz[para4], 52, -1,
			busvw[para4], busint[para4], -1, 200.0);//создаём мап-иконку бизнеса
			format(string, sizeof(string), "Бизнес: %s\nID: %d", busname[para4], para4);
			Nbus[para4] = CreateDynamic3DTextLabel(string, 0x00FF00FF, buscordx[para4], buscordy[para4], buscordz[para4]+0.70, 50,
			INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, busvw[para4], busint[para4], -1);//создаём 3D-текст бизнеса
			printf("[BusSystem] Админ %s [%d] создал бизнес ID: %d .", RealName[playerid], playerid, para4);
			format(string, sizeof(string), " Бизнес ID: %d успешно создан.", para4);
			SendClientMessage(playerid, 0xFFFF00FF, string);
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/removebus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x00FFFFFF, " Используйте: /removebus [ID бизнеса]");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 0 || para1 >= BUS_MAX)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
				return 1;
			}
			format(string, sizeof(string), "bussystem/%i.ini", para1);
			if(fexist(string) || buscount[para1] == 1)//если файл или сам бизнес существует, то:
			{
				DestroyDynamicPickup(PickupID[para1]);//удаляем пикап бизнеса
				if(busday[para1] == 0)//если есть мап-иконка бизнеса, то:
				{
					DestroyDynamicMapIcon(MapIconID[para1]);//удаляем мап-иконку бизнеса
				}
				DestroyDynamic3DTextLabel(Nbus[para1]);//удаляем 3D-текст бизнеса
				if(fexist(string))//если файл существует, то:
				{
                    fremove(string);//удаляем файл
				}
				buscount[para1] = 0;//удаляем бизнес
				strdel(busplayname[para1], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
				strcat(busplayname[para1], "*** INV_PL_ID");
				CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, para1, busplayname[para1],
				0, 0.0, 0.0, 0.0);
				PickupID[para1] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
				printf("[BusSystem] Админ %s [%d] удалил бизнес ID: %d .", RealName[playerid], playerid, para1);
				format(string, sizeof(string), " Бизнес ID: %d успешно удалён.", para1);
				SendClientMessage(playerid, 0xFF0000FF, string);
			}
			else//если ни файл, и ни сам бизнес не существуют, то:
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/removebusall", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			new para1 = 0;
			for(new i; i < BUS_MAX; i++)
			{
				format(string, sizeof(string), "bussystem/%i.ini", i);
				if(fexist(string) || buscount[i] == 1)//если файл или сам бизнес существует, то:
				{
					para1 = 1;
					DestroyDynamicPickup(PickupID[i]);//удаляем пикап бизнеса
					if(busday[i] == 0)//если есть мап-иконка бизнеса, то:
					{
						DestroyDynamicMapIcon(MapIconID[i]);//удаляем мап-иконку бизнеса
					}
					DestroyDynamic3DTextLabel(Nbus[i]);//удаляем 3D-текст бизнеса
					if(fexist(string))//если файл существует, то:
					{
                    	fremove(string);//удаляем файл
					}
					buscount[i] = 0;//удаляем бизнес
					strdel(busplayname[i], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
					strcat(busplayname[i], "*** INV_PL_ID");
					PickupID[i] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
				}
				CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, i, "*** INV_PL_ID",
				0, 0.0, 0.0, 0.0);
			}
			if(para1 == 1)
			{
				printf("[BusSystem] Админ %s [%d] удалил все бизнесы.", RealName[playerid], playerid);
				SendClientMessage(playerid, 0xFF0000FF, " Все бизнесы были успешно удалены.");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000FF, " На сервере не создано ни одного бизнеса !");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/gotobus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			if(GetPVarInt(playerid, "SecPris") > 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, " В тюрьме команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x00FFFFFF, " Используйте: /gotobus [ID бизнеса]");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 0 || para1 >= BUS_MAX)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
				return 1;
			}
			if(buscount[para1] == 1)//если бизнес существует, то:
			{
				PlayCRTP[playerid] = 1;//блокировка контроля координат
				SetPlayerVirtualWorld(playerid, busvw[para1]);
 				SetPlayerInterior(playerid, busint[para1]);
				SetPlayerPos(playerid, buscordx[para1], buscordy[para1]+2, buscordz[para1]+1);
				printf("[BusSystem] Админ %s [%d] телепортировался к бизнесу ID: %d .", RealName[playerid], playerid, para1);
				format(string, sizeof(string), " Вы телепортировались к бизнесу ID: %d .", para1);
				SendClientMessage(playerid, 0x00FF00FF, string);
			}
			else//если бизнес не существуют, то:
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/reloadbus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			printf("[BusSystem] Админ %s [%d] начал перезагрузку системы бизнесов.", RealName[playerid], playerid);
			format(string, sizeof(string), " Админ %s [%d] начал перезагрузку системы бизнесов.", RealName[playerid], playerid);
			SendClientMessageToAll(0xFF0000FF, string);
			SetTimerEx("reloadbus1", 1000, 0, "i", playerid);
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
//---------------------------- End BusSystem -----------------------------------

	if(strcmp(cmd, "/elegy", true) == 0)
	{
		new vehid = 562, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/flash", true) == 0)
	{
		new vehid = 565, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/jester", true) == 0)
	{
		new vehid = 559, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/stratum", true) == 0)
	{
		new vehid = 561, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/sultan", true) == 0)
	{
		new vehid = 560, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/uranus", true) == 0)
	{
		new vehid = 558, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/banshee", true) == 0)
	{
		new vehid = 429, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/bullet", true) == 0)
	{
		new vehid = 541, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/cheetah", true) == 0)
	{
		new vehid = 415, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/comet", true) == 0)
	{
		new vehid = 480, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotknife", true) == 0)
	{
		new vehid = 434, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotring", true) == 0)
	{
		new vehid = 494, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotringa", true) == 0)
	{
		new vehid = 502, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotringb", true) == 0)
	{
		new vehid = 503, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/infernus", true) == 0)
	{
		new vehid = 411, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/supergt", true) == 0)
	{
		new vehid = 506, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/turismo", true) == 0)
	{
		new vehid = 451, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/windsor", true) == 0)
	{
		new vehid = 555, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/zr350", true) == 0)
	{
		new vehid = 477, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/blade", true) == 0)
	{
		new vehid = 536, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/broadway", true) == 0)
	{
		new vehid = 575, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/remington", true) == 0)
	{
		new vehid = 534, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/savanna", true) == 0)
	{
		new vehid = 567, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/slamvan", true) == 0)
	{
		new vehid = 535, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/tornado", true) == 0)
	{
		new vehid = 576, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/voodoo", true) == 0)
	{
		new vehid = 412, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if (strcmp("/getid", cmdtext, true, 10) == 0)
	{
		new idcar = GetPlayerVehicleID(playerid);
		new modelcar = GetVehicleModel(idcar);
		format(string, sizeof(string), " ID транспорта: %d   Модель: %d",idcar,modelcar);
		SendClientMessage(playerid, COLOR_GREY, string);
    	return 1;
    }
	if (strcmp("/tp", cmdtext, true, 10) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw < 0 || vw > 990) { SetPlayerVirtualWorld(playerid, 0); }
		SendClientMessage(playerid,COLOR_GREEN," ...!");
		SetPlayerPos(playerid, -2067.5012,1356.4471,7.1016);
    	return 1;
    }
	if (strcmp("/spawn", cmdtext, true, 10) == 0 && playspa[playerid] == 1)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		SendClientMessage(playerid,COLOR_GREEN," Вы заспавнились !");
		if(IsPlayerInAnyVehicle(playerid))
		{
			new Float:x, Float:y, Float:z;
			tpdrift[playerid] = 1;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,x,y,z+5);
			SetTimerEx("SecSpa", 300, 0, "i", playerid);//спавн с блокировкой заполнения слотов оружия и предметов
		}
		else
		{
			SecSpa(playerid);//спавн с блокировкой заполнения слотов оружия и предметов
//			SpawnPlayer(playerid);
		}
    	return 1;
    }
    if(strcmp(cmd, "/car", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /car [ид модели авто] [цвет1] [цвет2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_RED, " Ид модели авто не может быть меньше 400 или больше 611 !"); return 1; }
			if(car == 537 || car == 538 || car == 569 || car == 570)
			{
				SendClientMessage(playerid, COLOR_RED, " Такой Ид модели авто создать нельзя !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали цвет1 и цвет2 !");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_RED, " Номер цвета1 не может быть меньше 0 или больше 255 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали цвет2 !");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_RED, " Номер цвета2 не может быть меньше 0 или больше 255 !"); return 1; }
			new carid2;
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			carid2 = CreateVehicle(car, X+3,Y+3,Z+1, 0.0, color1, color2, 90000);
			LinkVehicleToInterior(carid2, GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
			SetVehicleVirtualWorld(carid2, GetPlayerVirtualWorld(playerid));//установить транспорту виртуальный мир игрока
			playcarvw[carid2] = GetPlayerVirtualWorld(playerid);//сохранить виртуальный мир транспорта игрока
			format(string, sizeof(string), " *** Админ %s создал транспорт   ID: %d   Модель: %d .", RealName[playerid], carid2, car);
			print(string);
			format(string, sizeof(string), " Транспорт создан !   ID: %d   Модель: %d", carid2, car);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/delakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 10)
    	{
    		akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /delakk [имя аккаунта]");
				return 1;
			}
			if(InpNameControl(akk) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Имя аккаунта содержит недопустимые");
				SendClientMessage(playerid, COLOR_RED, " символы: знак процентов, или ~ !");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "IPAdr" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dIPAdr], val, 0, strlen(val)-1, 128); }
				if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmin] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGang] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGangLvl] = strval( val ); }
			}
			fclose(UserFile);
#endif
#if (MOD90INS == 1)
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
				new key[ 256 ] , val[ 256 ];
				new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "IPAdr" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dIPAdr], val, 0, strlen(val)-1, 128); }
					if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmin] = strval( val ); }
					if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGang] = strval( val ); }
					if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGangLvl] = strval( val ); }
				}
				fclose(UserFile);
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[64];//читаем данные из БД
					db_get_field(querydb[playerid], 7, admData[playerid][dIPAdr], 128);
					db_get_field(querydb[playerid], 9, buffer, 64); admData[playerid][dAdmin] = strval(buffer);
					db_get_field(querydb[playerid], 26, buffer, 64); admData[playerid][dGang] = strval(buffer);
					db_get_field(querydb[playerid], 27, buffer, 64); admData[playerid][dGangLvl] = strval(buffer);
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			new string222[256], string333[256], idfile;
			idfile = 0;
			new ip333[128];
			ip333 = ConvIP(admData[playerid][dIPAdr]);
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))//читаем аккаунт из бан-листа (если файл существует)
			{
				new File: UserFile44 = fopen(string222, io_read);//чтение аккаунта из бан-листа
				new key44[ 256 ] , val44[ 256 ];
				new Data44[ 256 ];
				while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
				{
					key44 = ini_GetKey( Data44 );
					if( strcmp( key44 , "Data" , true ) == 0 ) { string333 = ini_GetValue( Data44 ); }
					if( strcmp( key44 , "IDFile" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
				}
				fclose(UserFile44);
				strdel(string333, strlen(string333)-1, strlen(string333));//корректировка причины бана
			}

			if(admData[playerid][dAdmin] != 0)
			{
				AdmUpdate(akk, 0, 7);
			}
#if (MOD90INS == 0)
			if(fexist(string))
			{
				fremove(string);//удаляем аккаунт
			}
#endif
#if (MOD90INS == 1)
			if(fexist(string))
			{
				fremove(string);//удаляем аккаунт из fopen (если он там есть)
			}
			format(strdln, sizeof(strdln), "DELETE FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
			db_query(playerdb, strdln);//отправляем запрос на удаление аккаунта из БД
#endif
			format(ssss,sizeof(ssss)," *** Админ %s удалил аккаунт игрока [%s] .", RealName[playerid], akk);
			print(ssss);
			SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);

			for(new i = 0; i < 20; i++)//удаление ника админа из per-файла
			{
				if(strcmp(akk, scrnetper[i], false) == 0)//если ник админа найден, то:
				{
					strdel(scrnetper[i], 0, 64);//очистка слота
					strcat(scrnetper[i], "*** INV_PL_ID");
					ScrNetPerSave(i);//запись изменённого слота в per-файл
				}
			}
			new twenlim, restlim;
			Fmadmins(0, akk, 0, twenlim, restlim);
			format(string222,sizeof(string222),"bantime/%d.ini",idfile);
			if(fexist(string222))//если файл временного бана существует, то:
			{
				fremove(string222);//удаление ид-файла временного бана
				printf("[BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) .", akk, idfile);
				format(ssss,sizeof(ssss)," ( Файл временного бана игрока [%s] был удалён ) !", akk);
				SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
			}
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))//удаляем аккаунт из бан-листа (если файл существует)
			{
				fremove(string222);//удаляем аккаунт из бан-листа
				format(ssss,sizeof(ssss)," *** удалил аккаунт игрока [%s] из бан-листа (автоматически) .", akk);
				print(ssss);
				SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
			}
			format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
			if(fexist(string222))//удаляем IP-адрес из бан-листа (если файл существует)
			{
				fremove(string222);//удаляем IP-адрес из бан-листа
				format(ssss,sizeof(ssss)," *** удалил IP-адрес [%s] из бан-листа (автоматически) .", admData[playerid][dIPAdr]);
				print(ssss);
				SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				format(ssss,sizeof(ssss)," *** удалил IP-адрес игрока [%s] из бан-листа (автоматически) .", akk);
				for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
				{
					if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, ssss);
					}
				}
			}
			strdel(ssss, 0, 256);//очистка переменной для разбана
			strcat(ssss, "unbanip ");//сборка RCON-команды разбана
			strcat(ssss, admData[playerid][dIPAdr]);
			SendRconCommand(ssss);//RCON-команда разбана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			format(ssss,sizeof(ssss)," ( IP: [%s] был удалён из файла samp.ban ) !", admData[playerid][dIPAdr]);
			print(ssss);
			SendAdminMessage(COLOR_LIGHTBLUE, ssss);
			format(ssss,sizeof(ssss)," ( IP-адрес игрока [%s] был удалён из файла samp.ban ) !", akk);
			for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
				{
					SendClientMessage(i, COLOR_LIGHTBLUE, ssss);
				}
			}
			CallRemoteFunction("vehsys3delakkfunc", "ds", playerid, akk);//возврата транспорта на продажу в скрипте vehsys3
			CallRemoteFunction("banksysdelakkfunc", "ds", playerid, akk);//удаление банковского счёта в скрипте banksys

			if(admData[playerid][dGangLvl] == 6)//если удаляемый аккаунт - лидер банды, то:
			{
				format(string,sizeof(string),"gangs/%d.ini",admData[playerid][dGang]);
				if(fexist(string))//если файл с ID банды существует, то:
				{
					GangSA[admData[playerid][dGang]] = 0;//запрещаем запись ID банды в файл
					SetTimerEx("DelAkk22", 300, 0, "i", admData[playerid][dGang]);
				}
			}
			else//если удаляемый аккаунт - НЕ лидер банды, то:
			{
				if(admData[playerid][dGang] > 0)//если игрок состоял в банде, то:
				{
					format(string,sizeof(string),"gangs/%d.ini",admData[playerid][dGang]);
					if(fexist(string))//если файл с ID банды существует, то:
					{
						GPlayers[admData[playerid][dGang]]--;//делаем в банде -1 игрок, и сохраняем изменения
						GangSave(admData[playerid][dGang]);//запись ID банды в файл
						format(ssss,sizeof(ssss)," *** и изменил число игроков в банде [%s{33CCFF}] на %d (автоматически) .", GName[admData[playerid][dGang]], GPlayers[admData[playerid][dGang]]);
						print(ssss);
						SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
    if(strcmp(cmd, "/makepolice", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /makepolice [ид игрока/часть ника] [левел(0-3)]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[para1][pDeport] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок находится на депортации !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [левел(0-3)] !");
					return 1;
				}
				new level;
				level = strval(tmp);
				if(level < 0 || level > 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Уровень полиции должен быть от 0 до 3 !");
					return 1;
				}
				new dopper;
				dopper = PlayerInfo[para1][pPolice];
				if(dopper == level)
				{
	 				SendClientMessage(playerid, COLOR_RED, " У игрока уже есть назначаемый уровень полиции !");
					return 1;
				}
				PlayerInfo[para1][pPolice] = level;
				if(PlayerInfo[para1][pPolice] == 0)
				{
					format(string, sizeof(string), " *** Админ %s снял уровень полиции с игрока %s .", RealName[playerid], RealName[para1]);
					print(string);
					SendAdminMessage(COLOR_RED, string);
					if(PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s снял с Вас уровень полиции.", RealName[playerid]);
						SendClientMessage(para1, COLOR_RED, string);
					}
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s дал игроку %s %d уровень полиции.", RealName[playerid], RealName[para1],level);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					if(PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s дал Вам %d уровень полиции.", RealName[playerid], level);
						SendClientMessage(para1, COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " ----------------------------- Стандартные значения ------------------------------");
			format(string, sizeof(string), "  Время - 12 (%d) ||| Погода - 1 (%d) ||| Гравитация - 0.008 (%f)", GlTime, GlWeat, GlGrav);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			SendClientMessage(playerid, COLOR_GRAD1, "     /a2help - команды дополнительного админ-скрипта");
			SendClientMessage(playerid, COLOR_GRAD1, "     /islhelp - команды админ-острова");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " ---------------------- Помощь по админским командам ----------------------");
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 1 левел: /ahelp, /time, /weat, /line, /scancom, /mess, /tadm, /sid, /a(chat),");
#if (MOD4DINS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnetv, /cord");
#endif
#if (MOD4DINS >= 1)
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnetv, /cvpass, /cord");
#endif
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 2 левел: /muteakk, /prisonakk, /playtp, /mark, /gotomark");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 3 левел: /banlst, /plclr, /edgangs, /tweap");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 4 левел: /car, /delcar, /entercar, /jetpack, /explode, /wantv");
			}
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 5 левел: /banakktm, /live, /setweap, /wanted");
			}
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 6 левел: /banakk, /setmon, /money, /setweapall, /tweaprad");
			}
			if (PlayerInfo[playerid][pAdmin] >= 7)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 7 левел: /nucexp, /setmonall, /moneyall, /playtpall, /tpset");
			}
			if (PlayerInfo[playerid][pAdmin] >= 8)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 8 левел: /fmess, /grav, /admtp, /radpl, ( /snowall )");
			}
			if (PlayerInfo[playerid][pAdmin] >= 9)
			{
#if (MOD90INS == 0 && MOD77INS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, " 9 левел: /lchouse, /unbanakk, /shad, /radall, /scrnet1, /scrnetnp1, /scrnet2,");
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnetnp2");
#endif
#if (MOD90INS == 0 && MOD77INS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " 9 левел: /lchouse, /dataakk, /unbanakk, /shad, /radall, /scrnet1, /scrnetnp1,");
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnet2, /scrnetnp2");
#endif
#if (MOD90INS == 1 && MOD77INS == 0 && MOD7AINS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, " 9 левел: /lchouse, /unbanakk, /shad, /radall, /scrnet1, /scrnetnp1, /scrnet2,");
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnetnp2");
#endif
#if (MOD90INS == 1 && MOD77INS == 1 && MOD7AINS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, " 9 левел: /lchouse, /dataakk, /unbanakk, /akksrc, /shad, /radall, /scrnet1,");
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnetnp1, /scrnet2, /scrnetnp2");
#endif
#if (MOD90INS == 1 && MOD77INS == 0 && MOD7AINS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " 9 левел: /lchouse, /unbanakk, /passrc, /shad, /radall, /scrnet1, /scrnetnp1,");
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnet2, /scrnetnp2");
#endif
#if (MOD90INS == 1 && MOD77INS == 1 && MOD7AINS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " 9 левел: /lchouse, /dataakk, /unbanakk, /akksrc, /passrc, /shad, /radall,");
				SendClientMessage(playerid, COLOR_GRAD1, "           /scrnet1, /scrnetnp1, /scrnet2, /scrnetnp2");
#endif
			}
			if (PlayerInfo[playerid][pAdmin] >= 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 10 левел: /makeadmin, /makepolice, /delakk, /admakk, /gmx, /passhouse,");
				SendClientMessage(playerid, COLOR_GRAD1, "                  /relhouses, /cortime, /edplgangs, /deltr, /madmins");
			}
			if(IsPlayerAdmin(playerid))
			{
#if (MOD90INS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, " RCON-админ: /iadminset, /untouch, /servcon, /openip, /scrnetper");
#endif
#if (MOD90INS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " RCON-админ: /iadminset, /untouch, /servcon, /openip, /scrnetper, /delakktm");
#endif
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			TpPosA[playerid][0] = GetPlayerInterior(playerid);
			TpPosA[playerid][1] = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]);
			if (GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
			{
				GetVehicleZAngle(GetPlayerVehicleID(playerid), TpDestA[playerid][3]);
			}
			else
			{
				GetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
			}
			SendClientMessage(playerid, COLOR_GRAD1, " Маркер телепорта установлен.");
			printf(" *** Админ %s установил телепорт ( /mark )", RealName[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			new dopper1, dopper2, dopper3, dopper4;
			dopper1 = 0;
			dopper2 = 0;
			dopper3 = 0;
			dopper4 = 0;
			new Float:ConX, Float:ConY, Float:ConZ;
			GetPlayerPos(playerid, ConX, ConY, ConZ);

			if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

			if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
			(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
			(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper3 = 1; }

			if(-15500 >= TpDestA[playerid][0] >= -20000 && 15500 <= TpDestA[playerid][1] <= 20000) { dopper2 = 1; }

			if(((-1602 < TpDestA[playerid][0] < -1193 && 840 < TpDestA[playerid][1] < 1158 && 973 < TpDestA[playerid][2] < 1101) ||
			(-1547 < TpDestA[playerid][0] < -1247 && 1506 < TpDestA[playerid][1] < 1705 && 1002 < TpDestA[playerid][2] < 1123)) &&
			(TpPosA[playerid][0] == 15 || TpPosA[playerid][0] == 14)) { dopper4 = 1; }

			if(dopper1 == 0 && dopper2 == 1)//если игрок телепортируется c основной карты на админ-остров, то:
			{
				new Float:PosX, Float:PosY, Float:PosZ;
				new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playerid,PosX,PosY,PosZ);
					SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
				}
				tpdrift[playerid] = 1;
				SetPlayerInterior(playerid, TpPosA[playerid][0]);
				SetPlayerVirtualWorld(playerid, TpPosA[playerid][1]);
				SetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]+1);
				SetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
				SetCameraBehindPlayer(playerid);
			}
			else//если игрок телепортируется в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
			{
				new Float:PosX, Float:PosY, Float:PosZ;
				new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playerid,PosX,PosY,PosZ);
					SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
				}
				if(dopper3 == 0 && dopper4 == 1)//если игрок телепортируется НЕ С дерби НА дерби, то:
				{
					tpdrift[playerid] = 1;
					SetPlayerInterior(playerid, TpPosA[playerid][0]);
					SetPlayerVirtualWorld(playerid, TpPosA[playerid][1]);
					SetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]+1);
					SetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
					SetCameraBehindPlayer(playerid);
				}
				else//если игрок телепортируется в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
				{
					if (GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3;
						per1 = TpPosA[playerid][0];
						per2 = TpPosA[playerid][1];
						per3 = TpDestA[playerid][3];
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:TpDestA[playerid][0],Float:TpDestA[playerid][1],Float:TpDestA[playerid][2]+1);
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
						SetPlayerInterior(playerid, TpPosA[playerid][0]);
						SetPlayerVirtualWorld(playerid, TpPosA[playerid][1]);
						SetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]+1);
						SetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
						SetCameraBehindPlayer(playerid);
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD1, " Вы были телепортированы.");
			printf(" *** Админ %s телепортировался ( /gotomark )", RealName[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	return 0;
}

forward entcar22(playerid, testcar);
public entcar22(playerid, testcar)
{
	new dopper = -600;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerVehicleID(i) == testcar && GetPlayerVehicleSeat(i) == 0)
			{//если в ТП-авто есть игрок, И этот игрок на месте водителя, то:
				dopper = i;//запомнить ИД игрока
			}
		}
	}
	if(dopper != -600)//если ИД игрока найден, то:
	{
		EnterTick33[dopper] = 1;//обход антикрашера - 3
		new Float:x, Float:y, Float:z;
		GetPlayerPos(dopper, x, y, z);//высадить игрока
		SetPlayerPos(dopper, x+3, y+3, z);
		new string[256];
		format(string, sizeof(string), " *** Админ %s высадил игрока %s [%d] из транспорта  ID: %d  по команде /entercar", RealName[playerid], RealName[dopper], dopper, testcar);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(testcar));//установить игроку виртуальный мир транспорта
	SetTimerEx("entcar33", 300, 0, "ii", playerid, testcar);
	return 1;
}

forward entcar33(playerid, testcar);
public entcar33(playerid, testcar)
{
	new string[256];
	PutPlayerInVehicle(playerid, testcar, 0);
	format(string, sizeof(string), " *** Админ %s телепортировался в транспорт   ID: %d.", RealName[playerid], testcar);
	print(string);
	format(string, sizeof(string), " Вы были телепортированы в транспорт   ID: %d", testcar);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	return 1;
}

public RestartS()
{
	restrest = 1;//переменная рестарта сервера
	new per;

//	FiveSecTimer();
	KillTimer(fivesectimer);
	KillTimer(restart);
	KillTimer(autorepaircar);
//	KillTimer(timeobject);
//	KillTimer(timeobject22);
	KillTimer(timpolsec);
	KillTimer(onsectimer);
	KillTimer(minsertimer);
	KillTimer(drifttimer);
	KillTimer(leveltimer);

    SendClientMessageToAll(COLOR_RED,"*** Рестарт !!! ***");

	SetTimerEx("ResServ", 1000, 0, "i", per);
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
/*
	new Score = GetPVarInt(playerid, "PlMon");//drift bonus
	if(Score >= 0 && Score < 100000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[playerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Главарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	if(scrmod[3][playerid] == 0)
	{
		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,1.00);
//		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,0.47);
		Update3DTextLabelText(Level3D[playerid],0x00FF00FF,Playerdr[playerid][Level]);
		LevelStats[playerid] = 1;
	}
*/
    new inter = GetPlayerInterior(playerid);
	LinkVehicleToInterior(vehicleid,inter);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{

	if(scrmod[1][playerid] == 0)
	{
		R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
		PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
		TextDrawHideForPlayer(playerid, KMH);
	}
/*
	new Score = GetPVarInt(playerid, "PlMon");//drift bonus
	if(Score >= 0 && Score < 100000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[playerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Главарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	if(scrmod[3][playerid] == 0)
	{
		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,1.00);
//		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,0.47);
		Update3DTextLabelText(Level3D[playerid],0x00FF00FF,Playerdr[playerid][Level]);
		LevelStats[playerid] = 1;
	}
*/
    new inter = GetPlayerInterior(playerid);
	LinkVehicleToInterior(vehicleid,inter);
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{

	if(scrmod[1][playerid] == 0)
	{
		if(newstate == PLAYER_STATE_DRIVER)//speedometer
		{
			new String[64];

			TextDrawShowForPlayer(playerid, KMH);

			format(String, sizeof(String), "%d", GetPlayerSpeed(playerid));
			PlayerTextDrawSetString(playerid, VehicleSpeed[playerid], String);
			PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);

			R_Vehicle[playerid] = VehicleSpeed_2;
		}
		else if(newstate == PLAYER_STATE_ONFOOT)
		{
			R_Vehicle[playerid] = VehicleSpeed_1;

			PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
			TextDrawHideForPlayer(playerid, KMH);
		}
	}

	if(newstate == 3 && oldstate == 2)//если игрока пересадили с места водителя
	{//на место пассажира, то:
		new idcar = GetPlayerVehicleID(playerid);//определяем ИД транспорта
		SetTimerEx("CheatVehic", 100, 0, "ii", playerid, idcar);//тайм-аут (на средний пинг игроков)
	}
//---------------- антикрашер игроков - 3 (январь 2015) ------------------------
	if(newstate == 2)
	{
		carplmod[playerid] = GetVehicleModel(GetPlayerVehicleID(playerid));
        switch(carplmod[playerid])//если игрок сел в модель без анимации входа/выхода, то:
        {
            case 472,473,493,595,484,430,453,452,446,454: EnterTick33[playerid] = 1;//обход антикрашера - 3;
        }
		EnterTick[playerid] = GetTickCount() + 250;
	}
	if(oldstate == 2 && EnterTick33[playerid] == 0 && (GetTickCount() - EnterTick[playerid]) < 250)
	{
		new string[256];
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 3 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
	}
//-------------------- антикрашер игроков - 3 (конец) --------------------------
	if(newstate >= 1 && newstate <= 3 && oldstate == 8)//повторное включение наблюдения за игроком
	{//после респавна игрока
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(admper1[i] == playerid)//если есть админ ведущий наблюдение за игроком, то:
				{
					if(newstate == 2 || newstate == 3)//если игрок в транспорте, то:
					{
						new para44;
						para44 = GetPlayerVehicleID(playerid);
						PlayerSpectateVehicle(i, para44, SPECTATE_MODE_NORMAL);
						if(admper5[i] == 0)//если админ наблюдал за игроком, то:
						{
							PlayerTextDrawShow(i, VehicleSpeed[i]);//включаем текстдравы спидометра
							TextDrawShowForPlayer(i, KMH);
							TextDrawShowForPlayer(i, HMS22);//включаем текстдравы максимальной горизонтальной скорости
							PlayerTextDrawShow(i, HMS44[i]);
						}
						new string[16];//показываем максимальную горизонтальную скорость
						format(string, sizeof(string), "%d", GetHMaxSpeed(para44));
						PlayerTextDrawSetString(i, HMS44[i], string);
						admper5[i] = 1;//наблюдаем за транспортом
					}
					else
					{
						if(admper5[i] == 1)//если админ наблюдал за транспортом, то:
						{
							PlayerTextDrawHide(i, VehicleSpeed[i]);//отключаем текстдравы спидометра
							TextDrawHideForPlayer(i, KMH);
							TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
							PlayerTextDrawHide(i, HMS44[i]);
						}
						PlayerSpectatePlayer(i, playerid, SPECTATE_MODE_NORMAL);//включить наблюдение
						admper5[i] = 0;//наблюдаем за игроком
					}
				}
			}
		}
	}
	return 1;
}

forward CheatVehic(playerid, idcar);
public CheatVehic(playerid, idcar)
{
	new idcheat = 600;
	for(new i = 0; i < MAX_PLAYERS; i++)//первичный поиск ПОТЕНЦИАЛЬНОГО чита
	{//цикл для всех игроков
		if(IsPlayerConnected(i))//проверяем ТОЛЬКО подключенных игроков
		{
			if(GetPlayerVehicleID(i) == idcar && GetPlayerState(i) == 2 && i != playerid)
			{//если игрок на месте водителя в том же транспорте, И это НЕ "пересаженный" игрок, то:
				idcheat = i;//игрок - ПОТЕНЦИАЛЬНЫЙ чит
			}
		}
	}
	SetTimerEx("CheatVehic22", 500, 0, "iii", playerid, idcar, idcheat);//тайм-аут (на среднее время работы чита)
	return 1;
}

forward CheatVehic22(playerid, idcar, idcheat);
public CheatVehic22(playerid, idcar, idcheat)
{
	new Float:igx, Float:igy, Float:igz;
	if(idcheat == 600)//если ПОТЕНЦИАЛЬНЫЙ чит при первичном поиске НЕ был найден, то:
	{
		for(new i = 0; i < MAX_PLAYERS; i++)//вторичный поиск ПОТЕНЦИАЛЬНОГО чита
		{//цикл для всех игроков
			if(IsPlayerConnected(i))//проверяем ТОЛЬКО подключенных игроков
			{
				if(GetPlayerVehicleID(i) == idcar && GetPlayerState(i) == 2 && i != playerid)
				{//если игрок на месте водителя в том же транспорте, И это НЕ "пересаженный" игрок, то:
					idcheat = i;//игрок - ПОТЕНЦИАЛЬНЫЙ чит
				}
			}
		}
	}
	if(idcheat != 600)//если ПОТЕНЦИАЛЬНЫЙ чит был найден, то:
	{
		GetPlayerPos(idcheat, igx, igy, igz);//выкидываем ПОТЕНЦИАЛЬНОГО чита из транспорта
		SetPlayerPos(idcheat, igx+3, igy+3, igz+3);
	}
	GetPlayerPos(playerid, igx, igy, igz);//высаживаем пересаженного игрока (ВОЗМОЖНОГО чита)
	SetPlayerPos(playerid, igx+3, igy+3, igz+3);
	SetTimerEx("CheatVehic33", 300, 0, "iii", playerid, idcar, idcheat);//тайм-аут (перед возвращением...
	return 1;//...пересаженного игрока (ВОЗМОЖНОГО чита) на место водителя)
}

forward CheatVehic33(playerid, idcar, idcheat);
public CheatVehic33(playerid, idcar, idcheat)
{
	PutPlayerInVehicle(playerid, idcar, 0);//возвращаем пересаженного игрока (ВОЗМОЖНОГО чита) на место водителя
	if(idcheat != 600)//если ПОТЕНЦИАЛЬНЫЙ чит был найден, то:
	{
		new dopper22 = 0;//поиск минимум 2-х свободных слотов в таблице ников читов
		for(new i = 0; i < 40; i++)
		{
			if(!strlen(DataCheat1[i]))
			{
	    		dopper22++;
			}
		}
		if(dopper22 < 2)//если найдено меньше 2-х слотов, то:
		{
			for(new i = 0; i < 40; i++)//очистка ВСЕЙ таблицы ников читов
			{
				strdel(DataCheat1[i], 0, MAX_PLAYER_NAME);
			}
		}
		dopper22 = 0;
		while(strlen(DataCheat1[dopper22]))
		{//поиск 1-го свободного слота, и запись туда ника ПОТЕНЦИАЛЬНОГО чита
			dopper22++;
		}
		strcat(DataCheat1[dopper22], RealName[idcheat]);
	}
	else//иначе:
	{
		new dopper22 = 0;//поиск минимум 1-го свободного слота в таблице ников читов
		for(new i = 0; i < 40; i++)
		{
			if(!strlen(DataCheat1[i]))
			{
	    		dopper22++;
			}
		}
		if(dopper22 < 1)//если НЕ найдено ни одного свободного слота, то:
		{
			for(new i = 0; i < 40; i++)//очистка ВСЕЙ таблицы ников читов
			{
				strdel(DataCheat1[i], 0, MAX_PLAYER_NAME);
			}
		}
	}
	new dopper = 0;
	while(strlen(DataCheat1[dopper]))
	{//поиск 1-го свободного слота, и запись туда ника ВОЗМОЖНОГО чита
		dopper++;
	}
	strcat(DataCheat1[dopper], RealName[playerid]);
	new j = 0;//поиск совпадений в таблице ников читов
	new nomid;
	new doplogcheat[MAX_PLAYER_NAME];
	for(new i = 0; i < 40; i++)
	{//"установка" ОРИГИНАЛА для сравнения
		strdel(doplogcheat, 0, MAX_PLAYER_NAME);//очистка ника чита
		if(strlen(DataCheat1[i]) != 0)//если слот ОРИГИНАЛА НЕ пустой, то:
		{
			nomid = -600;//подготовка переменной номера ИД чита
			dopper = 1;//"установка" счётчика совпадений (=1 - ОРИГИНАЛ уже найден)
			j = i + 1;//индекс для поиска - индекс ОРИГИНАЛА +1
			while(j < 40)
			{
				if(strcmp(DataCheat1[i],DataCheat1[j],false) == 0 && strlen(DataCheat1[j]) != 0)
				{//если есть совпадение ника, И слот ника НЕ пустой, то:
			    	dopper++;//+1 к счётчику совпадений
				}
				if(dopper > 3)//если найдено больше 3-х совпадений, то:
				{
					strcat(doplogcheat, DataCheat1[j]);//запоминаем ник
					break;//выходим из поиска
				}
				j++;//индекс для поиска +1
			}
		}
		if(strlen(doplogcheat) != 0)//если ник НЕ пустой, то:
		{
			for(new m = 0; m < MAX_PLAYERS; m++)
			{//поиск ника среди игроков (для определения его ИД)
				if(IsPlayerConnected(m))
				{
					if(strcmp(doplogcheat,RealName[m],false) == 0)
					{
						nomid = m;
					}
				}
			}
			if(nomid != -600)//если ИД чита найден, то:
			{
				for(new m2 = 0; m2 < 40; m2++)
				{//очистка ВСЕЙ таблицы от ника чита
					if(strcmp(doplogcheat,DataCheat1[m2],false) == 0 && strlen(DataCheat1[m2]) != 0)
					{
						strdel(DataCheat1[m2], 0, MAX_PLAYER_NAME);
					}
				}
				new string[256];//кикаем чита
				format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за чит (1), мешающий работе сервера !", RealName[nomid], nomid);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", nomid);
			}
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnObjectMoved(objectid)
{

//----------------------------- Elevator - 1 -----------------------------------
    new Float:x, Float:y, Float:z;
	if(objectid == Obj_Elevator)
	{
		SetTimer("StopMonit", 1000, 0);//задержка отключения мониторинга лифта

	    KillTimer(ElevatorBoostTimer);
	    FloorRequestedBy[ElevatorFloor] = 10000;//освобождение места игрока в очереди обслуживания

		for(new i; i < sizeof(ElevatorQueue) - 1; i ++){ElevatorQueue[i] = ElevatorQueue[i + 1];}
		ElevatorQueue[sizeof(ElevatorQueue) - 1] = -1;//сдвиг очереди обслуживания

	    Elevator_OpenDoors();
	    Floor_OpenDoors(ElevatorFloor);
	    GetObjectPos(Obj_Elevator, x, y, z);
	    Label_Elevator = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
		0x33AA33FF, 1784.9822, -1302.0426, z - 0.9, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
	    ElevatorState = 1;
	    SetTimer("Elevator_TurnToIdle", ELEVATOR_WAIT_TIME, 0);//задержка в очереди обслуживания
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	if(objectid == Obj_Elevator22)
	{
		SetTimer("StopMonit22", 1000, 0);//задержка отключения мониторинга лифта

	    KillTimer(ElevatorBoostTimer22);
	    FloorRequestedBy22[ElevatorFloor22] = 10000;//освобождение места игрока в очереди обслуживания

		for(new i; i < sizeof(ElevatorQueue22) - 1; i ++){ElevatorQueue22[i] = ElevatorQueue22[i + 1];}
		ElevatorQueue22[sizeof(ElevatorQueue22) - 1] = -1;//сдвиг очереди обслуживания

	    Elevator_OpenDoors22();
	    Floor_OpenDoors22(ElevatorFloor22);
	    GetObjectPos(Obj_Elevator22, x, y, z);
	    Label_Elevator22 = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
		0x33AA33FF, 289.23, -1610.63, z - 0.9, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
	    ElevatorState22 = 1;
	    SetTimer("Elevator_TurnToIdle22", ELEVATOR_WAIT_TIME22, 0);//задержка в очереди обслуживания
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

//==============================================================================
//                              GarHouse
//==============================================================================
//public OnPlayerPickUpPickup(playerid, pickupid)
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{

//------------------------------ BusSystem -------------------------------------
		new para1 = 0;
		new para2 = 0;
		while(para1 < BUS_MAX)
		{
			if(PickupID[para1] == pickupid)
			{
				para2 = 1;
				break;
			}
			para1++;
		}
		if(para2 == 1)
		{
			if(DelayPickup[playerid] == 0)
			{
				DelayPickup[playerid]++;
				return 1;
			}
			if(DelayPickup[playerid] == 1)
			{
				DelayPickup[playerid]++;
				return 1;
			}
			if(DelayPickup[playerid] == 2)
			{
				DelayPickup[playerid] = 0;
			}
			new string[2048];
			playIDbus[playerid] = para1;//запоминаем ИД бизнеса для игрока
			if(busday[para1] == 0 && strcmp(RealName[playerid], busplayname[para1], false) != 0)
			{//если у бизнеса есть право на его перекупку, и этот бизнес не игрока, то:
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nСтоимость бизнеса: %d $\n\nЭтот бизнес будет Вам приносить доход: %d $\
				\nкаждые %d минут Вашего он-лайн отыгранного времени.\n\nВнимание ! Через %d суток, со дня покупки этого бизнеса,\
				\nэтот бизнес сможет перекупить любой другой игрок !", busname[para1], buscost[para1], busincome[para1],
				busminute[para1], BUS_DAY);
				ShowPlayerDialog(playerid, 8001, 0, "Информация.", string, "Купить", "Отмена");
				SetPVarInt(playerid, "DlgCont", 8001);
			}
			if(busday[para1] != 0 && strcmp(RealName[playerid], busplayname[para1], false) != 0)
			{//если у бизнеса нет права на его перекупку, и этот бизнес не игрока, то:
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nВладелец бизнеса: %s\nСтоимость бизнеса: %d $", busname[para1],
				busplayname[para1], buscost[para1]);
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", string, "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
			}
			if(strcmp(RealName[playerid], busplayname[para1], false) == 0)
			{//если этот бизнес - бизнес игрока, то:
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nСтоимость бизнеса: %d $\n\nЭтот бизнес Вам приносит доход: %d $\
				\nкаждые %d минут Вашего он-лайн отыгранного времени.\n\nВы хотите продать этот бизнес ?", busname[para1], buscost[para1],
				busincome[para1], busminute[para1]);
				ShowPlayerDialog(playerid, 8002, 0, "Информация.", string, "Продать", "Отмена");
				SetPVarInt(playerid, "DlgCont", 8002);
			}
		}
		else
		{
//---------------------------- End BusSystem -----------------------------------

			if(GetPVarInt(playerid, "HousePrevTime") != 0) return 1;//запрет активации пикапа

	    	new file[HOUSEFILE_LENGTH], string[256]; // Не жалуются на огромные размеры, просто измените его, если вам нужно.
	    	Loop(h, MAX_HOUSES)
			{
		    	format(file, sizeof(file), FILEPATH, h);
		    	if(pickupid == HousePickupOut[h])
		    	{
		        	SetPVarInt(playerid, "LastHouseCP", h);
//		        	if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE) || IsPlayerAdmin(playerid)) // Если удалить комментарий, RCON администраторы могут войти в любой дом они хотят.
		        	if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE)) // Если удалить комментарий, RCON администраторы могут войти в любой дом они хотят.
		        	{
		            	SetPVarInt(playerid, "IsInHouse", 1);
		            	SetPlayerHouseInterior(playerid, h);
		            	if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE))
		            	{
			        		SendClientMessage(playerid, COLOUR_INFO, I_HMENU);
			        	}
			        	#if defined GH_DEBUGGING
				    		printf(DEBUG_OP_PUD_PICKUP1, RealName[playerid], playerid, h);
			    		#endif
		        	}
		        	if(strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE) && strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE))
		        	{
		            	if(!strcmp(dini_Get(file, "HousePassword"), "INVALID_HOUSE_PASSWORD", CASE_SENSETIVE))
						{
		        			ShowInfoBox(playerid, INFORMATION_HEADER, LABELTEXT2, GetHouseName(h), GetHouseOwner(h), GetHouseValue(h), h);
						}
						if(strcmp(dini_Get(file, "HousePassword"), "INVALID_HOUSE_PASSWORD", CASE_SENSETIVE))
						{

            				if(lockpas[playerid] == 1) return 1;//если диалог ввода пароля заблокирован, то завершить public
							lockpas[playerid] = 1;//заблокировать диалог ввода пароля

		        			format(string,sizeof(string), HMENU_ENTER_PASS, GetHouseName(h), GetHouseOwner(h), GetHouseValue(h), h);
	                		ShowPlayerDialog(playerid, 521, DIALOG_STYLE_INPUT, "Информация о доме", string, "OK", "Отмена");
							SetPVarInt(playerid, "DlgCont", 521);
						}
		        	}
		        	if(!strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE) && dini_Int(file, "HouseValue") > 0)
					{
						format(string, sizeof(string), HMENU_BUY_HOUSE, RealName[playerid], GetHouseValue(h));
						ShowPlayerDialog(playerid, 504, DIALOG_STYLE_MSGBOX, "Покупка дома", string, "Купить", "Отмена");
						SetPVarInt(playerid, "DlgCont", 504);
					}
					break;
		    	}
		    	if(pickupid == HousePickupInt[h])
		    	{
		        	#if defined GH_HINTERIOR_UPGRADE
		        	if(GetPVarInt(playerid, "HousePreview") == 1)
		        	{
		            	new tmpstring[50];
						GetPVarString(playerid, "HousePrevName", tmpstring, 50);
						format(string, sizeof(string), HMENU_BUY_HINTERIOR, tmpstring, GetPVarInt(playerid, "HousePrevValue"));
						ShowPlayerDialog(playerid, 517, DIALOG_STYLE_MSGBOX, "Интерьер", string, "Купить", "Отмена");
						SetPVarInt(playerid, "DlgCont", 517);
		        	}
		        	#endif
		        	if(GetPVarInt(playerid, "HousePreview") == 0)
		        	{
		            	SetPVarInt(playerid, "IsInHouse", 0);
			        	SetPlayerPosEx(playerid, dini_Float(file, "SpawnOutX"), dini_Float(file, "SpawnOutY"), dini_Float(file, "SpawnOutZ"), dini_Float(file, "SpawnOutAngle"), dini_Int(file, "SpawnInterior"), dini_Int(file, "SpawnWorld"));
			        	#if defined GH_DEBUGGING
				    		printf(DEBUG_OP_PUD_PICKUP2, RealName[playerid], playerid, h);
			    		#endif
					}
					break;
		    	}
	    	}
		}
	}
	return 1;
}
//==============================================================================
//                              End GarHouse
//==============================================================================

public OnVehicleMod(playerid, vehicleid, componentid)
{
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[256];
	if((newkeys & 512 && GetPVarInt(playerid, "MnMode") != 2) || (newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 2))
	{
		if(IsPlayerInAnyVehicle(playerid))
	 	{
			if(gPlayerLogged[playerid] == 0)
			{
				format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
				return 1;
			}
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
				return 1;
			}
			if(perfrost[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
				return 1;
			}
			if(PlayLock1[0][playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
				return 1;
			}
			if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
			{
				SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
				return 1;
			}

			//Gangs system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
			SetPVarInt(playerid, "DlgCont", 4);

	 	}
	}
	if((newkeys & 1024 && GetPVarInt(playerid, "MnMode") != 2) || (newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 2))
	{
		if(gPlayerLogged[playerid] == 0)
		{
			format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_YELLOW, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
			return 1;
		}
		if(perfrost[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
		if(PlayLock1[0][playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
			return 1;
		}
		if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
		{
			SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
		{
			SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
		{
			SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
			return 1;
		}

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

	}
	if( newkeys == 1 || newkeys == 9 || newkeys == 33 && oldkeys != 1 || oldkeys != 9 || oldkeys != 33)
	{
    	new car = GetPlayerVehicleID(playerid);
		new Model5 = GetVehicleModel(car);
        switch(Model5)
        {
            case 446,432,448,452,424,453,454,461,462,463,468,471,430,472,449,473,481,484,493,495,509,510,521,538,522,523,532,537,570,581,586,590,569,595,604,611: return 0;
        }
        AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
	}

//----------------------------- Elevator - 1 -----------------------------------
	if(!IsPlayerInAnyVehicle(playerid) && (newkeys & KEY_NO))
	{
		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		if(pos[2] > 10.38 && pos[2] < 128.73 &&
		pos[1] < -1301.4 && pos[1] > -1303.2417 && pos[0] < 1786.2131 && pos[0] > 1784.1555)
		{
			for(new i; i < sizeof(ElevatorQueue); i ++)
			{//если этаж занят местом игрока, то отобразить этот этаж красным цветом
				if(FloorRequestedBy[i] != 10000){strcat(string, "{FF0000}");}
				strcat(string, FloorNames[i]);
				strcat(string, "\n");
			}

			ShowPlayerDialog(playerid, 150, DIALOG_STYLE_LIST, "Управление лифтом", string, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 150);
		}
		if(pos[2] > 10.38 && pos[2] < 128.73 &&
		pos[1] > -1301.4 && pos[1] < -1299.1447 && pos[0] < 1785.6147 && pos[0] > 1781.9902)
		{
			new i = 20;//определение этажа, откуда поступил вызов
			while(pos[2] < GetDoorsZCoordForFloor(i) + 3.5 && i > 0){i --;}
			if(i == 0 && pos[2] < GetDoorsZCoordForFloor(0) + 2.0){i = -1;}
			if(i <= 19)
			{
				CallElevator(playerid, i + 1, 0);//вызов, или начало движения лифта
			}
		}

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
		if(pos[2] > 12.86 && pos[2] < 101.50 &&
		pos[1] > -1611.70 && pos[1] < -1609.50 && pos[0] > 288.00 && pos[0] < 290.10)
		{
			for(new i; i < sizeof(ElevatorQueue22); i ++)
			{//если этаж занят местом игрока, то отобразить этот этаж красным цветом
				if(FloorRequestedBy22[i] != 10000){strcat(string, "{FF0000}");}
				strcat(string, FloorNames22[i]);
				strcat(string, "\n");
			}

			ShowPlayerDialog(playerid, 152, DIALOG_STYLE_LIST, "Управление лифтом", string, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 152);
		}
		if(pos[2] > 12.86 && pos[2] < 101.50 &&
		pos[1] < -1611.70 && pos[1] > -1613.40 && pos[0] > 288.50 && pos[0] < 292.10)
		{
			new i = 13;//определение этажа, откуда поступил вызов
			while(pos[2] < GetDoorsZCoordForFloor22(i) + 3.5 && i > 0){i --;}
			if(i == 0 && pos[2] < GetDoorsZCoordForFloor22(0) + 2.0){i = -1;}
			if(i <= 12)
			{
				CallElevator22(playerid, i + 1, 0);//вызов, или начало движения лифта
			}
		}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	}
//--------------------------- End Elevator - 1 ---------------------------------

	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	new string[256];
	new dopper = -600;
	new i;
	for(i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{//определение ид игрока по его IP
			if(strcmp(ip, PlayerInfo[i][pIPAdr], true) == 0)
			{
				dopper = i;//ид игрока найден
			}
		}
	}
	if(playspa[dopper] == 0 && dopper != -600)//если игрок НЕ заспавнился,
	{//И ид игрока найден, то:
		printf("-----[Игрок не заспавнился] %s [%d]: ввёл RCON-команду.", RealName[dopper], dopper); // Отправляем команду в сервер-лог
		format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - RCON-команда без спавна !", RealName[dopper], dopper);
		print(string);
    	SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", dopper);
		return 1;
	}
	if(success == 0 && dopper != -600)//если игрок НЕ залогинился как RCON-админ,
	{//И ид игрока найден, то:
		passrcon[dopper]++;//бан взлома RCON-пароля +1
	}
	if(success == 1 && dopper != -600)//если игрок залогинился как RCON-админ,
	{//И ид игрока найден, то:
		passrcon[dopper] = 0;//обнуляем бан взлома RCON-пароля
	}
	if(passrcon[dopper] >= 10)//если бан взлома RCON-пароля больше или равен 10, то:
	{//бан игрока
		PlayerInfo[dopper][pLock] = 1;//блокируем аккаунт игрока
		format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был забанен - попытка взлома RCON-пароля !",RealName[dopper],dopper);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		strdel(fbanreason[dopper], 0, 256);//очистка причины бана
		strcat(fbanreason[dopper], "* Попытка взлома RCON-пароля.");
		new reason333[256];
		format(reason333, sizeof(reason333), "* Попытка взлома RCON-пароля.");
		PlayBanList(dopper, reason333, 0);
		SetTimerEx("PlayBan", 300, 0, "i", dopper);
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
	NETafkPl[playerid][0] = 0;//обнулить контрольную переменную AFK

	if(ct9control[playerid] == 1)
	{
//------------------------ конвеер ---------------------------------------------
		ct9concord[0][0][playerid] = ct9concord[0][1][playerid];//база 0
		ct9concord[1][0][playerid] = ct9concord[1][1][playerid];
		ct9concord[2][0][playerid] = ct9concord[2][1][playerid];

		ct9concord[0][1][playerid] = ct9concord[0][2][playerid];//база 1
		ct9concord[1][1][playerid] = ct9concord[1][2][playerid];
		ct9concord[2][1][playerid] = ct9concord[2][2][playerid];

		ct9concord[0][2][playerid] = ct9concord[0][3][playerid];//база 2
		ct9concord[1][2][playerid] = ct9concord[1][3][playerid];
		ct9concord[2][2][playerid] = ct9concord[2][3][playerid];

		GetPlayerPos(playerid, ct9concord[0][3][playerid], ct9concord[1][3][playerid], ct9concord[2][3][playerid]);//база 3
//------------------------ разница 0-1 -----------------------------------------
		ct9dopcord[0][playerid] = ct9concord[0][1][playerid] - ct9concord[0][0][playerid];
		ct9dopcord[1][playerid] = ct9concord[1][1][playerid] - ct9concord[1][0][playerid];
		ct9dopcord[2][playerid] = ct9concord[2][1][playerid] - ct9concord[2][0][playerid];
//------------------------ дельта 0-1 ------------------------------------------
		ct9dltcord[0][playerid] = ct9dopcord[0][playerid] * ct9dopcord[0][playerid] +
		ct9dopcord[1][playerid] * ct9dopcord[1][playerid] + ct9dopcord[2][playerid] * ct9dopcord[2][playerid];
//------------------------ разница 0-3 -----------------------------------------
		ct9dopcord[0][playerid] = ct9concord[0][3][playerid] - ct9concord[0][0][playerid];
		ct9dopcord[1][playerid] = ct9concord[1][3][playerid] - ct9concord[1][0][playerid];
		ct9dopcord[2][playerid] = ct9concord[2][3][playerid] - ct9concord[2][0][playerid];
//------------------------ дельта 0-3 ------------------------------------------
		ct9dltcord[1][playerid] = ct9dopcord[0][playerid] * ct9dopcord[0][playerid] +
		ct9dopcord[1][playerid] * ct9dopcord[1][playerid] + ct9dopcord[2][playerid] * ct9dopcord[2][playerid];
//------------------------ условие чита ----------------------------------------
		if(ct9dltcord[0][playerid] > 110.0 && ct9dltcord[1][playerid] < 90.0)
		{
			ct9control[playerid] = 5;
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(GetPVarInt(playerid, "DlgCont") == -600)//если НЕ существующий ИД диалога, то:
	{
		return 1;//завершаем функцию
	}
	new string[256], strdln[5000];

//==============================================================================
//                              GarHouse
//==============================================================================
	new stringgh[384];
	if(dialogid == 500)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
		    switch(listitem)
			{
			    case 0:
			    {
					format(stringgh, sizeof(stringgh), HMENU_SELL_HOUSE, RealName[playerid], GetHouseName(h), ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
					ShowPlayerDialog(playerid, 503, DIALOG_STYLE_MSGBOX, "Продажа дома", stringgh, "Продать", "Отмена");
					SetPVarInt(playerid, "DlgCont", 503);
			    }
			    case 1:
				{
					#if defined GH_USE_WEAPONSTORAGE
						ShowPlayerDialog(playerid, 518, DIALOG_STYLE_LIST, "Хранение в доме", "Хранение денег\nХранение оружия", "OK", "Отмена");
						SetPVarInt(playerid, "DlgCont", 518);
					#endif
					#if !defined GH_USE_WEAPONSTORAGE
						ShowPlayerDialog(playerid, 510, DIALOG_STYLE_LIST, "Хранение денег", "Положить на хранение\nСнять с хранения\nПроверить сумму", "OK", "Отмена");
						SetPVarInt(playerid, "DlgCont", 510);
					#endif
				}
				case 2:
				{
					ShowPlayerDialog(playerid, 514, DIALOG_STYLE_INPUT, "Имя дома", "Введите новое имя дома", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 514);
				}
			    case 3:
				{
					new file[HOUSEFILE_LENGTH], parloc[128];
			    	format(file, sizeof(file), FILEPATH, h);
					format(parloc, sizeof(parloc), "%s", dini_Get(file, "HousePassword"));
					if(strcmp(parloc, "INVALID_HOUSE_PASSWORD", false) == 0)
					{
						ShowPlayerDialog(playerid, 513, DIALOG_STYLE_INPUT, "Пароль для дома", "{FFC4E4}У Вас нет пароля для дома!\n{A9C4E4}Введите новый пароль для дома ниже.\
						\nОставьте поле пустым, если хотите сохранить Ваш старый пароль.\nУдалить - чтобы удалить пароль.", "OK", "Удалить");
					}
					else
					{
						new parloc44[1024];
				    	format(parloc44, sizeof(parloc44), "{A9FFE4}У Вас уже есть пароль для дома \"%s\"!\n{A9C4E4}Введите новый пароль для дома ниже.\
						\nОставьте поле пустым, если хотите сохранить Ваш старый пароль.\nУдалить - чтобы удалить пароль.", parloc);
						ShowPlayerDialog(playerid, 513, DIALOG_STYLE_INPUT, "Пароль для дома", parloc44, "OK", "Удалить");
					}
					SetPVarInt(playerid, "DlgCont", 513);
				}
				case 4:
				{
					ShowPlayerDialog(playerid, 516, DIALOG_STYLE_LIST, "Интерьер", "Предварительный осмотр интерьера\nКупить интерьер", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 516);
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Sale
//------------------------------------------------------------------------------
	if(dialogid == 503)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], file2[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
			if(GetOwnedHouses(playerid) == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NO_HOUSES_OWNED);
			else
			{
			    new tmp = dini_Int(file, "HouseStorage");
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
				if(tmp >= 1)
				{
	   				ShowInfoBox(playerid, INFORMATION_HEADER, I_SELL_HOUSE1, ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT), (GetHouseValue(h) - ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT)), tmp);
					SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + tmp);
				}
				if(tmp == 0)
				{
				    ShowInfoBox(playerid, INFORMATION_HEADER, I_SELL_HOUSE2, GetHouseName(h), ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT), (GetHouseValue(h) - ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT)));
				}
				dini_IntSet(file, "HouseValue", ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
				dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
				dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
				dini_IntSet(file, "HouseStorage", 0);
				Loop(h2, MAX_HOUSES)
				{
					if(IsHouseInRangeOfHouse(h, h2, RANGE_BETWEEN_HOUSES) && h2 != h)
					{
				   		format(file2, sizeof(file2), FILEPATH, h2);
						dini_IntSet(file2, "HouseValue", (dini_Int(file2, "HouseValue") - ReturnProcent(GetHouseValue(h2), HOUSE_SELLING_PROCENT2)));
	                    UpdateHouseText(h2);
					}
				}
				new dvw, Float:dcX, Float:dcY, Float:dcZ;
				dcX = dini_Float(file, "CPOutX");
				dcY = dini_Float(file, "CPOutY");
				dcZ = dini_Float(file, "CPOutZ");
				dvw = dini_Int(file, "SpawnWorld");
				#if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
				UpdateHouseText(h);
				CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, dcX, dcY, dcZ);
	            #if defined GH_DEBUGGING
	  				printf(DEBUG_ODR13, RealName[playerid], playerid, GetHouseValue(h), tmp, h);
		    	#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Buying
//------------------------------------------------------------------------------
	if(dialogid == 504)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], file2[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new hname[MAX_PLAYER_NAME+9];
    		if(PlayerInfo[playerid][pDeport] == 1) { ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить дом,\nпока дело о Вашей депортации на слушании !", 0); return 1; }
			if(GetOwnedHouses(playerid) >= MAX_HOUSES_OWNED) { ShowInfoBox(playerid, INFORMATION_HEADER, "У Вас уже есть %d дома.\nПродайте один из старых домов и купите этот дом.", MAX_HOUSES_OWNED); return 1; }
//			if(GetOwnedHouses(playerid) >= MAX_HOUSES_OWNED) { ShowInfoBox(playerid, INFORMATION_HEADER, "У вас уже есть %d дом %s. Продайте старый дом и купите этот дом", MAX_HOUSES_OWNED, AddS(MAX_HOUSES_OWNED)); return 1; }
			if(strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_H_ALREADY_OWNED);
			if(GetHouseValue(h) > GetPVarInt(playerid, "PlMon")) { ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить этот дом\nСтоимость дома: $%d.\nУ Вас есть: $%d.\nВам не хватает: $%d.", GetHouseValue(h), GetPVarInt(playerid, "PlMon"), (GetHouseValue(h) - GetPVarInt(playerid, "PlMon"))); return 1; }
//			if(GetHouseValue(h) > GetPVarInt(playerid, "PlMon")) { ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить дом\nДом продается: $%d.\nУ вас: $%d.\nСтоимость дома: $%d.", GetHouseValue(h), GetPVarInt(playerid, "PlMon"), (GetHouseValue(h) - GetPVarInt(playerid, "PlMon"))); return 1; }

			else
			{
			    format(hname, sizeof(hname), "%s's House", RealName[playerid]);
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - GetHouseValue(h));
				dini_Set(file, "HouseOwner", RealName[playerid]);
				dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				dini_Set(file, "HouseName", hname);
				dini_IntSet(file, "HouseStorage", 0);
				ShowInfoBox(playerid, INFORMATION_HEADER, I_BUY_HOUSE, GetHouseValue(h));
				Loop(h2, MAX_HOUSES)
				{
					if(IsHouseInRangeOfHouse(h, h2, RANGE_BETWEEN_HOUSES) && h2 != h)
					{
					    format(file2, sizeof(file2), FILEPATH, h2);
						dini_IntSet(file2, "HouseValue", (dini_Int(file2, "HouseValue") + ReturnProcent(GetHouseValue(h2), HOUSE_SELLING_PROCENT2)));
                        UpdateHouseText(h2);
					}
				}
				new dvw, Float:dcX, Float:dcY, Float:dcZ;
				dcX = dini_Float(file, "CPOutX");
				dcY = dini_Float(file, "CPOutY");
				dcZ = dini_Float(file, "CPOutZ");
				dvw = dini_Int(file, "SpawnWorld");
				#if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 32, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
				UpdateHouseText(h);
				CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, RealName[playerid], dvw, dcX, dcY, dcZ);
                #if defined GH_DEBUGGING
  					printf(DEBUG_ODR1, RealName[playerid], playerid, h, GetHouseValue(h));
	    		#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Password
//------------------------------------------------------------------------------
	if(dialogid == 513)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    	format(file, sizeof(file), FILEPATH, h);
		new parloc[128];
		format(parloc, sizeof(parloc), "%s", dini_Get(file, "HousePassword"));
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Ваш пароль содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			if(strlen(inputtext) > MAX_HOUSE_PASSWORD || (strlen(inputtext) < MIN_HOUSE_PASSWORD && strlen(inputtext) >= 1)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HPASS_LENGTH);
			if(strcmp(inputtext, "INVALID_HOUSE_PASSWORD", CASE_SENSETIVE) == 0 && strlen(inputtext) >= 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HPASS);
			else
			{
			    if(strlen(inputtext) >= 1)
			    {
					if(strcmp(parloc, "INVALID_HOUSE_PASSWORD", false) == 0)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, I_HPASSWORD_CHANGED, inputtext);
	                    #if defined GH_DEBUGGING
	  						printf("[GarHouse] %s [%d] создал пароль для дома ID %d (%s) .", RealName[playerid], playerid, h, inputtext);
		    			#endif
					}
					else
					{
						if(strcmp(inputtext, parloc, false) == 0)
						{
							SendClientMessage(playerid, COLOUR_INFO, I_HPASS_NO_CHANGE);
							return 1;
						}
						else
						{
							ShowInfoBox(playerid, INFORMATION_HEADER, "Вы успешно изменили пароль для дома на \"%s\"!", inputtext);
		                    #if defined GH_DEBUGGING
		  						printf(DEBUG_ODR14, RealName[playerid], playerid, h, inputtext, parloc);
			    			#endif
						}
					}
					dini_Set(file, "HousePassword", inputtext);//пароль без хэш-шифрования
//					dini_IntSet(file, "HousePassword", udb_hash(inputtext));
				}
				else
				{
					SendClientMessage(playerid, COLOUR_INFO, I_HPASS_NO_CHANGE);
					return 1;
				}
			}
		}
		if(!response)
		{
			if(strcmp(parloc, "INVALID_HOUSE_PASSWORD", false) != 0)
			{
			    dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				SendClientMessage(playerid, COLOUR_INFO, I_HPASS_REMOVED);
				#if defined GH_DEBUGGING
					printf("[GarHouse] %s [%d] удалил пароль дома ID %d .", RealName[playerid], playerid, h);
				#endif
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Name
//------------------------------------------------------------------------------
	if(dialogid == 514)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
			new parloc[128];
			format(parloc, sizeof(parloc), "%s", dini_Get(file, "HouseName"));
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Ваше имя дома содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			if(strlen(inputtext) < MIN_HOUSE_NAME || strlen(inputtext) > MAX_HOUSE_NAME) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HNAME_LENGTH);
			else
			{
				if(strcmp(inputtext, parloc, false) == 0)
				{
					SendClientMessage(playerid, COLOUR_INFO, "Имя дома осталось без изменений.");
					return 1;
				}
				else
				{
					dini_Set(file, "HouseName", inputtext);
					SendMSG(playerid, COLOUR_INFO, 128, I_HNAME_CHANGED, inputtext);
	                UpdateHouseText(h);
	                #if defined GH_DEBUGGING
						printf(DEBUG_ODR2, RealName[playerid], playerid, h, inputtext);
	  				#endif
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                       House Interior Upgrade
//------------------------------------------------------------------------------
	if(dialogid == 515)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    SetPVarInt(playerid, "OldHouseInt", dini_Int(file, "HouseInterior"));
			switch(listitem)
			{
			    case 0:
				{
	 		    	SetPVarInt(playerid, "HousePrevInt", 1);
					SetPVarInt(playerid, "HousePrevValue", H_INT_1_VALUE);
					SetPVarString(playerid, "HousePrevName", "Shitty Shack");
				}
				case 1:
				{
				    SetPVarInt(playerid, "HousePrevInt", 2);
					SetPVarInt(playerid, "HousePrevValue", H_INT_2_VALUE);
					SetPVarString(playerid, "HousePrevName", "Motel Room");
				}
				case 2:
				{
	 		    	SetPVarInt(playerid, "HousePrevInt", 3);
					SetPVarInt(playerid, "HousePrevValue", H_INT_3_VALUE);
					SetPVarString(playerid, "HousePrevName", "Hotel Room 1");
				}
				case 3:
				{
				    SetPVarInt(playerid, "HousePrevInt", 4);
					SetPVarInt(playerid, "HousePrevValue", H_INT_4_VALUE);
					SetPVarString(playerid, "HousePrevName", "Hotel Room 2");
				}
				case 4:
				{
				    SetPVarInt(playerid, "HousePrevInt", 5);
					SetPVarInt(playerid, "HousePrevValue", H_INT_5_VALUE);
					SetPVarString(playerid, "HousePrevName", "Gang House");
				}
				case 5:
				{
				    SetPVarInt(playerid, "HousePrevInt", 6);
					SetPVarInt(playerid, "HousePrevValue", H_INT_6_VALUE);
					SetPVarString(playerid, "HousePrevName", "Normal House");
				}
				case 6:
				{
				    SetPVarInt(playerid, "HousePrevInt", 0);
					SetPVarInt(playerid, "HousePrevValue", H_INT_0_VALUE);
					SetPVarString(playerid, "HousePrevName", "Default House");
				}
				case 7:
				{
				    SetPVarInt(playerid, "HousePrevInt", 7);
					SetPVarInt(playerid, "HousePrevValue", H_INT_7_VALUE);
					SetPVarString(playerid, "HousePrevName", "Medium Mansion");
				}
				case 8:
				{
				    SetPVarInt(playerid, "HousePrevInt", 8);
					SetPVarInt(playerid, "HousePrevValue", H_INT_8_VALUE);
					SetPVarString(playerid, "HousePrevName", "Rich Mansion");
				}
				case 9:
				{
				    SetPVarInt(playerid, "HousePrevInt", 9);
					SetPVarInt(playerid, "HousePrevValue", H_INT_9_VALUE);
					SetPVarString(playerid, "HousePrevName", "Huge Mansion");
				}
				case 10:
				{
				    SetPVarInt(playerid, "HousePrevInt", 10);
					SetPVarInt(playerid, "HousePrevValue", H_INT_10_VALUE);
					SetPVarString(playerid, "HousePrevName", "Madd Dogg's Mansion");
				}
			}
			if(dini_Int(file, "HouseInterior") == GetPVarInt(playerid, "HousePrevInt")) return SendClientMessage(playerid, COLOUR_SYSTEM, E_ALREADY_HAVE_HINTERIOR);
			else
			{
			    GetPVarString(playerid, "HousePrevName", stringgh, 50);
//------------------------------------------------------------------------------
			    switch(GetPVarInt(playerid, "HouseIntUpgradeMod"))
			    {
					case 1:
					{
//				    	if(GetSecondsBetweenAction(GetPVarInt(playerid, "HousePrevTime")) < (TIME_BETWEEN_VISITS * 1000) && GetPVarInt(playerid, "HousePrevTime") != 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_HINT_WAIT_BEFORE_VISITING);
//				    	else
//				    	{

							SetPVarInt(playerid, "HousePrevTime", 1);//включаем блокировку меню дома
					        SetPVarInt(playerid, "IsHouseVisiting", 1);
							SetPVarInt(playerid, "HousePreview", 1);
							SetPVarInt(playerid, "ChangeHouseInt", 1);
//							SetPVarInt(playerid, "HousePrevTime", GetTickCount());
							SetPVarInt(playerid, "HousePrevTimer", SetTimerEx("HouseVisiting", (MAX_VISIT_TIME * 1000), false, "i", playerid));
							ShowInfoBox(playerid, INFORMATION_HEADER, I_VISITING_HOUSEINT, stringgh, GetPVarInt(playerid, "HousePrevValue"), MAX_VISIT_TIME, AddS(MAX_VISIT_TIME));
		                    #if defined GH_DEBUGGING
								printf(DEBUG_ODR4, RealName[playerid], playerid, stringgh, h);
		  					#endif
//  					}
					}
					case 2:
					{
    					if(PlayerInfo[playerid][pDeport] == 1)
						{
							ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить интерьер,\nпока дело о Вашей депортации на слушании !", 0);
						}
						else
						{
							if(GetPVarInt(playerid, "HousePrevValue") > GetPVarInt(playerid, "PlMon"))
							{
		                        ShowInfoBox(playerid, INFORMATION_HEADER, E_CANT_AFFORD_HINT, stringgh, GetPVarInt(playerid, "HousePrevValue"), GetPVarInt(playerid, "PlMon"), (GetPVarInt(playerid, "HousePrevValue") - GetPVarInt(playerid, "PlMon")));
							}
							if(GetPVarInt(playerid, "HousePrevValue") <= GetPVarInt(playerid, "PlMon"))
							{
								new para1;
								para1 = GetPVarInt(playerid, "PlMon");
							    SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - GetPVarInt(playerid, "HousePrevValue"));
							    SetPVarInt(playerid, "ChangeHouseInt", 1);
							    dini_IntSet(file, "HouseInteriorValue", GetPVarInt(playerid, "HousePrevValue"));
								ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_BOUGHT, stringgh, GetPVarInt(playerid, "HousePrevValue"));
		                        #if defined GH_DEBUGGING
									printf(DEBUG_ODR3, RealName[playerid], playerid, stringgh, GetPVarInt(playerid, "HousePrevValue"), h);
		  						#endif
								printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
							}
						}
					}
				}
//------------------------------------------------------------------------------
				if(GetPVarInt(playerid, "ChangeHouseInt") == 1)
			    {
					if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
					{
						new locdata[128];
            			GetPVarString(playerid, "HousePrevName", locdata, 128);
						dini_IntSet(file, "HouseInterior", GetPVarInt(playerid, "HousePrevInt"));
				    	dini_IntSet(file, "HouseInteriorValue", GetPVarInt(playerid, "HousePrevValue"));
		            	dini_Set(file, "HouseInteriorName", locdata);
					}
				    SetPVarInt(playerid, "ChangeHouseInt", 0);
				    DestroyHouseEntrance(h, TYPE_INT);
					if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 1)
					{
						CreateCorrectHouseExitCP22(playerid, h);
						Loop(i, MAX_PLAYERS)
				  		{
				  		    if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
				  		    {
				  				SetPlayerHouseInterior22(i, h);
				  			}
				  		}
					}
					if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
					{
						CreateCorrectHouseExitCP(h);
						Loop(i, MAX_PLAYERS)
				  		{
				  		    if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
				  		    {
				  				SetPlayerHouseInterior(i, h);
				  			}
				  		}
					}
			  		#if defined GH_DEBUGGING
						if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
						{
							printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));
						}
					#endif
		  		}
				if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
				{
					SetPVarInt(playerid, "HouseIntUpgradeMod", 0);
				}
//------------------------------------------------------------------------------
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                       House Interior Mode Selecting
//------------------------------------------------------------------------------
    #if defined GH_HINTERIOR_UPGRADE
	if(dialogid == 516)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid, "HouseIntUpgradeMod", 1);
		        case 1: SetPVarInt(playerid, "HouseIntUpgradeMod", 2);
		    }
		    format(stringgh, sizeof(stringgh),
			"Shitty Shack Interior\t\t%s\nMotel Room Interior\t\t%s\nHotel Room Interior 1\t\t%s\nHotel Room Interior 2\t\t%s\nGang House Interior\t\t%s\nNormal House Interior\t\t%s\nDefault House Interior\t\t%s\nMedium Mansion Interior\t%s\nRich Mansion Interior\t\t%s\nHuge Mansion Interior\t\t%s\nMadd Dogg's Mansion\t\t%s",
			FM(H_INT_1_VALUE), FM(H_INT_2_VALUE), FM(H_INT_3_VALUE), FM(H_INT_4_VALUE), FM(H_INT_5_VALUE), FM(H_INT_6_VALUE), FM(H_INT_0_VALUE), FM(H_INT_7_VALUE), FM(H_INT_8_VALUE), FM(H_INT_9_VALUE), FM(H_INT_10_VALUE));
			ShowPlayerDialog(playerid, 515, DIALOG_STYLE_LIST, "Интерьер", stringgh, "Купить", "Отмена");
			SetPVarInt(playerid, "DlgCont", 515);
		}
		return 1;
	}
	#endif
//------------------------------------------------------------------------------
//                       House Interior Upgrade
//------------------------------------------------------------------------------
    #if defined GH_HINTERIOR_UPGRADE
	if(dialogid == 517)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    	format(file, sizeof(file), FILEPATH, h);
	    SetPVarInt(playerid, "HousePreview", 0);
	    KillTimer(GetPVarInt(playerid, "HousePrevTimer"));
	    SetPVarInt(playerid, "IsHouseVisiting", 0);
	    if(response)
	    {
            GetPVarString(playerid, "HousePrevName", stringgh, 50);
			if(PlayerInfo[playerid][pDeport] == 1)
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить интерьер,\nпока дело о Вашей депортации на слушании !", 0);
			}
			else
			{
	            if(GetPVarInt(playerid, "PlMon") < GetPVarInt(playerid, "HousePrevValue"))
	            {
	             	ShowInfoBox(playerid, INFORMATION_HEADER, E_CANT_AFFORD_HINT, stringgh, GetPVarInt(playerid, "HousePrevValue"), GetPVarInt(playerid, "PlMon"), (GetPVarInt(playerid, "HousePrevValue") - GetPVarInt(playerid, "PlMon")));
	            }
				else
				{
					new para1;
					para1 = GetPVarInt(playerid, "PlMon");
	            	SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - GetPVarInt(playerid, "HousePrevValue"));
	            	dini_Set(file, "HouseInteriorName", stringgh);
			    	dini_IntSet(file, "HouseInterior", GetPVarInt(playerid, "HousePrevInt"));
			    	dini_IntSet(file, "HouseInteriorValue", GetPVarInt(playerid, "HousePrevValue"));
	            	ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_BOUGHT, stringgh, GetPVarInt(playerid, "HousePrevValue"));
	                #if defined GH_DEBUGGING
						printf(DEBUG_ODR3, RealName[playerid], playerid, stringgh, GetPVarInt(playerid, "HousePrevValue"), h);

						printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));

					#endif
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
				}
			}
	    }
//------------------------------------------------------------------------------
  		DestroyHouseEntrance(h, TYPE_INT);
		CreateCorrectHouseExitCP(h);
		Loop(i, MAX_PLAYERS)
		{
  			if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
  			{
				SetPlayerHouseInterior(i, h);
			}
		}
//		#if defined GH_DEBUGGING
//			printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));
//		#endif
		if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 1)
		{
			SetPVarInt(playerid, "HouseIntUpgradeMod", 0);
		}
//------------------------------------------------------------------------------
		return 1;
	}
	#endif
//------------------------------------------------------------------------------
//                               Money Storage
//------------------------------------------------------------------------------
	if(dialogid == 510)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new tmp = dini_Int(file, "HouseStorage");
	    	if(listitem == 0) // Deposit
		   	{
	     		format(stringgh, sizeof(stringgh), I_HINT_DEPOSIT1, tmp);
	  			ShowPlayerDialog(playerid, 511, DIALOG_STYLE_INPUT, "Хранение денег: положить на хранение", stringgh, "Положить", "Отмена");
				SetPVarInt(playerid, "DlgCont", 511);
		    }
		    if(listitem == 1) // Withdraw
		    {
	     		format(stringgh, sizeof(stringgh), I_HINT_WITHDRAW1, tmp);
	       		ShowPlayerDialog(playerid, 512, DIALOG_STYLE_INPUT, "Хранение денег: снять с хранения", stringgh, "Снять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 512);
	    	}
		    if(listitem == 2) // Check Balance
		    {
	     		ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_CHECKBALANCE, tmp);
	            #if defined GH_DEBUGGING
					printf(DEBUG_ODR6, RealName[playerid], playerid, h, tmp);
				#endif
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 511)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Сумма содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			if(PlayerInfo[playerid][pDeport] == 1)
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете положить деньги на хранение,\nпока дело о Вашей депортации на слушании !", 0);
				return 1;
			}
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new amount = floatround(strval(inputtext));
//	  		format(file, sizeof(file), FILEPATH, h);
			if(amount > GetPVarInt(playerid, "PlMon")) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_ENOUGH_PMONEY);
			if(amount < 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_AMOUNT);
			if((dini_Int(file, "HouseStorage") + amount) > 25000000) return SendClientMessage(playerid, COLOUR_SYSTEM, E_HSTORAGE_L_REACHED);
			else
			{
				dini_IntSet(file, "HouseStorage", (dini_Int(file, "HouseStorage") + amount));
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - amount);
				ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_DEPOSIT2, amount, dini_Int(file, "HouseStorage"));
	            #if defined GH_DEBUGGING
					printf(DEBUG_ODR7, RealName[playerid], playerid, amount, h);
				#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 512)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Сумма содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new amount = floatround(strval(inputtext));
//	  		format(file, sizeof(file), FILEPATH, h);
			if(amount > dini_Int(file, "HouseStorage")) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_ENOUGH_HSMONEY);
			if(amount < 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_AMOUNT);
			else
			{
				dini_IntSet(file, "HouseStorage", (dini_Int(file, "HouseStorage") - amount));
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + amount);
				ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_WITHDRAW2, amount, dini_Int(file, "HouseStorage"));
	            #if defined GH_DEBUGGING
					printf(DEBUG_ODR8, RealName[playerid], playerid, amount, h);
				#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                          House Storage
//------------------------------------------------------------------------------
	if(dialogid == 518)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			switch(listitem)
			{
			    case 0:
				{
					ShowPlayerDialog(playerid, 510, DIALOG_STYLE_LIST, "Хранение денег", "Положить на хранение\nСнять с хранения\nПроверить сумму", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 510);
				}
			    case 1:
				{
					ShowPlayerDialog(playerid, 519, DIALOG_STYLE_LIST, "Хренение оружия", "Положить на хранение\nСнять с хранения", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 519);
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                          Weapon Storage
//------------------------------------------------------------------------------
	if(dialogid == 519)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
		    new WeaponData[13][2], tmp[9], tmp2[13], tmpcount;
			switch(listitem)
			{
			    case 0: // Store weapons
			    {
					new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    				format(file, sizeof(file), FILEPATH, h);
					Loop(weap, 13)
					{
					    format(tmp, sizeof(tmp), "Weapon%d", weap);
	  					format(tmp2, sizeof(tmp2), "Weapon%dAmmo", weap);
					    if(weap == 0) continue;
					    #if !defined GH_SAVE_ADMINWEPS
					    if(weap == 7 || weap == 8 || weap == 9 || weap == 12) continue;
					    #endif
					    GetPlayerWeaponData(playerid, weap, WeaponData[weap][0], WeaponData[weap][1]);
					    if(WeaponData[weap][1] == 0 || (weap == 11 && WeaponData[weap][0] != 46)) continue;
						dini_IntSet(file, tmp, WeaponData[weap][0]);
						dini_IntSet(file, tmp2, WeaponData[weap][1]);
						GivePlayerWeapon(playerid, WeaponData[weap][0], -WeaponData[weap][1]);
						tmpcount++;
					}
					if(tmpcount >= 1)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, I_HS_WEAPONS1, tmpcount, AddS(tmpcount));
					}
					if(tmpcount == 0)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, E_NO_WEAPONS, tmpcount);
					}
		            #if defined GH_DEBUGGING

						printf(DEBUG_ODR10, RealName[playerid], playerid, tmpcount, h);

//						printf(DEBUG_ODR10, RealName[playerid], playerid, tmpcount, AddS(tmpcount), h);
					#endif
				}
				case 1: // Recieve Weapons
				{
					new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    				format(file, sizeof(file), FILEPATH, h);
					Loop(weap, 13)
					{
					    format(tmp, sizeof(tmp), "Weapon%d", weap);
	  					format(tmp2, sizeof(tmp2), "Weapon%dAmmo", weap);
	  					if(dini_Int(file, tmp2) == 0) continue;
					    if(weap == 0) continue;
					    #if !defined GH_SAVE_ADMINWEPS
					    if(weap == 7 || weap == 8 || weap == 9 || weap == 11 || weap == 12) continue;
					    #endif
						GivePlayerWeapon(playerid, dini_Int(file, tmp), dini_Int(file, tmp2));
						dini_IntSet(file, tmp, 0);
						dini_IntSet(file, tmp2, 0);
						tmpcount++;
					}
					if(tmpcount >= 1)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, I_HS_WEAPONS2, tmpcount, AddS(tmpcount));
					}
					if(tmpcount == 0)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, E_NO_HS_WEAPONS, tmpcount); // I had to add tmpcount or it gave an error ^_^
					}
					#if defined GH_DEBUGGING

						printf(DEBUG_ODR11, RealName[playerid], playerid, tmpcount, h);

//						printf(DEBUG_ODR11, RealName[playerid], playerid, tmpcount, AddS(tmpcount), h);
					#endif
				}
			}
		}
		return 1;
	}
//==============================================================================
// пустой диалог
//==============================================================================
	if(dialogid == 520)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		return 1;
	}
//------------------------------------------------------------------------------
//                          Enter House Using Password
//------------------------------------------------------------------------------
	if(dialogid == 521)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога

		lockpas[playerid] = 0;//разблокировать диалог ввода пароля

		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
			format(file, sizeof(file), FILEPATH, h);
		    format(file, sizeof(file), FILEPATH, h);
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Пароль содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
		    if(strlen(inputtext) < MIN_HOUSE_PASSWORD || strlen(inputtext) > MAX_HOUSE_PASSWORD) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HPASS_LENGTH);
			if(strcmp(dini_Get(file, "HousePassword"), inputtext, false) != 0)//пароль без хэш-шифрования
//			if(udb_hash(inputtext) != dini_Int(file, "HousePassword"))
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, I_WRONG_HPASS1, GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), inputtext);
				if(IsPlayerConnected(GetHouseOwnerEx(GetPVarInt(playerid, "LastHouseCP"))))
				{
					SendMSG(GetHouseOwnerEx(h), COLOUR_INFO, 128, I_WRONG_HPASS2, RealName[playerid], playerid, inputtext);
    			}
			}
			else
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, I_CORRECT_HPASS1, GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), inputtext);
				SetPVarInt(playerid, "IsInHouse", 1);
				SetPlayerHouseInterior(playerid, GetPVarInt(playerid, "LastHouseCP"));
				if(IsPlayerConnected(GetHouseOwnerEx(GetPVarInt(playerid, "LastHouseCP"))))
				{
					SendMSG(GetHouseOwnerEx(h), COLOUR_INFO, 128, I_CORRECT_HPASS2, RealName[playerid], playerid, inputtext);
				}
				#if defined GH_DEBUGGING
					printf(DEBUG_ODR12, RealName[playerid], playerid, h);
				#endif
			}
		}
		return 1;
	}
//==============================================================================
//                              End GarHouse
//==============================================================================

    if(dialogid == 0)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 		if(!response)
		{
			format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - отказ от регистрации !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_YELLOW, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
		}
		else
		{
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на {00FF00}Russian-Drift {A9C4E4}сервер.\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на {00FF00}Russian-Drift {A9C4E4}сервер.\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				return 1;
			}
		    if (gPlayerAccount[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже зарегистрирован !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
			if(fexist(string))
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже зарегистрирован !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) != 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк не равно нулю (такой аккаунт есть в БД), то:
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже зарегистрирован !");
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				return 1;
			}
#endif
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, strlen(inputtext), 64);
			OnPlayerRegister(playerid,PlayerInfo[playerid][pKey]);
		}
		return 1;
	}
	if(dialogid == 1)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(!response)
		{
			format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_YELLOW, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
		}
		else
		{
#if (MOD33INS == 0)
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на {00FF00}Russian-Drift {A9C4E4}сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на {00FF00}Russian-Drift {A9C4E4}сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				return 1;
			}
#endif
#if (MOD33INS == 1)
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Вход в аккаунт","Добро пожаловать на {00FF00}Russian-Drift {A9C4E4}сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Вход в аккаунт","Добро пожаловать на {00FF00}Russian-Drift {A9C4E4}сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				return 1;
			}
#endif
		    if (gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже залогинился !");
				return 1;
			}
			new tmppass[64];
			strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if(dialogid == 2)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		return 1;
	}
	if(dialogid == 3)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(!response)
		{
			format(string,sizeof(string),"Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_YELLOW, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
		}
		else
		{
#if (MOD33INS == 0)
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
				return 1;
			}
#endif
#if (MOD33INS == 1)
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_PASSWORD,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
				return 1;
			}
#endif
		    if (gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже залогинился !");
				return 1;
			}
			new tmppass[64];
			strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if(dialogid == 4)//главное игровое меню
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
				\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
				SetPVarInt(playerid, "DlgCont", 10);
				return 1;
			}
			if(listitem == 1)
			{
				format(strdln, sizeof(strdln), "{FFFF00}Большое Ухо\n{FFFF00}Грув\n{FFFF00}Холм San Fierro\
				\n{FFFF00}Аэропорт Лос Сантоса\n{FFFF00}Гора Вайнвуд\n{FFFF00}Островок раздолья\n{FFFF00}Форт Карсон\
				\n{FFFF00}Парковка\n{FFFF00}Пирс в Аэропорту SF\n{FFFF00}Взлётная полоса Аэропорта SF\n{FFFF00}Спринт");
				format(strdln, sizeof(strdln), "%s\n{FFFF00}Сумо\n{FFFF00}Заброшенный Аэропорт\n{FFFF00}Гора Чиллиад\
				\n{FFFF00}Дрифт трасса\n{FFFF00}Аквапарк\n{FFFF00}Драг LS\n{FFFF00}Дрифт трасса 2\n{FFFF00}Взлётная полоса Аэропорта LV\
				\n{FFFF00}Дрифт SF\n{FFFF00}Дрифт трасса 3\n{FFFF00}Дрифт островок\n{FFFF00}Клуб Джиззи", strdln);
				format(strdln, sizeof(strdln), "%s\n{FFFF00}VIP-Остров 1\n{FFFF00}VIP-Остров 2\n{FFFF00}Дрифт LV\n{FFFF00}Зимний остров\
				\n{FFFF00}Склад Симметрия\n{FFFF00}Парковка LV\n{FFFF00}Автосалон SF\n{FFFF00}Пещера\n{FFFF00}Дрифт SF 2\
				\n{FFFF00}Дрифт трасса 4\n{FFFF00}Драг\n{FFFF00}Stunt LS\n{FFFF00}DM остров\n{FFFF00}Трасса 1", strdln);
				format(strdln, sizeof(strdln), "%s\n{FFFF00}Трасса 2\n{FFFF00}Трасса 3\n{FFFF00}Трасса 4\n{FFFF00}Трасса 5\
				\n{FFFF00}Дерби 1\n{FFFF00}Дерби 2\n{FFFF00}Дрифт-спираль\n{FFFF00}Дрифт-восьмёрка\n{FFFF00}Драг 2\
				\n{FFFF00}Дрифт островок 2\n{FFFF00}Дрифт трасса 5\n{FFFF00}Парковка LV 2\n{FFFF00}Дрифт трасса 6", strdln);
#if (MOD11INS <= 3)
				format(strdln, sizeof(strdln), "%s\n{FFFF00}Дрифт трасса 7\n{FFFF00}Дрифт трасса 8\n{FFFF00}Дрифт трасса 9\
				\n{FFFF00}Дрифт трасса 10\n{FFFF00}Дрифт трасса 11\n{FFFF00}Дрифт трасса 12\n{FFFF00}Дрифт трасса 13\
				\n{FFFF00}Дрифт трасса 14\n{FFFF00}Мото-паркур 1\n{FFFF00}Мото-паркур 2\n{FFFF00}Мото-паркур 3\
				\n{FFFF00}Мото-паркур 4", strdln);
#endif
#if (MOD11INS == 4)
				format(strdln, sizeof(strdln), "%s\n{FFFF00}Дрифт трасса 7\n{FFFF00}Дрифт трасса 8\n{FFFF00}Дрифт трасса 9\
				\n{FFFF00}Дрифт трасса 10\n{FFFF00}Дрифт трасса 11\n{FFFF00}Дрифт трасса 12\n{FFFF00}Дрифт трасса 13\
				\n{FFFF00}Дрифт трасса 14\n{FFFF00}Мото-паркур 1\n{FFFF00}Мото-паркур 2\n{FFFF00}Мото-паркур 3\
				\n{FFFF00}Мото-паркур 4\n{FFFF00}Стант-остров", strdln);
#endif
				ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "{FFFF00}Russian_Drift: {FFFFFF}Телепорты", strdln,
				".::|ТП|::.", ".::|Назад|::.");
				SetPVarInt(playerid, "DlgCont", 45);
				return 1;
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 43, DIALOG_STYLE_LIST, "Анимации", "Поднять руки\nСесть-1\nСесть-2\nЛечь\nРазговаривать\
				\nРукопожатие\nПоцелуй\nЗвонить по телефону\nУбрать телефон\nТанец-1\nТанец-2\nТанец-3\nТанец-4\nСпрайт\
				\nСигарета\nПиво\nВино\nНабухаться\nСправить малую нужду\nОстановить анимацию   / для малой нужды 'F' /\
				\nУбрать степень опьянения", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 43);
				return 1;
			}
			if(listitem == 3)
			{
				new dopper;
				dopper = GetPlayerVirtualWorld(playerid);
				if(dopper > 16999 && dopper < 18000)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В DM-зонах НЕТ возможности выбора транспорта !");

					//Gangs system
					ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
					SetPVarInt(playerid, "DlgCont", 4);

					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] <= 4 && GetPlayerInterior(playerid) == 3)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Чтобы выбрать транспорт в данном интерьере,");
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть админом 5 лвл или выше !");

					//Gangs system
					ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
					SetPVarInt(playerid, "DlgCont", 4);

					return 1;
				}
				ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Транспорт", "{00FF00}Elegy\nSultan\nInfernus\nBanshee\nBuffalo\
				\nCheetah\nTurismo\nUranus\nBullet\nJester\nPhoenix\nSuper GT\nFlash\nZR-350\nHuntley\nStretch\nBus\nMonster\
				\nPolice Los Santos\nTaxi\nNRG-500\nSanchez\nKart\nBMX\nMountain Bike\nMaverick\nShamal\nBeagle\nJetmax", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 11);
				return 1;
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Управление Персонажем", "Пополнить броню\
				\nПополнить жизнь\nСменить скин\n{00FF00}Сменить стиль боя\nНовогодняя шапка\nУбрать новогоднюю шапку\
				\n{E03515}Самоубийство\nПросмотреть собственную статистику", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 13);
				return 1;
			}
			if(listitem == 5)
			{
				if(DerbyID[playerid] == 2)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В зоне дерби оружие запрещено !");

					//Gangs system
					ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
					SetPVarInt(playerid, "DlgCont", 4);

    				return 1;
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "ДеадМатчи", "DM зона 1\nDM зона 2\nDM зона 3\nDM зона 4\
				\nDM зона 5\nDM зона 6\nDM зона 7\nDM зона 8\nDM зона 9\nDM зона 10\nDM мир 1\nDM мир 2\nDM мир 3\nDM мир 4\
				\nDM мир 5\nВыйти из DM мира", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 14);
				return 1;
			}
			if(listitem == 7)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Обязательно прочтите {60FF00}правила игры {FFFFFF}на сервере: {60FF00}/rules");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Для справки по командам сервера - введите {60ff00}/help");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Чтобы поприветствовать всех игроков, введите: {2F60FF}/hh");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Чтобы попрощаться со всеми игроками, введите: {2F60FF}/bb");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Для входа в меню нажмите {FFF82F}Alt {FFFFFF}или {FFF82F}2 {FFE400}(вы должны быть в автомобиле)");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}или введите {60ff00}/menu");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Если Вы увидели читера, сообщите админам в {FF0000}/report");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Для телепортов на дрифт зоны используйте команды: {2F60FF}/drift1 - /drift9");
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FFFFFF}Для справки по админ-командам сервера - введите {60ff00}/ahelp");
				return 1;
			}
			if(listitem == 8)
			{
				format(strdln, sizeof(strdln), "{027FFE}Выключить радио\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
				NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
				NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
				ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "{FFFF00}Радио", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 15);
				return 1;
			}
			if(listitem == 9)
			{
				ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Настройки", "Сменить цвет ника\nСменить время\
				\n{FFFF00}Сменить пароль", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 12);
				return 1;
			}
			if(listitem == 10)
			{
				ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Управление транспортом","{10FF00}Неон\n{30FF00}Сменить номер\
				\n{50FF00}Флипнуть\n{70FF00}Удалить авто\n{90FF00}Открыть багажник\n{B0FF00}Закрыть багажник\
				\n{D0FF00}Открыть капот\n{F0FF00}Закрыть капот\n{FFF000}Включить свет\n{FFD000}Выключить свет\
				\n{FFB000}Замкнуть двери\n{FF9000}Открыть двери\n{FF7000}Включить сигнализацию\
				\n{FF5000}Выключить сигнализацию\n{FF3000}Завести двигатель\n{FF1000}Заглушить двигатель","Выбрать","Отмена");
				SetPVarInt(playerid, "DlgCont", 39);
				return 1;
			}

			if(listitem == 11)//Gangs system
			{
				ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
				\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
				\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1001);
			}

		}
		return 1;
	}
    if(dialogid == 5)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(listitem == 0)//тп к нему
			{
			    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pPolice] == 2)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playerid == player[playerid])
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","Попытка ТП к самому себе !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[player[playerid]][pAdmin] >= 1 && PlayerInfo[player[playerid]][pAdmshad] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете ТП к админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заняты наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] >= 1 && admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"{FF0000}Информация.","{FF0000}Игрок, к кому Вы сейчас ТП - занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    new dopper1, dopper2, dopper3, dopper4;
				dopper1 = 0;
				dopper2 = 0;
				dopper3 = 0;
				dopper4 = 0;
			    new Float:ConX, Float:ConY, Float:ConZ;
   				GetPlayerPos(playerid, ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper3 = 1; }

   				GetPlayerPos(player[playerid], ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper2 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(player[playerid]) == 15 || GetPlayerInterior(player[playerid]) == 14)) { dopper4 = 1; }

				if(dopper1 == 0 && dopper2 == 1)//если игрок телепортируется c основной карты на админ-остров, то:
				{
			    	if(PlayerInfo[playerid][pAdmin] == 0 && GetPVarInt(playerid, "TotPr") == 0)
					{
						ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок в зоне недосягаемости !","OK","");
						SetPVarInt(playerid, "DlgCont", 2);
						return 1;
					}
					SpectateStop(playerid);//отключение наблюдения (если за игроком наблюдает полицейский)
			    	new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[playerid] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(playerid,PosX,PosY,PosZ);
						SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
					}
			    	if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string,256," *** Админ %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
			    	if(PlayerInfo[playerid][pAdmin] == 0 && GetPVarInt(playerid, "TotPr") == 1)
					{
						format(string,256," Полицейский %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					new plvw22, plvw33;
					plvw22 = GetPlayerVirtualWorld(playerid);
					plvw33 = GetPlayerVirtualWorld(player[playerid]);
					if((plvw22 < 1 || plvw22 > 990) && (plvw33 >= 1 && plvw33 <= 990))
					{
						SendClientMessage(playerid, COLOR_RED, " * Вы ТП в ДТ мир ! Для выхода используйте: /dt 0 !");
					}
					if((plvw22 < 18001 || plvw22 > 18005) && (plvw33 >= 18001 && plvw33 <= 18005))
					{
						SendClientMessage(playerid, COLOR_RED, " * Вы ТП в ДМ мир ! Для выхода используйте:");
						SendClientMessage(playerid, COLOR_RED, " * меню, ДеадМатчи, Выйти из DM мира !");
					}
					tpdrift[playerid] = 1;
					SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));
					SetPlayerVirtualWorld(playerid, plvw33);
					GetPlayerPos(player[playerid], PosX, PosY, PosZ);
					SetPlayerPos(playerid, PosX, PosY+1, PosZ+1);
				}
				else//если игрок телепортируется в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
				{
			    	if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string,256," *** Админ %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					else
					{
						format(string,256," Полицейский %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[playerid] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(playerid,PosX,PosY,PosZ);
						SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
					}
					if(dopper3 == 0 && dopper4 == 1)//если игрок телепортируется НЕ С дерби НА дерби, то:
					{
						new plvw22, plvw33;
						plvw22 = GetPlayerVirtualWorld(playerid);
						plvw33 = GetPlayerVirtualWorld(player[playerid]);
						if((plvw22 < 1 || plvw22 > 990) && (plvw33 >= 1 && plvw33 <= 990))
						{
							SendClientMessage(playerid, COLOR_RED, " * Вы ТП в ДТ мир ! Для выхода используйте: /dt 0 !");
						}
						if((plvw22 < 18001 || plvw22 > 18005) && (plvw33 >= 18001 && plvw33 <= 18005))
						{
							SendClientMessage(playerid, COLOR_RED, " * Вы ТП в ДМ мир ! Для выхода используйте:");
							SendClientMessage(playerid, COLOR_RED, " * меню, ДеадМатчи, Выйти из DM мира !");
						}
						tpdrift[playerid] = 1;
						SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));
						SetPlayerVirtualWorld(playerid, plvw33);
						GetPlayerPos(player[playerid], PosX, PosY, PosZ);
						SetPlayerPos(playerid, PosX, PosY+1, PosZ+1);
					}
					else//если игрок телепортируется в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
					{
						new plvw22, plvw33;
						plvw22 = GetPlayerVirtualWorld(playerid);
						plvw33 = GetPlayerVirtualWorld(player[playerid]);
						if((plvw22 < 1 || plvw22 > 990) && (plvw33 >= 1 && plvw33 <= 990))
						{
							SendClientMessage(playerid, COLOR_RED, " * Вы ТП в ДТ мир ! Для выхода используйте: /dt 0 !");
						}
						if((plvw22 < 18001 || plvw22 > 18005) && (plvw33 >= 18001 && plvw33 <= 18005))
						{
							SendClientMessage(playerid, COLOR_RED, " * Вы ТП в ДМ мир ! Для выхода используйте:");
							SendClientMessage(playerid, COLOR_RED, " * меню, ДеадМатчи, Выйти из DM мира !");
						}
						if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
						{
							new regm = 1, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;
	 						per1 = GetPlayerInterior(player[playerid]);
							per2 = plvw33;
	   						GetPlayerPos(player[playerid], PosX, PosY, PosZ);
							cor1 = PosX;
							cor2 = PosY+1;
							cor3 = PosZ+1;
							StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
						}
						else//иначе:
						{
							tpdrift[playerid] = 1;
	 						SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));
							SetPlayerVirtualWorld(playerid, plvw33);
	   						GetPlayerPos(player[playerid], PosX, PosY, PosZ);
							SetPlayerPos(playerid, PosX, PosY+1, PosZ+1);
						}
					}
				}
				return 1;
			}
			if(listitem == 1)//тп его к себе
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playerid == player[playerid])
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","Попытка ТП игрока к самому себе !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок сидит в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заняты наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    new dopper1, dopper2, dopper3, dopper4;
				dopper1 = 0;
				dopper2 = 0;
				dopper3 = 0;
				dopper4 = 0;
			    new Float:ConX, Float:ConY, Float:ConZ;
   				GetPlayerPos(playerid, ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper3 = 1; }

   				GetPlayerPos(player[playerid], ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper2 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(player[playerid]) == 15 || GetPlayerInterior(player[playerid]) == 14)) { dopper4 = 1; }

				if(dopper1 == 1 && dopper2 == 0)//если игрока телепортируем c основной карты на админ-остров, то:
				{
			    	if(PlayerInfo[player[playerid]][pAdmin] == 0 && GetPVarInt(player[playerid], "TotPr") == 0)
					{
						ShowPlayerDialog(playerid,2,0,"Ошибка.","У выбранного игрока нет защитного тотема !","OK","");
						SetPVarInt(playerid, "DlgCont", 2);
						return 1;
					}
					SpectateStop(player[playerid]);//отключение наблюдения (если за игроком наблюдает полицейский)
					format(string,256," *** Админ %s телепортировал игрока %s к себе.",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_RED,string);
					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string,256," *** Админ %s телепортировал Вас к себе.",RealName[playerid]);
						SendClientMessage(player[playerid],COLOR_RED,string);
					}
					new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[player[playerid]] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(player[playerid]));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(player[playerid],PosX,PosY,PosZ);
						SetPlayerPos(player[playerid],PosX+3,PosY+3,PosZ+5);
					}
					tpdrift[player[playerid]] = 1;
					if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
					{//если игрок заблокирован, то ТП заблокированного игрока
						PlayLock1[1][player[playerid]] = GetPlayerInterior(playerid);//изменение интерьера блокировки
						PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
						GetPlayerPos(playerid, PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//изменение координат блокировки
						PlayLock2[1][player[playerid]] = PlayLock2[1][player[playerid]] + 1;
					}
					else//иначе - ТП НЕ заблокированного игрока
					{
						SetPlayerInterior(player[playerid], GetPlayerInterior(playerid));
						SetPlayerVirtualWorld(player[playerid], GetPlayerVirtualWorld(playerid));
						GetPlayerPos(playerid, PosX, PosY, PosZ);
						SetPlayerPos(player[playerid], PosX, PosY+1, PosZ+1);
					}
				}
				else//если игрока телепортируем в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
				{
					format(string,256," *** Админ %s телепортировал игрока %s к себе.",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_RED,string);
					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string,256," *** Админ %s телепортировал Вас к себе.",RealName[playerid]);
						SendClientMessage(player[playerid],COLOR_RED,string);
					}
					new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[player[playerid]] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(player[playerid]));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(player[playerid],PosX,PosY,PosZ);
						SetPlayerPos(player[playerid],PosX+3,PosY+3,PosZ+5);
					}
					if(dopper3 == 1 && dopper4 == 0)//если игрока телепортируем НЕ С дерби НА дерби, то:
					{
						tpdrift[player[playerid]] = 1;
						if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
						{//если игрок заблокирован, то ТП заблокированного игрока
							PlayLock1[1][player[playerid]] = GetPlayerInterior(playerid);//изменение интерьера блокировки
							PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
							GetPlayerPos(playerid, PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//изменение координат блокировки
							PlayLock2[1][player[playerid]] = PlayLock2[1][player[playerid]] + 1;
						}
						else//иначе - ТП НЕ заблокированного игрока
						{
							SetPlayerInterior(player[playerid], GetPlayerInterior(playerid));
							SetPlayerVirtualWorld(player[playerid], GetPlayerVirtualWorld(playerid));
							GetPlayerPos(playerid, PosX, PosY, PosZ);
							SetPlayerPos(player[playerid], PosX, PosY+1, PosZ+1);
						}
					}
					else//если игрока телепортируем в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
					{
						if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
						{//если игрок заблокирован, то ТП заблокированного игрока
							tpdrift[player[playerid]] = 1;
							PlayLock1[1][player[playerid]] = GetPlayerInterior(playerid);//изменение интерьера блокировки
							PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
							GetPlayerPos(playerid, PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//изменение координат блокировки
							PlayLock2[1][player[playerid]] = PlayLock2[1][player[playerid]] + 1;
						}
						else//иначе - ТП НЕ заблокированного игрока
						{
							if(GetPlayerState(player[playerid]) == 2)//если игрок на месте водителя, то:
							{
								new regm = 1, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;
	 							per1 = GetPlayerInterior(playerid);
								per2 = GetPlayerVirtualWorld(playerid);
	   							GetPlayerPos(playerid, PosX, PosY, PosZ);
								cor1 = PosX;
								cor2 = PosY+1;
								cor3 = PosZ+1;
								StopDrift(player[playerid],regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
							}
							else//иначе:
							{
								tpdrift[player[playerid]] = 1;
	 							SetPlayerInterior(player[playerid], GetPlayerInterior(playerid));
								SetPlayerVirtualWorld(player[playerid], GetPlayerVirtualWorld(playerid));
	   							GetPlayerPos(playerid, PosX, PosY, PosZ);
								SetPlayerPos(player[playerid], PosX, PosY+1, PosZ+1);
							}
						}
					}
				}
				return 1;
			}
			if(listitem == 2)//наблюдать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[player[playerid]][pAdmin] >= 1 && PlayerInfo[player[playerid]][pAdmshad] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете наблюдать за админом !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if((PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 5) && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] >= 1 && admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] == 0 && admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок в зоне недосягаемости !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playerid == player[playerid])//если админ наблюдает за собой, то:
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Снимите наблюдение, и будете наблюдать за собой !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				else
				{
			    	if(PlayerInfo[playerid][pAdmin] == 0)
					{
			    		new Float:ConX, Float:ConY, Float:ConZ;
   						GetPlayerPos(player[playerid], ConX, ConY, ConZ);
						if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000 && GetPVarInt(playerid, "TotPr") == 0)
						{
							ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок в зоне недосягаемости !","OK","");
							SetPVarInt(playerid, "DlgCont", 2);
							return 1;
						}
					}
			    	if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string,256," *** Админ %s включил наблюдение за игроком %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
			    	else
					{
						PlayCRTP[playerid] = 1;//блокировка контроля координат
						PlayCRSH[playerid] = 1;//блокировка спидхака
						format(string,256," Полицейский %s включил наблюдение за игроком %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					EnterTick33[playerid] = 1;//обход антикрашера - 3
					admper6[playerid] = 0;//обнуляем отметку о переключении наблюдения
					if(admper1[playerid] == 600)//если админ только включил наблюдение, то:
					{
						if (GetPlayerState(playerid) == 1)//если админ НЕ в транспорте, то:
//						if(!GetPlayerVehicleID(playerid))//если админ НЕ в транспорте, то:
						{
							admper4[playerid] = 0;//не будем изменять координаты при "обратном спавне"
						}
						else
						{
							admper4[playerid] = 3;//иначе, прибавим 3 к координатам X, Y, и 5 к Z при "обратном спавне"
						}
						TogglePlayerSpectating(playerid, 1);//разрешить наблюдение для админа
						admper1[playerid] = player[playerid];//установить статус включенного наблюдения
						admper2[playerid] = GetPlayerInterior(playerid);//запомнить интерьер админа
						admper3[playerid] = GetPlayerVirtualWorld(playerid);//запомнить мир админа
						GetPlayerPos(playerid, TelSpec[playerid][0],TelSpec[playerid][1],TelSpec[playerid][2]);//запомнить координаты админа
						mapiconid[playerid] = CreateDynamicMapIcon(TelSpec[playerid][0],TelSpec[playerid][1],TelSpec[playerid][2],
						0,ColorPlay[playerid],admper3[playerid],admper2[playerid],-1,60000);//создать и запомнить мап иконку на месте возврата админа
		 				SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));//установить интерьер админу
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));//установить мир админу
						if(GetPlayerVehicleID(player[playerid]) != 0)//если игрок в транспорте, то:
						{
							new para44;
							para44 = GetPlayerVehicleID(player[playerid]);
							PlayerSpectateVehicle(playerid, para44, SPECTATE_MODE_NORMAL);

							PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);//включаем текстдравы спидометра
							TextDrawShowForPlayer(playerid, KMH);
							TextDrawShowForPlayer(playerid, HMS22);//включаем текстдравы максимальной горизонтальной скорости
							PlayerTextDrawShow(playerid, HMS44[playerid]);

							format(string, sizeof(string), "%d", GetHMaxSpeed(para44));//показываем максимальную горизонтальную скорость
							PlayerTextDrawSetString(playerid, HMS44[playerid], string);

							admper5[playerid] = 1;//наблюдаем за транспортом
						}
						else
						{
							if(GetPlayerState(playerid) == 2)//если админ был в транспорте
							{//на месте водителя, то:
								PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
								TextDrawHideForPlayer(playerid, KMH);
							}
							PlayerSpectatePlayer(playerid, player[playerid], SPECTATE_MODE_NORMAL);//включить наблюдение
							admper5[playerid] = 0;//наблюдаем за игроком
						}
					}
					else
					{
						admper1[playerid] = player[playerid];//поменять статус включенного наблюдения
		 				SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));//установить интерьер админу
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));//установить мир админу
						if(GetPlayerVehicleID(player[playerid]) != 0)//если игрок в транспорте, то:
						{
							new para44;
							para44 = GetPlayerVehicleID(player[playerid]);
							PlayerSpectateVehicle(playerid, para44, SPECTATE_MODE_NORMAL);
							if(admper5[playerid] == 0)//если админ наблюдал за игроком, то:
							{
								PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);//включаем текстдравы спидометра
								TextDrawShowForPlayer(playerid, KMH);
								TextDrawShowForPlayer(playerid, HMS22);//включаем текстдравы максимальной горизонтальной скорости
								PlayerTextDrawShow(playerid, HMS44[playerid]);
							}
							format(string, sizeof(string), "%d", GetHMaxSpeed(para44));//показываем максимальную горизонтальную скорость
							PlayerTextDrawSetString(playerid, HMS44[playerid], string);
							admper5[playerid] = 1;//наблюдаем за транспортом
						}
						else
						{
							if(admper5[playerid] == 1)//если админ наблюдал за транспортом, то:
							{
								PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
								TextDrawHideForPlayer(playerid, KMH);
								TextDrawHideForPlayer(playerid, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
								PlayerTextDrawHide(playerid, HMS44[playerid]);
							}
							PlayerSpectatePlayer(playerid, player[playerid], SPECTATE_MODE_NORMAL);//включить наблюдение
							admper5[playerid] = 0;//наблюдаем за игроком
						}
					}
				}
				return 1;
			}
			if(listitem == 3)//снять наблюдение
			{
				if(admper1[playerid] == 600)//если админ ни за кем не наблюдает, то:
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Сейчас Вы ни за кем не наблюдаете !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] != 600)//если наблюдение было включено, то:
				{
			    	if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string,256," *** Админ %s снял наблюдение с игрока.",RealName[playerid]);
						print(string);
					}
			    	else
					{
						format(string,256," Полицейский %s снял наблюдение с игрока.",RealName[playerid]);
						print(string);
					}
					if(admper5[playerid] == 1)//если админ наблюдал за транспортом, то:
					{
						PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
						TextDrawHideForPlayer(playerid, KMH);
						TextDrawHideForPlayer(playerid, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
						PlayerTextDrawHide(playerid, HMS44[playerid]);
					}
					dmspa[playerid] = 1;//блокируем сохранения координат и угла игрока в DM-зонах
					SetTimerEx("dmrespawn", 2000, 0, "i", playerid);//задержка разрешения сохранения координат и угла игрока в DM-зоне
					TogglePlayerSpectating(playerid, 0);//запретить наблюдение для админа
					admper6[playerid] = 0;//обнуляем отметку о переключении наблюдения
				}
				return 1;
			}
			if(listitem == 4)//пополнить жизнь и броню
			{
			    if(PlayerInfo[playerid][pAdmin] <= 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s пополнил игроку %s жизнь и броню.",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
   				SetPlayerHealth(player[playerid],100);
   				SetPlayerArmour(player[playerid],100);
				return 1;
			}
			if(listitem == 5)//бан постоянный
			{
			    if(PlayerInfo[playerid][pAdmin] <= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от бана самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался на постоянно забанить админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 10-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину бана игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 6);
				return 1;
			}
			if(listitem == 6)//бан временный
			{
			    if(PlayerInfo[playerid][pAdmin] <= 4)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от бана самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался на время забанить админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 10-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите число суток (от 1 до 25) и через пробел причину бана игрока:\
				\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,55,DIALOG_STYLE_INPUT,"Число суток и причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 55);
				return 1;
			}
			if(listitem == 7)//кик
			{
			    if(PlayerInfo[playerid][pAdmin] <= 2)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от кика самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался кикнуть админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Кикнуть админа может только админ 10-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину кика игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"Причина кика игрока",string,"Кик","Отмена");
				SetPVarInt(playerid, "DlgCont", 7);
				return 1;
			}
			if(listitem == 8)//депортировать
			{
			    if(PlayerInfo[playerid][pAdmin] <= 3)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от депортации самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(gPlayerLogged[player[playerid]] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок ещё не залогинился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pDeport] == 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок уже имеет статус депортации !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался депортировать админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Депортировать админа может только админ 10-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				ResetPlayerWeapons(player[playerid]);//отбираем оружие и предметы
				if(GetPlayerVehicleID(player[playerid]) != 0)//если игрок в транспорте, то:
				{
					new Float:igx, Float:igy, Float:igz;//высадить игрока
					GetPlayerPos(player[playerid], igx, igy, igz);
					SetPlayerPos(player[playerid], igx+3, igy+3, igz+5);
				}
				if(playcar[player[playerid]] != 0)//если у игрока есть свой транспорт, то:
				{
			    	for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона и чужой мигалки И обход антикрашера - 3
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == playcar[player[playerid]])
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
			 			if(playcar[player[playerid]] == neon[i][2])
			 			{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
			 			}
						if(playcar[player[playerid]] == migalka[i][1])
						{
							DestroyObject(migalka[i][0]);//убрать мигалку
							migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
							migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
 						}
					}
					if(neon[player[playerid]][0] != 0) { DestroyObject(neon[player[playerid]][0]); }//убрать неон
					if(neon[player[playerid]][1] != 0) { DestroyObject(neon[player[playerid]][1]); }//убрать неон
					neon[player[playerid]][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[player[playerid]][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[player[playerid]][2] = 0;//несуществующий ид транспорта с неоном
					if(migalka[player[playerid]][0] != 0) { DestroyObject(migalka[player[playerid]][0]); }//убрать мигалку
					migalka[player[playerid]][0] = 0;//присваиваем мигалке несуществующий номер объекта
					migalka[player[playerid]][1] = 0;//несуществующий ид транспорта с мигалкой
					playcarvw[playcar[player[playerid]]] = -100;//обнулить виртуальный мир транспорта игрока
					DestroyVehicle(playcar[player[playerid]]);//уничтожить свой транспорт
					playcar[player[playerid]] = 0;//несуществующий ид транспорта
				}
 				SetTimerEx("PlayDeport", 300, 0, "ii", playerid, player[playerid]);
				return 1;
			}
			if(listitem == 9)//отменить депортацию
			{
			    if(PlayerInfo[playerid][pAdmin] <= 3)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pDeport] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок не имеет статуса депортации !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				else
				{
					PlayerInfo[player[playerid]][pDeport] = 0;
					printf(" *** Админ %s отменил депортацию игрока %s .", RealName[playerid], RealName[player[playerid]]);
					format(string, sizeof(string), " *** Апелляционная жалоба игрока %s была удовлетворена.", RealName[player[playerid]]);
					SendClientMessageToAll(COLOR_GREEN, string);
					format(string, sizeof(string), " *** Админ %s отклонил депортацию игрока %s .", RealName[playerid], RealName[player[playerid]]);
					SendClientMessageToAll(COLOR_GREEN, string);
				}
				return 1;
			}
			if(listitem == 10)//заблокировать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок УЖЕ заблокирован !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string, 256, " *** Админ %s заблокировал игрока %s по причине проверки !", RealName[playerid], RealName[player[playerid]]);
				print(string);
		    	SendClientMessageToAll(COLOR_RED, string);
 				PlayLock1[1][player[playerid]] = GetPlayerInterior(player[playerid]);//сохранение интерьера блокировки
				PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(player[playerid]);//сохранение виртуального мира блокировки
				GetPlayerPos(player[playerid], PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//сохранение координат блокировки
				GetPlayerFacingAngle(player[playerid], PlayLock2[3][player[playerid]]);//сохранение угла блокировки
    			PlayLock1[0][player[playerid]] = playerid;//включение блокировки
				return 1;
			}
			if(listitem == 11)//разблокировать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] == 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок НЕ заблокирован !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string, 256, " *** Админ %s разблокировал игрока %s", RealName[playerid], RealName[player[playerid]]);
				print(string);
		    	SendClientMessageToAll(COLOR_GREEN, string);
    			PlayLock1[0][player[playerid]] = 600;//отключение блокировки
				return 1;
			}
			if(listitem == 12)//заморозить
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок УЖЕ заморожен !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину заморозки игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,"Причина заморозки игрока",string,"Заморозить","Отмена");
				SetPVarInt(playerid, "DlgCont", 47);
				return 1;
			}
			if(listitem == 13)//разморозить
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] == 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок НЕ заморожен !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string, 256, " *** Админ %s разморозил игрока %s", RealName[playerid], RealName[player[playerid]]);
				print(string);
		    	SendClientMessageToAll(COLOR_GREEN, string);
    			perfrost[player[playerid]] = 600;//отключение заморозки
				SetPVarInt(player[playerid], "PlFrost", 0);//глобальная переменная заморозки игрока
				TogglePlayerControllable(player[playerid],1);
				return 1;
			}
			if(listitem == 14)//убить
			{
			    if(PlayerInfo[playerid][pAdmin] <= 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину убийства игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,48,DIALOG_STYLE_INPUT,"Причина убийства игрока",string,"Убить","Отмена");
				SetPVarInt(playerid, "DlgCont", 48);
				return 1;
			}
			if(listitem == 15)//заткнуть
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите число секунд и через пробел причину затыка игрока:\
				\n(чтобы разоткнуть, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"Секунды и причина затыка игрока",string,"Заткнуть","Отмена");
				SetPVarInt(playerid, "DlgCont", 8);
				return 1;
			}
			if(listitem == 16)//посадить в тюрьму
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{//если игрок в наблюдении, И игрок - админ, то:
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите число секунд и через пробел причину посадки игрока в тюрьму:\
				\n(чтобы освободить, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"Секунды и причина посадки игрока в тюрьму",string,"Посадить","Отмена");
				SetPVarInt(playerid, "DlgCont", 46);
				return 1;
			}
			if(listitem == 17)//тп себя в тюрьму
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s телепортировался в тюрьму.",RealName[playerid]);
				print(string);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 3);//интерьер тюрьмы
				SetPlayerVirtualWorld(playerid, 0);//виртуальный мир 0
				SetPlayerPos(playerid, 193.31, 173.87, 1003.02);//координаты тюрьмы
				SetPlayerFacingAngle(playerid, 0.44);//угол спавна в тюрьме
 				SetCameraBehindPlayer(playerid);//камера за спиной
				return 1;
			}
			if(listitem == 18)//тп себя в полицейский участок
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s телепортировался в полицейский участок.",RealName[playerid]);
				print(string);
				tpdrift[playerid] = 1;
				SetPlayerInterior(playerid, 3);//интерьер полицейского участка
				SetPlayerVirtualWorld(playerid, 0);//виртуальный мир 0
				SetPlayerPos(playerid, 202.65, 179.72, 1003.03);//координаты полицейского участка
				SetPlayerFacingAngle(playerid, 96.66);//угол спавна в полицейском участке
 				SetCameraBehindPlayer(playerid);//камера за спиной
				return 1;
			}
			if(listitem == 19)//просмотреть статистику
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s просмотрел статистику игрока %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				ShowStats(playerid,player[playerid]);
				return 1;
			}
			if(listitem == 20)//сменить скин
			{
			    if(PlayerInfo[playerid][pAdmin] <= 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите ид скина, на который Вы хотите сменить:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,9,DIALOG_STYLE_INPUT,"ID скина игрока",string,"Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 9);
				return 1;
			}
			if(listitem == 21)//узнать IP
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				new ip[128];
				GetPlayerIp(player[playerid], ip, sizeof(ip));
				format(string,256," *** Админ %s просмотрел IP игрока %s [%d]: %s",RealName[playerid],RealName[player[playerid]],player[playerid],ip);
				print(string);
				format(string,256," *** Игрок %s [%d] - IP: %s",RealName[player[playerid]],player[playerid],ip);
				SendClientMessage(playerid,COLOR_WHITE,string);
				return 1;
			}
            if(listitem == 22)//слапнуть
			{
			    if(PlayerInfo[playerid][pAdmin] <= 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок сидит в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				new Float:x, Float:y, Float:z, Float:hp;
				tpdrift[player[playerid]] = 1;
				EnterTick33[player[playerid]] = 1;//обход антикрашера - 3
				GetPlayerHealth(player[playerid],hp);
				SetPlayerHealth(player[playerid],hp-5);
				GetPlayerPos(player[playerid],x,y,z);
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
				{//если игрок заблокирован, то слапнуть заблокированного игрока
					x = x + 3;
					y = y + 3;
					z = z + 5;
					PlayLock2[0][player[playerid]] = x;//изменение координат блокировки
					PlayLock2[1][player[playerid]] = y;
					PlayLock2[2][player[playerid]] = z;
				}
				else//иначе - ТП НЕ заблокированного игрока
				{
					SetPlayerPos(player[playerid],x+3,y+3,z+5);
				}
				format(string,256," *** Админ %s слапнул игрока %s [%d]",RealName[playerid],RealName[player[playerid]],player[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				return 1;
			}
			if(listitem == 23)//подключить к дрифт-соревнованию
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] >= 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок уже подключен к дрифт-соревнованию.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				else
				{
					compdrift[player[playerid]] = 0;
					format(string,256," *** Админ %s подключил игрока %s [%d] к дрифт-соревнованию.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
   					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string, 256, " *** Админ %s подключил Вас к дрифт-соревнованию.", RealName[playerid]);
						SendClientMessage(player[playerid], COLOR_GREEN, string);
					}
				}
				return 1;
			}
			if(listitem == 24)//отключить от дрифт-соревнования
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] < 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок уже отключен от дрифт-соревнования.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				else
				{
					compdrift[player[playerid]] = -1000000;
					format(string,256," *** Админ %s отключил игрока %s [%d] от дрифт-соревнования.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
					SendAdminMessage(COLOR_RED, string);
   					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string, 256, " *** Админ %s отключил Вас от дрифт-соревнования.", RealName[playerid]);
						SendClientMessage(player[playerid], COLOR_RED, string);
					}
				}
				return 1;
			}
			if(listitem == 25)//обнулить очки дрифт-соревнования
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. Вы в младшей админ-группе (1-4 LVL) !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] < 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Нельзя !!!, выбранный игрок отключен от дрифт-соревнования.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","У выбранного игрока очки уже обнулены.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				else
				{
					compdrift[player[playerid]] = 0;
					format(string,256," *** Админ %s обнулил игроку %s [%d] очки дрифт-соревнования.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
   					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string, 256, " *** Админ %s обнулил Вам очки дрифт-соревнования.", RealName[playerid]);
						SendClientMessage(player[playerid], COLOR_YELLOW, string);
					}
				}
				return 1;
			}
			if(listitem == 26)//статус дрифт-соревнования
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] < 0)
				{
					format(string,256,"Игрок: %s [%d]\nНЕ подключен к дрифт-соревнованию.",RealName[player[playerid]],player[playerid]);
			  		ShowPlayerDialog(playerid,2,0,"Информация.",string,"OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					format(string,256," *** Админ %s просмотрел статус дрифт-соревнования игрока %s [%d]: отключен.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
				}
			    else
				{
					format(string,256,"Игрок: %s [%d]\nподключен к дрифт-соревнованию.",RealName[player[playerid]],player[playerid]);
			  		ShowPlayerDialog(playerid,2,0,"Информация.",string,"OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					format(string,256," *** Админ %s просмотрел статус дрифт-соревнования игрока %s [%d]: подключен.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
				}
			}
		}
		return 1;
	}
    if(dialogid == 6)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину бана игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 6);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
			{
				format(string,256," *** Админ %s попытался на постоянно забанить админа %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 10-го уровня !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 0)
			{
				NameClick[player[playerid]] = 1;
				strdel(NameAdmin[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameAdmin[player[playerid]], RealName[playerid]);
				strdel(NameTarget[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameTarget[player[playerid]], playtarget[playerid]);
				strdel(ReasonTarget[player[playerid]], 0, 256);
				strcat(ReasonTarget[player[playerid]], inputtext);
 				SendClientMessage(playerid, COLOR_YELLOW, " Выбранный игрок ещё не залогинился !");
 				SendClientMessage(playerid, COLOR_YELLOW, " Поэтому , будет забанен через 20 секунд.");
				SetTimerEx("PlayBanTimer", 20000, 0, "ii", PlayerInfo[playerid][pAdmin], player[playerid]);
				return 1;
			}
			new ip[128];
			GetPlayerIp(player[playerid], ip, sizeof(ip));
			format(string, 256, " *** Админ %s забанил игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			format(string, 256 ," *** IP игрока %s : [%s]", RealName[player[playerid]], ip);
			print(string);
			SendAdminMessage(COLOR_RED, string);

			PlayerInfo[player[playerid]][pLock] = 1;
    		if(!strlen(inputtext))//делаем отметку, если причина не указана
			{
				format(inputtext, 256, "* Причина не указана.");
			}
			format(string, 256, " --- Админ: [ %s ]", RealName[playerid]);//формируем метку админа
			strdel(fbanreason[player[playerid]], 0, 256);//очистка причины бана
			strcat(fbanreason[player[playerid]], inputtext);//добавляем в символьную переменную причину
			strcat(fbanreason[player[playerid]], string);//добавляем в символьную переменную метку админа
			PlayBanList(player[playerid], fbanreason[player[playerid]], 0);
			SetTimerEx("PlayBan", 300, 0, "i", player[playerid]);
//			Ban(player[playerid]);
		}
		return 1;
	}
    if(dialogid == 55)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите число суток (от 1 до 25) и через пробел причину бана игрока:\
				\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,55,DIALOG_STYLE_INPUT,"Число суток и причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 55);
				return 1;
			}
			new cause[256], i = 0, j = 0, m = 0;//выделение текста из строки
			while (inputtext[i] != 32)
			{
				if(inputtext[i] == 0 || i == 10)
				{
					m = 1;
					break;
				}
				i++;
			}
			if(m == 1)
			{
				cause[0] = 0;
			}
			else
			{
				i++;
				while (i < 256)
				{
					cause[j] = inputtext[i];
					if(inputtext[i] == 0) break;
					i++;
					j++;
				}
			}
			new csut;
			csut = strval(inputtext);
			if(csut < 1) {csut = 1;}
			if(csut > 25) {csut = 25;}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
			{
				format(string,256," *** Админ %s попытался на время забанить админа %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 10-го уровня !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 0)
			{
				NameClick[player[playerid]] = 1;
				strdel(NameAdmin[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameAdmin[player[playerid]], RealName[playerid]);
				strdel(NameTarget[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameTarget[player[playerid]], playtarget[playerid]);
				strdel(ReasonTarget[player[playerid]], 0, 256);
				strcat(ReasonTarget[player[playerid]], cause);
 				SendClientMessage(playerid, COLOR_YELLOW, " Выбранный игрок ещё не залогинился !");
 				SendClientMessage(playerid, COLOR_YELLOW, " Поэтому , будет забанен через 20 секунд.");
				SetTimerEx("TMPlayBanTimer", 20000, 0, "iii", PlayerInfo[playerid][pAdmin], player[playerid], csut);
				return 1;
			}
			new ip[128];
			GetPlayerIp(player[playerid], ip, sizeof(ip));
			format(string, 256, " *** Админ %s забанил игрока %s на %d суток , причина: %s", RealName[playerid], RealName[player[playerid]], csut, cause);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			format(string, 256 ," *** IP игрока %s : [%s]", RealName[player[playerid]], ip);
			print(string);
			SendAdminMessage(COLOR_RED, string);

			PlayerInfo[player[playerid]][pLock] = 1;

			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты

			new csut22, string999[256];
			csut22 = ProcUnban(csut);//вычисление дня разбана
			new doplll, doplll22, doplll33;//запись ид-файла временного бана
			doplll = 1;//переменная цикла
			doplll22 = 0;//маркерная переменная
			while(doplll < 1001)//создаём неполный цикл
			{
				format(string999,sizeof(string999),"bantime/%d.ini",doplll);
				if(!fexist(string999))//если файла с именем ид-переменной (doplll) нету, то:
				{//создаём такой файл
					doplll22 = 1;//устанавливаем маркерную переменную
					new File: hFile55 = fopen(string999, io_write);//запись файла
					if (hFile55)
					{
						new var[64];
						format(var, 64, "Login=%s\n",RealName[player[playerid]]);fwrite(hFile55, var);
						format(var, 64, "IPAdr=%s\n",ip);fwrite(hFile55, var);
						format(var, 64, "Dataunban=%d\n",csut22);fwrite(hFile55, var);
						fclose(hFile55);
					}
					printf("[BanTime] Временному бану игрока [%s] был присвоен ид [%d] .", RealName[player[playerid]], doplll);
					break;//завершаем неполный цикл
				}
				doplll++;//инкрементируем переменную цикла, и продолжаем цикл
			}
			doplll33 = doplll;//подготовка ид-файла к записи в бан-лист
			if(doplll22 == 0)//если после окончания цикла, маркерная переменная НЕ была установлена, то:
			{//передаём админам сообщение о переполнении таблицы временных банов
				doplll33 = 0;//ид-файла = 0 (файл НЕ создан)
				print("[BanTime] Превышен лимит файлов в таблице временных банов !!!");
				SendAdminMessage(COLOR_RED, " * Превышен лимит файлов в таблице временных банов !!!");
				print("[BanTime] Временный бан НЕ был сохранён !!!");
				SendAdminMessage(COLOR_RED, " * Временный бан НЕ был сохранён !!!");
			}

    		if(!strlen(cause))//делаем отметку, если причина не указана
			{
				format(cause, 256, "* Причина не указана.");
			}
			format(string, 256, " (на %d суток) --- Админ: [ %s ]", csut, RealName[playerid]);//формируем метку админа
			strdel(fbanreason[player[playerid]], 0, 256);//очистка причины бана
			strcat(fbanreason[player[playerid]], cause);//добавляем в символьную переменную причину
			strcat(fbanreason[player[playerid]], string);//добавляем в символьную переменную метку админа
			PlayBanList(player[playerid], fbanreason[player[playerid]], doplll33);
			SetTimerEx("PlayBan", 300, 0, "i", player[playerid]);
//			Ban(player[playerid]);
		}
		return 1;
	}
	if(dialogid == 7)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину кика игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"Причина кика игрока",string,"Кик","Отмена");
				SetPVarInt(playerid, "DlgCont", 7);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[player[playerid]][pAdmin] >= 1)
			{
				format(string,256," *** Админ %s попытался кикнуть админа %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				ShowPlayerDialog(playerid,2,0,"Информация.","Кикнуть админа может только админ 10-го уровня !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 0)
			{
				NameClick[player[playerid]] = 1;
				strdel(NameAdmin[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameAdmin[player[playerid]], RealName[playerid]);
				strdel(NameTarget[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameTarget[player[playerid]], playtarget[playerid]);
				strdel(ReasonTarget[player[playerid]], 0, 256);
				strcat(ReasonTarget[player[playerid]], inputtext);
 				SendClientMessage(playerid, COLOR_YELLOW, " Выбранный игрок ещё не залогинился !");
 				SendClientMessage(playerid, COLOR_YELLOW, " Поэтому , будет кикнут через 15 секунд.");
				SetTimerEx("PlayKickTimer", 15000, 0, "ii", PlayerInfo[playerid][pAdmin], player[playerid]);
				return 1;
			}
			format(string, 256, " *** Админ %s кикнул игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);

			SetTimerEx("PlayKick", 300, 0, "i", player[playerid]);
//    		Kick(player[playerid]);
		}
        return 1;
	}
	if(dialogid == 47)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину заморозки игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,"Причина заморозки игрока",string,"Заморозить","Отмена");
				SetPVarInt(playerid, "DlgCont", 47);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			format(string, 256, " *** Админ %s заморозил игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			perfrost[player[playerid]] = playerid;//включение заморозки
			SetPVarInt(player[playerid], "PlFrost", 1);//глобальная переменная заморозки игрока
 			TogglePlayerControllable(player[playerid],0);
		}
        return 1;
	}
	if(dialogid == 48)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину убийства игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,48,DIALOG_STYLE_INPUT,"Причина убийства игрока",string,"Убить","Отмена");
				SetPVarInt(playerid, "DlgCont", 48);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			format(string, 256, " *** Админ %s убил игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			EnterTick33[player[playerid]] = 1;//обход антикрашера - 3
			SetPlayerArmour(player[playerid],0);
			SetPlayerHealth(player[playerid],0);
		}
        return 1;
	}
	if(dialogid == 8)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите число секунд и через пробел причину затыка игрока:\
				\n(чтобы разоткнуть, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"Секунды и причина затыка игрока",string,"Заткнуть","Отмена");
				SetPVarInt(playerid, "DlgCont", 8);
				return 1;
			}
			new cause[256], i = 0, j = 0, m = 0;//выделение текста из строки
			while (inputtext[i] != 32)
			{
				if(inputtext[i] == 0 || i == 10)
				{
					m = 1;
					break;
				}
				i++;
			}
			if(m == 1)
			{
				cause[0] = 0;
			}
			else
			{
				i++;
				while (i < 256)
				{
					cause[j] = inputtext[i];
					if(inputtext[i] == 0) break;
					i++;
					j++;
				}
			}
			new secon;
			secon = strval(inputtext);
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(secon != 3)
			{
				if(secon < 5) {secon = 5;}
				new dopcis;
				dopcis = FCislit(secon);
				switch(dopcis)
				{
					case 0: format(string, 256, " *** Админ %s заткнул игрока %s на %d секунд , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 1: format(string, 256, " *** Админ %s заткнул игрока %s на %d секунду , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 2: format(string, 256, " *** Админ %s заткнул игрока %s на %d секунды , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
				}
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				if(PlayerInfo[player[playerid]][pMutedsec] == 0)//если игрок НЕ заткнут, то:
				{
					PlayerInfo[player[playerid]][pMuted]++;
				}
				PlayerInfo[player[playerid]][pMutedsec] = secon;
			}
			else
			{
				if(PlayerInfo[player[playerid]][pMutedsec] > 0)//если игрок заткнут, то:
				{
					format(string, 256, " *** Админ %s разоткнул игрока %s , причина: амнистия ;)))", RealName[playerid], RealName[player[playerid]]);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
  					PlayerInfo[player[playerid]][pMuted]--;
					PlayerInfo[player[playerid]][pMutedsec] = 0;
				}
				else
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок не заткнут !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
			}
		}
        return 1;
	}
	if(dialogid == 46)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите число секунд и через пробел причину посадки игрока в тюрьму:\
				\n(чтобы освободить, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"Секунды и причина посадки игрока в тюрьму",string,"Посадить","Отмена");
				SetPVarInt(playerid, "DlgCont", 46);
				return 1;
			}
			new cause[256], i = 0, j = 0, m = 0;//выделение текста из строки
			while (inputtext[i] != 32)
			{
				if(inputtext[i] == 0 || i == 10)
				{
					m = 1;
					break;
				}
				i++;
			}
			if(m == 1)
			{
				cause[0] = 0;
			}
			else
			{
				i++;
				while (i < 256)
				{
					cause[j] = inputtext[i];
					if(inputtext[i] == 0) break;
					i++;
					j++;
				}
			}
			new secon;
			secon = strval(inputtext);
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(secon != 3)
			{
				if(secon < 5) {secon = 5;}
				new dopcis;
				dopcis = FCislit(secon);
				switch(dopcis)
				{
					case 0: format(string, 256, " *** Админ %s посадил игрока %s в тюрьму на %d секунд , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 1: format(string, 256, " *** Админ %s посадил игрока %s в тюрьму на %d секунду , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 2: format(string, 256, " *** Админ %s посадил игрока %s в тюрьму на %d секунды , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
				}
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				if(PlayerInfo[player[playerid]][pPrisonsec] == 0)//если не в тюрьме, то:
				{
					if(DerbyID[player[playerid]] == 0)//если игрок НЕ в зоне дерби,
					{//то сохранение всех слотов
						for(new n=0;n<13;n++)//если игрок НЕ в X-зоне, то сохранение всех слотов
						{
							GetPlayerWeaponData(player[playerid], n, playweap[player[playerid]][n], playammo[player[playerid]][n]);
						}
					}
					PlayerInfo[player[playerid]][pPrison]++;
					PlayerInfo[player[playerid]][pPrisonsec] = secon;
					if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
					{//если игрок заблокирован, то заменяем данные блокировки на данные тюрьмы
						PlayCRTP[player[playerid]] = 1;//блокировка контроля координат
						tpdrift[player[playerid]] = 1;
						PlayLock1[1][player[playerid]] = 3;//интерьер тюрьмы
						PlayLock1[2][player[playerid]] = 0;//виртуальный мир 0
						PlayLock2[0][player[playerid]] = 193.31;//координаты тюрьмы
						PlayLock2[1][player[playerid]] = 173.87;
						PlayLock2[2][player[playerid]] = 1003.02;
						PlayLock2[3][player[playerid]] = 0.44;//угол спавна в тюрьме
						SetCameraBehindPlayer(player[playerid]);//камера за спиной
					}
					if(admper1[player[playerid]] != 600)
					{//если игрок в наблюдении (полицейский), то:
						LockSpawn[player[playerid]] = 1;//блокировка заполнения слотов оружия и предметов
						TogglePlayerSpectating(player[playerid], 0);//запретить наблюдение для полицейского
					}
					else//иначе:
					{
						SecSpa(player[playerid]);//респавн игрока (с блокировкой заполнения слотов оружия и предметов)
					}
				}
				else//если игрок уже в тюрьме, то изменяем секунды тюрьмы
				{
					PlayerInfo[player[playerid]][pPrisonsec] = secon;
				}
			}
			else
			{
				if(PlayerInfo[player[playerid]][pPrisonsec] > 0)//если игрок в тюрьме, то:
				{
					format(string, 256, " *** Админ %s освободил игрока %s , причина: амнистия ;)))", RealName[playerid], RealName[player[playerid]]);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
					PlayerInfo[player[playerid]][pPrison]--;
					PlayerInfo[player[playerid]][pPrisonsec] = 0;
					SpawnPlayer(player[playerid]);//респавн игрока
				}
				else
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок не сидит в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
			}
		}
        return 1;
	}
	if(dialogid == 9)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите ид скина, на который Вы хотите сменить:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,9,DIALOG_STYLE_INPUT,"ID скина игрока",string,"Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 9);
				return 1;
			}
#if (MOD11INS <= 3)
			if(strval(inputtext) < 0 || strval(inputtext) > 299) { SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 299 !"); return 1; }
#endif
#if (MOD11INS == 4)
			if(strval(inputtext) < 0 || strval(inputtext) > 311) { SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 311 !"); return 1; }
#endif
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			format(string, 256, " *** Админ %s сменил скин игроку %s на %d", RealName[playerid], RealName[player[playerid]], strval(inputtext));
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
			SetPVarInt(player[playerid], "PlSkin", strval(inputtext));
			SetPlayerSkin(player[playerid], GetPVarInt(player[playerid], "PlSkin"));
		}
        return 1;
	}
 	if(dialogid == 10)//меню Тюнинг
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 	    if(response)
		{
			if(listitem == 0)
			{
 				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
				\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 37);
				return 1;
			}
			if(listitem == 1)
			{
				new vehicleid;
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
					\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
					SetPVarInt(playerid, "DlgCont", 10);
					return 1;
				}
				if(StopHidrav[playerid] <= 0)//если переменная задержки меньше или равна нулю, то:
				{
					AddVehicleComponent(vehicleid,1087);
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					StopHidrav[playerid] = 5;
				}
				else//иначе (если переменная задержки больше нуля), то:
				{
					new dopcis;
					dopcis = FCislit(StopHidrav[playerid]);
					switch(dopcis)
					{
						case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHidrav[playerid]);
						case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHidrav[playerid]);
						case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHidrav[playerid]);
					}
					SendClientMessage(playerid,COLOR_RED,string);
				}
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
				\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
				SetPVarInt(playerid, "DlgCont", 10);
				return 1;
			}
			if(listitem == 2)
			{
				new vehicleid;
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
					\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
					SetPVarInt(playerid, "DlgCont", 10);
					return 1;
				}
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 9);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
				\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
				SetPVarInt(playerid, "DlgCont", 10);
				return 1;
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
				\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
				\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
				\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
				\nВыхлоп стандарт", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 42);
				return 1;
			}
			if(listitem == 4)
			{
#if (MOD11INS == 1)
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
				\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
				\nЧерный\n{FFFFFF}Белый", "OK", "Назад");
#endif
#if (MOD11INS >= 2)
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
				\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
				\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Назад");
#endif
				SetPVarInt(playerid, "DlgCont", 17);
			}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 38);
				return 1;
			}
			if(listitem == 6)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new carid = GetPlayerVehicleID(playerid);
					new carmod = GetVehicleModel(carid);
					if(carmod != 562 && carmod != 565 && carmod != 559 && carmod != 561 && carmod != 560 && carmod != 558 &&
					carmod != 541 && carmod != 415 && carmod != 434 && carmod != 494 && carmod != 502 && carmod != 503 &&
					carmod != 411 && carmod != 506 && carmod != 451 && carmod != 477)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя");
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}в стритрейсерском или гоночном авто !");
						ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
						\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
						SetPVarInt(playerid, "DlgCont", 10);
					}
					else
					{
						for(new i=0;i<MAX_PLAYERS;i++)//убрать мигалку с любого транспорта
						{
		 					if(carid == migalka[i][1])
				 			{
								DestroyObject(migalka[i][0]);//убрать мигалку
								migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
								migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
				 			}
						}
						if(migalka[playerid][0] != 0) { DestroyObject(migalka[playerid][0]); }//убрать мигалку
						migalka[playerid][0] = CreateObject(19419,0,0,0,0,0,0,500.0);
						migalka[playerid][1] = carid;//ид транспорта, на который устанавливается мигалка
						switch(carmod)
						{
							case 562: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.35, 0.78, 0.00, 0.00, 0.00);
							case 565: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.45, 0.69, 0.00, 0.00, 0.00);
							case 559: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.30, 0.72, 0.00, 0.00, 0.00);
							case 561: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.15, 0.82, 0.00, 0.00, 0.00);
							case 560: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.20, 0.83, 0.00, 0.00, 0.00);
							case 558: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.45, 0.87, 0.00, 0.00, 0.00);
							case 541: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.20, 0.63, 0.00, 0.00, 0.00);
							case 415: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.45, 0.62, 0.00, 0.00, 0.00);
							case 434: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.30, 0.79, 0.00, 0.00, 0.00);
							case 494: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.70, 0.74, 0.00, 0.00, 0.00);
							case 502: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.50, 0.78, 0.00, 0.00, 0.00);
							case 503: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.70, 0.79, 0.00, 0.00, 0.00);
							case 411: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.25, 0.70, 0.00, 0.00, 0.00);
							case 506: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.50, 0.58, 0.00, 0.00, 0.00);
							case 451: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.55, 0.58, 0.00, 0.00, 0.00);
							case 477: AttachObjectToVehicle(migalka[playerid][0], migalka[playerid][1], 0.00, -0.55, 0.71, 0.00, 0.00, 0.00);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя");
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}в стритрейсерском или гоночном авто !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
					\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
					SetPVarInt(playerid, "DlgCont", 10);
				}
				return 1;
			}
			if(listitem == 7)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new carid = GetPlayerVehicleID(playerid);
					new carmod = GetVehicleModel(carid);
					if(carmod != 562 && carmod != 565 && carmod != 559 && carmod != 561 && carmod != 560 && carmod != 558 &&
					carmod != 541 && carmod != 415 && carmod != 434 && carmod != 494 && carmod != 502 && carmod != 503 &&
					carmod != 411 && carmod != 506 && carmod != 451 && carmod != 477)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя");
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}в стритрейсерском или гоночном авто !");
						ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
						\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
						SetPVarInt(playerid, "DlgCont", 10);
					}
					else
					{
						for(new i=0;i<MAX_PLAYERS;i++)//убрать мигалку с любого транспорта
						{
		 					if(carid == migalka[i][1])
				 			{
								DestroyObject(migalka[i][0]);//убрать мигалку
								migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
								migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
				 			}
						}
						if(migalka[playerid][0] != 0) { DestroyObject(migalka[playerid][0]); }//убрать мигалку
						migalka[playerid][0] = 0;//присваиваем мигалке несуществующий номер объекта
						migalka[playerid][1] = 0;//несуществующий ид транспорта с мигалкой
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя");
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}в стритрейсерском или гоночном авто !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
					\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
					SetPVarInt(playerid, "DlgCont", 10);
				}
				return 1;
			}
			if(listitem == 8)
			{
				if(DerbyID[playerid] == 2)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В зоне дерби эта функция не работает !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
					\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
					SetPVarInt(playerid, "DlgCont", 10);
					return 1;
				}
		    	if(autorepair[playerid] == 0)
		    	{
					autorepair[playerid] = 1;
					ShowPlayerDialog(playerid, 2, 0, "Авторемонт транспорта", "{00FF00}Авторемонт транспорта включен !", "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
				}else{
			   	 	autorepair[playerid] = 0;
			   	 	ShowPlayerDialog(playerid, 2, 0, "Авторемонт транспорта", "{FF0000}Авторемонт транспорта отключен !", "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
				}
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
 	if(dialogid == 20)//меню Оружие
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 	    if(response)
		{
			if(listitem == 0)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 2, pweap, pammo);
				if((pweap == 22 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 10000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 22 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 22 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 10000);
							GivePlayerWeapon(playerid, 22, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 22, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 1)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 2, pweap, pammo);
				if((pweap == 23 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 10000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 23 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 23 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 10000);
							GivePlayerWeapon(playerid, 23, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 23, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 2)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 2, pweap, pammo);
				if((pweap == 24 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 10000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 24 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 24 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 10000);
							GivePlayerWeapon(playerid, 24, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 24, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 3)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 3, pweap, pammo);
				if((pweap == 25 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 25 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 25 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 25, 100);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][3] = 0;//обнуление 3-го слота
							playammo[playerid][3] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 25, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 4)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 3, pweap, pammo);
				if((pweap == 26 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 26 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 26 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 26, 100);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][3] = 0;//обнуление 3-го слота
							playammo[playerid][3] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 26, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 5)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 3, pweap, pammo);
				if((pweap == 27 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 27 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 27 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 27, 100);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][3] = 0;//обнуление 3-го слота
							playammo[playerid][3] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 27, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 6)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 4, pweap, pammo);
				if((pweap == 28 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 28 && pammo > 900)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 28 || pweap == 0) && pammo <= 900)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 28, 300);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][4] = 0;//обнуление 4-го слота
							playammo[playerid][4] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 28, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 7)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 4, pweap, pammo);
				if((pweap == 29 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 29 && pammo > 900)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 29 || pweap == 0) && pammo <= 900)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 29, 300);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][4] = 0;//обнуление 4-го слота
							playammo[playerid][4] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 29, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 8)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 4, pweap, pammo);
				if((pweap == 32 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 32 && pammo > 900)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 32 || pweap == 0) && pammo <= 900)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 32, 300);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][4] = 0;//обнуление 4-го слота
							playammo[playerid][4] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 32, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 9)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 5, pweap, pammo);
				if((pweap == 30 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 30 && pammo > 900)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 30 || pweap == 0) && pammo <= 900)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 30, 300);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][5] = 0;//обнуление 5-го слота
							playammo[playerid][5] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 30, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 10)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 5, pweap, pammo);
				if((pweap == 31 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 31 && pammo > 900)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 31 || pweap == 0) && pammo <= 900)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 31, 300);
						}
						else
						{
							for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
							{//только для 3, 4, и 5-го слотов !!!
								GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
							}
							ResetPlayerWeapons(playerid);//отбираем оружие и предметы
							playweap[playerid][5] = 0;//обнуление 5-го слота
							playammo[playerid][5] = 0;
							for(new j = 0; j < 13; j++)//возвращение слотов оружия и предметов
							{
								GivePlayerWeapon(playerid, playweap[playerid][j], playammo[playerid][j]);
							}
							GivePlayerWeapon(playerid, 31, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 11)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 6, pweap, pammo);
				if((pweap == 33 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 33 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 33 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 33, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 33, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 12)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 6, pweap, pammo);
				if((pweap == 34 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 30000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 34 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 34 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 30000);
							GivePlayerWeapon(playerid, 34, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 34, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 13)
			{
				if (PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "Это оружие могут купить только админы.");
				}
				else
				{
					new pweap, pammo;
					GetPlayerWeaponData(playerid, 7, pweap, pammo);
					if((pweap == 35 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
					{
						SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
					}
					else
					{
						if(pweap == 35 && pammo > 300)
						{
							SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
						}
						else
						{
							if((pweap == 35 || pweap == 0) && pammo <= 300)
							{
								SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
								GivePlayerWeapon(playerid, 35, 100);
							}
							else
							{
								if(pweap == 37 || pweap == 38)
								{
									GivePlayerWeapon(playerid, 35, pammo / 5);
								}
								else
								{
									GivePlayerWeapon(playerid, 35, pammo);
								}
							}
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 14)
			{
				if (PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "Это оружие могут купить только админы.");
				}
				else
				{
					new pweap, pammo;
					GetPlayerWeaponData(playerid, 7, pweap, pammo);
					if((pweap == 36 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
					{
						SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
					}
					else
					{
						if(pweap == 36 && pammo > 300)
						{
							SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
						}
						else
						{
							if((pweap == 36 || pweap == 0) && pammo <= 300)
							{
								SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
								GivePlayerWeapon(playerid, 36, 100);
							}
							else
							{
								if(pweap == 37 || pweap == 38)
								{
									GivePlayerWeapon(playerid, 36, pammo / 5);
								}
								else
								{
									GivePlayerWeapon(playerid, 36, pammo);
								}
							}
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 15)
			{
				if (PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "Это оружие могут купить только админы.");
				}
				else
				{
					new pweap, pammo;
					GetPlayerWeaponData(playerid, 7, pweap, pammo);
					if((pweap == 37 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
					{
						SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
					}
					else
					{
						if(pweap == 37 && pammo > 1500)
						{
							SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
						}
						else
						{
							if((pweap == 37 || pweap == 0) && pammo <= 1500)
							{
								SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
								GivePlayerWeapon(playerid, 37, 500);
							}
							else
							{
								if(pweap == 35 || pweap == 36)
								{
									GivePlayerWeapon(playerid, 37, pammo * 5);
								}
								else
								{
									GivePlayerWeapon(playerid, 37, pammo);
								}
							}
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 16)
			{
				if (PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "Это оружие могут купить только админы.");
				}
				else
				{
					new pweap, pammo;
					GetPlayerWeaponData(playerid, 7, pweap, pammo);
					if((pweap == 38 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
					{
						SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
					}
					else
					{
						if(pweap == 38 && pammo > 1500)
						{
							SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
						}
						else
						{
							if((pweap == 38 || pweap == 0) && pammo <= 1500)
							{
								SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
								GivePlayerWeapon(playerid, 38, 500);
							}
							else
							{
								if(pweap == 35 || pweap == 36)
								{
									GivePlayerWeapon(playerid, 38, pammo * 5);
								}
								else
								{
									GivePlayerWeapon(playerid, 38, pammo);
								}
							}
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 17)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 8, pweap, pammo);
				if((pweap == 16 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 16 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 16 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
							GivePlayerWeapon(playerid, 16, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 16, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 18)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 8, pweap, pammo);
				if((pweap == 17 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 17 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 17 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
							GivePlayerWeapon(playerid, 17, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 17, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 19)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 8, pweap, pammo);
				if((pweap == 18 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 18 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 18 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
							GivePlayerWeapon(playerid, 18, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 18, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 20)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 8, pweap, pammo);
				if((pweap == 39 || pweap == 0) && GetPVarInt(playerid, "PlMon") < 50000)
				{
					SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно денег.");
				}
				else
				{
					if(pweap == 39 && pammo > 300)
					{
						SendClientMessage(playerid, COLOR_RED, "Больше купить нельзя.");
					}
					else
					{
						if((pweap == 39 || pweap == 0) && pammo <= 300)
						{
							SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 50000);
							GivePlayerWeapon(playerid, 40, 0);
							GivePlayerWeapon(playerid, 39, 100);
						}
						else
						{
							GivePlayerWeapon(playerid, 40, 0);
							GivePlayerWeapon(playerid, 39, pammo);
						}
					}
				}
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
				return 1;
			}
			if(listitem == 21)
			{
				for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
				{
					GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);
				}
				ResetPlayerWeapons(playerid);//отбираем оружие и предметы
				GivePlayerWeapon(playerid, playweap[playerid][0], playammo[playerid][0]);//возвращаем предметы
				GivePlayerWeapon(playerid, playweap[playerid][1], playammo[playerid][1]);
				GivePlayerWeapon(playerid, playweap[playerid][9], playammo[playerid][9]);
				GivePlayerWeapon(playerid, playweap[playerid][10], playammo[playerid][10]);
				GivePlayerWeapon(playerid, playweap[playerid][11], playammo[playerid][11]);
				ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Оружие", "Пистолет   / слот-2 10000$ /\nПистолет с глушителем\
				\nДезерт иигл\nДробовик   / слот-3 30000$ /\nОбрез\nSPAZ 12\nУзи   / слот-4 30000$ /\nMP5\nTec9\
				\nАК-47   / слот-5 30000$ /\nM4\nВинтовка   / слот-6 30000$ /\nСнайперская Винтовка\
				\nРакетная установка   / слот-7 50000$ /\nРПГ\nОгнемёт\nMinigun\nГраната   / слот-8 50000$ /\nСлезоточивый газ\
				\nКоктейль Молотова\nВзрывчатка\nУбрать оружие", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 20);
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 21)//он-лайн админы
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)//если была нажата кнопка "Далее", то:
		{
			for(new i = 0; i < 20; i++)
			{
				strdel(onladm[i], 0, 128);
			}
			new locvar = 0;
			new locvar2 = 0;
			while(count2adm[playerid] < countadm[playerid])
			{
				strins(onladm[locvar], tabladm[playerid][count2adm[playerid]], 0, 128);
				count2adm[playerid]++;
				locvar++;
				if(locvar == 20 && count2adm[playerid] < countadm[playerid])
				{//выводим диалог С продолжением
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
					onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
					ShowPlayerDialog(playerid, 21, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "Далее", "Отмена");
					SetPVarInt(playerid, "DlgCont", 21);
					locvar2 = 1;//устанавливаем переменную-маркер
					break;//выходим из цикла
				}
				if(locvar == 20 && count2adm[playerid] == countadm[playerid])
				{//выводим диалог БЕЗ продолжения
					if(contover[playerid] == 0)
					{
						format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
						onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
						onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
					}
					else
					{
						format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\
						\n\n{FF0000}     Список НЕ полный ! Переполнение данных !",
						onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
						onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
					}
					ShowPlayerDialog(playerid, 2, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
					locvar2 = 1;//устанавливаем переменную-маркер
					break;//выходим из цикла
				}
			}//выход из цикла
			if(locvar2 == 0)
			{//выводим диалог БЕЗ продолжения
				if(contover[playerid] == 0)
				{
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
					onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
				}
				else
				{
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\
					\n\n{FF0000}     Список НЕ полный ! Переполнение данных !",
					onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
					onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
				}
				ShowPlayerDialog(playerid, 2, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
			}//если переменная-маркер БЫЛА установлена, то - конец проверки
		    return 1;
		}
		else//если была нажата кнопка "Отмена", то:
		{
		    return 1;//завершаем диалог
		}
	}
	if(dialogid == 22)//команда /editadmins
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)//если была нажата кнопка "Далее", то:
		{
			LogAdmcnt[playerid] = LogAdmcnt[playerid] + 20;//прибавляем к переменной регистрации админов-2 число отображаемых слотов
			new soob[2048], soob22[1024];//объявляем новые строковые переменные
#if (MOD90INS == 0)
			format(soob22,sizeof(soob22),"В первом ключе указан уровень админа, во втором ключе\
			\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
			\n   2 - с помощью команды   /makeadmin\n   3 - с помощью команды   /admakk\
			\n   4 - с помощью обычного логирования\n        (аккаунт админа был перенесён на данный сервер)");
#endif
#if (MOD90INS == 1)
			format(soob22,sizeof(soob22),"В первом ключе указан уровень админа, во втором ключе\
			\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
			\n   2 - с помощью команды   /makeadmin\n   3 - с помощью команды   /admakk\
			\n   4 - с помощью обычного логирования\n        (аккаунт админа был изменён в базе данных сервера)");
#endif
			format(soob22,sizeof(soob22),"%s\n   5 - после дисконнекта (админ очистил\
			\n        свой слот регистрации, но остался админом)\
			\n   6 - с помощью импортирования данных\n   7 - после удаления аккаунта админа командой   /delakk\n",soob22);
			new dopper, locstr[64];//объявляем дополнительные переменные
			dopper = LogAdmcnt[playerid] + 20;//записываем в переменную dopper число отображаемых слотов +20
			strdel(soob, 0, 2048);//очищаем длинную строку окна-сообщения
			strcat(soob, soob22);//добавляем к длинной строке окна-сообщения - верхнюю шапку сообщения (soob22)
			for(new i = LogAdmcnt[playerid]; i < dopper; i++)
			{//создаём цикл для 20 отображаемых слотов (начиная со слота LogAdmcnt[playerid])
				format(locstr,sizeof(locstr),"\nСлот %d: %s",i,LogAdm[i]);//создаём строку с одним слотом
				strcat(soob, locstr);//добавляем к длинной строке окна-сообщения - созданную строку с одним слотом
			}
			if(LogAdmcnt[playerid] >= 80)
			{//если это последнее окно-сообщение, то:
				LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
				ShowPlayerDialog(playerid, 2, 0, "Регистрации админов:", soob, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
			}
			else//иначе, (если это НЕ последнее окно-сообщение), то:
			{
				ShowPlayerDialog(playerid, 22, 0, "Регистрации админов:", soob, "Далее", "Отмена");
				SetPVarInt(playerid, "DlgCont", 22);
			}
		    return 1;
		}
		else//если была нажата кнопка "Отмена", то:
		{
			LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
		    return 1;//завершаем диалог
		}
	}
	if(dialogid == 16)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
 				ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
#if (MOD11INS <= 3)
		    if(strval(inputtext) < 0 || strval(inputtext) > 299)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 299 !");
 				ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
#endif
#if (MOD11INS == 4)
		    if(strval(inputtext) < 0 || strval(inputtext) > 311)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 311 !");
 				ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
#endif
			SetPVarInt(playerid, "PlSkin", strval(inputtext));
			SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
		}else{
		ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Управление Персонажем", "Пополнить броню\
		\nПополнить жизнь\nСменить скин\n{00FF00}Сменить стиль боя\nНовогодняя шапка\nУбрать новогоднюю шапку\
		\n{E03515}Самоубийство\nПросмотреть собственную статистику", "OK", "Назад");
		SetPVarInt(playerid, "DlgCont", 13);
		}
		return 1;
	}
#if (MOD66INS > 1)
	if(dialogid == 56)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(playspa[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже заспавнились !");
			return 1;
		}
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
 				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
				SetPVarInt(playerid, "DlgCont", 56);
				return 1;
			}
#endif
#if (MOD11INS <= 3 && MOD66INS > 1)
		    if(strval(inputtext) < 0 || strval(inputtext) > 299)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 299 !");
 				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
				SetPVarInt(playerid, "DlgCont", 56);
				return 1;
			}
#endif
#if (MOD11INS == 4 && MOD66INS > 1)
		    if(strval(inputtext) < 0 || strval(inputtext) > 311)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 311 !");
 				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
				SetPVarInt(playerid, "DlgCont", 56);
				return 1;
			}
#endif
#if (MOD66INS > 1)
			SetPVarInt(playerid, "PlSkin", strval(inputtext));
			SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
			ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
			SetPVarInt(playerid, "DlgCont", 56);
		}else{
		playspascan[playerid] = 1;//делаем отметку о прохождении начального выбора скина, или сканера собейта
#endif
#if (MOD66INS == 3)
		TogglePlayerControllable(playerid, true);
#endif
#if (MOD66INS > 1)
		SpawnPlayer(playerid);//отправляем игрока на реальный спавн сервера
		}
		return 1;
	}
#endif
 	if(dialogid == 17)//меню Цвет
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
			{
				vehicleid = GetPlayerVehicleID(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
#if (MOD11INS == 1)
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
				\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
				\nЧерный\n{FFFFFF}Белый", "OK", "Назад");
#endif
#if (MOD11INS >= 2)
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
				\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
				\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Назад");
#endif
				SetPVarInt(playerid, "DlgCont", 17);
				return 1;
			}
#if (MOD11INS == 1)
			if(listitem == 0)ChangeVehicleColor(vehicleid, 3, 3);
			if(listitem == 1)ChangeVehicleColor(vehicleid, 166, 166);
			if(listitem == 2)ChangeVehicleColor(vehicleid, 79, 79);
			if(listitem == 3)ChangeVehicleColor(vehicleid, 158, 158);
			if(listitem == 4)ChangeVehicleColor(vehicleid, 6, 6);
			if(listitem == 5)ChangeVehicleColor(vehicleid, 65, 65);
			if(listitem == 6)ChangeVehicleColor(vehicleid, 86, 86);
			if(listitem == 7)ChangeVehicleColor(vehicleid, 181, 181);
			if(listitem == 8)ChangeVehicleColor(vehicleid, 9, 9);
			if(listitem == 9)ChangeVehicleColor(vehicleid, 0, 0);
			if(listitem == 10)ChangeVehicleColor(vehicleid, 1, 1);
		    PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
			\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
			\nЧерный\n{FFFFFF}Белый", "OK", "Назад");
#endif
#if (MOD11INS >= 2)
			if(listitem == 0)ChangeVehicleColor(vehicleid, 3, 3);
			if(listitem == 1)ChangeVehicleColor(vehicleid, 175, 175);
			if(listitem == 2)ChangeVehicleColor(vehicleid, 79, 79);
			if(listitem == 3)ChangeVehicleColor(vehicleid, 211, 211);
			if(listitem == 4)ChangeVehicleColor(vehicleid, 6, 6);
			if(listitem == 5)ChangeVehicleColor(vehicleid, 65, 65);
			if(listitem == 6)ChangeVehicleColor(vehicleid, 86, 86);
			if(listitem == 7)ChangeVehicleColor(vehicleid, 155, 155);
			if(listitem == 8)ChangeVehicleColor(vehicleid, 9, 9);
			if(listitem == 9)ChangeVehicleColor(vehicleid, 0, 0);
			if(listitem == 10)ChangeVehicleColor(vehicleid, 1, 1);
		    PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
			\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
			\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Назад");
#endif
			SetPVarInt(playerid, "DlgCont", 17);
		}else{
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
		\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
		SetPVarInt(playerid, "DlgCont", 10);
		}
		return 1;
	}
 	if(dialogid == 18)//меню Установка времени
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)SetPlayerTime(playerid,0,0);
			if(listitem == 1)SetPlayerTime(playerid,1,0);
			if(listitem == 2)SetPlayerTime(playerid,2,0);
			if(listitem == 3)SetPlayerTime(playerid,3,0);
			if(listitem == 4)SetPlayerTime(playerid,4,0);
			if(listitem == 5)SetPlayerTime(playerid,5,0);
			if(listitem == 6)SetPlayerTime(playerid,6,0);
			if(listitem == 7)SetPlayerTime(playerid,7,0);
			if(listitem == 8)SetPlayerTime(playerid,8,0);
			if(listitem == 9)SetPlayerTime(playerid,9,0);
			if(listitem == 10)SetPlayerTime(playerid,10,0);
			if(listitem == 11)SetPlayerTime(playerid,11,0);
			if(listitem == 12)SetPlayerTime(playerid,12,0);
			if(listitem == 13)SetPlayerTime(playerid,13,0);
			if(listitem == 14)SetPlayerTime(playerid,14,0);
			if(listitem == 15)SetPlayerTime(playerid,15,0);
			if(listitem == 16)SetPlayerTime(playerid,16,0);
			if(listitem == 17)SetPlayerTime(playerid,17,0);
			if(listitem == 18)SetPlayerTime(playerid,18,0);
			if(listitem == 19)SetPlayerTime(playerid,19,0);
			if(listitem == 20)SetPlayerTime(playerid,20,0);
			if(listitem == 21)SetPlayerTime(playerid,21,0);
			if(listitem == 22)SetPlayerTime(playerid,22,0);
			if(listitem == 23)SetPlayerTime(playerid,23,0);
			LocTime[playerid] = listitem;
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Настройки", "Сменить цвет ника\nСменить время\
		\n{FFFF00}Сменить пароль", "OK", "Назад");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
 	if(dialogid == 37)//меню Диски
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
			{
				vehicleid = GetPlayerVehicleID(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
 				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
				\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 37);
				return 1;
			}
		    if(listitem == 0)AddVehicleComponent(vehicleid,1073);
			if(listitem == 1)AddVehicleComponent(vehicleid,1074);
			if(listitem == 2)AddVehicleComponent(vehicleid,1076);
			if(listitem == 3)AddVehicleComponent(vehicleid,1077);
			if(listitem == 4)AddVehicleComponent(vehicleid,1075);
			if(listitem == 5)AddVehicleComponent(vehicleid,1079);
			if(listitem == 6)AddVehicleComponent(vehicleid,1078);
			if(listitem == 7)AddVehicleComponent(vehicleid,1080);
			if(listitem == 8)AddVehicleComponent(vehicleid,1081);
			if(listitem == 9)AddVehicleComponent(vehicleid,1082);
			if(listitem == 10)AddVehicleComponent(vehicleid,1083);
			if(listitem == 11)AddVehicleComponent(vehicleid,1084);
			if(listitem == 12)AddVehicleComponent(vehicleid,1085);
			if(listitem >= 0 && listitem <= 12)PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			if(listitem == 13)
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 7);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
			\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Назад");
			SetPVarInt(playerid, "DlgCont", 37);
		}else{
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
		\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
		SetPVarInt(playerid, "DlgCont", 10);
		}
		return 1;
	}
 	if(dialogid == 38)//меню Винилы
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
			{
				vehicleid = GetPlayerVehicleID(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 38);
				return 1;
			}
			ChangeVehiclePaintjob(vehicleid,listitem);
		    PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Назад");
			SetPVarInt(playerid, "DlgCont", 38);
		}else{
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
		\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
		SetPVarInt(playerid, "DlgCont", 10);
		}
		return 1;
	}
    if(dialogid == 39)//меню Управление транспортом
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new carid;
			if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
			{
				carid = GetPlayerVehicleID(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
				ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Управление транспортом","{10FF00}Неон\n{30FF00}Сменить номер\
				\n{50FF00}Флипнуть\n{70FF00}Удалить авто\n{90FF00}Открыть багажник\n{B0FF00}Закрыть багажник\
				\n{D0FF00}Открыть капот\n{F0FF00}Закрыть капот\n{FFF000}Включить свет\n{FFD000}Выключить свет\
				\n{FFB000}Замкнуть двери\n{FF9000}Открыть двери\n{FF7000}Включить сигнализацию\
				\n{FF5000}Выключить сигнализацию\n{FF3000}Завести двигатель\n{FF1000}Заглушить двигатель","Выбрать","Отмена");
				SetPVarInt(playerid, "DlgCont", 39);
				return 1;
			}
			new engine,lights,alarm,doors,bonnet,boot,objective;
			if(listitem == 0)//неон
			{
				ShowPlayerDialog(playerid, 40,DIALOG_STYLE_LIST,"Неон","{FF3300}Красный\n{0033CC}Синий\n{33FF00}Зелёный\
				\n{FFFF00}Жёлтый\n{E63E85}Розовый\nБелый\nУдалить Неон","Выбрать","Отмена");
				SetPVarInt(playerid, "DlgCont", 40);
				return 1;
			}
			if(listitem == 1)//сменить номер
			{
				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Введите номера авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			if(listitem == 2)//флипнуть
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || vw > 990) { vw = 0; }
				new regm = 0, per1, per2 = vw, Float:per3, Float:cor1, Float:cor2, Float:cor3;//флипнуть
				StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
				return 1;
			}
			if(listitem == 3)//удалить авто
			{
				new car = GetPlayerVehicleID(playerid);
				if(TrainID[0] <= car <= TrainID22[0] || TrainID[1] <= car <= TrainID22[1] ||
				TrainID[2] <= car <= TrainID22[2] || TrainID[3] <= car <= TrainID22[3] ||
				TrainID[4] <= car <= TrainID22[4] || TrainID[5] <= car <= TrainID22[5] ||
				TrainID[6] <= car <= TrainID22[6] || TrainID[7] <= car <= TrainID22[7])
				{//если игрок в поезде или в вагоне сервера, то ничего не уничтожать
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Этот транспорт уничтожить нельзя !");
					return 1;
				}
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					if(CallRemoteFunction("myobjvehfunc", "d", car) != 0)//чтение ИД транспорта из скпипта myobj
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя ! Это отдельно созданный транспорт !");
						return 1;
					}
					if(CallRemoteFunction("garagefunction", "d", car) != 0)//чтение ИД транспорта из системы гаражей
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя ! Это транспорт системы гаражей !");
						return 1;
					}
					if(CallRemoteFunction("mpsysvehfunc", "d", car) != 0)//чтение ИД транспорта из системы МП
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя ! Это транспорт системы МП !");
						return 1;
					}
					if(CallRemoteFunction("dssysvehfunc", "d", car) != 0)//чтение ИД транспорта из системы дерби-сумо
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя ! Это транспорт системы дерби-сумо !");
						return 1;
					}
					if(CallRemoteFunction("basesysvehfunc", "d", car) != 0)//чтение ИД транспорта из системы баз
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя ! Это транспорт системы баз !");
						return 1;
					}
					if(CallRemoteFunction("vehsys3vehfunc", "d", car) != 0)//чтение ИД транспорта из системы личного транспорта vehsys3
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Нельзя ! Это личный транспорт игрока !");
						return 1;
					}
					for(new i=0;i<MAX_PLAYERS;i++)//удалить любой транспорт
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == car)
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
						if(GetPlayerVehicleID(playerid) == playcar[i])//удалить чужой транспорт вместе с неоном и мигалкой
						{
							if(neon[i][0] != 0) { DestroyObject(neon[i][0]); }//убрать неон
							if(neon[i][1] != 0) { DestroyObject(neon[i][1]); }//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
							if(migalka[i][0] != 0) { DestroyObject(migalka[i][0]); }//убрать мигалку
							migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
							migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
							playcar[i] = 0;//несуществующий ид транспорта
						}
						if(GetPlayerVehicleID(playerid) == neon[i][2])//удалить чужой неон и чужую мигалку на свободном транспорте
						{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
							DestroyObject(migalka[i][0]);//убрать мигалку
							migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
							migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
						}
					}
					playcarvw[car] = -100;//обнулить виртуальный мир транспорта игрока
					DestroyVehicle(car);
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
				}
				return 1;
			}
			if(listitem == 4)//открыть багажник
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,true,objective);
			}
			if(listitem == 5)//закрыть багажник
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,false,objective);
			}
			if(listitem == 6)//открыть капот
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,true,boot,objective);
			}
			if(listitem == 7)//закрыть капот
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,false,boot,objective);
			}
			if(listitem == 8)//включить свет
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,true,alarm,doors,bonnet,boot,objective);
			}
			if(listitem == 9)//выключить свет
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,false,alarm,doors,bonnet,boot,objective);
			}
			if(listitem == 10)//замкнуть двери
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,true,bonnet,boot,objective);
			}
			if(listitem == 11)//открыть двери
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,false,bonnet,boot,objective);
			}
			if(listitem == 12)//включить сигнализацию
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,true,doors,bonnet,boot,objective);
			}
			if(listitem == 13)//выключить сигнализацию
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,false,doors,bonnet,boot,objective);
			}
			if(listitem == 14)//завести двигатель
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
			}
			if(listitem == 15)//заглушить двигатель
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,false,lights,alarm,doors,bonnet,boot,objective);
			}
			ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Управление транспортом","{10FF00}Неон\n{30FF00}Сменить номер\
			\n{50FF00}Флипнуть\n{70FF00}Удалить авто\n{90FF00}Открыть багажник\n{B0FF00}Закрыть багажник\
			\n{D0FF00}Открыть капот\n{F0FF00}Закрыть капот\n{FFF000}Включить свет\n{FFD000}Выключить свет\
			\n{FFB000}Замкнуть двери\n{FF9000}Открыть двери\n{FF7000}Включить сигнализацию\
			\n{FF5000}Выключить сигнализацию\n{FF3000}Завести двигатель\n{FF1000}Заглушить двигатель","Выбрать","Отмена");
			SetPVarInt(playerid, "DlgCont", 39);
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 40)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			for(new i=0;i<MAX_PLAYERS;i++)//убрать неон с любого транспорта
			{
 				if(GetPlayerVehicleID(playerid) == neon[i][2])
		 		{
					DestroyObject(neon[i][0]);//убрать неон
					DestroyObject(neon[i][1]);//убрать неон
					neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[i][2] = 0;//несуществующий ид транспорта с неоном
		 		}
			}
			if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
			if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
			if(listitem == 0)
			{
				neon[playerid][0] = CreateObject(18647,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18647,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem == 1)
			{
				neon[playerid][0] = CreateObject(18648,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18648,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem == 2)
			{
				neon[playerid][0] = CreateObject(18649,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18649,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==3)
			{
				neon[playerid][0] = CreateObject(18650,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18650,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==4)
			{
				neon[playerid][0] = CreateObject(18651,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18651,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==5)
			{
				neon[playerid][0] = CreateObject(18652,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18652,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==6)
			{
				neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
				neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
				neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
			}
   			ShowPlayerDialog(playerid, 40,DIALOG_STYLE_LIST,"Неон","{FF3300}Красный\n{0033CC}Синий\n{33FF00}Зелёный\
			\n{FFFF00}Жёлтый\n{E63E85}Розовый\nБелый\nУдалить Неон","Выбрать","Отмена");
			SetPVarInt(playerid, "DlgCont", 40);
		}else{
		ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Управление транспортом","{10FF00}Неон\n{30FF00}Сменить номер\
		\n{50FF00}Флипнуть\n{70FF00}Удалить авто\n{90FF00}Открыть багажник\n{B0FF00}Закрыть багажник\
		\n{D0FF00}Открыть капот\n{F0FF00}Закрыть капот\n{FFF000}Включить свет\n{FFD000}Выключить свет\
		\n{FFB000}Замкнуть двери\n{FF9000}Открыть двери\n{FF7000}Включить сигнализацию\
		\n{FF5000}Выключить сигнализацию\n{FF3000}Завести двигатель\n{FF1000}Заглушить двигатель","Выбрать","Отмена");
		SetPVarInt(playerid, "DlgCont", 39);
		}
		return 1;
	}
	if(dialogid == 41)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
 				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Введите номер авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Введите номер авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			if(strlen(inputtext) > 10)
			{
				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Cлишком длинный номер!\nВведите номер авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			new Float:x,Float:y,Float:z,Float:ang,carid;
			carid = GetPlayerVehicleID(playerid);
			SetVehicleNumberPlate(carid, inputtext);
			GetVehiclePos(carid,x,y,z);
			GetVehicleZAngle(carid,ang);
			new Float:igx,Float:igy,Float:igz;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
				{
					if(GetPlayerVehicleID(i) == carid && playerid != i)
					{//если есть пассажир (пассажиры) в авто водителя, то:
						EnterTick33[i] = 1;//обход антикрашера - 3
						GetPlayerPos(i, igx, igy, igz);//высадить пассажира (пассажиров)
						SetPlayerPos(i, igx+3, igy+3, igz);
					}
					if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
					{//И этот админ наблюдает за игроком, то:
						admper5[i] = 2;//устанавливаем переключение наблюдения
					}
				}
			}
			SetVehicleToRespawn(carid);
			SetVehiclePos(carid,x,y,z);
			PutPlayerInVehicle(playerid,carid,0);
			SetVehicleZAngle(carid,ang);
		}
		ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Управление транспортом","{10FF00}Неон\n{30FF00}Сменить номер\
		\n{50FF00}Флипнуть\n{70FF00}Удалить авто\n{90FF00}Открыть багажник\n{B0FF00}Закрыть багажник\
		\n{D0FF00}Открыть капот\n{F0FF00}Закрыть капот\n{FFF000}Включить свет\n{FFD000}Выключить свет\
		\n{FFB000}Замкнуть двери\n{FF9000}Открыть двери\n{FF7000}Включить сигнализацию\
		\n{FF5000}Выключить сигнализацию\n{FF3000}Завести двигатель\n{FF1000}Заглушить двигатель","Выбрать","Отмена");
		SetPVarInt(playerid, "DlgCont", 39);
		return 1;
	}
 	if(dialogid == 42)//меню Архангел тюнинг
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
  		if(response)
    	{
			new vehicleid;
			if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
			{
				vehicleid = GetPlayerVehicleID(playerid);
				new cartype = GetVehicleModel(vehicleid);
				if(cartype != 562 && cartype != 560 && cartype != 565 &&
				cartype != 559 && cartype != 561 && cartype != 558)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть в стритрейсерском авто !!!");
					ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
					\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
					\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
					\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
					\nВыхлоп стандарт", "OK", "Назад");
					SetPVarInt(playerid, "DlgCont", 42);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть на месте водителя !");
				ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
				\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
				\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
				\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
				\nВыхлоп стандарт", "OK", "Назад");
				SetPVarInt(playerid, "DlgCont", 42);
				return 1;
			}
			new cartype = GetVehicleModel(vehicleid);
  			if(listitem == 0)//Передний бампер X-flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1172);
				if(cartype == 560)AddVehicleComponent(vehicleid,1170);
				if(cartype == 565)AddVehicleComponent(vehicleid,1152);
				if(cartype == 559)AddVehicleComponent(vehicleid,1173);
				if(cartype == 561)AddVehicleComponent(vehicleid,1157);
				if(cartype == 558)AddVehicleComponent(vehicleid,1165);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 1)//Передний бампер Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1171);
				if(cartype == 560)AddVehicleComponent(vehicleid,1169);
				if(cartype == 565)AddVehicleComponent(vehicleid,1153);
				if(cartype == 559)AddVehicleComponent(vehicleid,1160);
				if(cartype == 561)AddVehicleComponent(vehicleid,1155);
				if(cartype == 558)AddVehicleComponent(vehicleid,1166);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 2)//Передний бампер стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 10);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 3)//Задний бампер X-Flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1148);
				if(cartype == 560)AddVehicleComponent(vehicleid,1140);
				if(cartype == 565)AddVehicleComponent(vehicleid,1151);
				if(cartype == 559)AddVehicleComponent(vehicleid,1161);
				if(cartype == 561)AddVehicleComponent(vehicleid,1156);
				if(cartype == 558)AddVehicleComponent(vehicleid,1167);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 4)//Задний бампер Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1149);
				if(cartype == 560)AddVehicleComponent(vehicleid,1141);
				if(cartype == 565)AddVehicleComponent(vehicleid,1150);
				if(cartype == 559)AddVehicleComponent(vehicleid,1159);
				if(cartype == 561)AddVehicleComponent(vehicleid,1154);
				if(cartype == 558)AddVehicleComponent(vehicleid,1168);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 5)//Задний бампер стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 11);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 6)//Спойлер X-Flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1146);
				if(cartype == 560)AddVehicleComponent(vehicleid,1139);
				if(cartype == 565)AddVehicleComponent(vehicleid,1050);
				if(cartype == 559)AddVehicleComponent(vehicleid,1158);
				if(cartype == 561)AddVehicleComponent(vehicleid,1060);
				if(cartype == 558)AddVehicleComponent(vehicleid,1163);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 7)//Спойлер Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1147);
				if(cartype == 560)AddVehicleComponent(vehicleid,1138);
				if(cartype == 565)AddVehicleComponent(vehicleid,1049);
				if(cartype == 559)AddVehicleComponent(vehicleid,1162);
				if(cartype == 561)AddVehicleComponent(vehicleid,1058);
				if(cartype == 558)AddVehicleComponent(vehicleid,1164);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 8)//Удалить спойлер
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 0);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 9)//Боковые юбки X-Flow
			{
				if(cartype == 562)
				{
					AddVehicleComponent(vehicleid,1041);
					AddVehicleComponent(vehicleid,1039);
				}
				if(cartype == 560)
				{
					AddVehicleComponent(vehicleid,1031);
					AddVehicleComponent(vehicleid,1030);
				}
				if(cartype == 565)
				{
					AddVehicleComponent(vehicleid,1052);
					AddVehicleComponent(vehicleid,1048);
				}
				if(cartype == 559)
				{
					AddVehicleComponent(vehicleid,1070);
					AddVehicleComponent(vehicleid,1072);
				}
				if(cartype == 561)
				{
					AddVehicleComponent(vehicleid,1057);
					AddVehicleComponent(vehicleid,1063);
				}
				if(cartype == 558)
				{
					AddVehicleComponent(vehicleid,1093);
                	AddVehicleComponent(vehicleid,1095);
				}

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 10)//Боковые юбки Alien
			{
				if(cartype == 562)
				{
					AddVehicleComponent(vehicleid,1036);
					AddVehicleComponent(vehicleid,1040);
				}
				if(cartype == 560)
				{
					AddVehicleComponent(vehicleid,1026);
					AddVehicleComponent(vehicleid,1027);
				}
				if(cartype == 565)
				{
					AddVehicleComponent(vehicleid,1051);
					AddVehicleComponent(vehicleid,1047);
				}
				if(cartype == 559)
				{
					AddVehicleComponent(vehicleid,1069);
					AddVehicleComponent(vehicleid,1071);
				}
				if(cartype == 561)
				{
					AddVehicleComponent(vehicleid,1056);
					AddVehicleComponent(vehicleid,1062);
				}
				if(cartype == 558)
				{
					AddVehicleComponent(vehicleid,1090);
                	AddVehicleComponent(vehicleid,1094);
				}

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 11)//Боковые юбки стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 3);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 12)//Воздухозаборник X-Flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1035);
				if(cartype == 560)AddVehicleComponent(vehicleid,1033);
				if(cartype == 565)AddVehicleComponent(vehicleid,1053);
				if(cartype == 559)AddVehicleComponent(vehicleid,1068);
				if(cartype == 561)AddVehicleComponent(vehicleid,1061);
				if(cartype == 558)AddVehicleComponent(vehicleid,1091);

            	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 13)//Воздухозаборник Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1038);
				if(cartype == 560)AddVehicleComponent(vehicleid,1032);
				if(cartype == 565)AddVehicleComponent(vehicleid,1054);
				if(cartype == 559)AddVehicleComponent(vehicleid,1067);
				if(cartype == 561)AddVehicleComponent(vehicleid,1055);
				if(cartype == 558)AddVehicleComponent(vehicleid,1088);

	            PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 14)//Удалить воздухозаборник
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 2);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 15)//Выхлоп X-flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1037);
				if(cartype == 560)AddVehicleComponent(vehicleid,1029);
				if(cartype == 565)AddVehicleComponent(vehicleid,1045);
				if(cartype == 559)AddVehicleComponent(vehicleid,1066);
				if(cartype == 561)AddVehicleComponent(vehicleid,1059);
				if(cartype == 558)AddVehicleComponent(vehicleid,1089);

                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
            if(listitem == 16)//Выхлоп Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1034);
				if(cartype == 560)AddVehicleComponent(vehicleid,1028);
				if(cartype == 565)AddVehicleComponent(vehicleid,1046);
				if(cartype == 559)AddVehicleComponent(vehicleid,1065);
				if(cartype == 561)AddVehicleComponent(vehicleid,1064);
				if(cartype == 558)AddVehicleComponent(vehicleid,1092);

                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 17)//Выхлоп стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 6);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
			\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
			\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
			\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
			\nВыхлоп стандарт", "OK", "Назад");
			SetPVarInt(playerid, "DlgCont", 42);
 		}else{
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Тюнинг меню", "Диски\nГидравлика\nУдалить гидравлику\
		\nАрхангел Тюнинг\nЦвет\nВинилы\nМигалка\nУдалить мигалку\nАвторемонт", "Выбрать", "Назад");
		SetPVarInt(playerid, "DlgCont", 10);
		}
		return 1;
	}
	if(dialogid == 11)//меню Транспорт
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 562, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Elegy {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 1)
			{
				new vehid = 560, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Sultan {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 2)
			{
				new vehid = 411, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Infernus {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 3)
			{
				new vehid = 429, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Banshee {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 4)
			{
				new vehid = 402, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Buffalo {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 415, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Cheetah {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 6)
			{
				new vehid = 451, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Turismo {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 7)
			{
				new vehid = 558, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Uranus {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 8)
			{
				new vehid = 541, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Bullet {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 9)
			{
				new vehid = 559, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Jester {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 10)
			{
				new vehid = 603, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Phoenix {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 11)
			{
				new vehid = 506, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Super GT {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 12)
			{
				new vehid = 565, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Flash {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 13)
			{
				new vehid = 477, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}ZR-350 {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 14)
			{
				new vehid = 579, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Huntley {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 15)
			{
				new vehid = 409, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Stretch {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 16)
			{
				new vehid = 431, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Bus {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 17)
			{
				new vehid = 444, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Monster {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 18)
			{
				new vehid = 596, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Police Los Santos {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 19)
			{
				new vehid = 420, vehcol1 = 6, vehcol2 = 6, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Taxi {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 20)
			{
				new vehid = 522, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}NRG-500 {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 21)
			{
				new vehid = 468, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Sanchez {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 22)
			{
				new vehid = 571, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Kart {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 23)
			{
				new vehid = 481, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}BMX {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 24)
			{
				new vehid = 510, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Mountain Bike {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 25)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В зоне дерби этот транспорт запрещён !");
					ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Транспорт", "{00FF00}Elegy\nSultan\nInfernus\nBanshee\nBuffalo\
					\nCheetah\nTurismo\nUranus\nBullet\nJester\nPhoenix\nSuper GT\nFlash\nZR-350\nHuntley\nStretch\nBus\nMonster\
					\nPolice Los Santos\nTaxi\nNRG-500\nSanchez\nKart\nBMX\nMountain Bike\nMaverick\nShamal\nBeagle\nJetmax", "OK", "Назад");
					SetPVarInt(playerid, "DlgCont", 11);
					return 1;
				}
				new vehid = 487, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Maverick {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 26)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В зоне дерби этот транспорт запрещён !");
					ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Транспорт", "{00FF00}Elegy\nSultan\nInfernus\nBanshee\nBuffalo\
					\nCheetah\nTurismo\nUranus\nBullet\nJester\nPhoenix\nSuper GT\nFlash\nZR-350\nHuntley\nStretch\nBus\nMonster\
					\nPolice Los Santos\nTaxi\nNRG-500\nSanchez\nKart\nBMX\nMountain Bike\nMaverick\nShamal\nBeagle\nJetmax", "OK", "Назад");
					SetPVarInt(playerid, "DlgCont", 11);
					return 1;
				}
				new vehid = 519, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Shamal {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 27)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В зоне дерби этот транспорт запрещён !");
					ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Транспорт", "{00FF00}Elegy\nSultan\nInfernus\nBanshee\nBuffalo\
					\nCheetah\nTurismo\nUranus\nBullet\nJester\nPhoenix\nSuper GT\nFlash\nZR-350\nHuntley\nStretch\nBus\nMonster\
					\nPolice Los Santos\nTaxi\nNRG-500\nSanchez\nKart\nBMX\nMountain Bike\nMaverick\nShamal\nBeagle\nJetmax", "OK", "Назад");
					SetPVarInt(playerid, "DlgCont", 11);
					return 1;
				}
				new vehid = 511, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Beagle {1e90ff}заспавнен");
				return 1;
			}
			if(listitem == 28)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В зоне дерби этот транспорт запрещён !");
					ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Транспорт", "{00FF00}Elegy\nSultan\nInfernus\nBanshee\nBuffalo\
					\nCheetah\nTurismo\nUranus\nBullet\nJester\nPhoenix\nSuper GT\nFlash\nZR-350\nHuntley\nStretch\nBus\nMonster\
					\nPolice Los Santos\nTaxi\nNRG-500\nSanchez\nKart\nBMX\nMountain Bike\nMaverick\nShamal\nBeagle\nJetmax", "OK", "Назад");
					SetPVarInt(playerid, "DlgCont", 11);
					return 1;
				}
				new vehid = 493, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {07ff00}Jetmax {1e90ff}заспавнен");
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 13)//меню Управление персонажем
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				if(StopHeal[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
				{//И игрок НЕ админ, то:
					new dopcis;
					dopcis = FCislit(StopHeal[playerid]);
					switch(dopcis)
					{
						case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHeal[playerid]);
						case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHeal[playerid]);
						case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHeal[playerid]);
					}
					SendClientMessage(playerid,COLOR_RED,string);
				}
				else//иначе:
				{
					SetPlayerArmour(playerid,100);
					if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
					{
						StopHeal[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
					}
				}
				return 1;
			}
			if(listitem == 1)
			{
				if(StopHeal[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
				{//И игрок НЕ админ, то:
					new dopcis;
					dopcis = FCislit(StopHeal[playerid]);
					switch(dopcis)
					{
						case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHeal[playerid]);
						case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHeal[playerid]);
						case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHeal[playerid]);
					}
					SendClientMessage(playerid,COLOR_RED,string);
				}
				else//иначе:
				{
					SetPlayerHealth(playerid,100);
					if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
					{
						StopHeal[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
					}
				}
				return 1;
			}
			if(listitem == 2)
			{

				if(PGang[playerid] > 0 && GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500 && (PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pPolice] == 0))//Gangs system
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка !","Если Вы состоите в банде, и на Вашем уровне\nустановлен скин, то для изменения скина Вам\
					\nнужно иметь уровень полиции, или быть админом !!!","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}

	    		ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Смена стиля боя", "Normal\nBoxing\nKung Fu\nKnee-head\nGrab-kick\nElbow", "Выбрать", "Отмена");
				SetPVarInt(playerid, "DlgCont", 50);
				return 1;
			}
			if(listitem == 4)
			{
				SetPlayerAttachedObject(playerid, 2, 19066, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);//новогодняя шапка
				return 1;
			}
			if(listitem == 5)
			{
				RemovePlayerAttachedObject(playerid, 2);//убрать новогоднюю шапку
				return 1;
			}
			if(listitem == 6)
			{
				SetPlayerArmour(playerid,0);
				SetPlayerHealth(playerid,0);
			}
			if(listitem == 7)
			{
				STATPlayer(playerid);
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 14)//меню ДеадМатчи
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			PlayCRTP[playerid] = 1;//блокировка контроля координат
			ResetPlayerWeapons(playerid);//отобрать оружие
			GivePlayerWeapon(playerid, 24, 500);//заполнение слотов оружия игрока перед DM
			GivePlayerWeapon(playerid, 26, 500);
			GivePlayerWeapon(playerid, 28, 500);
			if(listitem == 0)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17001);
			 	SetPlayerPos(playerid, 2139.94, -2271.36, 17.56);//DM зона 1
				return 1;
			}
			if(listitem == 1)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17002);
			 	SetPlayerPos(playerid, 2835.86, -2530.64, 17.95);//DM зона 2
				return 1;
			}
			if(listitem == 2)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17003);
			 	SetPlayerPos(playerid, -1506.37, 1373.91, 3.76);//DM зона 3
				return 1;
			}
			if(listitem == 3)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17004);
			 	SetPlayerPos(playerid, -1471.53, 1489.39, 8.25);//DM зона 4
				return 1;
			}
			if(listitem == 4)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17005);
			 	SetPlayerPos(playerid, -1456.70, 501.27, 10.01);//DM зона 5
				return 1;
			}
			if(listitem == 5)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17006);
			 	SetPlayerPos(playerid, -2349.67, 1540.60, 26.05);//DM зона 6
				return 1;
			}
			if(listitem == 6)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17007);
			 	SetPlayerPos(playerid, -1300.47, 2516.26, 87.15);//DM зона 7
				return 1;
			}
			if(listitem == 7)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17008);
			 	SetPlayerPos(playerid, -311.58, 1529.81, 75.35);//DM зона 8
				return 1;
			}
			if(listitem == 8)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17009);
			 	SetPlayerPos(playerid, 2529.02, -1712.72, 13.48);//DM зона 9
				return 1;
			}
			if(listitem == 9)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 17010);
			 	SetPlayerPos(playerid, 20.35, 1483.39, 12.75);//DM зона 10
				return 1;
			}
			if(listitem == 10)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 18001);
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);
				SetCameraBehindPlayer(playerid);//DM мир 1
				return 1;
			}
			if(listitem == 11)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 18002);
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);
				SetCameraBehindPlayer(playerid);//DM мир 2
				return 1;
			}
			if(listitem == 12)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 18003);
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);
				SetCameraBehindPlayer(playerid);//DM мир 3
				return 1;
			}
			if(listitem == 13)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 18004);
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);
				SetCameraBehindPlayer(playerid);//DM мир 4
				return 1;
			}
			if(listitem == 14)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 18005);
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);
				SetCameraBehindPlayer(playerid);//DM мир 5
				return 1;
			}
			if(listitem == 15)
			{
				DestrCar(playerid);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);
				SetCameraBehindPlayer(playerid);//Выйти из DM мира
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 15)//меню Радио
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(NRadio[playerid] == listitem && listitem == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, у Вас уже выключено радио !");
				format(strdln, sizeof(strdln), "{027FFE}Выключить радио\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
				NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
				NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
				ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "{FFFF00}Радио", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 15);
				return 1;
			}
			if(NRadio[playerid] == listitem && listitem != 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, у Вас уже включено выбранное Вами радио !");
				format(strdln, sizeof(strdln), "{027FFE}Выключить радио\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
				NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
				NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
				ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "{FFFF00}Радио", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 15);
				return 1;
			}
			if(listitem == 0)
			{
				NRadio[playerid] = 0;//несуществующее радио
				StopAudioStreamForPlayer(playerid);//отключим любой поток
				SendClientMessage(playerid, COLOR_GREY, " Вы выключили радио");
				printf("[radio] Игрок %s выключил радио.", RealName[playerid]);
			}
			else
			{
				NRadio[playerid] = listitem;//номер подключаемого радио
				StopAudioStreamForPlayer(playerid);//отключим любой другой поток
				PlayAudioStreamForPlayer(playerid, STRadio[listitem]);//подключим поток с музыкой
				format(string, sizeof(string), " Вы включили радио %s", NMRadio[listitem]);
				SendClientMessage(playerid, COLOR_GREY, string);
				printf("[radio] Игрок %s включил радио %s .", RealName[playerid], NMRadio[listitem]);
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 43)//меню Анимации
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			SetTimerEx("DopAnim", 300, 0, "ii", playerid, listitem);
			if(listitem == 0)
			{
//				SendClientMessage(playerid, COLOR_RED, "В разработке.");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);//поднять руки
				return 1;
			}
			if(listitem == 1)
			{
				ApplyAnimation(playerid,"PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 0);//сесть-1
				return 1;
			}
			if(listitem == 2)
			{
				ApplyAnimation(playerid,"Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 0, 0);//сесть-2
				return 1;
			}
			if(listitem == 3)
			{
				ApplyAnimation(playerid,"CRACK", "crckidle2", 4.1 ,0 ,0 ,0 ,1 ,0 ,0);//лечь
				return 1;
			}
			if(listitem == 4)
			{
				ApplyAnimation(playerid,"PED", "IDLE_chat", 4.1, 1, 1, 1, 0, 0, 0);//разговаривать
				return 1;
			}
			if(listitem == 5)
			{
				new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:angle, Float:angle2, Float:anglexx;
				new plint, plvw;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, angle);
				plint = GetPlayerInterior(playerid);
				plvw = GetPlayerVirtualWorld(playerid);
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerInterior(i) == plint && GetPlayerVirtualWorld(i) == plvw && playerid != i)
						{
							GetPlayerPos(i, x2, y2, z2);
							GetPlayerFacingAngle(i, angle2);
							anglexx = angle - angle2;
							if(anglexx < 0){anglexx = anglexx * -1;}
							if((-1<(x-x2)<1 && -1<(y-y2)<1 && -1<(z-z2)<1) && (x != x2 || y != y2 || z != z2) && (anglexx > 150 && anglexx < 210))
							{
								ApplyAnimation(playerid,"GANGS", "hndshkfa", 4.1, 0, 0, 0, 0, 0, 0);//рукопожатие
								ApplyAnimation(i,"GANGS", "hndshkfa", 4.1, 0, 0, 0, 0, 0, 0);//рукопожатие
								return 1;
							}
						}
					}
				}
				return 1;
			}
			if(listitem == 6)
			{
				new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:angle, Float:angle2, Float:anglexx;
				new plint, plvw;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, angle);
				plint = GetPlayerInterior(playerid);
				plvw = GetPlayerVirtualWorld(playerid);
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerInterior(i) == plint && GetPlayerVirtualWorld(i) == plvw && playerid != i)
						{
							GetPlayerPos(i, x2, y2, z2);
							GetPlayerFacingAngle(i, angle2);
							anglexx = angle - angle2;
							if(anglexx < 0){anglexx = anglexx * -1;}
							if((-1<(x-x2)<1 && -1<(y-y2)<1 && -1<(z-z2)<1) && (x != x2 || y != y2 || z != z2) && (anglexx > 150 && anglexx < 210))
							{
								ApplyAnimation(playerid,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
								ApplyAnimation(i,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
								SetTimerEx("DopAnim22", 400, 0, "ii", playerid, i);
								return 1;
							}
						}
					}
				}
				return 1;
			}
			if(listitem == 7)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);//звонить по телефону
				return 1;
			}
			if(listitem == 8)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);//убрать телефон
				return 1;
			}
			if(listitem == 9)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);//танец-1
				return 1;
			}
			if(listitem == 10)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);//танец-2
				return 1;
			}
			if(listitem == 11)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);//танец-3
				return 1;
			}
			if(listitem == 12)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);//танец-4
				return 1;
			}
			if(listitem == 13)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);//спрайт
				return 1;
			}
			if(listitem == 14)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);//сигарета
				return 1;
			}
			if(listitem == 15)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);//пиво
				return 1;
			}
			if(listitem == 16)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);//вино
				return 1;
			}
			if(listitem == 17)
			{
				ApplyAnimation(playerid,"PED", "WALK_drunk", 4.1, 1, 1, 1, 0, 0, 0);//набухаться
				return 1;
			}
			if(listitem == 18)
			{
				SetPlayerSpecialAction(playerid, 68);
//				ApplyAnimation(playerid,"PAULNMAC", "Piss_loop", 4.1, 0, 0, 0, 0, 0, 0);//справить малую нужду
				return 1;
			}
			if(listitem == 19)
			{
				ClearAnimations(playerid);//остановить анимацию
				return 1;
			}
			if(listitem == 20)
			{
				SetPlayerDrunkLevel(playerid, 0);//убрать степень опьянения
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 44)//смена цвета ника
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			ColorPlay[playerid] = ColNick[listitem];
			SetPlayerColor(playerid, ColorPlay[playerid]);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
			}

   			if(PGang[playerid] > 0)//Gangs system
			{
				ShowPlayerDialog(playerid,2,0,"Информация.","У Вас поменялся цвет ника, но цвет в чате\
				\nостался в цвете Вашей банды.","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
			}

		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Настройки", "Сменить цвет ника\nСменить время\
		\n{FFFF00}Сменить пароль", "OK", "Назад");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
	if(dialogid == 45)//меню Телепорты
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			PlayCRTP[playerid] = 1;//блокировка контроля координат
			if(listitem == 0)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -330.839355, Float:cor2 = 1522.886596, Float:cor3 = 75.359375+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Большое Ухо
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -330.839355, 1522.886596, 75.359375+1);//Большое Ухо
				}
				return 1;
			}
			if(listitem == 1)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 2492.007568, Float:cor2 = -1666.290527, Float:cor3 = 13.343750+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Грув
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 2492.007568, -1666.290527, 13.343750+1);//Грув
				}
				return 1;
			}
			if(listitem == 2)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -2201.898437, Float:cor2 = -992.045593, Float:cor3 = 36.601806+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Холм San Fierro
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -2201.898437, -992.045593, 36.601806+1);//Холм San Fierro
				}
				return 1;
			}
			if(listitem == 3)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1579.506713, Float:cor2 = -2378.161132, Float:cor3 = 13.375000+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Аэропорт Лос Сантоса
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1579.506713, -2378.161132, 13.375000+1);//Аэропорт Лос Сантоса
				}
				return 1;
			}
			if(listitem == 4)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1241.1146, Float:cor2 = -745.0139, Float:cor3 = 95.0895+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Гора Вайнвуд
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1241.1146, -745.0139, 95.0895+1);//Гора Вайнвуд
				}
				return 1;
			}
			if(listitem == 5)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -878.056945, Float:cor2 = 566.045166, Float:cor3 = 3.046266+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Островок раздолья
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -878.056945, 566.045166, 3.046266+1);//Островок раздолья
				}
				return 1;
			}
			if(listitem == 6)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -123.211082, Float:cor2 = 578.542785, Float:cor3 = 2.884790+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Форт Карсон
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -123.211082, 578.542785, 2.884790+1);//Форт Карсон
				}
				return 1;
			}
			if(listitem == 7)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1693.854858, Float:cor2 = 945.497314, Float:cor3 = 10.793813+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Парковка
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1693.854858, 945.497314, 10.793813+1);//Парковка
				}
				return 1;
			}
			if(listitem == 8)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -1195.292114, Float:cor2 = 16.669136, Float:cor3 = 14.148437+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Пирс в Аэропорту SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -1195.292114, 16.669136, 14.148437+1);//Пирс в Аэропорту SF
				}
				return 1;
			}
			if(listitem == 9)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -1661.367919, Float:cor2 = -233.015777, Float:cor3 = 14.148437+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Взлётная полоса Аэропорта SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -1661.367919, -233.015777, 14.148437+1);//Взлётная полоса Аэропорта SF
				}
				return 1;
			}
			if(listitem == 10)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 2611.990722, Float:cor2 = -2240.047607, Float:cor3 = 13.539176+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Спринт
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 2611.990722, -2240.047607, 13.539176+1);//Спринт
				}
				return 1;
			}
			if(listitem == 11)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -430.167083, Float:cor2 = 2504.743164, Float:cor3 = 124.833534+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Сумо
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -430.167083, 2504.743164, 124.833534+1);//Сумо
				}
				return 1;
			}
			if(listitem == 12)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 406.1716, Float:cor2 = 2442.7126, Float:cor3 = 16.5000+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Заброшенный Аэропорт
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 406.1716, 2442.7126, 16.5000+1);//Заброшенный Аэропорт
				}
				return 1;
			}
			if(listitem == 13)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -2322.2446, Float:cor2 = -1621.0658, Float:cor3 = 483.7108+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Гора Чиллиад
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -2322.2446, -1621.0658, 483.7108+1);//Гора Чиллиад
				}
				return 1;
			}
			if(listitem == 14)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -777.401062, Float:cor2 = 1931.802001, Float:cor3 = 4.000000+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -777.401062, 1931.802001, 4.000000+1);//Дрифт трасса
				}
				return 1;
			}
			if(listitem == 15)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 331.761199, Float:cor2 = -1846.912353, Float:cor3 = 3.420019+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Аквапарк
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 331.761199, -1846.912353, 3.420019+1);//Аквапарк
				}
				return 1;
			}
			if(listitem == 16)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 370.03, Float:cor2 = -2026.16, Float:cor3 = 7.67+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Драг LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 370.03, -2026.16, 7.67+1);//Драг LS
				}
				return 1;
			}
			if(listitem == 17)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 5853.88, Float:cor2 = 894.52, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 5853.88, 894.52, 11.00+1);//Дрифт трасса 2
				}
				return 1;
			}
			if(listitem == 18)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1520.302368, Float:cor2 = 1190.935913, Float:cor3 = 10.812500+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Взлётная полоса Аэропорта LV
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1520.302368, 1190.935913, 10.812500+1);//Взлётная полоса Аэропорта LV
				}
				return 1;
			}
			if(listitem == 19)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -1665.142822, Float:cor2 = 289.960113, Float:cor3 = 7.187500+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -1665.142822, 289.960113, 7.187500+1);//Дрифт SF
				}
				return 1;
			}
			if(listitem == 20)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 5813.85, Float:cor2 = 2907.17, Float:cor3 = 11.03+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса 3
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 5813.85, 2907.17, 11.03+1);//Дрифт трасса 3
				}
				return 1;
			}
			if(listitem == 21)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 6276.00, Float:cor2 = -3292.84, Float:cor3 = 11.63+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт островок
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 6276.00, -3292.84, 11.63+1);//Дрифт островок
				}
				return 1;
			}
			if(listitem == 22)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -2589.0078, Float:cor2 = 1351.3533, Float:cor3 = 7.0462+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Клуб Джиззи
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -2589.0078, 1351.3533, 7.0462+1);//Клуб Джиззи
				}
				return 1;
			}
			if(listitem == 23)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 45.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//VIP-Остров 1
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 45.00, 5867.00, 11.00+1);//VIP-Остров 1
				}
				return 1;
			}
			if(listitem == 24)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 12045.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//VIP-Остров 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 12045.00, 5867.00, 11.00+1);//VIP-Остров 2
				}
				return 1;
			}
			if(listitem == 25)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 2098.373779, Float:cor2 = 1968.814941, Float:cor3 = 10.814767+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт LV
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 2098.373779, 1968.814941, 10.814767+1);//Дрифт LV
				}
				return 1;
			}
			if(listitem == 26)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -2955.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Зимний остров
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -2955.00, 5867.00, 11.00+1);//Зимний остров
				}
				return 1;
			}
			if(listitem == 27)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1567.494750, Float:cor2 = 712.591613, Float:cor3 = 10.869047+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Склад Симметрия
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1567.494750, 712.591613, 10.869047+1);//Склад Симметрия
				}
				return 1;
			}
			if(listitem == 28)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 2326.265869, Float:cor2 = 1405.049682, Float:cor3 = 42.820312+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Парковка LV
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 2326.265869, 1405.049682, 42.820312+1);//Парковка LV
				}
				return 1;
			}
			if(listitem == 29)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -1980.0601, Float:cor2 = 253.1375, Float:cor3 = 35.1719+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Автосалон SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -1980.0601, 253.1375, 35.1719+1);//Автосалон SF
				}
				return 1;
			}
			if(listitem == 30)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -402.3530, Float:cor2 = 1226.7317, Float:cor3 = 5.1702+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Пещера
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -402.3530, 1226.7317, 5.1702+1);//Пещера
				}
				return 1;
			}
			if(listitem == 31)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -1476.639160, Float:cor2 = 433.979278, Float:cor3 = 30.546325+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт SF 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -1476.639160, 433.979278, 30.546325+1);//Дрифт SF 2
				}
				return 1;
			}
			if(listitem == 32)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 2818.26, Float:cor2 = -5739.77, Float:cor3 = 11.99+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 2818.26, -5739.77, 11.99+1);//Дрифт трасса 4
				}
				return 1;
			}
			if(listitem == 33)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 496.13, Float:cor2 = 6077.00, Float:cor3 = 10.92+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Драг
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 496.13, 6077.00, 10.92+1);//Драг
				}
				return 1;
			}
			if(listitem == 34)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1911.349731, Float:cor2 = -2276.981445, Float:cor3 = 13.554312+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Stunt LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1911.349731, -2276.981445, 13.554312+1);//Stunt LS
				}
				return 1;
			}
			if(listitem == 35)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 =  9045.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//DM остров
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 9045.00, 5867.00, 11.00+1);//DM остров
				}
				return 1;
			}
			if(listitem == 36)
			{
				if(LineStat[1] == 1)
				{
					new vw = GetPlayerVirtualWorld(playerid);
					if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2 = vw, Float:per3 = 89.00, Float:cor1 = 2865.18, Float:cor2 = -1657.29, Float:cor3 = 10.88+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 1
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, vw);
			 			SetPlayerPos(playerid, 2865.18, -1657.29, 10.88+1);
						SetPlayerFacingAngle(playerid, 89.00);
						SetCameraBehindPlayer(playerid);//трасса 1
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 1 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 37)
			{
				if(LineStat[2] == 1)
				{
					new vw = GetPlayerVirtualWorld(playerid);
					if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2 = vw, Float:per3 = 167.00, Float:cor1 = 500.85, Float:cor2 = -281.20, Float:cor3 = 40.21+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 2
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, vw);
			 			SetPlayerPos(playerid, 500.85, -281.20, 40.21+1);
						SetPlayerFacingAngle(playerid, 167.00);
						SetCameraBehindPlayer(playerid);//трасса 3
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 2 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 38)
			{
				if(LineStat[3] == 1)
				{
					new vw = GetPlayerVirtualWorld(playerid);
					if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2 = vw, Float:per3 = 181.00, Float:cor1 = -2421.23, Float:cor2 = 19.95, Float:cor3 = 35.09+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 3
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, vw);
			 			SetPlayerPos(playerid, -2421.23, 19.95, 35.09+1);
						SetPlayerFacingAngle(playerid, 181.00);
						SetCameraBehindPlayer(playerid);//трасса 3
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 3 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 39)
			{
				if(LineStat[4] == 1)
				{
					new vw = GetPlayerVirtualWorld(playerid);
					if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2 = vw, Float:per3 = 202.00, Float:cor1 = -1415.81, Float:cor2 = 2318.55, Float:cor3 = 54.48+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 4
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, vw);
			 			SetPlayerPos(playerid, -1415.81, 2318.55, 54.48+1);
						SetPlayerFacingAngle(playerid, 202.00);
						SetCameraBehindPlayer(playerid);//трасса 4
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 4 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 40)
			{
				if(LineStat[5] == 1)
				{
					new vw = GetPlayerVirtualWorld(playerid);
					if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2 = vw, Float:per3 = 1.00, Float:cor1 = 2708.81, Float:cor2 = 1736.47, Float:cor3 = 6.74+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 5
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, vw);
			 			SetPlayerPos(playerid, 2708.81, 1736.47, 6.74+1);
						SetPlayerFacingAngle(playerid, 1.00);
						SetCameraBehindPlayer(playerid);//трасса 5
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 5 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 41)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				DestrCar(playerid);
				tpdrift[playerid] = 1;
				new per1 = 15, per2 = vw, Float:cor1 = -1487.27, Float:cor2 = 949.43, Float:cor3 = 1036.84+1;//Дерби 1
				SetTimerEx("TPDerby", 500, 0, "dddfff", playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3);
				return 1;
			}
			if(listitem == 42)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				DestrCar(playerid);
				tpdrift[playerid] = 1;
				new per1 = 14, per2 = vw, Float:cor1 = -1464.78, Float:cor2 = 1557.51, Float:cor3 = 1052.53+1;//Дерби 2
				SetTimerEx("TPDerby", 500, 0, "dddfff", playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3);
				return 1;
			}
			if(listitem == 43)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -2961.64, Float:cor2 = -5889.14, Float:cor3 = 590.60+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт-спираль
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -2961.64, -5889.14, 590.60+1);//Дрифт-спираль
				}
				return 1;
			}
			if(listitem == 44)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -2023.99, Float:cor2 = -134.94, Float:cor3 = 35.29+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт-восьмёрка
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -2023.99, -134.94, 35.29+1);//Дрифт-восьмёрка
				}
				return 1;
			}
			if(listitem == 45)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -6687.05, Float:cor2 = -3019.09, Float:cor3 = 7.36+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Драг 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -6687.05, -3019.09, 7.36+1);//Драг 2
				}
				return 1;
			}
			if(listitem == 46)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -6027.63, Float:cor2 = 2858.69, Float:cor3 = 48.70+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт островок 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -6027.63, 2858.69, 48.70+1);//Дрифт островок 2
				}
				return 1;
			}
			if(listitem == 47)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 3442.73, Float:cor2 = 3438.16, Float:cor3 = 7.04+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса 5
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 3442.73, 3438.16, 7.04+1);//Дрифт трасса 5
				}
				return 1;
			}
			if(listitem == 48)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 1131.86, Float:cor2 = 2337.27, Float:cor3 = 16.71+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Парковка LV 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 1131.86, 2337.27, 16.71+1);//Парковка LV 2
				}
				return 1;
			}
			if(listitem == 49)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 2411.72, Float:cor2 = -4119.59, Float:cor3 = 13.69+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса 6
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 2411.72, -4119.59, 13.69+1);//Дрифт трасса 6
				}
				return 1;
			}
			if(listitem == 50)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 9121.15, Float:cor2 = 2941.34, Float:cor3 = 11.18+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт трасса 7
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 9121.15, 2941.34, 11.18+1);//Дрифт трасса 7
				}
				return 1;
			}
			if(listitem == 51)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -9273.04, Float:cor2 = -6014.93, Float:cor3 = 11.48+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 8
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -9273.04, -6014.93, 11.48+1);//дрифт-трасса 8
				}
				return 1;
			}
			if(listitem == 52)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -5937.48, Float:cor2 = -6142.41, Float:cor3 = 10.36+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 9
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -5937.48, -6142.41, 10.36+1);//дрифт-трасса 9
				}
				return 1;
			}
			if(listitem == 53)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -9051.16, Float:cor2 = -8925.66, Float:cor3 = 5.34+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 10
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -9051.16, -8925.66, 5.34+1);//дрифт-трасса 10
				}
				return 1;
			}
			if(listitem == 54)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -6211.97, Float:cor2 = -8966.21, Float:cor3 = 18.80+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 11
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -6211.97, -8966.21, 18.80+1);//дрифт-трасса 11
				}
				return 1;
			}
			if(listitem == 55)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -3032.29, Float:cor2 = -8935.98, Float:cor3 = 16.30+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 12
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -3032.29, -8935.98, 16.30+1);//дрифт-трасса 12
				}
				return 1;
			}
			if(listitem == 56)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -229.41, Float:cor2 = -8371.25, Float:cor3 = 11.59+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 13
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -229.41, -8371.25, 11.59+1);//дрифт-трасса 13
				}
				return 1;
			}
			if(listitem == 57)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = 3108.82, Float:cor2 = -8963.74, Float:cor3 = 33.98+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 14
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, 3108.82, -8963.74, 33.98+1);//дрифт-трасса 14
				}
				return 1;
			}
			if(listitem == 58)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -8722.82, Float:cor2 = 6152.05, Float:cor3 = 27.17+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 1
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -8722.82, 6152.05, 27.17+1);//Мото-паркур 1
				}
				return 1;
			}
			if(listitem == 59)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -8708.47, Float:cor2 = 3363.80, Float:cor3 = 25.48+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -8708.47, 3363.80, 25.48+1);//Мото-паркур 2
				}
				return 1;
			}
			if(listitem == 60)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -8905.41, Float:cor2 = -190.98, Float:cor3 = 163.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 3
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -8905.41, -190.98, 163.72+1);//Мото-паркур 3
				}
				return 1;
			}
#if (MOD11INS <= 3)
			if(listitem == 61)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -8955.26, Float:cor2 = -3241.27, Float:cor3 = 13.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -8955.26, -3241.27, 13.72+1);//Мото-паркур 4
				}
			}
#endif
#if (MOD11INS == 4)
			if(listitem == 61)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -8955.26, Float:cor2 = -3241.27, Float:cor3 = 13.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -8955.26, -3241.27, 13.72+1);//Мото-паркур 4
				}
				return 1;
			}
			if(listitem == 62)
			{
				new vw = GetPlayerVirtualWorld(playerid);
				if(vw < 0 || (vw > 990 && vw < 18001) || vw > 18999) { vw = 0; }
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2 = vw, Float:per3, Float:cor1 = -122.11, Float:cor2 = -5816.30, Float:cor3 = 10.31+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Стант-остров
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, vw);
			 		SetPlayerPos(playerid, -122.11, -5816.30, 10.31+1);//Стант-остров
				}
			}
#endif
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 12)//меню Настройки
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{

   				if(PGang[playerid] > 0 && (PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pPolice] == 0))//Gangs system
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка !","Если Вы состоите в банде, то для изменения цвета\
					\nВам нужно иметь уровень полиции, или быть админом !!!","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}

				ShowPlayerDialog(playerid, 44, DIALOG_STYLE_LIST, "Цвет ника", "{FF0000}Красный\n{FF3F3F}Светло-красный\
				\n{FF3F00}Кирпичный\n{BF3F00}Коричневый\n{FF7F3F}Светло-коричневый\n{FF7F00}Оранжевый\n{FFFF00}Жёлтый\
				\n{3FFF3F}Светло-зелёный\n{00FF00}Зелёный\n{00BF00}Тёмно-зелёный\n{00FFFF}Бирюзовый\n{00BFFF}Голубой\
				\n{3F3FFF}Светло-синий\n{0000FF}Синий\n{7F3FFF}Светло-фиолетовый\n{7F00FF}Фиолетовый\
				\n{FF00FF}Сиреневый\n{7F7F7F}Серый\n{FFFFFF}Невидимый", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 44);
				return 1;
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 18, DIALOG_STYLE_LIST, "Установка времени", "00:00\n01:00\n02:00\n03:00\n04:00\n05:00\n06:00\n07:00\n08:00\n09:00\n10:00\n11:00\n12:00\n13:00\n14:00\n15:00\n16:00\n17:00\n18:00\n19:00\n20:00\n21:00\n22:00\n23:00", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 18);
				return 1;
			}
			if(listitem == 2)
			{
	    		ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
		}else{

		//Gangs system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 49)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
 				ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
    		if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
 				ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
			if(strlen(inputtext) > 0 && strcmp(inputtext, PlayerInfo[playerid][pKey], false) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы ввели свой старый пароль !!!");
 				ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
			format(string, 256, " Игрок %s [%d] сменил свой пароль на (%s) FP: (%s) .", RealName[playerid], playerid, inputtext, PlayerInfo[playerid][pKey]);
			print(string);
			format(string, 256, " Вы сменили свой пароль на (%s)", inputtext);
			SendClientMessage(playerid, COLOR_GREEN, string);
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, strlen(inputtext), 64);
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Настройки", "Сменить цвет ника\nСменить время\
		\n{FFFF00}Сменить пароль", "OK", "Назад");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
	if(dialogid == 50)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				return 1;
			}
	    	if(listitem == 1)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				return 1;
			}
			if(listitem == 2)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				return 1;
			}
			if(listitem == 3)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				return 1;
			}
			if(listitem == 4)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
				return 1;
			}
			if(listitem == 5)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
			}
		}else{
		ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Управление Персонажем", "Пополнить броню\
		\nПополнить жизнь\nСменить скин\n{00FF00}Сменить стиль боя\nНовогодняя шапка\nУбрать новогоднюю шапку\
		\n{E03515}Самоубийство\nПросмотреть собственную статистику", "OK", "Назад");
		SetPVarInt(playerid, "DlgCont", 13);
		}
		return 1;
	}

	if(dialogid == 1001)//Gangs system
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
		    switch(listitem)
		    {
		        case 0:
		        {
		            if((PGang[playerid] == 0 || PGang[playerid] == -600) && GetPVarInt(playerid, "PlMon") >= 1000000)
					{
						if(GetFreeGang() >= (MAX_GANGS - 1))
						{
							printf("[GangsSystem] %s [%d] не смог создать банду (лимит банд исчерпан).", RealName[playerid], playerid);
							SendClientMessage(playerid, 0xFF0000FF, "Банда не может быть создана ( лимит банд исчерпан ) !");
							return true;
						}
	                	ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1002);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы не должны состоять ни в какой банде, и у Вас должно быть как минимум 1000000 $.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
				}
		        case 1:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1016, DIALOG_STYLE_MSGBOX, "Удаление банды", "Вы точно хотите удалить свою банду?", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1016);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 2:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1011, DIALOG_STYLE_LIST, "Назначение скинов банды", "1 - Начинающий\n2 - Игрок\n3 - Про игрок\n4 - Элита\n5 - Зам лидера\n6 - Лидер", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1011);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 3:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1010, DIALOG_STYLE_MSGBOX, "Назначение спавна банды", "Вы точно хотите назначить место спавна на этом месте?", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1010);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 4:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
						if(GSpawnX[PGang[playerid]] == 0.00 && GSpawnY[PGang[playerid]] == 0.00 && GSpawnZ[PGang[playerid]] == 0.00 &&
						GInter[PGang[playerid]] == 0 && GWorld[PGang[playerid]] == 0)
						{
							SendClientMessage(playerid, 0xFF0000FF, "Спавн банды НЕ был назначен ранее !");
							ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
							\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
							\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
							SetPVarInt(playerid, "DlgCont", 1001);
							return true;
						}
	                	ShowPlayerDialog(playerid, 1015, DIALOG_STYLE_MSGBOX, "Отмена спавна банды", "Вы точно хотите отменить спавн банды?", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1015);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 5:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1013);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 6:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] >= 4)
					{
	                	ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_INPUT, "Приглашение в банду", "Введите id игрока, которого хотите пригласить:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1004);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть как минимум 4 уровень.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 7:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] >= 5)
					{
	                	ShowPlayerDialog(playerid, 1006, DIALOG_STYLE_INPUT, "Изгнание из банды", "Введите id игрока, которого хотите выгнать:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1006);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть как минимум 5 уровень.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 8:
		        {
					if(PGang[playerid] == 0 || PGang[playerid] == -600)
					{
						if(PGang[playerid] == 0)
						{
							PGang[playerid] = -600;
							SendClientMessage(playerid, 0xFF0000FF, "Вы отключили разрешение приглашать Вас в банду.");
                        	return true;
						}
						else
						{
							PGang[playerid] = 0;
							SendClientMessage(playerid, 0x00FF00FF, "Вы включили разрешение приглашать Вас в банду.");
                        	return true;
						}
					}else{
						SendClientMessage(playerid, 0xFFFF00FF, "Вы уже состоите в банде ! (откл. / вкл. разрешения - не актуально) .");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
						return true;
					}
		        }
		        case 9:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия банды", "Введите новое название банды:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1007);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 10:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета банды", "Введите новый цвет банды: (формат RRGGBB)", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1008);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде, и у Вас должен быть уровень лидера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 11:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1016, DIALOG_STYLE_MSGBOX, "Уход из банды", "Вы являетесь лидером банды !\
						\nПосле Вашего ухода банда будет удалена !\nВы точно хотите уйти из банды?", "Да", "Нет");
						SetPVarInt(playerid, "DlgCont", 1016);
						return true;
					}
					if(PGang[playerid] > 0 && GangLvl[playerid] != 6)
					{
	                	ShowPlayerDialog(playerid, 1009, DIALOG_STYLE_MSGBOX, "Уход из банды", "Вы точно хотите уйти из банды?", "Да", "Нет");
						SetPVarInt(playerid, "DlgCont", 1009);
						return true;
					}
					if(PGang[playerid] == 0 || PGang[playerid] == -600)
					{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде !");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
						return true;
					}
		        }
		        case 12:
		        {
					if(PGang[playerid] > 0)
					{
						new string11[32], string22[128], string33[128], string44[128], string55[128], string99[512];
						switch(GangLvl[playerid])
						{
							case 1: format(string11, sizeof(string11), "Начинающий");
							case 2: format(string11, sizeof(string11), "Игрок");
							case 3: format(string11, sizeof(string11), "Про игрок");
							case 4: format(string11, sizeof(string11), "Элита");
							case 5: format(string11, sizeof(string11), "Зам лидера");
							case 6: format(string11, sizeof(string11), "Лидер");
						}
						format(string22, sizeof(string22), "Время и дата регистрации: [ %s ]", GTDReg[PGang[playerid]]);
						format(string33, sizeof(string33), "Мой уровень в банде: %d ( %s )", GangLvl[playerid], string11);
						format(string44, sizeof(string44), "Лидер банды: %s", GHead[PGang[playerid]]);
						format(string55, sizeof(string55), "Число игроков в банде: %d", GPlayers[PGang[playerid]]);
						format(string99, sizeof(string99), "%s\n%s\n%s\n%s", string22, string33, string44, string55);
						ShowPlayerDialog(playerid,1018,0,"Информация о банде.",string99,"OK","");
						SetPVarInt(playerid, "DlgCont", 1018);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде !");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 13:
		        {
					if(PGang[playerid] > 0)
					{
						countgn[playerid] = 0;//обнуляем число обнаруженых он-лайн членов банды
						for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
						{
							if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
							{
								if(PGang[playerid] == PGang[i])//если игрок состоит в банде игрока, то:
								{
									format(tablgn[playerid][countgn[playerid]], 32, "\n%s [%d]", RealName[i], i);//записываем в личный массив игрока ник и ид он-лайн члена банды
									countgn[playerid]++;//число обнаруженых он-лайн членов банды +1
								}
							}
						}
						if(countgn[playerid] != 0)//если обнаружен хотя бы один он-лайн член банды, то:
						{
							for(new i = 0; i < 20; i++)//очищаем все строки таблицы он-лайн членов банды
							{
								strdel(ongng[i], 0, 32);
							}
							count2gn[playerid] = 0;//обнуляем счётчик он-лайн членов банды
							new locvar = 0;//обнуляем индекс таблицы он-лайн членов банды
							new locvar2 = 0;//обнуляем переменную-маркер
							while(count2gn[playerid] < countgn[playerid])//выполняем цикл, пока счётчик он-лайн членов банды меньше числа обнаруженых он-лайн членов банды
							{
								strins(ongng[locvar], tablgn[playerid][count2gn[playerid]], 0, 32);//переписываем в таблицу он-лайн члена банды из личного массива игрока
								count2gn[playerid]++;//счётчик он-лайн членов банды +1
								locvar++;//индекс таблицы он-лайн членов банды +1
								if(locvar == 20 && count2gn[playerid] < countgn[playerid])//если таблица он-лайн членов банды заполнена, И счётчик он-лайн членов банды МЕНЬШЕ числа обнаруженых он-лайн членов банды, то:
								{//выводим диалог С продолжением
									format(string,sizeof(string),"Члены банды On-Line: (%d)",countgn[playerid]);
									format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
									ongng[0],ongng[1],ongng[2],ongng[3],ongng[4],ongng[5],ongng[6],ongng[7],ongng[8],ongng[9],
									ongng[10],ongng[11],ongng[12],ongng[13],ongng[14],ongng[15],ongng[16],ongng[17],ongng[18],ongng[19]);
									ShowPlayerDialog(playerid, 1019, 0, string, strdln, "Далее", "Отмена");
									SetPVarInt(playerid, "DlgCont", 1019);
									locvar2 = 1;//устанавливаем переменную-маркер
									break;//выходим из цикла
								}
								if(locvar == 20 && count2gn[playerid] == countgn[playerid])//если таблица он-лайн членов банды заполнена, И счётчик он-лайн членов банды РАВЕН числу обнаруженых он-лайн членов банды, то:
								{//выводим диалог БЕЗ продолжения
									format(string,sizeof(string),"Члены банды он-лайн: (%d)",countgn[playerid]);
									format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
									ongng[0],ongng[1],ongng[2],ongng[3],ongng[4],ongng[5],ongng[6],ongng[7],ongng[8],ongng[9],
									ongng[10],ongng[11],ongng[12],ongng[13],ongng[14],ongng[15],ongng[16],ongng[17],ongng[18],ongng[19]);
									ShowPlayerDialog(playerid, 2, 0, string, strdln, "OK", "");
									SetPVarInt(playerid, "DlgCont", 2);
									locvar2 = 1;//устанавливаем переменную-маркер
									break;//выходим из цикла
								}
							}//выход из цикла
							if(locvar2 == 0)//если переменная-маркер НЕ БЫЛА установлена (счётчик он-лайн членов банды завершился ранее, чем была заполнена таблица он-лайн членов банды, то:
							{//выводим диалог БЕЗ продолжения
								format(string,sizeof(string),"Члены банды он-лайн: (%d)",countgn[playerid]);
								format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
								ongng[0],ongng[1],ongng[2],ongng[3],ongng[4],ongng[5],ongng[6],ongng[7],ongng[8],ongng[9],
								ongng[10],ongng[11],ongng[12],ongng[13],ongng[14],ongng[15],ongng[16],ongng[17],ongng[18],ongng[19]);
								ShowPlayerDialog(playerid, 2, 0, string, strdln, "OK", "");
								SetPVarInt(playerid, "DlgCont", 2);
							}//если переменная-маркер БЫЛА установлена, то - конец проверки
						}//конец проверки
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в банде !");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
						\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
						\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		    }
		}else{
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Игровое меню", "Тюнинг\nТелепорты\nАнимации\nТранспорт\nУправление персонажем\nПокупка оружия\nДеадМатчи\nПомощь\n{FFFF00}Радио\n{00FF00}Настройки\n{E03515}Управление транспортом\nСистема банд", "Выбрать", "Выход");
		SetPVarInt(playerid, "DlgCont", 4);
		}
		return true;
	}
	if(dialogid == 1002)//создание банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			if(strlen(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии банды должен быть хотябы 1 символ !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			if(strlen(inputtext) > 128)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии банды должно быть не больше 128 символов !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			new para1[130], para2;
			format(para1, 130, inputtext);
			para2 = GNameCon(para1);
			if(para2 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат смены цвета внутри названия банды !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			if(para2 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный изменяющийся цвет внутри названия банды !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			format(GangName[playerid], 130, para1);
	    	for(new i=1; i<(MAX_GANGS - 1); i++)
		    {
      			if(strcmp(GangName[playerid],GName[i],false) == 0 && strlen(GName[i]) != 0)
	        	{
			  		ShowPlayerDialog(playerid,1018,0,"Информация.","Банда с таким именем была создана ранее !","OK","");
					SetPVarInt(playerid, "DlgCont", 1018);
					return true;
				}
			}
			ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание банды", "Введите цвет банды: (формат RRGGBB)", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1003);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1003)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание банды", "Введите цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			if(strlen(inputtext) != 6)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Цвет банды должен состоять из 6 символов формата RRGGBB !");
				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание банды", "Введите цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			new para1[16], para2[16], para3, para4;
			format(para1, 16, inputtext);
			format(para2, 16, "%sFF", para1);
			para4 = HexToInt(para2, para3);
			if(para4 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат цвета банды !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет банды должен состоять из 6 символов формата RRGGBB !");
				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание банды", "Введите цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			if(para4 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный цвет банды !");
				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание банды", "Введите цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			new gangdata;
			gangdata = GetFreeGang();
			Gang[gangdata] = 1;
			PGang[playerid] = gangdata;
			GangLvl[playerid] = 6;
			format(GName[PGang[playerid]], 130, GangName[playerid]);
			format(GColor[PGang[playerid]], 16, para2);
			GColorDec[PGang[playerid]] = para3;
			strdel(GColorHex[PGang[playerid]], 0, 16);
			strcat(GColorHex[PGang[playerid]], para1);
			ColorPlay[playerid] = GColorDec[PGang[playerid]];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, GColorDec[PGang[playerid]]);
			}
//			GivePlayerMoney(playerid, -100);
			format(string, sizeof(string), "Банда успешно создана!\r\nНазвание банды: {%s}%s\r\n{A9C4E4}Цвет банды: %s", GColorHex[PGang[playerid]], GName[PGang[playerid]], GColor[PGang[playerid]]);
			ShowPlayerDialog(playerid,1018,0,"Создание банды",string,"Принять","");
			SetPVarInt(playerid, "DlgCont", 1018);
			strdel(GHead[PGang[playerid]], 0, 64);
			strcat(GHead[PGang[playerid]], RealName[playerid]);
			printf("[GangsSystem] %s [%d] создал банду %s (цвет банды %s) [ID: %d] .", RealName[playerid], playerid, GName[PGang[playerid]], GColor[PGang[playerid]], gangdata);
			GPlayers[PGang[playerid]] = 1;
			strdel(GTDReg[PGang[playerid]], 0, 32);//очистка времени и даты регистрации банды
			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты
			format(GTDReg[PGang[playerid]], 32, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
			GSpawnX[PGang[playerid]] = 0.00;//заполнение массивов банды
			GSpawnY[PGang[playerid]] = 0.00;
			GSpawnZ[PGang[playerid]] = 0.00;
			GInter[PGang[playerid]] = 0;
			GWorld[PGang[playerid]] = 0;
			GSkin[PGang[playerid]][0] = 500;
			GSkin[PGang[playerid]][1] = 500;
			GSkin[PGang[playerid]][2] = 500;
			GSkin[PGang[playerid]][3] = 500;
			GSkin[PGang[playerid]][4] = 500;
			GSkin[PGang[playerid]][5] = 500;
			new f[256];
			format(f, 256, "gangs/%i.ini", gangdata);
			new cfile = ini_createFile(f);
			if(cfile >= 0)
			{
			    ini_setString(cfile, "Gang TDReg", GTDReg[PGang[playerid]]);
			    ini_setString(cfile, "Gang head", GHead[PGang[playerid]]);
			    ini_setString(cfile, "Gang name", GName[PGang[playerid]]);
			    ini_setString(cfile, "Gang color", GColor[PGang[playerid]]);
   			    ini_setFloat(cfile, "SpawnX", GSpawnX[PGang[playerid]]);
			    ini_setFloat(cfile, "SpawnY", GSpawnY[PGang[playerid]]);
			    ini_setFloat(cfile, "SpawnZ", GSpawnZ[PGang[playerid]]);
		    	ini_setInteger(cfile, "GInter", GInter[PGang[playerid]]);
		    	ini_setInteger(cfile, "GWorld", GWorld[PGang[playerid]]);
       			ini_setInteger(cfile, "Skin1", GSkin[PGang[playerid]][0]);
			    ini_setInteger(cfile, "Skin2", GSkin[PGang[playerid]][1]);
			    ini_setInteger(cfile, "Skin3", GSkin[PGang[playerid]][2]);
			    ini_setInteger(cfile, "Skin4", GSkin[PGang[playerid]][3]);
			    ini_setInteger(cfile, "Skin5", GSkin[PGang[playerid]][4]);
			    ini_setInteger(cfile, "Skin6", GSkin[PGang[playerid]][5]);
			    ini_setInteger(cfile, "Players", GPlayers[PGang[playerid]]);
				ini_closeFile(cfile);
			}
			idgangsave[playerid] = PGang[playerid];//записываем в список ID банды игрока
			SetTimerEx("SaveGangOn", 300, 0, "i", gangdata);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание банды", "Введите название банды:", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1002);
		}
		return true;
	}
	if(dialogid == 1016)//удаление банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
			{
				if(PGang[playerid] == idgangsave[i])
				{//поиск ID банды в списке:
					idgangsave[i] = 0;//очистка ID банды для записи
				}
			}
			GangSA[PGang[playerid]] = 0;
			SetTimerEx("SaveGangOff", 300, 0, "i", playerid);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1004)//приглашение в банду
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_INPUT, "Приглашение в банду", "Введите id игрока, которого хотите пригласить:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1004);
				return true;
			}
			new id22;
			id22 = strval(inputtext);
			if(IsPlayerConnected(id22))
			{
				if(PGang[id22] == -600)
				{
					SendClientMessage(playerid, 0xFF0000FF, "Этот игрок отключил разрешение приглашать себя в банду !");
					return true;
				}
				if(playspa[id22] == 1)
				{
					if(PGang[id22] == PGang[playerid])
					{
						return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок уже в Вашей банде !");
					}
					if(PGang[id22] == 0)
					{
				    	format(strdln, sizeof(strdln), "Игрок %s пригласил\nВас в банду {%s}%s\n\
						\n{A9C4E4}Что бы Вас не могли приглашать в банду -\nнужно отключить разрешение приглашения:\
						\nМеню, Система банд,\nОткл. / вкл. разрешение приглашать Вас в банду", RealName[playerid], GColorHex[PGang[playerid]], GName[PGang[playerid]]);
				    	ShowPlayerDialog(id22, 1005, DIALOG_STYLE_MSGBOX, "Приглашение в банду", strdln, "Принять", "Отказать");
						SetPVarInt(id22, "DlgCont", 1005);
				    	format(string, sizeof(string), "Игрок %s пригласил игрока %s в банду.", RealName[playerid], RealName[id22]);
						printf("[GangsSystem] %s [%d] пригласил игрока %s в банду.", RealName[playerid], playerid, RealName[id22]);
				    	for(new i; i<MAX_PLAYERS; i++)
				    	{
				        	if(IsPlayerConnected(i))
				        	{
				        		if(PGang[i] == PGang[playerid])
				        		{
									SendClientMessage(i, 0x00FF00FF, string);
				        		}
							}
						}
				    	tgang[id22] = PGang[playerid];
					}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок уже в банде !");
				}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок ещё не заспавнился !");
			}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в игре !");
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1005)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
            PGang[playerid] = tgang[playerid];
            GangLvl[playerid] = 1;
			if(GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500)
			{//если у 1-го уровня установлен скин, то сменить скин вступившему игроку
				SetPVarInt(playerid, "PlSkin", GSkin[PGang[playerid]][GangLvl[playerid]-1]);
				SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
			}
			ColorPlay[playerid] = GColorDec[PGang[playerid]];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, GColorDec[PGang[playerid]]);
			}
            format(string, sizeof(string), "Вы вступили в банду: {%s}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]]);
            SendClientMessage(playerid, 0xFFFF00FF, string);
            format(string, sizeof(string), "Игрок %s вступил в Вашу банду !", RealName[playerid]);
			printf("[GangsSystem] %s [%d] вступил в банду %s.", RealName[playerid], playerid, GName[PGang[playerid]]);
            for(new i; i<MAX_PLAYERS; i++)
            {
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid] && playerid != i)
					{
				    	SendClientMessage(i, 0xFFFF00FF, string);
					}
				}
            }
			GPlayers[PGang[playerid]]++;
			GangSave(PGang[playerid]);//запись ID банды в файл
	    }
	    else
		{
            format(string, sizeof(string), "Вы отказались от вступления в банду: {%s}%s", GColorHex[tgang[playerid]], GName[tgang[playerid]]);
            SendClientMessage(playerid, 0xFF0000FF, string);
            format(string, sizeof(string), "Игрок %s отказался от вступления в Вашу банду !", RealName[playerid]);
			printf("[GangsSystem] %s [%d] отказался от вступления в банду %s.", RealName[playerid], playerid, GName[tgang[playerid]]);
            for(new i; i<MAX_PLAYERS; i++)
            {
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == tgang[playerid] && playerid != i)
					{
				    	SendClientMessage(i, 0xFF0000FF, string);
					}
				}
            }
		}
		tgang[playerid] = -1600;
		return true;
	}
	if(dialogid == 1006)//изгнание из банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1006, DIALOG_STYLE_INPUT, "Изгнание из банды", "Введите id игрока, которого хотите выгнать:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1006);
				return true;
			}
			new dopper333;
			dopper333 = strval(inputtext);
			if(IsPlayerConnected(dopper333))
			{
				if(PGang[dopper333] == PGang[playerid])
				{
					if(dopper333 != playerid)
					{
						if(GangLvl[dopper333] <= GangLvl[playerid])
						{
							if(idgangsave[dopper333] > 0)//если ID банды для записи - активен, то:
							{
								new perloc;
								idgangsave[dopper333] = 0;//очистка ID банды для записи
								perloc = 0;
								while(perloc < MAX_PLAYERS)//цикл для всех игроков
								{
									if(PGang[dopper333] == PGang[perloc] && dopper333 != perloc)
									{//если есть хотя бы один игрок из банды выходящего, то:
										idgangsave[perloc] = PGang[dopper333];
										break;
									}
									perloc++;
								}
							}
							idgangsave[dopper333] = 0;//очистка ID банды для записи
							PGang[dopper333] = 0;
							GangLvl[dopper333] = 0;
							format(string, 256, "Вы были выгнаны из банды игроком %s !", RealName[playerid]);
							SendClientMessage(dopper333, 0xFF0000FF, string);
            				format(string, sizeof(string), "Игрок %s выгнал из банды игрока %s !", RealName[playerid], RealName[dopper333]);
							printf("[GangsSystem] %s [%d] выгнал из банды игрока %s.", RealName[playerid], playerid, RealName[dopper333]);
            				for(new i; i<MAX_PLAYERS; i++)
            				{
								if(IsPlayerConnected(i))
								{
									if(PGang[i] == PGang[playerid])
									{
				    					SendClientMessage(i, 0xFF0000FF, string);
									}
								}
            				}
							GPlayers[PGang[playerid]]--;
							GangSave(PGang[playerid]);//запись ID банды в файл
						}else return SendClientMessage(playerid, 0xFF0000FF, "Вы не можете выгнать лидера банды !");
					}else return SendClientMessage(playerid, 0xFF0000FF, "Вы не можете выгнать самого себя !");
				}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в Вашей банде !");
			}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в игре !");
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1007)//смена названия банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия банды", "Введите новое название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			if(strlen(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии банды должен быть хотябы 1 символ !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия банды", "Введите новое название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			if(strlen(inputtext) > 128)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии банды должно быть не больше 128 символов !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия банды", "Введите новое название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			new para1[130], para2;
			format(para1, 130, inputtext);
			para2 = GNameCon(para1);
			if(para2 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат смены цвета внутри названия банды !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия банды", "Введите новое название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			if(para2 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный изменяющийся цвет внутри названия банды !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия банды", "Введите новое название банды:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			format(GangName[playerid], 130, para1);
	    	for(new i=1; i<(MAX_GANGS - 1); i++)
		    {
      			if(strcmp(GangName[playerid],GName[i],false) == 0 && strlen(GName[i]) != 0)
	        	{
			  		ShowPlayerDialog(playerid,1018,0,"Информация.","Банда с таким именем была создана ранее !","OK","");
					SetPVarInt(playerid, "DlgCont", 1018);
					return true;
				}
			}
			format(GName[PGang[playerid]], 130, GangName[playerid]);
			format(string, sizeof(string), "Теперь название Вашей банды: {%s}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]]);
			SendClientMessage(playerid, 0x00FF00FF, string);
			printf("[GangsSystem] %s [%d] сменил название банды на %s.", RealName[playerid], playerid, GName[PGang[playerid]]);
			GangSave(PGang[playerid]);//запись ID банды в файл
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1008)//смена цвета банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета банды", "Введите новый цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			if(strlen(inputtext) != 6)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Цвет банды должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета банды", "Введите новый цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			new para1[16], para2[16], para3, para4;
			format(para1, 16, inputtext);
			format(para2, 16, "%sFF", para1);
			para4 = HexToInt(para2, para3);
			if(para4 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат цвета банды !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет банды должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета банды", "Введите новый цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			if(para4 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный цвет банды !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета банды", "Введите новый цвет банды: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			format(GColor[PGang[playerid]], 16, para2);
			GColorDec[PGang[playerid]] = para3;
			strdel(GColorHex[PGang[playerid]], 0, 16);
			strcat(GColorHex[PGang[playerid]], para1);
			format(string, sizeof(string), "Теперь цвет Вашей банды: %s", GColor[PGang[playerid]]);
			SendClientMessage(playerid, 0x00FF00FF, string);
			printf("[GangsSystem] %s [%d] сменил цвет банды на %s.", RealName[playerid], playerid, GColor[PGang[playerid]]);
			GangSave(PGang[playerid]);//запись ID банды в файл
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid])//если игрок состоит в Вашей банде, то:
					{
						ColorPlay[i] = GColorDec[PGang[playerid]];
						SetPlayerColor(i, ColorPlay[i]);//устанавливаем цвет ника
						for(new j=0;j<MAX_PLAYERS;j++)//устанавливаем цвет маркера для всех игроков
						{
							SetPlayerMarkerForPlayer(j, i, GColorDec[PGang[playerid]]);
						}
					}
				}
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1009)//уход из банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(idgangsave[playerid] > 0)//если ID банды для записи - активен, то:
			{
				new perloc;
				idgangsave[playerid] = 0;//очистка ID банды для записи
				perloc = 0;
				while(perloc < MAX_PLAYERS)//цикл для всех игроков
				{
					if(PGang[playerid] == PGang[perloc] && playerid != perloc)
					{//если есть хотя бы один игрок из банды выходящего, то:
						idgangsave[perloc] = PGang[playerid];
						break;
					}
					perloc++;
				}
			}
			idgangsave[playerid] = 0;//очистка ID банды для записи
	        format(string,sizeof(string), "Игрок %s ушёл из Вашей банды !", RealName[playerid]);
	        for(new i; i<MAX_PLAYERS; i++)
	        {
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid] && i != playerid)
					{
				 		SendClientMessage(i, 0xFF0000FF, string);
					}
				}
			}
	        format(string,sizeof(string), "Вы ушли из банды: {%s}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]]);
            SendClientMessage(playerid, 0xFFFF00FF, string);
			printf("[GangsSystem] %s [%d] ушёл из банды.", RealName[playerid], playerid);
			GPlayers[PGang[playerid]]--;
			GangSave(PGang[playerid]);//запись ID банды в файл
			PGang[playerid] = 0;
			GangLvl[playerid] = 0;
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1010)//назначение спавна банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
	        new Float:x, Float:y, Float:z, Interpl, Worldpl;
			GetPlayerPos(playerid, x, y, z);
			Interpl = GetPlayerInterior(playerid);
			Worldpl = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				if((-15500 >= x >= -20000 && 15500 <= y <= 20000) ||
				((Worldpl < 6000 || Worldpl > 6999) && z > 1200) ||
				(6000 <= Worldpl <= 6999 && (z < 2900 || z > 3500)))
				{
					ShowPlayerDialog(playerid,1018,0,"Ошибка.","В выбранном месте нельзя назначить спавн банды !","OK","");
					SetPVarInt(playerid, "DlgCont", 1018);
					return true;
				}
			}
			GSpawnX[PGang[playerid]] = x;
			GSpawnY[PGang[playerid]] = y;
			GSpawnZ[PGang[playerid]] = z;
			GInter[PGang[playerid]] = Interpl;
			GWorld[PGang[playerid]] = Worldpl;
			SendClientMessage(playerid, 0x00FF00FF, "Вы назначили спавн банды.");
			printf("[GangsSystem] %s [%d] назначил спавн банды.", RealName[playerid], playerid);
			GangSave(PGang[playerid]);//запись ID банды в файл
	    }
		ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
		\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
		\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 1001);
		return true;
	}
	if(dialogid == 1015)//отмена спавна банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
	        new Float:x = 0.0, Float:y = 0.0, Float:z = 0.0, Interpl = 0, Worldpl = 0;
			GSpawnX[PGang[playerid]] = x;
			GSpawnY[PGang[playerid]] = y;
			GSpawnZ[PGang[playerid]] = z;
			GInter[PGang[playerid]] = Interpl;
			GWorld[PGang[playerid]] = Worldpl;
			SendClientMessage(playerid, 0xFFFF00FF, "Вы отменили спавн банды.");
			printf("[GangsSystem] %s [%d] отменил спавн банды.", RealName[playerid], playerid);
			GangSave(PGang[playerid]);//запись ID банды в файл
	    }
		ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
		\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
		\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 1001);
		return true;
	}
	if(dialogid == 1011)//назначение скинов банды
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			switch(listitem)
			{
	            case 0: gangskin[playerid] = 1;
	            case 1: gangskin[playerid] = 2;
	            case 2: gangskin[playerid] = 3;
		        case 3: gangskin[playerid] = 4;
	            case 4: gangskin[playerid] = 5;
	            case 5: gangskin[playerid] = 6;
			}
			ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов банде", "Введите id скина, который хотите назначить:\
			\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1012);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1012)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов банде", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
			new level = strval(inputtext);
#if (MOD11INS <= 3)
			if((level > 299 || level < 0) && level != 500)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неправильный id скина !");
				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов банде", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
#endif
#if (MOD11INS == 4)
			if((level > 311 || level < 0) && level != 500)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неправильный id скина !");
				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов банде", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
#endif
			if(level == GSkin[PGang[playerid]][gangskin[playerid]-1])
			{
				SendClientMessage(playerid, 0xFF0000FF, "Выбранный id скина уже записан в выбранном слоте !");
				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов банде", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
			GSkin[PGang[playerid]][gangskin[playerid]-1] = level;
			for(new i; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid] && GangLvl[i] == gangskin[playerid] && level != 500)
					{
						SetPVarInt(i, "PlSkin", level);
						SetPlayerSkin(i, GetPVarInt(i, "PlSkin"));
					}
				}
			}
			format(string, sizeof(string), "Скин успешно установлен !   id скина: %i (слот: %d)", level, gangskin[playerid]);
			SendClientMessage(playerid, 0xFFFF00FF, string);
			printf("[GangsSystem] %s [%d] сменил ID скина банды на %i (слот: %d).", RealName[playerid], playerid, level, gangskin[playerid]);
			gangskin[playerid] = 0;
			GangSave(PGang[playerid]);//запись ID банды в файл
	    }
		ShowPlayerDialog(playerid, 1011, DIALOG_STYLE_LIST, "Назначение скинов банды", "1 - Начинающий\n2 - Игрок\n3 - Про игрок\n4 - Элита\n5 - Зам лидера\n6 - Лидер", "Принять", "Отмена");
		SetPVarInt(playerid, "DlgCont", 1011);
		return true;
	}
	if(dialogid == 1013)//назначение уровня
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
				ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1013);
				return true;
			}
			if(IsPlayerConnected(strval(inputtext)))
			{
				if(PGang[strval(inputtext)] != PGang[playerid])
				{
			    	SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в Вашей банде !");
					return true;
				}
				play333[playerid] = strval(inputtext);
				if(play333[playerid] == playerid)
				{
					SendClientMessage(playerid, 0xFF0000FF, "Вы являетесь лидером банды, и не можете назначить уровень сам себе !");
					return true;
				}
				ShowPlayerDialog(playerid, 1014, DIALOG_STYLE_LIST, "Назначение уровня", "1 - Начинающий\n2 - Игрок\n3 - Про игрок\n4 - Элита\n5 - Зам лидера\n6 - Лидер", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1014);
			}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в игре !");
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
			\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
			\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1014)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			GangDopper[playerid] = 0;
			if((listitem + 1) == GangLvl[play333[playerid]])
			{
				SendClientMessage(playerid, 0xFF0000FF, "У выбранного игрока уже есть выбранный уровень !");
				play333[playerid] = -1;
				ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1013);
				return true;
			}
	        switch(listitem)
			{
	            case 0: GangLvl[play333[playerid]] = 1;
	            case 1: GangLvl[play333[playerid]] = 2;
	            case 2: GangLvl[play333[playerid]] = 3;
		        case 3: GangLvl[play333[playerid]] = 4;
	            case 4: GangLvl[play333[playerid]] = 5;
	            case 5: GangDopper[playerid] = 6;
			}
			if(GangDopper[playerid] == 6)
			{
				ShowPlayerDialog(playerid, 1017, DIALOG_STYLE_MSGBOX, "Внимание !!!", "В банде может быть только один лидер !!!\
				\nВыбранный игрок получит уровень лидера,\nа Вы - уровень зам лидера.", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1017);
			}
			else
			{
				format(string, sizeof(string), "Вы назначили игроку %s уровень %i", RealName[play333[playerid]], GangLvl[play333[playerid]]);
				SendClientMessage(playerid, 0xFFFF00FF, string);
				format(string, sizeof(string), "Лидер %s назначил Вам уровень %i", RealName[playerid], GangLvl[play333[playerid]]);
				SendClientMessage(play333[playerid], 0xFFFF00FF, string);
				printf("[GangsSystem] %s [%d] назначил игроку %s уровень %i.", RealName[playerid], playerid, RealName[play333[playerid]], GangLvl[play333[playerid]]);
				if(GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1] < 500)
				{
					SetPVarInt(play333[playerid], "PlSkin", GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1]);
					SetPlayerSkin(play333[playerid], GetPVarInt(play333[playerid], "PlSkin"));
				}
				play333[playerid] = -1;
				ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1013);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1013);
		}
		return true;
	}
	if(dialogid == 1017)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		GangDopper[playerid] = 0;
	    if(response)
	    {
			strdel(GHead[PGang[play333[playerid]]], 0, 64);
			strcat(GHead[PGang[play333[playerid]]], RealName[play333[playerid]]);
			GangSave(PGang[play333[playerid]]);//запись ID банды в файл

			GangLvl[play333[playerid]] = 6;
			format(string, sizeof(string), "Вы назначили игроку %s уровень лидера.", RealName[play333[playerid]]);
			SendClientMessage(playerid, 0xFFFF00FF, string);
			format(string, sizeof(string), "Лидер %s назначил Вам уровень лидера.", RealName[playerid]);
			SendClientMessage(play333[playerid], 0xFFFF00FF, string);
			printf("[GangsSystem] %s [%d] назначил игроку %s уровень лидера.", RealName[playerid], playerid, RealName[play333[playerid]]);
			if(GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1] < 500)
			{
				SetPVarInt(play333[playerid], "PlSkin", GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1]);
				SetPlayerSkin(play333[playerid], GetPVarInt(play333[playerid], "PlSkin"));
			}

			GangLvl[playerid] = 5;
			SendClientMessage(playerid, 0xFFFF00FF, "Вы назначили себе уровень зам лидера.");
			format(string, sizeof(string), "Лидер %s назначил себе уровень зам лидера.", RealName[playerid]);
			SendClientMessage(play333[playerid], 0xFFFF00FF, string);
			printf("[GangsSystem] %s [%d] назначил себе уровень зам лидера.", RealName[playerid], playerid);
			if(GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500)
			{
				SetPVarInt(playerid, "PlSkin", GSkin[PGang[playerid]][GangLvl[playerid]-1]);
				SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
			}

			play333[playerid] = -1;
		}
		else
		{
			ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1013);
		}
		return true;
	}
	if(dialogid == 1018)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		SetTimerEx("DelDlgMes", 300, 0, "i", playerid);
		return true;
	}
	if(dialogid == 1019)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)//если была нажата кнопка "Далее", то:
		{
			for(new i = 0; i < 20; i++)//очищаем все строки таблицы он-лайн членов банды
			{
				strdel(ongng[i], 0, 32);
			}
			new locvar = 0;//обнуляем индекс таблицы он-лайн членов банды
			new locvar2 = 0;//обнуляем переменную-маркер
			while(count2gn[playerid] < countgn[playerid])//выполняем цикл, пока счётчик он-лайн членов банды меньше числа обнаруженых он-лайн членов банды
			{
				strins(ongng[locvar], tablgn[playerid][count2gn[playerid]], 0, 32);//переписываем в таблицу он-лайн члена банды из личного массива игрока
				count2gn[playerid]++;//счётчик он-лайн членов банды +1
				locvar++;//индекс таблицы он-лайн членов банды +1
				if(locvar == 20 && count2gn[playerid] < countgn[playerid])//если таблица он-лайн членов банды заполнена, И счётчик он-лайн членов банды МЕНЬШЕ числа обнаруженых он-лайн членов банды, то:
				{//выводим диалог С продолжением
					format(string,sizeof(string),"Члены банды он-лайн: (%d)",countgn[playerid]);
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					ongng[0],ongng[1],ongng[2],ongng[3],ongng[4],ongng[5],ongng[6],ongng[7],ongng[8],ongng[9],
					ongng[10],ongng[11],ongng[12],ongng[13],ongng[14],ongng[15],ongng[16],ongng[17],ongng[18],ongng[19]);
					ShowPlayerDialog(playerid, 1019, 0, string, strdln, "Далее", "Отмена");
					SetPVarInt(playerid, "DlgCont", 1019);
					locvar2 = 1;//устанавливаем переменную-маркер
					break;//выходим из цикла
				}
				if(locvar == 20 && count2gn[playerid] == countgn[playerid])//если таблица он-лайн членов банды заполнена, И счётчик он-лайн членов банды РАВЕН числу обнаруженых он-лайн членов банды, то:
				{//выводим диалог БЕЗ продолжения
					format(string,sizeof(string),"Члены банды он-лайн: (%d)",countgn[playerid]);
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					ongng[0],ongng[1],ongng[2],ongng[3],ongng[4],ongng[5],ongng[6],ongng[7],ongng[8],ongng[9],
					ongng[10],ongng[11],ongng[12],ongng[13],ongng[14],ongng[15],ongng[16],ongng[17],ongng[18],ongng[19]);
					ShowPlayerDialog(playerid, 2, 0, string, strdln, "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
					locvar2 = 1;//устанавливаем переменную-маркер
					break;//выходим из цикла
				}
			}//выход из цикла
			if(locvar2 == 0)//если переменная-маркер НЕ БЫЛА установлена (счётчик он-лайн членов банды завершился ранее, чем была заполнена таблица он-лайн членов банды, то:
			{//выводим диалог БЕЗ продолжения
				format(string,sizeof(string),"Члены банды он-лайн: (%d)",countgn[playerid]);
				format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				ongng[0],ongng[1],ongng[2],ongng[3],ongng[4],ongng[5],ongng[6],ongng[7],ongng[8],ongng[9],
				ongng[10],ongng[11],ongng[12],ongng[13],ongng[14],ongng[15],ongng[16],ongng[17],ongng[18],ongng[19]);
				ShowPlayerDialog(playerid, 2, 0, string, strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
			}//если переменная-маркер БЫЛА установлена, то - конец проверки
		    return true;
		}
		else//если была нажата кнопка "Отмена", то:
		{
		    return true;//завершаем диалог
		}
	}

//----------------------------- Elevator - 1 -----------------------------------
	if(dialogid == 150)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{

			new dop = 0;
			for(new i; i < sizeof(ElevatorQueue); i ++)
			{
				if(ElevatorQueue[i] == listitem){dop = 1;}
			}

			new dop22 = 0;
			for(new i; i < sizeof(FloorRequestedBy); i ++)
			{
				if(FloorRequestedBy[i] == playerid){dop22 = 1;}
			}

			if(FloorRequestedBy[listitem] != 10000 || dop == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Выбранный Вами этаж уже находится");
				SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
				return 1;
			}
			if(dop22 == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Вы уже выбрали этаж !");
				return 1;
			}
			CallElevator(playerid, listitem, 1);//вызов, или начало движения лифта
		}
		return 1;
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	if(dialogid == 152)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{

			new dop = 0;
			for(new i; i < sizeof(ElevatorQueue22); i ++)
			{
				if(ElevatorQueue22[i] == listitem){dop = 1;}
			}

			new dop22 = 0;
			for(new i; i < sizeof(FloorRequestedBy22); i ++)
			{
				if(FloorRequestedBy22[i] == playerid){dop22 = 1;}
			}

			if(FloorRequestedBy22[listitem] != 10000 || dop == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Выбранный Вами этаж уже находится");
				SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
				return 1;
			}
			if(dop22 == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Вы уже выбрали этаж !");
				return 1;
			}
			CallElevator22(playerid, listitem, 1);//вызов, или начало движения лифта
		}
		return 1;
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

//------------------------------ BusSystem -------------------------------------
	if(dialogid == 8000)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		busdlgcon[playerid]++;//контроль диалогов +1
		playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		return 1;
	}
	if(dialogid == 8001)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		busdlgcon[playerid]++;//контроль диалогов +1
        if(response)
		{
			if(PlayerInfo[playerid][pDeport] == 1)
			{
				busdlgcon[playerid]--;//контроль диалогов -1
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", "{ADFF2F}Вы не можете купить бизнес,\nпока дело о Вашей депортации на слушании !", "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			if(GetPVarInt(playerid, "PlMon") < buscost[playIDbus[playerid]])//если у игрока недостаточно денег, то:
			{
				busdlgcon[playerid]--;//контроль диалогов -1
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", "{ADFF2F}У Вас недостаточно денег для покупки этого бизнеса !", "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			new para1 = 0;
			for(new i; i < BUS_MAX; i++)//подсчёт числа уже купленных бизнесов
			{
				if(buscount[i] == 1 && strcmp(RealName[playerid], busplayname[i], false) == 0) { para1++; }
			}
			if(para1 >= BUS_PLAY)
			{
				format(string, sizeof(string), "{ADFF2F}У вас уже есть %d бизнеса !   Что бы купить этот бизнес -\
				\nпродайте хотя бы один из своих существующих бизнесов !", para1);
				busdlgcon[playerid]--;//контроль диалогов -1
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", string, "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			if(strcmp(busplayname[playIDbus[playerid]], "*** INV_PL_ID", false) != 0 && busday[playIDbus[playerid]] != 0)
			{//если в момент покупки, покупаемый бизнес успел купить другой игрок, то:
				SendClientMessage(playerid, 0xFF0000FF, " Этот бизнес уже принадлежит другому игроку !");
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nВладелец бизнеса: %s\nСтоимость бизнеса: %d $", busname[playIDbus[playerid]],
				busplayname[playIDbus[playerid]], buscost[playIDbus[playerid]]);
				busdlgcon[playerid]--;//контроль диалогов -1
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", string, "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			strdel(busplayname[playIDbus[playerid]], 0, MAX_PLAYER_NAME);//изменение имени владельца бизнеса
			strcat(busplayname[playIDbus[playerid]], RealName[playerid]);
			busday[playIDbus[playerid]] = 99;//временная блокировка возможности перекупки бизнеса
			new para2;
			para2 = GetPVarInt(playerid, "PlMon");
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - buscost[playIDbus[playerid]]);//списывание денег со счёта игрока
			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты
			new per99;//вычисление даты окончания срока без права перекупки
			per99 = ProcUnban(BUS_DAY);
			busidplay[playIDbus[playerid]] = playerid;//даём бизнесу ИД он-лайн игрока - владельца бизнеса
			busmoney[playIDbus[playerid]] = busminute[playIDbus[playerid]];//копируем в счётчик минут бизнеса - минуты бизнеса
			busday[playIDbus[playerid]] = per99;//изменение даты окончания срока без права перекупки
			new file, f[256];//записываем изменения в файл
			format(f, 256, "bussystem/%i.ini", playIDbus[playerid]);
			file = ini_openFile(f);
			if(file >= 0)
			{
		    	ini_setString(file, "PlayName", busplayname[playIDbus[playerid]]);
		    	ini_setInteger(file, "Day", busday[playIDbus[playerid]]);
		    	ini_setInteger(file, "Count", busmoney[playIDbus[playerid]]);
				ini_closeFile(file);
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, playIDbus[playerid], busplayname[playIDbus[playerid]],
			busvw[playIDbus[playerid]], buscordx[playIDbus[playerid]], buscordy[playIDbus[playerid]], buscordz[playIDbus[playerid]]);
			DestroyDynamicMapIcon(MapIconID[playIDbus[playerid]]);//удаляем мап-иконку бизнеса
			printf("[BusSystem] Игрок %s [%d] купил бизнес %s [ID: %d] .", RealName[playerid], playerid, busname[playIDbus[playerid]], playIDbus[playerid]);
			format(string, sizeof(string), " Игрок %s [%d] купил бизнес %s .", RealName[playerid], playerid, busname[playIDbus[playerid]]);
			SendClientMessageToAll(0x00FFFFFF, string);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para2);
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		else
		{
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		return 1;
	}
	if(dialogid == 8002)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		busdlgcon[playerid]++;//контроль диалогов +1
        if(response)
		{
			new para1;
			para1 = GetPVarInt(playerid, "PlMon");
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + buscost[playIDbus[playerid]]);//возврат денег игроку
			busidplay[playIDbus[playerid]] = -600;//даём бизнесу несуществующий ИД игрока
			busmoney[playIDbus[playerid]] = busminute[playIDbus[playerid]];//копируем в счётчик минут бизнеса - минуты бизнеса
			strdel(busplayname[playIDbus[playerid]], 0, MAX_PLAYER_NAME);//изменение имени владельца бизнеса
			strcat(busplayname[playIDbus[playerid]], "*** INV_PL_ID");
			if(busday[playIDbus[playerid]] != 0)//если бизнес без права его перекупки, то:
			{
				MapIconID[playIDbus[playerid]] = CreateDynamicMapIcon(buscordx[playIDbus[playerid]], buscordy[playIDbus[playerid]],
				buscordz[playIDbus[playerid]], 52, -1, busvw[playIDbus[playerid]], busint[playIDbus[playerid]], -1, 200.0);//создаём мап-иконку бизнеса
			}
			busday[playIDbus[playerid]] = 0;//изменение даты окончания срока без права перекупки
			new file, f[256];//записываем изменения в файл
			format(f, 256, "bussystem/%i.ini", playIDbus[playerid]);
			file = ini_openFile(f);
			if(file >= 0)
			{
		    	ini_setString(file, "PlayName", busplayname[playIDbus[playerid]]);
		    	ini_setInteger(file, "Day", busday[playIDbus[playerid]]);
		    	ini_setInteger(file, "Count", busmoney[playIDbus[playerid]]);
				ini_closeFile(file);
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, playIDbus[playerid], busplayname[playIDbus[playerid]],
			busvw[playIDbus[playerid]], buscordx[playIDbus[playerid]], buscordy[playIDbus[playerid]], buscordz[playIDbus[playerid]]);
			printf("[BusSystem] Игрок %s [%d] продал бизнес %s [ID: %d] .", RealName[playerid], playerid, busname[playIDbus[playerid]], playIDbus[playerid]);
			format(string, sizeof(string), " Игрок %s [%d] продал бизнес %s .", RealName[playerid], playerid, busname[playIDbus[playerid]]);
			SendClientMessageToAll(0x00FFFFFF, string);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		else
		{
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		return 1;
	}
//---------------------------- End BusSystem -----------------------------------

	return 0;
}

forward DelDlgMes(playerid);
public DelDlgMes(playerid)
{
	ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система банд", "Создать банду\nУдалить банду\nНазначить скины\nНазначить место спавна\
	\nОтменить спавн банды\nНазначить уровень\nПригласить в банду\nВыгнать из банды\nОткл. / вкл. разрешение приглашать Вас в банду\
	\nИзменить название банды\nИзменить цвет банды\nУйти из банды\nИнформация о банде\nЧлены банды он-лайн", "Выбор", "Отмена");
	SetPVarInt(playerid, "DlgCont", 1001);
	return true;
}

//==============================================================================
//                              GarHouse
//==============================================================================
//==============================================================================
// GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance);
// Used to get the position infront of a player.
// Credits to whoever made this!
//==============================================================================
stock Float:GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return a;
}
//##############################################################################
// 								Commands
//##############################################################################
// 							  By [03]Garsino!
//==============================================================================
// This command is used to display the house owner menu
// when a player is in a house and is the house owner.
//==============================================================================
dcmd_housemenu(playerid, params[])
{
	#pragma unused params

	if(GetPVarInt(playerid, "HousePrevTime") != 0) return SendClientMessage(playerid, COLOUR_SYSTEM, "Сейчас Вы не можете использовать меню дома.");//сообщение о запрете меню

 	if(strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && GetPVarInt(playerid, "IsInHouse") == 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_C_ACCESS_SE_HM);
	if(GetPVarInt(playerid, "IsInHouse") == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_IN_HOUSE);
	if(GetOwnedHouses(playerid) == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_HOWNER);
	if(GetPVarInt(playerid, "IsInHouse") == 1 && !strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && GetOwnedHouses(playerid) >= 1)
	{
	    #if defined GH_HINTERIOR_UPGRADE
			ShowPlayerDialog(playerid, 500, DIALOG_STYLE_LIST, "Меню дома", "Продажа дома\nХранение в доме\nИмя дома\nПароль для дома\nИнтерьер", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 500);
		#endif
		#if !defined GH_HINTERIOR_UPGRADE
			ShowPlayerDialog(playerid, 500, DIALOG_STYLE_LIST, "Меню дома", "Продажа дома\nХранение в доме\nИмя дома\nПароль для дома", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 500);
		#endif
	}
	return 1;
}
//==============================================================================
// This command is used to create a house.
// The only thing you have to enter is the house value,
// the rest is done by the script.
//==============================================================================
dcmd_createhouse(playerid, params[])
{
	new cost, file[HOUSEFILE_LENGTH], h = GetFreeHouseID(), labeltext[150], hinterior;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dD(" #DEFAULT_H_INTERIOR ")", cost, hinterior)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CREATEHOUSE);
	if(hinterior > 10)
	{
		hinterior = 0;
	}
	if(h < 0)
	{
		ShowInfoBox(playerid, INFORMATION_HEADER, E_TOO_MANY_HOUSES, MAX_HOUSES - 1);
    	return 1;
	}
	if(cost < MIN_HOUSE_VALUE || cost > MAX_HOUSE_VALUE) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HVALUE);
	else
	{
		new dvw;
		dvw = GetPlayerVirtualWorld(playerid);
	    format(file, sizeof(file), FILEPATH, h);
	    dini_Create(file);
		GetPlayerPos(playerid, Xgh, Ygh, Zgh);
		GetPlayerFacingAngle(playerid, Anglegh);
		dini_FloatSet(file, "CPOutX", Xgh);
		dini_FloatSet(file, "CPOutY", Ygh);
		dini_FloatSet(file, "CPOutZ", Zgh);
		dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
		dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
		dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
		dini_Set(file, "HouseCreator", RealName[playerid]);
		dini_IntSet(file, "HouseValue", cost);
		dini_IntSet(file, "HouseStorage", 0);
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, Xgh, Ygh, Zgh);
		format(labeltext, sizeof(labeltext), LABELTEXT1, DEFAULT_HOUSE_NAME, cost, h);
		HousePickupOut[h] = CreateDynamicPickup(PICKUP_MODEL_OUT, PICKUP_TYPE, Xgh, Ygh, Zgh, dvw, GetPlayerInterior(playerid), -1, 15.0);
//		HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2196.84, -1204.36, 1049.02, (h + 1000), 6, -1, 15.0);
		#if defined GH_USE_MAPICONS
 			HouseMIcon[h] = CreateDynamicMapIcon(Xgh, Ygh, Zgh, 31, -1, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, MICON_VD);
	 	#endif
//		HouseLabel[h] = Create3DTextLabel(labeltext, COLOUR_GREEN, Xgh, Ygh, Zgh+0.7, 25, GetPlayerVirtualWorld(playerid), 1);
		HouseLabel[h] = CreateDynamic3DTextLabel(labeltext, COLOUR_GREEN, Xgh, Ygh, Zgh+0.7, 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, dvw, GetPlayerInterior(playerid), -1);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_CREATED, h);
		GetPosInFrontOfPlayer(playerid, Xgh, Ygh, -2.5);
		dini_FloatSet(file, "SpawnOutX", Xgh);
		dini_FloatSet(file, "SpawnOutY", Ygh);
		dini_FloatSet(file, "SpawnOutZ", Zgh);
		dini_FloatSet(file, "SpawnOutAngle", floatround((180 + Anglegh)));
		dini_IntSet(file, "SpawnWorld", dvw);
		dini_IntSet(file, "SpawnInterior", GetPlayerInterior(playerid));
		dini_IntSet(file, "HouseInterior", hinterior);
		switch(hinterior)
		{
		    case 1:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_1_VALUE);
				dini_Set(file, "HouseInteriorName", "Shitty Shack");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2260.38, -1135.89, 1050.64, (h + 1000), 10, -1, 15.0);
			}
			case 2:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_2_VALUE);
				dini_Set(file, "HouseInteriorName", "Motel Room");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2284.24, -1139.42, 1050.89, (h + 1000), 11, -1, 15.0);
			}
			case 3:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_3_VALUE);
				dini_Set(file, "HouseInteriorName", "Hotel Room 1");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2233.69, -1114.26, 1050.88, (h + 1000), 5, -1, 15.0);
			}
			case 4:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_4_VALUE);
				dini_Set(file, "HouseInteriorName", "Hotel Room 2");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2216.39, -1077.10, 1050.48, (h + 1000), 1, -1, 15.0);
			}
			case 5:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_5_VALUE);
				dini_Set(file, "HouseInteriorName", "Gang House");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2496.00, -1693.70, 1014.74, (h + 1000), 3, -1, 15.0);
			}
			case 6:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_6_VALUE);
				dini_Set(file, "HouseInteriorName", "Normal House");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2365.25, -1134.00, 1050.88, (h + 1000), 8, -1, 15.0);
			}
			case 0:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_0_VALUE);
				dini_Set(file, "HouseInteriorName", "Default House");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2195.84, -1204.36, 1049.02, (h + 1000), 6, -1, 15.0);
			}
			case 7:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_7_VALUE);
				dini_Set(file, "HouseInteriorName", "Medium Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2319.43, -1026.33, 1050.21, (h + 1000), 9, -1, 15.0);
			}
			case 8:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_8_VALUE);
				dini_Set(file, "HouseInteriorName", "Rich Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2324.41, -1148.54, 1050.71, (h + 1000), 12, -1, 15.0);
			}
			case 9:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_9_VALUE);
				dini_Set(file, "HouseInteriorName", "Huge Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 143.40, 1366.66, 1083.85, (h + 1000), 5, -1, 15.0);
			}
			case 10:
			{
			    dini_IntSet(file, "HouseInteriorValue", H_INT_10_VALUE);
				dini_Set(file, "HouseInteriorName", "Mad Dogg's Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 1263.11, -785.26, 1091.9063, (h + 1000), 5, -1, 15.0);
			}
		}
		dini_IntSet("/GarHouse/House.ini", "CurrentID", dini_Int("/GarHouse/House.ini", "CurrentID") + 1);
		dini_IntSet("/GarHouse/House.ini", "CurrentWorld", dini_Int("/GarHouse/House.ini", "CurrentID") + 1000);
		SetPVarInt(playerid, "JustCreatedHouse", 1);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD1, RealName[playerid], playerid, h, cost, GetTotalHouses());
		#endif
	}
    return 1;
}
//==============================================================================
// просмотреть пароль дома по ID.
//==============================================================================
dcmd_passhouse(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || GetPVarInt(playerid, "AdmLvl") >= 10)
	{
		new file[HOUSEFILE_LENGTH], h;
		if(sscanf(params, "d", h))
		{
			SendClientMessage(playerid, 0xBFC0C2FF, " Используйте: /passhouse [ид дома]");
			return 1;
		}
    	format(file, sizeof(file), FILEPATH, h);
		if(!dini_Exists(file)) return SendClientMessage(playerid, 0xFF0000FF, " Дома с таким ID не существует !");
		new para1 = 0, para2 = 0, strloc[128];
		if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE)) { para1 = 1; }
		if(!strcmp(dini_Get(file, "HouseOwner"), "* Дом заблокирован", CASE_SENSETIVE)) { para1 = 2; }
		format(strloc, sizeof(strloc), "%s", dini_Get(file, "HousePassword"));
		if(strcmp(strloc, "INVALID_HOUSE_PASSWORD", false) == 0) { para2 = 1; }
		new string[256];
		if(para2 == 1)
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}пароль НЕ создан.", h);
		}
		else
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}пароль: %s .", h, strloc);
		}
		SendClientMessage(playerid, 0xFFFF00FF, string);
		if(para1 == 1)
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}свободен.", h);
			SendClientMessage(playerid, 0xFFFF00FF, string);
		}
		if(para1 == 2)
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}заблокирован !", h);
			SendClientMessage(playerid, 0xFFFF00FF, string);
		}
		printf("[GarHouse] Админ %s [%d] просмотрел пароль дома ID %d .", RealName[playerid], playerid, h);
	}
	else
	{
		SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
//==============================================================================
// перезагрузить систему домов.
//==============================================================================
dcmd_relhouses(playerid, params[])
{
	#pragma unused params
	if(IsPlayerAdmin(playerid) || GetPVarInt(playerid, "AdmLvl") >= 10)
	{
		new string[256];
		format(string, sizeof(string), " *** Админ %s [%d] начал перезагрузку системы домов.", RealName[playerid], playerid);
		SendClientMessageToAll(0xFF0000FF, string);
		printf("[GarHouse] Админ %s [%d] начал перезагрузку системы домов.", RealName[playerid], playerid);
		SetTimerEx("relhoyses1", 1000, 0, "i", playerid);
	}
	else
	{
		SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
forward relhoyses1(playerid);
public relhoyses1(playerid)
{
	new file[HOUSEFILE_LENGTH], tmp;
	Loop(i, MAX_PLAYERS)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
 		{
  			tmp = GetPVarInt(i, "LastHouseCP");
			format(file, sizeof(file), FILEPATH, tmp);
  			if(!strcmp(GetHouseOwner(tmp), RealName[i], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
			{
  				dini_IntSet(file, "QuitInHouse", 1);
	    		#if defined GH_HOUSECARS
	    			SaveHouseCar(tmp);
       			#endif
			}
		}
	}
	UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
	SetTimerEx("relhoyses2", 1000, 0, "i", playerid);
    return 1;
}
forward relhoyses2(playerid);
public relhoyses2(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)//обнуление массива блокировок диалога ввода пароля
	{
		lockpas[i] = 0;
	}

    LoadHouses(); // Загрузка фс дома
    Loop(i, MAX_PLAYERS)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            SetPVarInt(i, "HousePrevTime", 0);
        }
    }
	SetTimerEx("relhoyses3", 1000, 0, "i", playerid);
    return 1;
}
forward relhoyses3(playerid);
public relhoyses3(playerid)
{
	new string[256];
	format(string, sizeof(string), " *** Админ %s [%d] перезагрузил систему домов.", RealName[playerid], playerid);
	SendClientMessageToAll(0xFF0000FF, string);
	printf("[GarHouse] Админ %s [%d] перезагрузил систему домов.", RealName[playerid], playerid);
    return 1;
}
//==============================================================================
// заблокировать дом по ID.
//==============================================================================
dcmd_lchouse(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || GetPVarInt(playerid, "AdmLvl") >= 9)
	{
		new file[HOUSEFILE_LENGTH], h;
		if(sscanf(params, "d", h))
		{
			SendClientMessage(playerid, 0xBFC0C2FF, " Используйте: /lchouse [ид дома]");
			SendClientMessage(playerid, 0xFF0000FF, " Внимание !!! Команда блокирует дом по его ID !!!");
			SendClientMessage(playerid, 0xFF0000FF, " Используйте только в КРАЙНЕМ случае !!!");
			return 1;
		}
    	format(file, sizeof(file), FILEPATH, h);
		if(!dini_Exists(file)) return SendClientMessage(playerid, 0xFF0000FF, " Дома с таким ID не существует !");
		if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, 0xFF0000FF, " Нельзя ! Дом свободен !");
		if(!strcmp(dini_Get(file, "HouseOwner"), "* Дом заблокирован", CASE_SENSETIVE)) return SendClientMessage(playerid, 0xFF0000FF, " Дом уже заблокирован !");
		new locdata11, Float:locdata22[3];
		locdata22[0] = dini_Float(file, "CPOutX");
		locdata22[1] = dini_Float(file, "CPOutY");
		locdata22[2] = dini_Float(file, "CPOutZ");
		locdata11 = dini_Int(file, "SpawnWorld");
		dini_Set(file, "HouseOwner", "* Дом заблокирован");
		dini_Set(file, "HouseName", "* Дом заблокирован");
		UpdateHouseText(h);
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", locdata11, locdata22[0], locdata22[1], locdata22[2]);
		new string[256];
		format(string, sizeof(string), " *** Админ %s [%d] заблокировал дом ID %d .", RealName[playerid], playerid, h);
		SendAdminMessage(0xFF0000FF, string);
		printf("[GarHouse] Админ %s [%d] заблокировал дом ID %d .", RealName[playerid], playerid, h);
	}
	else
	{
		SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
//==============================================================================
// вернуть дом по ID на продажу.
//==============================================================================
dcmd_rethouse(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	{
		new file[HOUSEFILE_LENGTH], h, sum;
		if(sscanf(params, "dd", h, sum))
		{
			SendClientMessage(playerid, 0xBFC0C2FF, " Используйте: /rethouse [ид дома] [стоимость дома]");
			return 1;
		}
    	format(file, sizeof(file), FILEPATH, h);
		if(!dini_Exists(file)) return SendClientMessage(playerid, 0xFF0000FF, " Дома с таким ID не существует !");
		if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, 0xFF0000FF, " Нельзя ! Дом свободен !");
		if(sum < 500000 || sum > 25000000) return SendClientMessage(playerid, 0xFF0000FF, " Стоимость должна быть между 500,000 $ и 25,000,000 $ !");
		new locstr11[256], locstr22[256], locdata11[4], Float:locdata22[7];
		locdata22[0] = dini_Float(file, "CPOutX");
		locdata22[1] = dini_Float(file, "CPOutY");
		locdata22[2] = dini_Float(file, "CPOutZ");
		locstr11 = dini_Get(file, "HouseCreator");
		locdata22[3] = dini_Float(file, "SpawnOutX");
		locdata22[4] = dini_Float(file, "SpawnOutY");
		locdata22[5] = dini_Float(file, "SpawnOutZ");
		locdata22[6] = dini_Float(file, "SpawnOutAngle");
		locdata11[0] = dini_Int(file, "SpawnWorld");
		locdata11[1] = dini_Int(file, "SpawnInterior");
		locdata11[2] = dini_Int(file, "HouseInterior");
		locdata11[3] = dini_Int(file, "HouseInteriorValue");
		locstr22 = dini_Get(file, "HouseInteriorName");
		dini_Remove(file);
	    dini_Create(file);
		dini_FloatSet(file, "CPOutX", locdata22[0]);
		dini_FloatSet(file, "CPOutY", locdata22[1]);
		dini_FloatSet(file, "CPOutZ", locdata22[2]);
		dini_Set(file, "HouseName", "Свободен");
		dini_Set(file, "HouseOwner", "*** INV_PL_ID");
		dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
		dini_Set(file, "HouseCreator", locstr11);
		dini_IntSet(file, "HouseValue", sum);
		dini_IntSet(file, "HouseStorage", 0);
		dini_FloatSet(file, "SpawnOutX", locdata22[3]);
		dini_FloatSet(file, "SpawnOutY", locdata22[4]);
		dini_FloatSet(file, "SpawnOutZ", locdata22[5]);
		dini_FloatSet(file, "SpawnOutAngle", locdata22[6]);
		dini_IntSet(file, "SpawnWorld", locdata11[0]);
		dini_IntSet(file, "SpawnInterior", locdata11[1]);
		dini_IntSet(file, "HouseInterior", locdata11[2]);
		dini_IntSet(file, "HouseInteriorValue", locdata11[3]);
		dini_Set(file, "HouseInteriorName", locstr22);
		#if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
			HouseMIcon[h] = CreateDynamicMapIcon(locdata22[0], locdata22[1], locdata22[2], 31, -1, locdata11[0], dini_Int(file, "SpawnInterior"), -1, MICON_VD);
		#endif
		UpdateHouseText(h);
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", locdata11[0], locdata22[0], locdata22[1], locdata22[2]);
		new string[256];
		format(string, sizeof(string), " *** Админ %s [%d] вернул дом ID %d на продажу за %d $ .", RealName[playerid], playerid, h, sum);
		SendAdminMessage(0xFFFF00FF, string);
		printf("[GarHouse] Админ %s [%d] вернул дом ID %d на продажу за %d $ .", RealName[playerid], playerid, h, sum);
	}
	else
	{
		SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
//==============================================================================
// This command is used to add a house car for a house.
// The only thing you have to enter is the house value,
// the rest is done by the script.
//==============================================================================
dcmd_addhcar(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_HCAR_NOT_IN_VEH);
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_ADDHCAR);
	format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
	    if(dini_Int(file, "HCar") == 1) { SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_EXIST_ALREADY, h); }
	    if(dini_Int(file, "HCar") == 0) { SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_CREATED, h); }
		GetVehiclePos(GetPlayerVehicleID(playerid), Xgh, Ygh, Zgh);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), Anglegh);
		dini_FloatSet(file, "HCarPosX", Xgh);
		dini_FloatSet(file, "HCarPosY", Ygh);
		dini_FloatSet(file, "HCarPosZ", Zgh);
		dini_FloatSet(file, "HCarAngle", Anglegh);
		dini_IntSet(file, "HCar", 1);
		dini_IntSet(file, "HCarWorld", GetPlayerVirtualWorld(playerid));
		dini_IntSet(file, "HCarInt", GetPlayerInterior(playerid));
		dini_IntSet(file, "HCarModel", GetVehicleModel(GetPlayerVehicleID(playerid)));
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD2, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to delete a house.
// Note: It does not give any money to the house owner when the house is deleted
//==============================================================================
dcmd_removehouse(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_REMOVEHOUSE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
     	DestroyHouseEntrance(h, TYPE_OUT);
	    DestroyHouseEntrance(h, TYPE_INT);
	    #if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
		#endif
//	    Delete3DTextLabel(HouseLabel[h]);
	    DestroyDynamic3DTextLabel(HouseLabel[h]);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_DESTROYED, h);
		dini_Remove(file);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD3, RealName[playerid], playerid, h);
		#endif
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
	}
    return 1;
}
//==============================================================================
// This command is used to remove the house car for a house.
//==============================================================================
dcmd_removehcar(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_REMOVEHCAR);
	format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(dini_Int(file, "HCar") == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NO_HCAR);
	else
	{
	    UnloadHouseCar(h);
		dini_IntSet(file, "HCar", 0);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_REMOVED, h);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD4, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to change the modelid of a housecar.
//==============================================================================
dcmd_changehcar(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h, modelid;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dd", h, modelid)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGEHCAR);
	format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(modelid < 400 || modelid > 611) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HCAR_MODEL);
	else
	{
		dini_IntSet(file, "HCarModel", modelid);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_CHANGED, h, modelid);
    	#if defined GH_HOUSECARS
		if(GetVehicleModel(HouseCar[h]) != -1)
		{
		    if(IsVehicleOccupied(HouseCar[h]))
		    {
		        new Float:Velocity[3], Float:Pos[4], Seat[MAX_PLAYERS] = -1, interior, vw = GetVehicleVirtualWorld(HouseCar[h]);
		        Loop(i, MAX_PLAYERS)
		        {
		            if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		            if(IsPlayerInVehicle(i, HouseCar[h]))
		            {
		                Seat[i] = GetPlayerVehicleSeat(i);
		                if(Seat[i] == 0)
		                {
		                    interior = GetPlayerInterior(i); // Have to do it this way because there is no GetVehicleInterior..
						}
		            }
		        }
		        GetVehiclePos(HouseCar[h], Pos[0], Pos[1], Pos[2]);
		        GetVehicleZAngle(HouseCar[h], Pos[3]);
		        GetVehicleVelocity(HouseCar[h], Velocity[0], Velocity[1], Velocity[2]);
		        DestroyVehicle(HouseCar[h]);
		        HouseCar[h] = CreateVehicle(modelid, Pos[0], Pos[1], Pos[2], Pos[3], HCAR_COLOUR1, HCAR_COLOUR2, HCAR_RESPAWN);
				LinkVehicleToInterior(HouseCar[h], interior);
				SetVehicleVirtualWorld(HouseCar[h], vw);
				Loop(i, MAX_PLAYERS)
		        {
		            if(!IsPlayerConnected(i) || IsPlayerNPC(i) || Seat[i] == -1) continue;
		            if(IsPlayerInVehicle(i, HouseCar[h]))
		            {
		                PutPlayerInVehicle(i, HouseCar[h], Seat[i]);
		            }
		        }
				SetVehicleVelocity(HouseCar[h], Velocity[0], Velocity[1], Velocity[2]);

		    }
            if(!IsVehicleOccupied(HouseCar[h]))
		    {
		        UnloadHouseCar(h);
		        LoadHouseCar(h);
		    }
		}
		#endif
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD12, RealName[playerid], playerid, h, modelid);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to delete all houses.
// It does not give any money to the house owners when the houses is deleted.
//==============================================================================
dcmd_removeallhouses(playerid, params[])
{
	#pragma unused params
	new hcount, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file))
	        {
	            UnloadHouseCar(h);
		     	DestroyHouseEntrance(h, TYPE_OUT);
			    DestroyHouseEntrance(h, TYPE_INT);
			    #if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
				#endif
//			    Delete3DTextLabel(HouseLabel[h]);
			    DestroyDynamic3DTextLabel(HouseLabel[h]);
				dini_Remove(file);
				hcount++;
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
		}
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLH_DESTROYED, hcount);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD5, RealName[playerid], playerid, hcount);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used remove all house cars.
// It does not delete the house cars itself due to SA:MP mixing up vehicle ID's.
//==============================================================================
dcmd_removeallhcars(playerid, params[])
{
	#pragma unused params
	new hcount, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        UnloadHouseCar(h);
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file))
	        {
				dini_IntSet(file, "HCar", 0);
			}
		}
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLHCAR_REMOVED, hcount);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD6, RealName[playerid], playerid, hcount);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to change the spawnposition details of a house
//==============================================================================
dcmd_changespawn(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGESPAWN);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
	    GetPlayerPos(playerid, Xgh, Ygh, Zgh);
		GetPlayerFacingAngle(playerid, Anglegh);
	    dini_FloatSet(file, "SpawnOutX", Xgh);
		dini_FloatSet(file, "SpawnOutY", Ygh);
		dini_FloatSet(file, "SpawnOutZ", Zgh);
		dini_FloatSet(file, "SpawnOutAngle", Anglegh);
		dini_IntSet(file, "SpawnWorld", GetPlayerVirtualWorld(playerid));
		dini_IntSet(file, "SpawnInterior", GetPlayerInterior(playerid));
		SendMSG(playerid, COLOUR_YELLOW, 128, I_HSPAWN_CHANGED, h);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD7, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to teleport to a house.
//==============================================================================
dcmd_gotohouse(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(GetPVarInt(playerid, "SecPris") > 0)
	{
		SendClientMessage(playerid, COLOUR_SYSTEM, "В тюрьме команда не работает !");
		return 1;
	}
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_GOTOHOUSE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
	    SetPlayerPosEx(playerid, dini_Float(file, "SpawnOutX"), dini_Float(file, "SpawnOutY"), dini_Float(file, "SpawnOutZ"), -600.0, dini_Int(file, "SpawnInterior"), dini_Int(file, "SpawnWorld"));
		SendMSG(playerid, COLOUR_YELLOW, 128, I_TELEPORT_MSG, h);
	}
    return 1;
}
//==============================================================================
// This command is used to sell a house.
// If the house owner is connected while selling the house,
// the amount in the house storage and 75% of the house value will be given to the house owner.
//==============================================================================
dcmd_sellhouse(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h, file2[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_SELLHOUSE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(!strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_H_A_F_SALE);
	else
	{
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_SOLD, h);
		new para1, para2, para3, strd[256];
		new dvw, Float:dcX, Float:dcY, Float:dcZ;
		para1 = GetHouseOwnerEx(h);
		if(IsPlayerConnected(para1))
		{
			para2 = dini_Int(file, "HouseStorage") + ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT);
			para3 = GetPVarInt(para1, "PlMon");
			SetPVarInt(para1, "PlMon", para3 + para2);
			printf("[GarHouse] Сумма %d $ была возвращена игроку %s [%d] (админ продал дом игрока)", para2, RealName[para1], para1);
			format(strd, sizeof(strd), "Сумма %d $ была Вам возвращена (админ продал Ваш дом)", para2);
			SendClientMessage(para1, COLOUR_GREEN, strd);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, para3);
		}
		dini_IntSet(file, "HouseValue", ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
		dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
		dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
		dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
		dini_IntSet(file, "HouseStorage", 0);
		Loop(h2, MAX_HOUSES)
		{
			if(IsHouseInRangeOfHouse(h, h2, RANGE_BETWEEN_HOUSES) && h2 != h)
			{
		    	format(file2, sizeof(file2), FILEPATH, h2);
				dini_IntSet(file2, "HouseValue", (dini_Int(file2, "HouseValue") - ReturnProcent(GetHouseValue(h2), HOUSE_SELLING_PROCENT2)));
			}
		}
		Loop(i, MAX_PLAYERS)
		{
		    if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
		    {
		    	SetPVarInt(i, "IsInHouse", 0);
       			SetPlayerPosEx(i, dini_Float(file, "SpawnOutX"), dini_Float(file, "SpawnOutY"), dini_Float(file, "SpawnOutZ"), dini_Float(file, "SpawnOutAngle"), dini_Int(file, "SpawnInterior"), dini_Int(file, "SpawnWorld"));
			}
		}
		dcX = dini_Float(file, "CPOutX");
		dcY = dini_Float(file, "CPOutY");
		dcZ = dini_Float(file, "CPOutZ");
		dvw = dini_Int(file, "SpawnWorld");
		#if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
			HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
		#endif
		UpdateHouseText(h);
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, dcX, dcY, dcZ);
        #if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD8, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to sell a house.
// If the house owner is connected while selling the house,
// the amount in the house storage and 75% of the house value will be given to the house owner.
//==============================================================================
dcmd_sellallhouses(playerid, params[])
{
	#pragma unused params
	new file[HOUSEFILE_LENGTH], hcount;
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
		new para1, para2, para3, strd[256];
		new dvw, Float:dcX, Float:dcY, Float:dcZ;
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file) && strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE))
	        {
				para1 = GetHouseOwnerEx(h);
				if(IsPlayerConnected(para1))
				{
					para2 = dini_Int(file, "HouseStorage") + ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT);
					para3 = GetPVarInt(para1, "PlMon");
					SetPVarInt(para1, "PlMon", para3 + para2);
					printf("[GarHouse] Сумма %d $ была возвращена игроку %s [%d] (продажа всех домов)", para2, RealName[para1], para1);
					format(strd, sizeof(strd), "Сумма %d $ была Вам возвращена (продажа всех домов)", para2);
					SendClientMessage(para1, COLOUR_GREEN, strd);
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, para3);
				}
				dini_IntSet(file, "HouseValue", ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
				dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
				dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
				dini_IntSet(file, "HouseStorage", 0);
				dcX = dini_Float(file, "CPOutX");
				dcY = dini_Float(file, "CPOutY");
				dcZ = dini_Float(file, "CPOutZ");
				dvw = dini_Int(file, "SpawnWorld");
				#if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
				UpdateHouseText(h);
				hcount++;
				CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, dcX, dcY, dcZ);
			}
		}
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLH_SOLD, hcount);
        #if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD9, RealName[playerid], playerid, hcount);
		#endif
	}
    return 1;
}
//==============================================================================
// 			This command is used to change the value of a house.
//==============================================================================
dcmd_changeprice(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH], price;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dd", h, price)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGEPRICE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(price < 1500000 || price > 25000000) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HVALUE);
	else
	{
	    dini_IntSet(file, "HouseValue", price);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_PRICE_CHANGED, h, price);
		UpdateHouseText(h);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD10, RealName[playerid], playerid, h, price);
		#endif
	}
    return 1;
}
//==============================================================================
// 		This command is used to change the value of all houses on the server.
//==============================================================================
dcmd_changeallprices(playerid, params[])
{
	new hcount, file[HOUSEFILE_LENGTH], price;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", price)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGEALLPRICE);
	if(price < 1500000 || price > 25000000) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HVALUE);
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file))
	        {
		    	dini_IntSet(file, "HouseValue", price);
		    	UpdateHouseText(h);
		    	hcount++;
	    	}
	    }
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLH_PRICE_CHANGED, price, hcount);
        #if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD11, RealName[playerid], playerid, price, hcount);
		#endif
	}
    return 1;
}
dcmd_ghcmds(playerid, params[])
{
	#pragma unused params
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
		ShowPlayerDialog(playerid, 520, DIALOG_STYLE_MSGBOX, "Команды", "/removeallhouses\n/changeallprices\n/sellallhouses\n/createhouse\n/removehouse\n/changeprice\n/sellhouse\n/gotohouse\n/passhouse\n/relhouses\n/lchouse\n/rethouse\n/housemenu\n/ghcmds", "Закрыть", "Закрыть");
		SetPVarInt(playerid, "DlgCont", 520);
	    return 1;
    }
}
//##############################################################################
// 								      Publics
//##############################################################################
forward HouseVisiting(playerid);
public HouseVisiting(playerid)
{

	SetPVarInt(playerid, "HousePrevTime", 0);//сбрасываем блокировку меню дома

	new string[200], tmpstring[50];
	GetPVarString(playerid, "HousePrevName", tmpstring, 50);
	format(string, sizeof(string), I_HINT_VISIT_OVER, tmpstring, GetPVarInt(playerid, "HousePrevValue"));
	ShowPlayerDialog(playerid, 517, DIALOG_STYLE_MSGBOX, "Интерьер", string, "Купить", "Отмена");
	SetPVarInt(playerid, "DlgCont", 517);
	return 1;
}
forward HouseSpawning(playerid);
public HouseSpawning(playerid)
{

	if(GetPVarInt(playerid, "SecPris") > 0)//если игрок в тюрьме, то в доме НЕ спавниться
	{
		SetPVarInt(playerid, "FirstSpawn", 1);
		return 1;
	}
	else
	{

		new file[HOUSEFILE_LENGTH];
		Loop(h, MAX_HOUSES)
		{
			if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE))
			{
  				format(file, sizeof(file), FILEPATH, h);
  				if(dini_Int(file, "QuitInHouse") == 1)
	    		{
		    		SetPVarInt(playerid, "IsInHouse", 1);
			    	SetPVarInt(playerid, "LastHouseCP", h);
       				SetPlayerHouseInterior(playerid, h);
       				#if defined GH_HOUSECARS
       					LoadHouseCar(h);
       				#endif
			    	SendClientMessage(playerid, COLOUR_INFO, I_HMENU);
			    	dini_IntSet(file, "QuitInHouse", 0);
		    		#if defined GH_DEBUGGING
  	    				printf(DEBUG_OP_SPAWN, RealName[playerid], playerid);
		    		#endif
				}
			}
		}
		SetPVarInt(playerid, "FirstSpawn", 1);
		return 1;
	}
}
//##############################################################################
// 								Functions
//##############################################################################
// 							  By [03]Garsino!
//==============================================================================
// LoadHouses();
// This function is used to load the houses.
// It creates all the checkpoints, map icons and
// 3D texts for all the houses and sets the correct 3D text information.
//==============================================================================
stock LoadHouses()
{

	for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			SetPVarInt(i, "HousePrevTime", 0);//обнуление важных глобальных переменных !!!
			SetPVarInt(i, "HousePreview", 0);
			SetPVarInt(i, "IsHouseVisiting", 0);
			SetPVarInt(i, "LastHouseCP", 0);
			SetPVarInt(i, "IsInHouse", 0);
			SetPVarInt(i, "HousePrevInt", 0);
			SetPVarInt(i, "IsHouseVisiting", 0);
			SetPVarInt(i, "ChangeHouseInt", 0);
			SetPVarInt(i, "HouseIntUpgradeMod", 0);
			SetPVarInt(i, "JustCreatedHouse", 0);
			SetPVarInt(i, "FirstSpawn", 0);
		}
	}

	new hcount = 0;
	new dname[64], dvw, Float:dcX, Float:dcY, Float:dcZ;
	Loop(h, MAX_HOUSES)
	{
		HousePickupOut[h] = -600;//задаём несуществующие ID-номера пикапов для дома
		HousePickupInt[h] = -600;
	    new file[HOUSEFILE_LENGTH], labeltext[150];
	    format(file, sizeof(file), FILEPATH, h);
	    if(dini_Exists(file))
	    {
			dcX = dini_Float(file, "CPOutX");
			dcY = dini_Float(file, "CPOutY");
			dcZ = dini_Float(file, "CPOutZ");
			strdel(dname, 0, 64);
			strcat(dname, dini_Get(file, "HouseOwner"));
			dvw = dini_Int(file, "SpawnWorld");
			HousePickupOut[h] = CreateDynamicPickup(PICKUP_MODEL_OUT, PICKUP_TYPE, dcX, dcY, dcZ, dvw, dini_Int(file, "SpawnInterior"), -1, 15.0);
			CreateCorrectHouseExitCP(h);
		    if(!strcmp(dname, INVALID_HOWNER_NAME, CASE_SENSETIVE))
		    {
		        format(labeltext, sizeof(labeltext), LABELTEXT1, GetHouseName(h), GetHouseValue(h), h);
//				HouseLabel[h] = Create3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, dvw, 1);
				HouseLabel[h] = CreateDynamic3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, dvw, dini_Int(file, "SpawnInterior"), -1);
                #if defined GH_USE_MAPICONS
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
			}
		    if(strcmp(dname, INVALID_HOWNER_NAME, CASE_SENSETIVE))
		    {
		        format(labeltext, sizeof(labeltext), LABELTEXT2, GetHouseName(h), GetHouseOwner(h), GetHouseValue(h), h);
//				HouseLabel[h] = Create3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, dvw, 1);
				HouseLabel[h] = CreateDynamic3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, dvw, dini_Int(file, "SpawnInterior"), -1);
                #if defined GH_USE_MAPICONS
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 32, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, dname, dvw, dcX, dcY, dcZ);
		    hcount++;
		}
		else
		{
			CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
		}
	}
	print(" ");
	printf("Total Houses Loaded: %d\n", hcount);
	return 1;
}
//==============================================================================
// LoadHouseCar(houseid);
// This function is used to load the house car for a house.
//==============================================================================
stock LoadHouseCar(houseid)
{
	#if defined GH_HOUSECARS
		new file[HOUSEFILE_LENGTH];
		format(file, sizeof(file), FILEPATH, houseid);
		if(dini_Exists(file) && dini_Int(file, "HCar") == 1)
		{
			HouseCar[houseid] = CreateVehicle(dini_Int(file, "HCarModel"), dini_Float(file, "HCarPosX"), dini_Float(file, "HCarPosY"), dini_Float(file, "HCarPosZ"), dini_Float(file, "HCarAngle"), HCAR_COLOUR1, HCAR_COLOUR2, HCAR_RESPAWN);
			SetVehicleVirtualWorld(HouseCar[houseid], dini_Int(file, "HCarWorld"));
			LinkVehicleToInterior(HouseCar[houseid], dini_Int(file, "HCarInt"));
		}
	#endif
	return 1;
}
//==============================================================================
// UnloadHouseCar(houseid);
// This function is used to the unload house car for a house.
//==============================================================================
stock UnloadHouseCar(houseid)
{
	#if !defined GH_HOUSECARS
	    #pragma unused houseid
	#endif
	#if defined GH_HOUSECARS
		new file[HOUSEFILE_LENGTH];
		format(file, sizeof(file), FILEPATH, houseid);
		if(dini_Exists(file) && dini_Int(file, "HCar") == 1)
		{
		    if(GetVehicleModel(HouseCar[houseid]) >= 400 && GetVehicleModel(HouseCar[houseid]) <= 611 && HouseCar[houseid] >= 1)
			{
			    DestroyVehicle(HouseCar[houseid]);
			    HouseCar[houseid] = -1;
			}
		}
	#endif
	return 1;
}
//==============================================================================
// SaveHouseCar(houseid);
// This function is used to check if there is any vehicles
// near the housecar spawn.
//==============================================================================
stock SaveHouseCar(houseid)
{
	#if defined GH_HOUSECARS
		new file[HOUSEFILE_LENGTH], Float:tmpx, Float:tmpy, Float:tmpz;
		format(file, sizeof(file), FILEPATH, houseid);
		if(dini_Exists(file) && dini_Int(file, "HCar") == 1)
		{
		    tmpx = dini_Float(file, "HCarPosX"), tmpy = dini_Float(file, "HCarPosY"), tmpz = dini_Float(file, "HCarPosZ");
		    Loop(v, MAX_VEHICLES)
			{
			    if(GetVehicleModel(v) < 400 || GetVehicleModel(v) > 611 || IsVehicleOccupied(v)) continue;
			    GetVehiclePos(v, Xgh, Ygh, Zgh);
			    if(PointInRangeOfPoint(HCAR_RANGE, Xgh, Ygh, Zgh, tmpx, tmpy, tmpz))
			    {
			        dini_IntSet(file, "HCarModel", GetVehicleModel(v));
			        DestroyVehicle(v);
			        break;
			    }
			}
		}
	#endif
	return 1;
}
//==============================================================================
// GetOwnedHouses(playerid);
// This function is used to find out how many houses a player owns
//==============================================================================
stock GetOwnedHouses(playerid)
{
	new file[HOUSEFILE_LENGTH], tmpcount;
	Loop(h, MAX_HOUSES)
	{
	    format(file, sizeof(file), FILEPATH, h);
	    if(dini_Exists(file))
	    {
		    if(!strcmp(dini_Get(file, "HouseOwner"), RealName[playerid], CASE_SENSETIVE))
		    {
		        tmpcount++;
		    }
		}
	}
	return tmpcount;
}
//==============================================================================
// GetHouseOwnerEx(houseid);
// This function is used to get the house owner of a house
// and return the playerid, it will return INVALID_PLAYER_ID
// if the house owner is not connected
//==============================================================================
stock GetHouseOwnerEx(houseid)
{
	new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
 	if(dini_Exists(file))
  	{
   		Loop(i, MAX_PLAYERS)
   		{
	    	if(!strcmp(RealName[i], GetHouseOwner(houseid), CASE_SENSETIVE))
   			{
      			return i;
   			}
		}
	}
	return INVALID_PLAYER_ID;
}
//==============================================================================
// ReturnPlayerHouseID(playerid, houseslot);
// This function is used to return the house id from a players house 'slot'
// Example: ReturnPlayerHouseID(playerid, 0);
// Would return for example house ID 500.
//==============================================================================
stock ReturnPlayerHouseID(playerid, houseslot)
{
	new file[HOUSEFILE_LENGTH], tmpcount = 0;
	if(houseslot < 1 && houseslot > MAX_HOUSES_OWNED) return -1;
	Loop(h, MAX_HOUSES)
	{
	    format(file, sizeof(file), FILEPATH, h);
	    if(dini_Exists(file))
	    {
		    if(!strcmp(RealName[playerid], dini_Get(file, "HouseOwner"), CASE_SENSETIVE))
		    {
		        tmpcount++;
		        if(tmpcount == houseslot)
		        {
		        	return h;
		        }
		    }
		}
	}
	return -1;
}
//==============================================================================
// UnloadHouses();
// This function is used to unload the houses.
// It deletes all the checkpoints, map icons and 3D texts for all the houses.
//==============================================================================
stock UnloadHouses()
{
	Loop(h, MAX_HOUSES)
	{
		DestroyHouseEntrance(h, TYPE_OUT);
		DestroyHouseEntrance(h, TYPE_INT);
		#if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
		#endif
//		Delete3DTextLabel(HouseLabel[h]);
		DestroyDynamic3DTextLabel(HouseLabel[h]);
		#if defined GH_HOUSECARS
			UnloadHouseCar(h);
		#endif
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
	}
	return 1;
}
//==============================================================================
// GetHouseValue(houseid);
// This function is used to get the value of a house
//==============================================================================
stock GetHouseValue(houseid)
{
	new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
		return dini_Int(file, "HouseValue");
	}
	else return printf("Couldn't Get House Value For House ID %d. File Doesn't Exist...", houseid);
}
//==============================================================================
// GetHouseName(houseid);
// This function is used to get the name of a house
//==============================================================================
stock GetHouseName(houseid)
{
	new file[HOUSEFILE_LENGTH], hname[MAX_HOUSE_NAME];
	format(hname, MAX_HOUSE_NAME, "%s", DEFAULT_HOUSE_NAME);
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
	    format(hname, MAX_HOUSE_NAME, "%s", dini_Get(file, "HouseName"));
		return hname;
	}
	return hname;
}
//==============================================================================
// GetHouseOwner(houseid);
// This function is used to get the owner of a house
//==============================================================================
stock GetHouseOwner(houseid)
{
	new file[HOUSEFILE_LENGTH], howner[MAX_PLAYER_NAME];
	format(howner, MAX_PLAYER_NAME, INVALID_HOWNER_NAME);
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
	    format(howner, MAX_PLAYER_NAME, "%s", dini_Get(file, "HouseOwner"));
		return howner;
	}
	return howner;
}
//==============================================================================
// IsHouseInRangeOfHouse(house, house2, Float:range);
// This function is used to check if a house is in range of another house
// Default range is 250.0
//==============================================================================
stock IsHouseInRangeOfHouse(house, house2, Float:range = 250.0)
{
	new file[HOUSEFILE_LENGTH], file2[25];
	format(file, sizeof(file), FILEPATH, house);
	format(file2, sizeof(file2), FILEPATH, house2);
	if(dini_Exists(file) && dini_Exists(file2))
	{
		if(PointInRangeOfPoint(range, dini_Float(file, "CPOutX"), dini_Float(file, "CPOutY"), dini_Float(file, "CPOutZ"), dini_Float(file2, "CPOutX"), dini_Float(file2, "CPOutY"), dini_Float(file2, "CPOutZ")))
		{
		    return 1;
		}
	}
	return 0;
}
//==============================================================================
// CreateCorrectHouseExitCP(houseid);
// This function is used to create the correct house exit checkpoint for the houseid
// based on the house interior ID
//==============================================================================
stock CreateCorrectHouseExitCP(houseid)
{
    new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
	switch(dini_Int(file, "HouseInterior"))
	{
	 	case 0: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2195.84, -1204.36, 1049.02, (houseid + 1000), 6, -1, 15.0); // Default House
		case 1: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2260.38, -1135.89, 1050.64, (houseid + 1000), 10, -1, 15.0); // Shitty Shack House Interior
		case 2: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2284.24, -1139.42, 1050.89, (houseid + 1000), 11, -1, 15.0); // Motel House Interior
		case 3: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2233.69, -1114.26, 1050.88, (houseid + 1000), 5, -1, 15.0); // Hotel House Interior
		case 4: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2216.39, -1077.10, 1050.48, (houseid + 1000), 1, -1, 15.0); // Hotel 2 House Interior
		case 5: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2496.00, -1693.70, 1014.74, (houseid + 1000), 3, -1, 15.0); // CJ's House Interior
		case 6: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2365.25, -1134.00, 1050.88, (houseid + 1000), 8, -1, 15.0); // Verdant Bluff's Safehouse House Interior
		case 7: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2319.43, -1026.33, 1050.21, (houseid + 1000), 9, -1, 15.0); // Medium Mansion House Interior
		case 8: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2324.41, -1148.54, 1050.71, (houseid + 1000), 12, -1, 15.0); // Rich Mansion House Interior
		case 9: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 143.40, 1366.66, 1083.85, (houseid + 1000), 5, -1, 15.0); // Huge Mansion House Interior
		case 10: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 1263.11, -785.26, 1091.9063, (houseid + 1000), 5, -1, 15.0); // Madd Dogg's Mansion House Interior
	}
	return 1;
}
stock CreateCorrectHouseExitCP22(playerid, houseid)
{
	switch(GetPVarInt(playerid, "HousePrevInt"))
	{
	 	case 0: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2195.84, -1204.36, 1049.02, (houseid + 1000), 6, -1, 15.0); // Default House
		case 1: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2260.38, -1135.89, 1050.64, (houseid + 1000), 10, -1, 15.0); // Shitty Shack House Interior
		case 2: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2284.24, -1139.42, 1050.89, (houseid + 1000), 11, -1, 15.0); // Motel House Interior
		case 3: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2233.69, -1114.26, 1050.88, (houseid + 1000), 5, -1, 15.0); // Hotel House Interior
		case 4: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2216.39, -1077.10, 1050.48, (houseid + 1000), 1, -1, 15.0); // Hotel 2 House Interior
		case 5: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2496.00, -1693.70, 1014.74, (houseid + 1000), 3, -1, 15.0); // CJ's House Interior
		case 6: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2365.25, -1134.00, 1050.88, (houseid + 1000), 8, -1, 15.0); // Verdant Bluff's Safehouse House Interior
		case 7: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2319.43, -1026.33, 1050.21, (houseid + 1000), 9, -1, 15.0); // Medium Mansion House Interior
		case 8: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2324.41, -1148.54, 1050.71, (houseid + 1000), 12, -1, 15.0); // Rich Mansion House Interior
		case 9: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 143.40, 1366.66, 1083.85, (houseid + 1000), 5, -1, 15.0); // Huge Mansion House Interior
		case 10: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 1263.11, -785.26, 1091.9063, (houseid + 1000), 5, -1, 15.0); // Madd Dogg's Mansion House Interior
	}
	return 1;
}
//==============================================================================
// SetPlayerHouseInterior(playerid, house);
// This function is used to set the correct house interior for a player when he enters a house or buy a new house interior.
//==============================================================================
stock SetPlayerHouseInterior(playerid, house)
{
    new file[HOUSEFILE_LENGTH];
    format(file, sizeof(file), FILEPATH, house);
	switch(dini_Int(file, "HouseInterior"))
	{
	 	case 0: SetPlayerPosEx(playerid, 2193.9001, -1202.4185, 1049.0234, 91.9386, 6, (house + 1000)); // Default House Interior - Spawnpoint
		case 1: SetPlayerPosEx(playerid, 2262.5627, -1136.1664, 1050.6328, 267.5372, 10, (house + 1000)); // Shitty Shack House Interior - Spawnpoint
		case 2: SetPlayerPosEx(playerid, 2283.0632, -1136.9760, 1050.8984, 358.7963, 11, (house + 1000)); // Motel Room House Interior - Spawnpoint
		case 3: SetPlayerPosEx(playerid, 2233.6057, -1111.7039, 1050.8828, 2.9124, 5, (house + 1000)); // Hotel House Interior - Spawnpoint
		case 4: SetPlayerPosEx(playerid, 2214.8909, -1076.0967, 1050.4844, 88.8910, 1, (house + 1000)); // Hotel 2 House Interior - Spawnpoint
		case 5: SetPlayerPosEx(playerid, 2495.8035, -1695.0997, 1014.7422, 181.9661, 3, (house + 1000)); // CJ's House Interior - Spawnpoint
		case 6: SetPlayerPosEx(playerid, 2365.2883, -1132.5228, 1050.8750, 358.0393, 8, (house + 1000)); // Verdant Bluff's Safehouse House Interior - Spawnpoint
		case 7: SetPlayerPosEx(playerid, 2320.0730, -1023.9533, 1050.2109, 358.4915, 9, (house + 1000)); // Medium Mansion House Interior - Spawnpoint
		case 8: SetPlayerPosEx(playerid, 2324.4490, -1145.2841, 1050.7101, 357.5873, 12, (house + 1000)); // Richouse Mansion House Interior - Spawnpoint
		case 9: SetPlayerPosEx(playerid, 140.1788, 1369.1936, 1083.8641, 359.2263, 5, (house + 1000)); // Huge Mansion House Interior - Spawnpoint
		case 10: SetPlayerPosEx(playerid, 1264.7765, -781.2485, 1091.9063, 270.6992, 5, (house + 1000)); // Madd Dogg's Mansion House Interior - Spawnpoint
	}
	return 1;
}
stock SetPlayerHouseInterior22(playerid, house)
{
	switch(GetPVarInt(playerid, "HousePrevInt"))
	{
	 	case 0: SetPlayerPosEx(playerid, 2193.9001, -1202.4185, 1049.0234, 91.9386, 6, (house + 1000)); // Default House Interior - Spawnpoint
		case 1: SetPlayerPosEx(playerid, 2262.5627, -1136.1664, 1050.6328, 267.5372, 10, (house + 1000)); // Shitty Shack House Interior - Spawnpoint
		case 2: SetPlayerPosEx(playerid, 2283.0632, -1136.9760, 1050.8984, 358.7963, 11, (house + 1000)); // Motel Room House Interior - Spawnpoint
		case 3: SetPlayerPosEx(playerid, 2233.6057, -1111.7039, 1050.8828, 2.9124, 5, (house + 1000)); // Hotel House Interior - Spawnpoint
		case 4: SetPlayerPosEx(playerid, 2214.8909, -1076.0967, 1050.4844, 88.8910, 1, (house + 1000)); // Hotel 2 House Interior - Spawnpoint
		case 5: SetPlayerPosEx(playerid, 2495.8035, -1695.0997, 1014.7422, 181.9661, 3, (house + 1000)); // CJ's House Interior - Spawnpoint
		case 6: SetPlayerPosEx(playerid, 2365.2883, -1132.5228, 1050.8750, 358.0393, 8, (house + 1000)); // Verdant Bluff's Safehouse House Interior - Spawnpoint
		case 7: SetPlayerPosEx(playerid, 2320.0730, -1023.9533, 1050.2109, 358.4915, 9, (house + 1000)); // Medium Mansion House Interior - Spawnpoint
		case 8: SetPlayerPosEx(playerid, 2324.4490, -1145.2841, 1050.7101, 357.5873, 12, (house + 1000)); // Richouse Mansion House Interior - Spawnpoint
		case 9: SetPlayerPosEx(playerid, 140.1788, 1369.1936, 1083.8641, 359.2263, 5, (house + 1000)); // Huge Mansion House Interior - Spawnpoint
		case 10: SetPlayerPosEx(playerid, 1264.7765, -781.2485, 1091.9063, 270.6992, 5, (house + 1000)); // Madd Dogg's Mansion House Interior - Spawnpoint
	}
	return 1;
}
//==============================================================================
// PointInRangeOfPoint(Float:range, Float:x2, Float:y2, Float:z2, Float:X2, Float:Y2, Float:Z2);
// Used to check if a point is in range of another point.
// Credits to whoever made this!
//==============================================================================
stock PointInRangeOfPoint(Float:range, Float:x2, Float:y2, Float:z2, Float:X2, Float:Y2, Float:Z2)
{
    X2 -= x2;
    Y2 -= y2;
    Z2 -= z2;
    return ((X2 * X2) + (Y2 * Y2) + (Z2 * Z2)) < (range * range);
}
//==============================================================================
// ReturnProcent(Float:amount, Float:procent);
// Used to return the procent of an value.
//==============================================================================
stock ReturnProcent(Float:amount, Float:procent)
{
	return floatround((amount / 100 * procent));
}
//==============================================================================
// SetPlayerPosEx(playerid, Float:posX, Float:posY, Float:posZ, Interior = 0, World = 0);
// Used to set the position of a player with optional interiorid and worldid parameters
//==============================================================================
stock SetPlayerPosEx(playerid, Float:posX, Float:posY, Float:posZ, Float:angp, Interior, World)
{
	SetPlayerVirtualWorld(playerid, World);
	SetPlayerInterior(playerid, Interior);
	if(Interior == 0 && World == 0 && (posX > 3050.0 || posX < -3050.0 || posY > 3050.0 || posY < -3050.0))
	{
		SetPlayerPos(playerid, posX, posY, posZ+2.0);
	}
	else
	{
		SetPlayerPos(playerid, posX, posY, posZ);
	}
	if(angp != -600.0) { SetPlayerFacingAngle(playerid, angp); }
	SetCameraBehindPlayer(playerid);
	return 1;
}
//==============================================================================
// GetFreeHouseID();
// Used to get the next free house ID. Will return -1 if there is none free.
//==============================================================================
stock GetFreeHouseID()
{
	new file[HOUSEFILE_LENGTH];
    Loop(h, MAX_HOUSES)
    {
        format(file, sizeof(file), FILEPATH, h);
        if(!dini_Exists(file))
        {
            return h;
		}
	}
    return -1;
}
//==============================================================================
// GetTotalHouses();
// Used to get the amount of existing houses.
//==============================================================================
stock GetTotalHouses()
{
	new tmpcount, file[HOUSEFILE_LENGTH];
    Loop(h, MAX_HOUSES)
    {
        format(file, sizeof(file), FILEPATH, h);
        if(dini_Exists(file))
        {
            tmpcount++;
		}
	}
    return tmpcount;
}
stock UpdateHouseText(houseid)
{
	new labeltext[150], file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
	    if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE))
	    {
			format(labeltext, sizeof(labeltext), LABELTEXT1, GetHouseName(houseid), GetHouseValue(houseid), houseid);
		}
		else
		{
			format(labeltext, sizeof(labeltext), LABELTEXT2, GetHouseName(houseid), GetHouseOwner(houseid), GetHouseValue(houseid), houseid);
		}
//		Update3DTextLabelText(HouseLabel[houseid], COLOUR_GREEN, labeltext);
		UpdateDynamic3DTextLabelText(HouseLabel[houseid], COLOUR_GREEN, labeltext);
    }
	return 1;
}
//==============================================================================
// FM(amount, Optional(Delimiter));
// Used to format the money (from 100000 to 100,000).
// Credits to mick88
//==============================================================================
stock FM(amount, delimiter[2]=",")
{
	new txt[20];
	format(txt, 20, "$%d", amount);
	new l = strlen(txt);
	if (amount < 0) // -
	{
	  	if (l >= 5) strins(txt, delimiter, l-3);
		if (l >= 8) strins(txt, delimiter, l-6);
		if (l >= 11) strins(txt, delimiter, l-9);
	}
	else
	{
		if (l >= 4) strins(txt, delimiter, l-3);
		if (l >= 7) strins(txt, delimiter, l-6);
		if (l >= 10) strins(txt, delimiter, l-9);
	}
	return txt;
}
//==============================================================================
// AddS(amount);
// By [03]Garsino.
//==============================================================================
stock AddS(amount)
{
	new returnstring[2];
	format(returnstring, 2, "");
	if(amount != 1 && amount != -1)
	{
	    format(returnstring, 2, "s");
	}
	return returnstring;
}
//==============================================================================
// GetSecondsBetweenAction(action);
// By [03]Garsino.
//==============================================================================
//	stock GetSecondsBetweenAction(action)
//	{
//		return floatround(floatdiv((GetTickCount() - action), 1000), floatround_tozero);
//	}
//==============================================================================
// DestroyHouseEntrance(houseid, type);
// Destroys the house entrance of a house (pickup or checkpoint).
// Type can be: TYPE_OUT (0) and TYPE_INT (1)
// By [03]Garsino.
//==============================================================================
stock DestroyHouseEntrance(houseid, type)
{
	if(type == TYPE_OUT)
	{
		DestroyDynamicPickup(HousePickupOut[houseid]);
		HousePickupOut[houseid] = -600;//задаём несуществующий ID-номер пикапа для дома
	}
	if(type == TYPE_INT)
	{
		DestroyDynamicPickup(HousePickupInt[houseid]);
		HousePickupInt[houseid] = -600;//задаём несуществующий ID-номер пикапа для дома
	}
	return 1;
}
//==============================================================================
// IsVehicleOccupied(vehicleid);
// Checks if a vehicle is occupied or not.
// By [03]Garsino.
//==============================================================================
stock IsVehicleOccupied(vehicleid)
{
  	Loop(i, MAX_PLAYERS)
	{
		if(IsPlayerInVehicle(i, vehicleid))
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
//                              End GarHouse
//==============================================================================

forward DelAkk22(para1);
public DelAkk22(para1)
{
	new string[256], ssss[256];
	format(string,sizeof(string),"gangs/%d.ini",para1);
	new para3[130];
	strdel(para3, 0, 130);
	strcat(para3, GName[para1]);
	strdel(GTDReg[para1], 0, 32);
	strdel(GHead[para1], 0, 64);
	strdel(GName[para1], 0, 130);
	strdel(GColor[para1], 0, 16);
	strdel(GColorHex[para1], 0, 16);
	GSpawnX[para1] = 0.00;
	GSpawnY[para1] = 0.00;
	GSpawnZ[para1] = 0.00;
	GInter[para1] = 0;
	GWorld[para1] = 0;
	GSkin[para1][0] = 500;
	GSkin[para1][1] = 500;
	GSkin[para1][2] = 500;
	GSkin[para1][3] = 500;
	GSkin[para1][4] = 500;
	GSkin[para1][5] = 500;
	GPlayers[para1] = 0;
	fremove(string);//удаляем банду
	printf(" *** и удалил банду [ID: %d] [%s{33CCFF}] (автоматически) .", para1, para3);
	format(ssss,sizeof(ssss)," *** и удалил банду [%s{33CCFF}] (автоматически) .", para3);
	SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PGang[i] == para1)
			{
				SendClientMessage(i, 0xFF0000FF, "Ваша банда была удалена !");
				PGang[i] = 0;
				GangLvl[i] = 0;
			}
		}
	}
	SetTimerEx("DelAkk33", 300, 0, "i", para1);
	return 1;
}

forward DelAkk33(para1);
public DelAkk33(para1)
{
	Gang[para1] = 0;
	return 1;
}

stock GetFreeGang()//Gangs system
{
	for(new i=1; i<MAX_GANGS; i++)
	{
		if(Gang[i] == 0) return i;
	}
	return false;
}

forward SaveGangOn(gangid);
public SaveGangOn(gangid)
{
	GangSA[gangid] = 1;
	return true;
}

forward SaveGangOff(playerid);
public SaveGangOff(playerid)
{
	new gangdata;
	gangdata = PGang[playerid];
	strdel(GTDReg[PGang[playerid]], 0, 32);
	strdel(GHead[PGang[playerid]], 0, 64);
	strdel(GColor[PGang[playerid]], 0, 16);
	strdel(GColorHex[PGang[playerid]], 0, 16);
	GSpawnX[PGang[playerid]] = 0.00;
	GSpawnY[PGang[playerid]] = 0.00;
	GSpawnZ[PGang[playerid]] = 0.00;
	GInter[PGang[playerid]] = 0;
	GWorld[PGang[playerid]] = 0;
	GSkin[PGang[playerid]][0] = 500;
	GSkin[PGang[playerid]][1] = 500;
	GSkin[PGang[playerid]][2] = 500;
	GSkin[PGang[playerid]][3] = 500;
	GSkin[PGang[playerid]][4] = 500;
	GSkin[PGang[playerid]][5] = 500;
	GPlayers[PGang[playerid]] = 0;
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
 		{
			if(PGang[i] == PGang[playerid] && i != playerid)
			{
				SendClientMessage(i, 0xFF0000FF, "Ваша банда была удалена !");
				PGang[i] = 0;
				GangLvl[i] = 0;
			}
		}
	}
	printf("[GangsSystem] %s [%d] удалил банду %s [ID: %d] .", RealName[playerid], playerid, GName[PGang[playerid]], PGang[playerid]);
	new string[256];
	format(string,sizeof(string),"gangs/%d.ini",PGang[playerid]);
	fremove(string);
	SendClientMessage(playerid, 0xFF0000FF, "Ваша банда была удалена !");
	strdel(GName[PGang[playerid]], 0, 130);
	PGang[playerid] = 0;
	GangLvl[playerid] = 0;
	SetTimerEx("SaveGangOff22", 300, 0, "i", gangdata);
	return true;
}

forward SaveGangOff22(gangid);
public SaveGangOff22(gangid)
{
	Gang[gangid] = 0;
	return true;
}

forward GangLoad();
public GangLoad()
{
//корректировка ошибок в названии и цвете банды
//--------------------------------- начало -------------------------------------
	new dopper;
	new dopper22;
	new para1, para2, para3[64];
//---------------------------------- конец -------------------------------------
    new file, f[256];
	for(new i=1; i<(MAX_GANGS - 1); i++)
	{
	    format(f, 256, "gangs/%i.ini", i);
		file = ini_openFile(f);
		if(file >= 0)
		{
		    ini_getString(file, "Gang TDReg", GTDReg[i]);
		    ini_getString(file, "Gang head", GHead[i]);
		    ini_getString(file, "Gang name", GName[i]);
		    ini_getString(file, "Gang color", GColor[i]);
		    ini_getFloat(file, "SpawnX", GSpawnX[i]);
		    ini_getFloat(file, "SpawnY", GSpawnY[i]);
		    ini_getFloat(file, "SpawnZ", GSpawnZ[i]);
		    ini_getInteger(file, "GInter", GInter[i]);
		    ini_getInteger(file, "GWorld", GWorld[i]);
		    ini_getInteger(file, "Skin1", GSkin[i][0]);
		    ini_getInteger(file, "Skin2", GSkin[i][1]);
		    ini_getInteger(file, "Skin3", GSkin[i][2]);
		    ini_getInteger(file, "Skin4", GSkin[i][3]);
		    ini_getInteger(file, "Skin5", GSkin[i][4]);
		    ini_getInteger(file, "Skin6", GSkin[i][5]);
		    ini_getInteger(file, "Players", GPlayers[i]);
#if (MOD11INS <= 3)
			for(new j = 0; j < 6; j++)//сброс ID скинов банды (если ID больше 299)
			{
				if(GSkin[i][j] > 299 && GSkin[i][j] != 500) { GSkin[i][j] = 500; }
			}
#endif
		    Gang[i] = 1;
		    GangSA[i] = 1;
			ini_closeFile(file);
		}
		else
		{
		    Gang[i] = 0;
		    GangSA[i] = 0;
		}
//корректировка ошибок в названии и цвете банды
//--------------------------------- начало -------------------------------------
		dopper = 0;//замена запрещённых кодов на 20h (пробел) в названии банды
		dopper22 = strlen(GName[i]);
		for(new j = 0; j < dopper22; j++)
		{
			if(GName[i][j] < 32 || GName[i][j] == 37 || GName[i][j] == 126 ||
			GName[i][j] == 127 || GName[i][j] == 152 || GName[i][j] == 160)
			{
				GName[i][j] = 32;
				dopper = 1;
			}
		}
		para2 = HexToInt(GColor[i], para1);//определение цвета банды
		if(para2 == -1 || para2 == -2)
		{
			strdel(GColor[i], 0, 16);
			strcat(GColor[i], "A0A0A0FF");
			dopper = 1;
		}
		para2 = GNameCon(GName[i]);//определение смены цвета внутри названия банды
		if(para2 == -1 || para2 == -2)
		{
			format(para3, 64, "Default - %d", i);
			strdel(GName[i], 0, 130);
			strcat(GName[i], para3);
			dopper = 1;
		}
		if(dopper == 1)//если были надены и заменены запрещённые коды в названии банды, ИЛИ был неверно
		{//определён цвет банды, ИЛИ была неверно определена смена цвета внутри названия банды, то:
			file = ini_openFile(f);//записываем изменения в файл банды
			if(file >= 0)
			{
				ini_setString(file, "Gang name", GName[i]);
				ini_setString(file, "Gang color", GColor[i]);
				ini_closeFile(file);
			}
		}
		GColorDec[i] = para1;
		strdel(GColorHex[i], 0, 16);
		strmid(GColorHex[i], GColor[i], 0, 6, 16);
//---------------------------------- конец -------------------------------------
	}
	return true;
}

forward GangSave(gangid);
public GangSave(gangid)
{
	if(GangSA[gangid] == 1)
	{
		new f[256];
		format(f, 256, "gangs/%i.ini", gangid);
		new file = ini_openFile(f);
		if(file >= 0)
		{
			ini_setString(file, "Gang TDReg", GTDReg[gangid]);
			ini_setString(file, "Gang head", GHead[gangid]);
			ini_setString(file, "Gang name", GName[gangid]);
			ini_setString(file, "Gang color", GColor[gangid]);
			ini_setFloat(file, "SpawnX", GSpawnX[gangid]);
			ini_setFloat(file, "SpawnY", GSpawnY[gangid]);
			ini_setFloat(file, "SpawnZ", GSpawnZ[gangid]);
			ini_setInteger(file, "GInter", GInter[gangid]);
			ini_setInteger(file, "GWorld", GWorld[gangid]);
			ini_setInteger(file, "Skin1", GSkin[gangid][0]);
			ini_setInteger(file, "Skin2", GSkin[gangid][1]);
			ini_setInteger(file, "Skin3", GSkin[gangid][2]);
			ini_setInteger(file, "Skin4", GSkin[gangid][3]);
			ini_setInteger(file, "Skin5", GSkin[gangid][4]);
			ini_setInteger(file, "Skin6", GSkin[gangid][5]);
			ini_setInteger(file, "Players", GPlayers[gangid]);
			ini_closeFile(file);
		}
	}
	return true;
}

stock HexToInt(string[], &mres)
{
	new para = 1;//функция выполнена успешно
	new cur = 1;
	mres = 0;
	new cur22 = 1, res[4], locper = 0, ind;
	res[0] = 0;
	res[1] = 0;
	res[2] = 0;
	res[3] = 0;
	new i = strlen(string);
	if(i < 1 || i > 8) { return -1; }//ошибка в формате цвета
	if(i == 1 || i == 3 || i == 5 || i == 7) { locper = 1; }
	while(i > 0)
	{
		if(string[i-1] < 48 || (string[i-1] > 57 && string[i-1] < 65) || string[i-1] > 70)
		{
			para = -1;//ошибка в формате цвета
			break;
		}
        ind = ((i + locper) / 2) - 1;
    	if(string[i-1] < 58)
		{
			mres = mres + cur * (string[i-1] - 48);
			res[ind] = res[ind] + cur22 * (string[i-1] - 48);
		}
		else
		{
			mres = mres + cur * (string[i-1] - 65 + 10);
			res[ind] = res[ind] + cur22 * (string[i-1] - 65 + 10);
		}
    	cur = cur * 16;
    	cur22 = cur22 * 16;
		i--;
		locper++;
		if(locper > 1)
		{
			locper = 0;
			cur22 = 1;
		}
	}
	if(para == -1) { return -1; }//ошибка в формате цвета
	if((res[0] + res[1] + res[2]) < 192) { para = -2; }//тёмный цвет
	return para;
}

stock GNameCon(string[])
{
	new para = 1;//функция выполнена успешно
	new strd[16];
	strdel(strd, 0, 16);
	new para22 = 0;
	new para33;
	new para44;
	new para55;
	new i = 0;
	new locper = strlen(string);
	while(i < locper)
	{
		if(string[i] == 125) { para22 = 0; }
		if(strlen(strd) == 6 && para22 == 0)
		{
			para44 = HexToInt(strd, para55);
			if(para44 == -1 || para44 == -2)
			{
				para = para44;//ошибка в формате цвета,
				break;//ИЛИ тёмный цвет
			}
		}
		if(para22 == 1)
		{
			strd[para33] = string[i];
			para33++;
		}
		if(string[i] == 123)
		{
			para22 = 1;
			strdel(strd, 0, 16);
			para33 = 0;
		}
		i++;
	}
	return para;
}

VehicleSpeedTextDraw_R()//speedometer
{
	new String[64];
//Vehicle K/MH
	KMH = TextDrawCreate(500.000000,107.000000,"KM/H:");
	TextDrawAlignment(KMH,0);
	TextDrawBackgroundColor(KMH,0x000000ff);
	TextDrawFont(KMH,1);
	TextDrawLetterSize(KMH,0.599999,2.599999);
	TextDrawColor(KMH,0x7777ffff);
	TextDrawSetOutline(KMH,1);
	TextDrawSetProportional(KMH,1);
	TextDrawSetShadow(KMH,1);

	HMS22 = TextDrawCreate(510.000000,325.000000,"HMS:");//создаём текстдрав максимальной горизонтальной скорости
	TextDrawAlignment(HMS22,0);
	TextDrawBackgroundColor(HMS22,0x000000ff);
	TextDrawFont(HMS22,1);
	TextDrawLetterSize(HMS22,0.599999,2.599999);
	TextDrawColor(HMS22,0x7777ffff);
	TextDrawSetOutline(HMS22,1);
	TextDrawSetProportional(HMS22,1);
	TextDrawSetShadow(HMS22,1);

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
//Vehicle K/MH_2
			VehicleSpeed[i] = CreatePlayerTextDraw(i,565.000000,106.000000,"_");
			PlayerTextDrawAlignment(i,VehicleSpeed[i],0);
			PlayerTextDrawBackgroundColor(i,VehicleSpeed[i],0x0000ff66);
			PlayerTextDrawFont(i,VehicleSpeed[i],2);
			PlayerTextDrawLetterSize(i,VehicleSpeed[i],0.699999,2.699999);
			PlayerTextDrawColor(i,VehicleSpeed[i],0xffffffff);
			PlayerTextDrawSetOutline(i,VehicleSpeed[i],1);
			PlayerTextDrawSetProportional(i,VehicleSpeed[i],1);
			PlayerTextDrawSetShadow(i,VehicleSpeed[i],1);

			HMS44[i] = CreatePlayerTextDraw(i,560.000000,324.000000,"_");//создаём текстдравы максимальной горизонтальной скорости
			PlayerTextDrawAlignment(i,HMS44[i],0);
			PlayerTextDrawBackgroundColor(i,HMS44[i],0x0000ff66);
			PlayerTextDrawFont(i,HMS44[i],2);
			PlayerTextDrawLetterSize(i,HMS44[i],0.699999,2.699999);
			PlayerTextDrawColor(i,HMS44[i],0xffffffff);
			PlayerTextDrawSetOutline(i,HMS44[i],1);
			PlayerTextDrawSetProportional(i,HMS44[i],1);
			PlayerTextDrawSetShadow(i,HMS44[i],1);

			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				TextDrawShowForPlayer(i, KMH);

				format(String, sizeof(String), "%d", GetPlayerSpeed(i));
				PlayerTextDrawSetString(i, VehicleSpeed[i], String);
				PlayerTextDrawShow(i, VehicleSpeed[i]);

				R_Vehicle[i] = VehicleSpeed_2;
			}
			conconTD[i] = 1;//блокировка создания текст-дравов при подключении игрока
		}
	}
	return 1;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatmul(ST[0], ST[0]) + floatmul(ST[1], ST[1]) + floatmul(ST[2], ST[2])) * 200;
//	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 200;
//	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 253.3;
    return floatround(ST[3]);
}

stock GetHMaxSpeed(vehicid)
{
	new modelcar = GetVehicleModel(vehicid);
	modelcar = modelcar - 400;
	if(modelcar < 0 || modelcar > 211) { return -1; }
	return HMS77[modelcar];
}

Float:GetPlayerTheoreticAngle(i)//drift bonus
{
	new Float:sin;
	new Float:dis;
	new Float:angle2;
	new Float:x,Float:y,Float:z;
	new Float:tmp3;
	new Float:tmp4;
	new Float:MindAngle;
	GetPlayerPos(i,x,y,z);
	dis = floatsqroot(floatpower(floatabs(floatsub(x,ppos[i][0])),2)+floatpower(floatabs(floatsub(y,ppos[i][1])),2));
	if(IsPlayerInAnyVehicle(i))GetVehicleZAngle(GetPlayerVehicleID(i), angle2); else GetPlayerFacingAngle(i, angle2);
	if(x>ppos[i][0]){tmp3=x-ppos[i][0];}else{tmp3=ppos[i][0]-x;}
	if(y>ppos[i][1]){tmp4=y-ppos[i][1];}else{tmp4=ppos[i][1]-y;}
	if(ppos[i][1]>y && ppos[i][0]>x){
		sin = asin(tmp3/dis);
		MindAngle = floatsub(floatsub(floatadd(sin, 90), floatmul(sin, 2)), -90.0);
	}
	if(ppos[i][1]<y && ppos[i][0]>x){
		sin = asin(tmp3/dis);
		MindAngle = floatsub(floatadd(sin, 180), 180.0);
	}
	if(ppos[i][1]<y && ppos[i][0]<x){
		sin = acos(tmp4/dis);
		MindAngle = floatsub(floatadd(sin, 360), floatmul(sin, 2));
	}
	if(ppos[i][1]>y && ppos[i][0]<x){
		sin = asin(tmp3/dis);
		MindAngle = floatadd(sin, 180);
	}
	if(MindAngle == 0.0){
		return angle2;
	} else
		return MindAngle;
}

public LevelUpdate()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {

		if(IsPlayerConnected(i))
		{
			new Score = GetPVarInt(i, "PlMon");//drift bonus
			if(Score >= 0 && Score < 100000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
			if(Score >= 100000 && Score < 200000) format(Playerdr[i][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
			if(Score >= 200000 && Score < 300000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
			if(Score >= 300000 && Score < 400000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
			if(Score >= 400000 && Score < 500000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
			if(Score >= 500000 && Score < 600000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
			if(Score >= 600000 && Score < 700000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
			if(Score >= 700000 && Score < 800000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
			if(Score >= 800000 && Score < 900000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Главарь{FFFFFF}*");
			if(Score >= 900000 ) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
			if(scrmod[3][i] == 0 && dmlock[i] == 0)
			{
				if(LevelStats[i] == 0) Attach3DTextLabelToPlayer(Level3D[i],i,0.0,0.0,1.20);
//				if(LevelStats[i] == 0) Attach3DTextLabelToPlayer(Level3D[i],i,0.0,0.0,0.47);
				Update3DTextLabelText(Level3D[i],0x00FF00FF,Playerdr[i][Level]);
				LevelStats[i] = 1;
			}
		}

 		TextDrawHideForPlayer(i,leveldr[0]);
  		TextDrawHideForPlayer(i,leveldr[1]);
   		TextDrawHideForPlayer(i,leveldr[2]);
   		TextDrawHideForPlayer(i,leveldr[3]);
    	TextDrawHideForPlayer(i,leveldr[4]);
    	TextDrawHideForPlayer(i,leveldr[5]);
    	TextDrawHideForPlayer(i,leveldr[6]);
    	TextDrawHideForPlayer(i,leveldr[7]);
    	TextDrawHideForPlayer(i,leveldr[8]);
    	TextDrawHideForPlayer(i,leveldr[9]);
    	TextDrawHideForPlayer(i,leveldr[10]);

		if(scrmod[0][i] == 0)
		{
			new kill  = GetPVarInt(i, "PlMon");
 			if(kill >= 0 && kill <= 100000) { TextDrawShowForPlayer(i,leveldr[0]); }
  			else if(kill >= 100000 && kill <= 200000) { TextDrawShowForPlayer(i,leveldr[1]); }
   			else if(kill >= 200000 && kill <= 300000) { TextDrawShowForPlayer(i,leveldr[2]); }
    		else if(kill >= 300000 && kill <= 400000) { TextDrawShowForPlayer(i,leveldr[3]); }
    		else if(kill >= 400000 && kill <= 500000) { TextDrawShowForPlayer(i,leveldr[4]); }
    		else if(kill >= 500000 && kill <= 600000) { TextDrawShowForPlayer(i,leveldr[5]); }
    		else if(kill >= 600000 && kill <= 700000) { TextDrawShowForPlayer(i,leveldr[6]); }
    		else if(kill >= 700000 && kill <= 800000) { TextDrawShowForPlayer(i,leveldr[7]); }
    		else if(kill >= 800000 && kill <= 900000) { TextDrawShowForPlayer(i,leveldr[8]); }
    		else if(kill >= 900000 && kill <= 1000000) { TextDrawShowForPlayer(i,leveldr[9]); }
    		else if(kill >= 1000000) { TextDrawShowForPlayer(i,leveldr[10]); }

			else { TextDrawShowForPlayer(i,leveldr[0]); }
		}

    }
    return 1;
}

public DriftCancellation(playerid){
	PlayerDriftCancellation[playerid] = 0;
	if(scrmod[2][playerid] == 0)
	{
		GameTextForPlayer(playerid, Split("~n~~n~~n~~n~~n~~n~~n~~n~~w~~w~Drifting Bonus:~b~ ", tostr(DriftPointsNow[playerid]), "~w~ !"), 3000, 3);
	}
	SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + DriftPointsNow[playerid]);//добавляем дрифт-очки
	if(compdrift[playerid] >= 0)//если игрок подключен к дрифт-соревнованию, то:
	{
		compdrift[playerid] = compdrift[playerid] + DriftPointsNow[playerid];//добавляем очки к дрифт-соревнованию
	}
	DriftPointsNow[playerid] = 0;
	dddrift[playerid] = 0;
	return 1;
}

Float:ReturnPlayerAngle(playerid){
	new Float:Ang;
	if(IsPlayerInAnyVehicle(playerid))GetVehicleZAngle(GetPlayerVehicleID(playerid), Ang); else GetPlayerFacingAngle(playerid, Ang);
	return Ang;
}

public Drift(){
	new Float:Angle1, Float:Angle2, Float:BySpeed, s[256];
	new Float:Z;
	new Float:X;
	new Float:Y;
	new Float:SpeedX;
	for(new g=0;g<MAX_PLAYERS;g++){
		if(IsPlayerConnected(g))
		{
			NETafkPl[g][0]++;//прибавить контрольную переменную AFK
			GetPlayerPos(g, X, Y, Z);
			SavedPos[ g ][ dltX ] = floatsub(X,SavedPos[ g ][ sX ]);
			SavedPos[ g ][ dltY ] = floatsub(Y,SavedPos[ g ][ sY ]);
			SavedPos[ g ][ dltZ ] = floatsub(Z,SavedPos[ g ][ sZ ]);
			SpeedX = floatsqroot(floatadd(floatadd(floatmul(SavedPos[ g ][ dltX ],SavedPos[ g ][ dltX ]),floatmul(SavedPos[ g ][ dltY ],SavedPos[ g ][ dltY ])),floatmul(SavedPos[ g ][ dltZ ],SavedPos[ g ][ dltZ ])));
//			SpeedX = floatsqroot(floatadd(floatadd(floatpower(floatabs(floatsub(X,SavedPos[ g ][ sX ])),2),floatpower(floatabs(floatsub(Y,SavedPos[ g ][ sY ])),2)),floatpower(floatabs(floatsub(Z,SavedPos[ g ][ sZ ])),2)));
			Angle1 = ReturnPlayerAngle(g);
			Angle2 = GetPlayerTheoreticAngle(g);
			BySpeed = floatmul(SpeedX, 12);
			if(tpdrift[g] == 1)//если игрок ТП, то:
			{
				DriftPointsNow[g] = 0;//обнуляем дрифт-очки (если авто НЕ в движении)
			}
			if(IsPlayerInAnyVehicle(g) && floatabs(floatsub(Angle1, Angle2)) > DRIFT_MINKAT && floatabs(floatsub(Angle1, Angle2)) < DRIFT_MAXKAT && BySpeed > DRIFT_SPEED){
//			if(IsPlayerInAnyVehicle(g) && IsCar(GetPlayerVehicleID(g)) && floatabs(floatsub(Angle1, Angle2)) > DRIFT_MINKAT && floatabs(floatsub(Angle1, Angle2)) < DRIFT_MAXKAT && BySpeed > DRIFT_SPEED){
				if(PlayerDriftCancellation[g] > 0)KillTimer(PlayerDriftCancellation[g]);
				PlayerDriftCancellation[g] = 0;
				dddrift[g] += floatval( floatabs(floatsub(Angle1, Angle2)) * 3 * (BySpeed*0.1) )/10;
				if((dddrift[g] - DriftPointsNow[g]) > 2000)//если дрифт больше xxx, то:
				{
					dddrift[g] = 0;//обнуляем дрифт-очки
				}
				DriftPointsNow[g] = dddrift[g];//запоминаем последний дрифт
				if(tpdrift[g] == 1)//если игрок ТП, то:
				{
					DriftPointsNow[g] = 0;//обнуляем дрифт-очки (если авто в движении)
					tpdrift[g] = 0;//обнуляем переменную ТП
				}
				PlayerDriftCancellation[g] = SetTimerEx("DriftCancellation", 3000, 0, "d", g);
			}
			if(DriftPointsNow[g] > 0 && scrmod[2][g] == 0){
				format(s, sizeof(s), "~n~~n~~n~~n~~n~~n~~n~~n~~w~Drifting Score: ~b~%d~w~ !", DriftPointsNow[g]);
				GameTextForPlayer(g, s, 3000, 3);
			}
			SavedPos[ g ][ sX ] = X;
			SavedPos[ g ][ sY ] = Y;
			SavedPos[ g ][ sZ ] = Z;

			new Float:x333, Float:y333, Float:z333;
			if(IsPlayerInAnyVehicle(g))GetVehiclePos(GetPlayerVehicleID(g), x333, y333, z333); else GetPlayerPos(g, x333, y333, z333);
			ppos[g][0] = x333;
			ppos[g][1] = y333;
			ppos[g][2] = z333;

//функция мода "FunNickCol" (НЕ дрифтовая)
//(функция случайных цветов транспорта, цветов ников и маркеров, координат спавна игрока)
			SetPVarInt(g, "AdmLvl", PlayerInfo[g][pAdmin]);//записываем в глобальную переменную уровень админки
			SetPVarInt(g, "SecPris", PlayerInfo[g][pPrisonsec]);//записываем в глобальную переменную секунды тюрьмы
			SetPVarInt(g, "SecMute", PlayerInfo[g][pMutedsec]);//записываем в глобальную переменную секунды затыка
			SetPVarInt(g, "PlGng", PGang[g]);//записываем в глобальную переменную ID банды игрока
			SetPVarInt(g, "PlGLvl", GangLvl[g]);//записываем в глобальную переменную Lvl игрока в банде
			SetPVarInt(g, "AdmSpect", admper1[g]);//записываем в глобальную переменную статус наблюдения админа
    		if(PlayerInfo[g][pDeport] == 1)//если игрок в депортации, то:
    		{
				SetPVarInt(g, "PlMon", 1000);//устанавливаем игроку 1000 $
				SetPVarInt(g, "PlDeport", 1);//записываем в глобальную переменную статус депортации игрока
			}
			else//если у игрока нет депортации, то:
			{
				SetPVarInt(g, "PlDeport", 0);//записываем в глобальную переменную статус депортации игрока
			}
			ResetPlayerMoney(g);//обнуляем мониторинг денег
			GivePlayerMoney(g, GetPVarInt(g, "PlMon"));//передаём в мониторинг деньги игрока
			if(compdrift[g] < 0)//если игрок отключен от дрифт-соревнования, то:
			{
	 			SetPlayerScore(g, GetPVarInt(g, "PlMon"));//передаём в мониторинг очков - деньги игрока
			}
			else//иначе:
			{
	 			SetPlayerScore(g, compdrift[g]);//передаём в мониторинг очков - очки дрифт-соревнования
			}
			if (PlayerInfo[g][pAdmin] >= 5 && PlayerInfo[g][pAdmlive] == 1)//обновление жизни и брони для админов 5 левела и выше
			{
				SetPlayerHealth(g,255);
				SetPlayerArmour(g,255);
				livdop[g] = 1;
			}
			if (PlayerInfo[g][pAdmin] >= 5 && PlayerInfo[g][pAdmlive] == 0 && livdop[g] == 1)//выключение бессмертия
			{
				SetPlayerHealth(g,100);
				SetPlayerArmour(g,100);
				livdop[g] = 0;
			}
			if(dmplay[g] != 0 && dmspa[g] == 0)//если игрок в DM-зоне, И разрешено сохранение координат и угла игрока, то:
			{
				GetPlayerCameraPos(g, dmcor[g][0], dmcor[g][1], dmcor[g][2]);//сохраняем координаты игрока
				GetPlayerFacingAngle(g, dmcor[g][3]);//сохраняем угол игрока
			}
			new string[256], reg88, Float:coord[3];
			reg88 = GetPlayerCameraMode(g);
			GetPlayerCameraPos(g, coord[0], coord[1], coord[2]);
//---------------- антикрашер игроков - 2 (январь 2015) ------------------------
    		if(reg88 == 53 && (coord[0] < -50000.0 || coord[0] > 50000.0 ||
			coord[1] < -50000.0 || coord[1] > 50000.0 ||
			coord[2] < -50000.0 || coord[2] > 50000.0))
			{
				format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 2 !", RealName[g], g);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", g);
 			}
//-------------------- антикрашер игроков - 2 (конец) --------------------------
/*
//---- антикрашер игроков - 6 (январь 2018, краш обнаружен на версии 0.3.7) ----
			if(reg88 != 0 &&
			-0.0005 < coord[0] < 0.0005 && -0.0005 < coord[1] < 0.0005 && -0.0005 < coord[2] < 0.0005)
			{
				crash6[g]++;
			}
			else
			{
				crash6[g] = 0;
			}
			if(crash6[g] >= 3)
			{
				format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 6 !", RealName[g], g);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				format(string, sizeof(string), "Russian_Drift: {FF0000}( или использование стороннего ПО ! )");
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", g);
			}
//-------------------- антикрашер игроков - 6 (конец) --------------------------
*/
//---- антикрашер игроков - 6 (январь 2021, краш обнаружен на версии 0.3.7) ----
			if(reg88 != 0 &&
			-0.0005 < coord[0] < 0.0005 && -0.0005 < coord[1] < 0.0005 && -0.0005 < coord[2] < 0.0005)
			{
				new Float:coordlocpl[3];
				GetPlayerPos(g, coordlocpl[0], coordlocpl[1], coordlocpl[2]);
				SetPlayerPos(g, coordlocpl[0], coordlocpl[1], coordlocpl[2]);
				SetPlayerFacingAngle(g, angcrash6[g]);
				SetCameraBehindPlayer(g);
			}
			if(GetPlayerState(g) == 2 || GetPlayerState(g) == 3)
			{
				new VID = GetPlayerVehicleID(g);
				GetVehicleZAngle(VID, angcrash6[g]);
			}
			else
			{
				GetPlayerFacingAngle(g, angcrash6[g]);
			}
//-------------------- антикрашер игроков - 6 (конец) --------------------------
		}
	}
	nick5col++;
	if (nick5col == 18)
	{
		nick5col = 0;
	}
	switch(nick5col)
	{
		case 0: col4car = 3, tpspa = 0;
		case 1: col4car = 79, tpspa = 1;
		case 2: col4car = 6, tpspa = 2;
		case 3: col4car = 65, tpspa = 3;
		case 4: col4car = 86, tpspa = 4;
		case 5: col4car = 9, tpspa = 5;
		case 6: col4car = 3, tpspa = 6;
		case 7: col4car = 79, tpspa = 7;
		case 8: col4car = 6, tpspa = 8;
		case 9: col4car = 65, tpspa = 9;
		case 10: col4car = 86, tpspa = 10;
		case 11: col4car = 9, tpspa = 11;
		case 12: col4car = 3, tpspa = 12;
		case 13: col4car = 79, tpspa = 13;
		case 14: col4car = 6, tpspa = 14;
		case 15: col4car = 65, tpspa = 15;
		case 16: col4car = 86, tpspa = 16;
		case 17: col4car = 9, tpspa = 17;
	}
	return 1;
}

Split(s1[], s2[], s3[]=""){
	new rxx[256];
	format(rxx, 256, "%s%s%s", s1, s2, s3);
	return rxx;
}

tostr(int){
	new st[256];
	format(st, 256, "%d", int);
	return st;
}

floatval(Float:val){
	new str[256];
	format(str, 256, "%.0f", val);
	return todec(str);
}
/*
IsCar(model)
{
	new model55;
	model55 = GetVehicleModel(model);
	switch(model55)
	{
		case 443:return 0;
		case 448:return 0;
		case 461:return 0;
		case 462:return 0;
		case 463:return 0;
		case 468:return 0;
		case 521:return 0;
		case 522:return 0;
		case 523:return 0;
		case 581:return 0;
		case 586:return 0;
		case 481:return 0;
		case 509:return 0;
		case 510:return 0;
		case 430:return 0;
		case 446:return 0;
		case 452:return 0;
		case 453:return 0;
		case 454:return 0;
		case 472:return 0;
		case 473:return 0;
		case 484:return 0;
		case 493:return 0;
		case 595:return 0;
		case 417:return 0;
		case 425:return 0;
		case 447:return 0;
		case 465:return 0;
		case 469:return 0;
		case 487:return 0;
		case 488:return 0;
		case 497:return 0;
		case 501:return 0;
		case 548:return 0;
		case 563:return 0;
		case 406:return 0;
		case 444:return 0;
		case 556:return 0;
		case 557:return 0;
		case 573:return 0;
		case 460:return 0;
		case 464:return 0;
		case 476:return 0;
		case 511:return 0;
		case 512:return 0;
		case 513:return 0;
		case 519:return 0;
		case 520:return 0;
		case 539:return 0;
		case 553:return 0;
		case 577:return 0;
		case 592:return 0;
		case 593:return 0;
		case 471:return 0;
	}
	return 1;
}
*/
todec(str[]){ // By Luby
	return strval(str);
}

//----------------------------- Elevator - 1 -----------------------------------
stock PlaySoundForPlayersInRange(soundid, Float:range, Float:x, Float:y, Float:z)
{//генерация звука открывания/закрывания дверей для игроков возле кабины лифта
    for(new i = 0; i < MAX_PLAYERS; i ++)
    {
        if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i, range ,x ,y ,z ))
        {
            PlayerPlaySound(i, soundid, x, y, z);
        }
    }

	return 1;
}

stock Elevator_OpenDoors()
{//открывание дверей лифта
	new Float:x, Float:y, Float:z;
	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_L_OPENED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_R_OPENED, y, z, DOORS_SPEED);

	return 1;
}

stock Floor_OpenDoors(floorid)
{//открывание дверей этажа
    MoveDynamicObject(Obj_FloorDoors[floorid][0], X_DOOR_L_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[floorid][1], X_DOOR_R_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid) + 5.0);

	return 1;
}

public Elevator_MoveToFloor(floorid)
{//начало движения лифта
	MovObj = 1;//включение мониторинга лифта

	ElevatorState = 2;
	ElevatorFloor = floorid;
	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), 0.25);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    DestroyDynamic3DTextLabel(Label_Elevator);
	ElevatorBoostTimer = SetTimerEx("Elevator_Boost", 1000, 0, "i", floorid);//таймер перехода на увеличенную скорость

	return 1;
}

public Elevator_Boost(floorid)
{//продолжение движения лифта с увеличенной скоростью
	StopObject(Obj_Elevator);
	StopObject(Obj_ElevatorDoors[0]);
	StopObject(Obj_ElevatorDoors[1]);
	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);

	return 1;
}

public Elevator_TurnToIdle()
{//очередь обслуживания
	ElevatorState = 0;
	ReadNextFloorInQueue();//закрывание дверей лифта и этажа перед началом движения

	return 1;
}

public StopMonit()
{//включение мониторинга лифта
	MovObj = 0;

	return 1;
}

stock ReadNextFloorInQueue()
{//закрывание дверей лифта и этажа перед началом движения
	if(ElevatorState != 0 || ElevatorQueue[0] == -1){return 1;}//если очередь обслуживания пустая, то завершить функцию
	if(ElevatorState == 2){return 1;}//если лифт в движении, то завершить функцию
	ElevatorState = 1;//присвоить лифту статус "занят"
    new Float:x, Float:y, Float:z;
	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, y, z, DOORS_SPEED);
    MoveDynamicObject(Obj_FloorDoors[ElevatorFloor][0], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(ElevatorFloor), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[ElevatorFloor][1], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(ElevatorFloor), DOORS_SPEED);
	PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(ElevatorFloor) + 5.0);
	new Float:dop22, string[128], dop;//вычисление задержки перед началом движения лифта
	dop22 = ( 1 / DOORS_SPEED ) * 2000;
	format(string, sizeof(string), "%f", dop22);
	dop = strval(string);
	SetTimerEx("Elevator_MoveToFloor", dop, 0, "i", ElevatorQueue[0]);//таймер задержки начала движения лифта

	return 1;
}

stock CallElevator(playerid, floorid, elevator)
{//вызов, или начало движения лифта
	new dop = 0;
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(ElevatorQueue[i] == floorid){dop = 1;}
	}

	if(FloorRequestedBy[floorid] != 10000 || dop == 1)
	{
		if(elevator == 1){return 1;}
		SendClientMessage(playerid, 0xAA3333FF, " Ваш вызов уже находится");
		SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
		return 1;
	}
	if(elevator == 0){SendClientMessage(playerid, 0x33AA33FF, " Лифт вызван !");}
	FloorRequestedBy[floorid] = playerid;//занятие места игрока в очереди обслуживания
	new slot = -1;//запись вызова, или начала движения лифта в очередь обслуживания
	new i = 0;
	while(i < sizeof(ElevatorQueue))
	{
	    if(ElevatorQueue[i] == -1)
	    {
	        slot = i;
	        break;
	    }
		i ++;
	}
	if(slot != -1)
	{
	    ElevatorQueue[slot] = floorid;
	    if(ElevatorState == 0){ReadNextFloorInQueue();}//если лифт свободен, то перейти к закрыванию дверей
	}

	return 1;
}

stock Float:GetElevatorZCoordForFloor(floorid)
{//вычисление координат лифта
    return (GROUND_Z_COORD + FloorZOffsets[floorid] + ELEVATOR_OFFSET);
}

stock Float:GetDoorsZCoordForFloor(floorid)
{//вычисление координат дверей
	return (GROUND_Z_COORD + FloorZOffsets[floorid]);
}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	stock Elevator_OpenDoors22()
	{//открывание дверей лифта
		new Float:x, Float:y, Float:z;
		GetObjectPos(Obj_ElevatorDoors22[0], x, y, z);
		MoveObject(Obj_ElevatorDoors22[0], X_DOOR_L_OPENED22, -1609.0200, z, DOORS_SPEED22);
		MoveObject(Obj_ElevatorDoors22[1], X_DOOR_R_OPENED22, -1609.6200, z, DOORS_SPEED22);

		return 1;
	}

	stock Floor_OpenDoors22(floorid)
	{//открывание дверей этажа
    	MoveDynamicObject(Obj_FloorDoors22[floorid][0], X_DOOR_L_OPENED22 - 0.05, -1609.3100, GetDoorsZCoordForFloor22(floorid), DOORS_SPEED22);
		MoveDynamicObject(Obj_FloorDoors22[floorid][1], X_DOOR_R_OPENED22 - 0.05, -1609.9100, GetDoorsZCoordForFloor22(floorid), DOORS_SPEED22);
		PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(floorid) + 5.0);

		return 1;
	}

	public Elevator_MoveToFloor22(floorid)
	{//начало движения лифта
		MovObj22 = 1;//включение мониторинга лифта

		ElevatorState22 = 2;
		ElevatorFloor22 = floorid;
		MoveObject(Obj_Elevator22, 287.9500, -1609.3200, GetElevatorZCoordForFloor22(floorid), 0.25);
    	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), 0.25);
    	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), 0.25);
    	DestroyDynamic3DTextLabel(Label_Elevator22);
		ElevatorBoostTimer22 = SetTimerEx("Elevator_Boost22", 1000, 0, "i", floorid);//таймер перехода на увеличенную скорость

		return 1;
	}

	public Elevator_Boost22(floorid)
	{//продолжение движения лифта с увеличенной скоростью
		StopObject(Obj_Elevator22);
		StopObject(Obj_ElevatorDoors22[0]);
		StopObject(Obj_ElevatorDoors22[1]);
		MoveObject(Obj_Elevator22, 287.9500, -1609.3200, GetElevatorZCoordForFloor22(floorid), ELEVATOR_SPEED22);
    	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), ELEVATOR_SPEED22);
    	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), ELEVATOR_SPEED22);

		return 1;
	}

	public Elevator_TurnToIdle22()
	{//очередь обслуживания
		ElevatorState22 = 0;
		ReadNextFloorInQueue22();//закрывание дверей лифта и этажа перед началом движения

		return 1;
	}

	public StopMonit22()
	{//включение мониторинга лифта
		MovObj22 = 0;

		return 1;
	}

	stock ReadNextFloorInQueue22()
	{//закрывание дверей лифта и этажа перед началом движения
		if(ElevatorState22 != 0 || ElevatorQueue22[0] == -1){return 1;}//если очередь обслуживания пустая, то завершить функцию
    	if(ElevatorState22 == 2){return 1;}//если лифт в движении, то завершить функцию
		ElevatorState22 = 1;//присвоить лифту статус "занят"
    	new Float:x, Float:y, Float:z;
		GetObjectPos(Obj_ElevatorDoors22[0], x, y, z);
		MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, z, DOORS_SPEED22);
		MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, z, DOORS_SPEED22);
    	MoveDynamicObject(Obj_FloorDoors22[ElevatorFloor22][0], X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22), DOORS_SPEED22);
		MoveDynamicObject(Obj_FloorDoors22[ElevatorFloor22][1], X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22), DOORS_SPEED22);
		PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22) + 5.0);
		new Float:dop22, string[128], dop;//вычисление задержки перед началом движения лифта
		dop22 = ( 1 / DOORS_SPEED22 ) * 2000;
		format(string, sizeof(string), "%f", dop22);
		dop = strval(string);
		SetTimerEx("Elevator_MoveToFloor22", dop, 0, "i", ElevatorQueue22[0]);//таймер задержки начала движения лифта

		return 1;
	}

	stock CallElevator22(playerid, floorid, elevator)
	{//вызов, или начало движения лифта
		new dop = 0;
		for(new i; i < sizeof(ElevatorQueue22); i ++)
		{
	    	if(ElevatorQueue22[i] == floorid){dop = 1;}
		}

		if(FloorRequestedBy22[floorid] != 10000 || dop == 1)
		{
			if(elevator == 1){return 1;}
			SendClientMessage(playerid, 0xAA3333FF, " Ваш вызов уже находится");
			SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
			return 1;
		}
		if(elevator == 0){SendClientMessage(playerid, 0x33AA33FF, " Лифт вызван !");}
		FloorRequestedBy22[floorid] = playerid;//занятие места игрока в очереди обслуживания
		new slot = -1;//запись вызова, или начала движения лифта в очередь обслуживания
		new i = 0;
		while(i < sizeof(ElevatorQueue22))
		{
	    	if(ElevatorQueue22[i] == -1)
	    	{
	        	slot = i;
	        	break;
	    	}
			i ++;
		}
		if(slot != -1)
		{
	    	ElevatorQueue22[slot] = floorid;
	    	if(ElevatorState22 == 0){ReadNextFloorInQueue22();}//если лифт свободен, то перейти к закрыванию дверей
		}

		return 1;
	}

	stock Float:GetElevatorZCoordForFloor22(floorid)
	{//вычисление координат лифта
    	return (GROUND_Z_COORD22 + FloorZOffsets22[floorid] + ELEVATOR_OFFSET22);
	}

	stock Float:GetDoorsZCoordForFloor22(floorid)
	{//вычисление координат дверей
		return (GROUND_Z_COORD22 + FloorZOffsets22[floorid]);
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

forward VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
public VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz)
{
	if(admper1[playerid] != 600)
	{
		SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
		return 1;
	}
	new plvw;
	plvw = GetPlayerVirtualWorld(playerid);
	if(plvw > 16999 && plvw < 18000)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}В DM-зонах НЕТ возможности спавна транспорта !");
		return 1;
	}
	if(PlayerInfo[playerid][pAdmin] <= 4 && GetPlayerInterior(playerid) == 3)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Чтобы взять транспорт в данном интерьере,");
		SendClientMessage(playerid, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы должны быть админом 5 лвл или выше !");
		return 1;
	}
	VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
	return 1;
}

public VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz)
{
	if(GetPlayerVehicleID(playerid) == playcar[playerid] && playcar[playerid] != 0)
	{//если игрок в своём авто, и у игрока ТОЧНО есть свой авто, то:
		new Float:igx, Float:igy, Float:igz;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(GetPlayerVehicleID(i) == playcar[playerid] && playerid != i)
				{//если есть пассажир (пассажиры) в авто водителя, то:
					EnterTick33[i] = 1;//обход антикрашера - 3
					GetPlayerPos(i, igx, igy, igz);//высадить пассажира (пассажиров)
					SetPlayerPos(i, igx+3, igy+3, igz);
					SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
				}
				if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
				{//И этот админ наблюдает за игроком, то:
					admper5[i] = 2;//устанавливаем переключение наблюдения
				}
			}
		}
	}
	if(GetPlayerVehicleID(playerid) != playcar[playerid] && IsPlayerInAnyVehicle(playerid))
	{//если игрок НЕ в своём авто (но обязательно в авто), то:
		EnterTick33[playerid] = 1;//обход антикрашера - 3
		new Float:igx, Float:igy, Float:igz;
		GetPlayerPos(playerid, igx, igy, igz);//выйти самому из авто
		SetPlayerPos(playerid, igx+3, igy+3, igz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
				{//И этот админ наблюдает за игроком, то:
					admper5[i] = 2;//устанавливаем переключение наблюдения
				}
			}
		}
	}
	SetTimerEx("VehicSecSpawn", 300, 0, "iiiii", playerid, vehid, vehcol1, vehcol2, dispz);
	return 1;
}

public VehicSecSpawn(playerid, vehid, vehcol1, vehcol2, dispz)
{
	new Float:x, Float:y, Float:z, Float:Angle;
	GetPlayerPos(playerid, x, y, z);
	if (GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
	{
		GetVehicleZAngle(GetPlayerVehicleID(playerid), Angle);
	}
	else
	{
		GetPlayerFacingAngle(playerid, Angle);
	}
	new plvw;
	plvw = GetPlayerVirtualWorld(playerid);
	if(playcar[playerid] == 0)//если у игрока нет своего транспорта, то:
	{
		playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
		LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
		SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
		playcarvw[playcar[playerid]] = plvw;//сохранить виртуальный мир транспорта игрока
		PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
	}else{//иначе: (если у игрока ЕСТЬ свой транспорт)
		new dopper = 0;
		migalkatr1[playerid] = -600;
		while(dopper < MAX_PLAYERS)//поиск чужой мигалки на транспорте игрока
		{
			if(playcar[playerid] == migalka[dopper][1] && playerid != dopper)
			{//если была найдена чужая мигалка на транспорте игрока, то:
				migalkatr1[playerid] = dopper;
				break;
			}
			dopper++;
		}
		migalkatr2[playerid] = playcar[playerid];//запомнить ид старого транспорта игрока
		if(playcar[playerid] == neon[playerid][2])//если у игрока установлен свой неон на транспорте, то:
		{
			EnterTick33[playerid] = 1;//обход антикрашера - 3
			playcarvw[playcar[playerid]] = -100;//обнулить виртуальный мир транспорта игрока
			DestroyVehicle(playcar[playerid]);//удалить старый транспорт
			playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
			LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
			SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
			playcarvw[playcar[playerid]] = plvw;//сохранить виртуальный мир транспорта игрока
			PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
			AttachObjectToVehicle(neon[playerid][0], playcar[playerid], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
			AttachObjectToVehicle(neon[playerid][1], playcar[playerid], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
			neon[playerid][2] = playcar[playerid];//заменить ид транспорта с неоном
		}
		else//иначе: (если у игрока НЕ установлен свой неон на транспорте)
		{
			dopper = 0;
			new dopper22 = -600;
			while(dopper < MAX_PLAYERS)//поиск чужого неона на транспорте игрока
			{
				if(playcar[playerid] == neon[dopper][2] && playerid != dopper)
				{//если был найден чужой неон на транспорте игрока, то:
					dopper22 = dopper;
					break;
				}
				dopper++;
			}
			EnterTick33[playerid] = 1;//обход антикрашера - 3
			if(dopper22 != -600)//если был найден чужой неон на транспорте игрока, то:
			{
				playcarvw[playcar[playerid]] = -100;//обнулить виртуальный мир транспорта игрока
				DestroyVehicle(playcar[playerid]);//удалить старый транспорт
				playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
				LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
				SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
				playcarvw[playcar[playerid]] = plvw;//сохранить виртуальный мир транспорта игрока
				PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
				AttachObjectToVehicle(neon[dopper22][0], playcar[playerid], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
				AttachObjectToVehicle(neon[dopper22][1], playcar[playerid], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
				neon[dopper22][2] = playcar[playerid];//заменить ид транспорта с неоном
			}
			else//иначе: (если НЕ был найден чужой неон на транспорте игрока)
			{
				playcarvw[playcar[playerid]] = -100;//обнулить виртуальный мир транспорта игрока
				DestroyVehicle(playcar[playerid]);//удалить старый транспорт
				playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
				LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
				SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
				playcarvw[playcar[playerid]] = plvw;//сохранить виртуальный мир транспорта игрока
				PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
			}
		}
		SetTimerEx("FMigalka", 150, 0, "i", playerid);//перенос мигалки игрока на новый транспорт
	}
	return 1;
}

forward FMigalka(playerid);
public FMigalka(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	new carmod = GetVehicleModel(carid);
	if(carmod != 562 && carmod != 565 && carmod != 559 && carmod != 561 && carmod != 560 && carmod != 558 &&
	carmod != 541 && carmod != 415 && carmod != 434 && carmod != 494 && carmod != 502 && carmod != 503 &&
	carmod != 411 && carmod != 506 && carmod != 451 && carmod != 477)
	{//если у игрока НЕ стритрейсерский И НЕ гоночный транспорт, то:
		if(migalka[playerid][0] != 0) { DestroyObject(migalka[playerid][0]); }//убрать мигалку
		migalka[playerid][0] = 0;//присваиваем мигалке несуществующий номер объекта
		migalka[playerid][1] = 0;//несуществующий ид транспорта с мигалкой
		if(migalkatr1[playerid] != -600)//если была найдена чужая мигалка на транспорте игрока, то:
		{
			DestroyObject(migalka[migalkatr1[playerid]][0]);//убрать мигалку
			migalka[migalkatr1[playerid]][0] = 0;//присваиваем мигалке несуществующий номер объекта
			migalka[migalkatr1[playerid]][1] = 0;//несуществующий ид транспорта с мигалкой
		}
	}
	else//иначе (если у игрока стритрейсерский или гоночный транспорт)
	{
		if(migalkatr2[playerid] == migalka[playerid][1])//если у игрока была установлена своя мигалка на транспорте, то:
		{
			switch(carmod)//прикрепить мигалку к транспорту
			{
				case 562: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.35, 0.78, 0.00, 0.00, 0.00);
				case 565: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.45, 0.69, 0.00, 0.00, 0.00);
				case 559: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.30, 0.72, 0.00, 0.00, 0.00);
				case 561: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.15, 0.82, 0.00, 0.00, 0.00);
				case 560: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.20, 0.83, 0.00, 0.00, 0.00);
				case 558: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.45, 0.87, 0.00, 0.00, 0.00);
				case 541: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.20, 0.63, 0.00, 0.00, 0.00);
				case 415: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.45, 0.62, 0.00, 0.00, 0.00);
				case 434: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.30, 0.79, 0.00, 0.00, 0.00);
				case 494: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.70, 0.74, 0.00, 0.00, 0.00);
				case 502: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.50, 0.78, 0.00, 0.00, 0.00);
				case 503: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.70, 0.79, 0.00, 0.00, 0.00);
				case 411: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.25, 0.70, 0.00, 0.00, 0.00);
				case 506: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.50, 0.58, 0.00, 0.00, 0.00);
				case 451: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.55, 0.58, 0.00, 0.00, 0.00);
				case 477: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.55, 0.71, 0.00, 0.00, 0.00);
			}
			migalka[playerid][1] = playcar[playerid];//заменить ид транспорта с мигалкой
		}
		else//иначе: (если у игрока НЕ была установлена своя мигалка на транспорте)
		{
			if(migalkatr1[playerid] != -600)//если была найдена чужая мигалка на транспорте игрока, то:
			{
				switch(carmod)//прикрепить мигалку к транспорту
				{
					case 562: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.35, 0.78, 0.00, 0.00, 0.00);
					case 565: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.45, 0.69, 0.00, 0.00, 0.00);
					case 559: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.30, 0.72, 0.00, 0.00, 0.00);
					case 561: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.15, 0.82, 0.00, 0.00, 0.00);
					case 560: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.20, 0.83, 0.00, 0.00, 0.00);
					case 558: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.45, 0.87, 0.00, 0.00, 0.00);
					case 541: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.20, 0.63, 0.00, 0.00, 0.00);
					case 415: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.45, 0.62, 0.00, 0.00, 0.00);
					case 434: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.30, 0.79, 0.00, 0.00, 0.00);
					case 494: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.70, 0.74, 0.00, 0.00, 0.00);
					case 502: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.50, 0.78, 0.00, 0.00, 0.00);
					case 503: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.70, 0.79, 0.00, 0.00, 0.00);
					case 411: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.25, 0.70, 0.00, 0.00, 0.00);
					case 506: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.50, 0.58, 0.00, 0.00, 0.00);
					case 451: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.55, 0.58, 0.00, 0.00, 0.00);
					case 477: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.55, 0.71, 0.00, 0.00, 0.00);
				}
				migalka[migalkatr1[playerid]][1] = playcar[playerid];//заменить ид транспорта с мигалкой
			}
		}
	}
	return 1;
}

forward DubTlp(playerid);
public DubTlp(playerid)
{
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	if (GetPlayerState(playerid) == 2)
	{
		new regm = 2, per1 = 0, per2, Float:per3;
		per2 = TpPosP[playerid];
		per3 = TpDestP[playerid][3];
		StopDrift(playerid,regm,per1,per2,Float:per3,Float:TpDestP[playerid][0],Float:TpDestP[playerid][1],Float:TpDestP[playerid][2]+1);
	}
	else
	{
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, TpPosP[playerid]);
		SetPlayerPos(playerid, TpDestP[playerid][0],TpDestP[playerid][1],TpDestP[playerid][2]+1);
		SetPlayerFacingAngle(playerid, TpDestP[playerid][3]);
		SetCameraBehindPlayer(playerid);
	}
	SendClientMessage(playerid, COLOR_GREEN, " Вы были телепортированы на сохранённую позицию.");
	return 1;
}

forward DopAnim(playerid, nanim);
public DopAnim(playerid, nanim)
{
	if(nanim == 2)
	{
		ApplyAnimation(playerid,"Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 0, 0);//сесть-2
		return 1;
	}
	if(nanim == 3)
	{
		ApplyAnimation(playerid,"CRACK", "crckidle2", 4.1 ,0 ,0 ,0 ,1 ,0 ,0);//лечь
	}
	return 1;
}

forward DopAnim22(playerid, playdop);
public DopAnim22(playerid, playdop)
{
	ApplyAnimation(playerid,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
	ApplyAnimation(playdop,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
	return 1;
}

public AdminsLvl(playerid)
{
	new strdln[2500];
	contover[playerid] = 0;
	countadm[playerid] = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			if(IsPlayerAdmin(i) && PlayerInfo[i][pAdmshad] == 0)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 128, "\n     {FFFFFF}[ID:%d] {66FFFF}%s {FF0000}[RCON]", i, RealName[i]);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && IsPlayerAdmin(i) && PlayerInfo[i][pAdmshad] == 1)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 128, "\n{FFFFFF}(s) [ID:%d] {66FFFF}%s {FF0000}[RCON]", i, RealName[i]);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[i][pAdmshad] == 0 && PlayerInfo[i][pAdmin] >= 1)
			{
				if(PlayerInfo[i][pAdmin] <= 9)
				{
					if(countadm[playerid] < MAX_PLAYERS)
					{
						format(tabladm[playerid][countadm[playerid]], 128, "\n     {FFFFFF}[ID:%d] {66FFFF}%s {FF0000}[ЛВЛ:%d]", i, RealName[i], PlayerInfo[i][pAdmin]);
						countadm[playerid]++;
					}
					else
					{
						contover[playerid] = 1;
					}
				}
				if(PlayerInfo[i][pAdmin] == 10 || PlayerInfo[i][pAdmin] == 11)
				{
					if(countadm[playerid] < MAX_PLAYERS)
					{
						format(tabladm[playerid][countadm[playerid]], 128, "\n     {FFFFFF}[ID:%d] {66FFFF}%s {FF0000}[ЛВЛ:10]", i, RealName[i]);
						countadm[playerid]++;
					}
					else
					{
						contover[playerid] = 1;
					}
				}
			}
			if(PlayerInfo[i][pAdmshad] == 1 && PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[i][pAdmin] <= 9)
				{
					if(countadm[playerid] < MAX_PLAYERS)
					{
						format(tabladm[playerid][countadm[playerid]], 128, "\n{FFFFFF}(s) [ID:%d] {66FFFF}%s {FF0000}[ЛВЛ:%d]", i, RealName[i], PlayerInfo[i][pAdmin]);
						countadm[playerid]++;
					}
					else
					{
						contover[playerid] = 1;
					}
				}
				if(PlayerInfo[i][pAdmin] == 10 || PlayerInfo[i][pAdmin] == 11)
				{
					if(countadm[playerid] < MAX_PLAYERS)
					{
						format(tabladm[playerid][countadm[playerid]], 128, "\n{FFFFFF}(s) [ID:%d] {66FFFF}%s {FF0000}[ЛВЛ:10]", i, RealName[i]);
						countadm[playerid]++;
					}
					else
					{
						contover[playerid] = 1;
					}
				}
			}
		}
	}
	if(countadm[playerid] == 0)
	{
		format(strdln,sizeof(strdln),"{FF0000}В данный момент админов на сервере нет");
		ShowPlayerDialog(playerid, 2, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "OK", "");
		SetPVarInt(playerid, "DlgCont", 2);
	}
	if(countadm[playerid] != 0)
	{
		for(new i = 0; i < 20; i++)
		{
			strdel(onladm[i], 0, 128);
		}
		count2adm[playerid] = 0;
		new locvar = 0;
		new locvar2 = 0;
		while(count2adm[playerid] < countadm[playerid])
		{
			strins(onladm[locvar], tabladm[playerid][count2adm[playerid]], 0, 128);
			count2adm[playerid]++;
			locvar++;
			if(locvar == 20 && count2adm[playerid] < countadm[playerid])
			{//выводим диалог С продолжением
				format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
				onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
				ShowPlayerDialog(playerid, 21, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "Далее", "Отмена");
				SetPVarInt(playerid, "DlgCont", 21);
				locvar2 = 1;//устанавливаем переменную-маркер
				break;//выходим из цикла
			}
			if(locvar == 20 && count2adm[playerid] == countadm[playerid])
			{//выводим диалог БЕЗ продолжения
				if(contover[playerid] == 0)
				{
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
					onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
				}
				else
				{
					format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\
					\n\n{FF0000}     Список НЕ полный ! Переполнение данных !",
					onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
					onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
				}
				ShowPlayerDialog(playerid, 2, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				locvar2 = 1;//устанавливаем переменную-маркер
				break;//выходим из цикла
			}
		}//выход из цикла
		if(locvar2 == 0)
		{//выводим диалог БЕЗ продолжения
			if(contover[playerid] == 0)
			{
				format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
				onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
			}
			else
			{
				format(strdln,sizeof(strdln),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\
				\n\n{FF0000}     Список НЕ полный ! Переполнение данных !",
				onladm[0],onladm[1],onladm[2],onladm[3],onladm[4],onladm[5],onladm[6],onladm[7],onladm[8],onladm[9],
				onladm[10],onladm[11],onladm[12],onladm[13],onladm[14],onladm[15],onladm[16],onladm[17],onladm[18],onladm[19]);
			}
			ShowPlayerDialog(playerid, 2, 0, "{00CBFF}Админы {FF0000}он-лайн", strdln, "OK", "");
			SetPVarInt(playerid, "DlgCont", 2);
		}//если переменная-маркер БЫЛА установлена, то - конец проверки
	}//конец проверки
	return 1;
}

public STATPlayer(playerid)
{
	new string[512];
	new virtw;
	virtw = GetPlayerVirtualWorld(playerid);
	if(virtw > 990) { virtw = 0; }
	printf(" --> Игрок %s [%d] просмотрел собственную статистику.", RealName[playerid], playerid);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
	new dopcis;
	dopcis = FCislit(LocTime[playerid]);
	switch(dopcis)
	{
		case 0: format(string, sizeof(string), " Время: {FFFF00}%d часов. {00FF00}ID погоды: {FFFF00}[%d] . {00FF00}Гравитация: {FFFF00}[%f]",
				LocTime[playerid], GlWeat, GlGrav);
		case 1: format(string, sizeof(string), " Время: {FFFF00}%d час. {00FF00}ID погоды: {FFFF00}[%d] . {00FF00}Гравитация: {FFFF00}[%f]",
				LocTime[playerid], GlWeat, GlGrav);
		case 2: format(string, sizeof(string), " Время: {FFFF00}%d часа. {00FF00}ID погоды: {FFFF00}[%d] . {00FF00}Гравитация: {FFFF00}[%f]",
				LocTime[playerid], GlWeat, GlGrav);
	}
	SendClientMessage(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), " Время и дата регистрации: {FFFF00}[ %s ] . {00FF00}Приём PM от игроков: {FFFF00}[%d]",
	PlayerInfo[playerid][pTDReg], PlayerInfo[playerid][pRecPM]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	if(PlayerInfo[playerid][pDeport] == 0)
	{
		dopcis = FCislit(PlayerInfo[playerid][pMinlog]);
		switch(dopcis)
		{
			case 0: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минут. {00FF00}Ваш уровень полиции: {FFFF00}[%d]",
					PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pPolice]);
			case 1: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуту. {00FF00}Ваш уровень полиции: {FFFF00}[%d]",
					PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pPolice]);
			case 2: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуты. {00FF00}Ваш уровень полиции: {FFFF00}[%d]",
					PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pPolice]);
		}
	}
	else
	{
		dopcis = FCislit(PlayerInfo[playerid][pMinlog]);
		switch(dopcis)
		{
			case 0: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минут. {00FF00}Ваш уровень полиции: {FFFF00}[%d] . {FF0000}У Вас статус депортации !",
					PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pPolice]);
			case 1: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуту. {00FF00}Ваш уровень полиции: {FFFF00}[%d] . {FF0000}У Вас статус депортации !",
					PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pPolice]);
			case 2: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуты. {00FF00}Ваш уровень полиции: {FFFF00}[%d] . {FF0000}У Вас статус депортации !",
					PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pPolice]);
		}
	}
	SendClientMessage(playerid, COLOR_GREEN, string);
	new sstr1[128], sstr2[128];
	dopcis = FCislit(PlayerInfo[playerid][pMutedsec]);
	switch(dopcis)
	{
		case 0: format(sstr1, sizeof(sstr1), " Ваше время затыка: {FFFF00}%d секунд. ", PlayerInfo[playerid][pMutedsec]);
		case 1: format(sstr1, sizeof(sstr1), " Ваше время затыка: {FFFF00}%d секунда. ", PlayerInfo[playerid][pMutedsec]);
		case 2: format(sstr1, sizeof(sstr1), " Ваше время затыка: {FFFF00}%d секунды. ", PlayerInfo[playerid][pMutedsec]);
	}
	dopcis = FCislit(PlayerInfo[playerid][pPrisonsec]);
	switch(dopcis)
	{
		case 0: format(sstr2, sizeof(sstr2), "{00FF00}Ваше время тюрьмы: {FFFF00}%d секунд.", PlayerInfo[playerid][pPrisonsec]);
		case 1: format(sstr2, sizeof(sstr2), "{00FF00}Ваше время тюрьмы: {FFFF00}%d секунда.", PlayerInfo[playerid][pPrisonsec]);
		case 2: format(sstr2, sizeof(sstr2), "{00FF00}Ваше время тюрьмы: {FFFF00}%d секунды.", PlayerInfo[playerid][pPrisonsec]);
	}
	format(string, sizeof(string), "%s%s", sstr1, sstr2);
	SendClientMessage(playerid, COLOR_GREEN, string);
	dopcis = FCislit(PlayerInfo[playerid][pKills]);
	switch(dopcis)
	{
		case 0, 2: format(sstr1, sizeof(sstr1), " Вы убили: {FFFF00}%d игроков. ", PlayerInfo[playerid][pKills]);
		case 1: format(sstr1, sizeof(sstr1), " Вы убили: {FFFF00}%d игрока. ", PlayerInfo[playerid][pKills]);
	}
	dopcis = FCislit(PlayerInfo[playerid][pDeaths]);
	switch(dopcis)
	{
		case 0, 1: format(sstr2, sizeof(sstr2), "{00FF00}Вас убили: {FFFF00}%d раз. {00FF00}Ваш виртуальный мир: {FFFF00}%d .",
				PlayerInfo[playerid][pDeaths], virtw);
		case 2: format(sstr2, sizeof(sstr2), "{00FF00}Вас убили: {FFFF00}%d раза. {00FF00}Ваш виртуальный мир: {FFFF00}%d .",
				PlayerInfo[playerid][pDeaths], virtw);
	}
	format(string, sizeof(string), "%s%s", sstr1, sstr2);
	SendClientMessage(playerid, COLOR_GREEN, string);
#if (MOD4DINS >= 1)
	if(PlayerInfo[playerid][pAdmin] == 0)
	{
		FnPrnPass(1, playerid, 0);//печать для собственной статистики он-лайн игрока [pPass_ver1]
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		FnPrnPass(2, playerid, 0);//печать для собственной статистики он-лайн админа [pPass_ver1][pPass_inout1][pPass_count1]
	}
#endif
	if(pertrain == 0)
	{
		SendClientMessage(playerid, COLOR_RED, " Всем игрокам ЗАПРЕЩЕНО водить поезда !");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREEN, " Всем игрокам РАЗРЕШЕНО водить поезда !");
	}
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    player[playerid] = clickedplayerid;
	format(playtarget[playerid], MAX_PLAYER_NAME, "%s", RealName[player[playerid]]);
    if(((PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 10) || PlayerInfo[playerid][pPolice] >= 2) && PlayerInfo[player[playerid]][pAdmin] >= 11)
	{
		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок защищён !","OK","");
		SetPVarInt(playerid, "DlgCont", 2);
		return 1;
	}
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pPolice] >= 2)
	{
	new string[128];
	new strdln[1024];
	format(strdln,sizeof(strdln),"Тп к нему (1)\nТп его к себе (1)\nНаблюдать (1)\nСнять наблюдение (1)\
	\nПополнить жизнь и броню (2)\nБан постоянный (6)\nБан временный (5)\nКик (3)\nДепортировать (4)\
	\nОтменить депортацию (4)\nЗаблокировать (1)\nРазблокировать (1)\nЗаморозить (1)\nРазморозить (1)\nУбить (2)\
	\nЗаткнуть (1)\nПосадить в тюрьму (1)");
	format(strdln,sizeof(strdln),"%s\nТп себя в тюрьму (1)\nТп себя в полицейский участок (1)\
	\nПросмотреть статистику (1)\nСменить скин (2)\nУзнать IP (1)\nСлапнуть (2)\nПодключить к дрифт-соревнованию (1)\
	\nОтключить от дрифт-соревнования (1)\nОбнулить очки дрифт-соревнования (1)\nСтатус дрифт-соревнования (1)", strdln);
	format(string,sizeof(string),"Админ-меню. ( %s [%d] )",playtarget[playerid],player[playerid]);
	ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,string,strdln,"Выбор","Отмена");
	SetPVarInt(playerid, "DlgCont", 5);
	}else{
	SendClientMessage(playerid, COLOR_RED, " Для доступа к админ-меню Вам нужно иметь 2-LVL полиции, или быть админом !");
	}
	return 1;
}

public ClearIP(playerid)
{
	strdel(twoIP[playerid],0,128);
	return 1;
}

public AdmUpdate(AdmName[], AdmLvl, AdmReas)//регистрация админов (пользовательская функция)
{
	new string[256], persea[64], rea[8], dopper, dopper22;//объявление новых переменных
	dopper = 0;//записываем 0 в 1-маркерную переменную
	dopper22 = 0;//записываем 0 во 2-маркерную переменную
	if(AdmLvl < 0)//замена на "положительный" лвл админа (при маграции аккаунта в БД)
	{
		AdmLvl = AdmLvl * -1;
	}
	format(persea, sizeof(persea), "%s -[%d]", AdmName, AdmLvl);//формируем переменную для поиска
	format(rea, sizeof(rea), " -[%d]", AdmReas);//формируем дополнительную переменную для регистрации
	for(new i = 0; i < 100; i++)//поиск лога админа в регистрации
	{
		strdel(string, 0, 256);//очистить вспомоготельную переменную
 		if(strlen(LogAdm[i]))//если есть лог админа (переменная в регистрации не пустая), то:
		{
			strcat(string, LogAdm[i]);//переносим во вспомогательную переменную лог админа
			new aa, aa2;//объявление новых переменных
			aa = strlen(string);//узнаём длинну лога админа
			aa--;//смещаем маркерную переменную С нулевого кода конца строки НА код последнего символа
			aa2 = 0;//обнуляем счётчик символов "-"
			while(aa > 0)//создаём неполный цикл
			{
				if(string[aa] == '-')//если обнаружен символ "-", то:
				{
					strdel(string, strlen(string)-1, strlen(string));//"отрезаем" ОДИН последний символ от строки string
					aa2++;//счётчик символов "-" +1
				}
				else//если НЕ обнаружен символ "-", то:
				{
					strdel(string, strlen(string)-1, strlen(string));//"отрезаем" ОДИН последний символ от строки string
				}//если было обнаружено ДВА символа "-" (от строки string "отрезано" ВСЁ, кроме ника + один пробел), то:
				if(aa2 == 2) { break; }//завершаем неполный цикл
				aa--;//иначе - декрементируем переменную цикла
			}
			strdel(string, strlen(string)-1, strlen(string));//"отрезаем" последний пробел от строки string
			if(strcmp(AdmName, string, false) == 0)//если лог админа уже есть в регистрации, то:
			{
				dopper = 1;//делаем отметку в 1-маркерной переменной dopper
				strdel(string, 0, 256);//очистить вспомоготельную переменную
				strcat(string, LogAdm[i]);//переносим во вспомогательную переменную лог админа
				strdel(string, strlen(string)-5, strlen(string));//корректировка переменной string
				if(strcmp(persea, string, false) != 0)//если уровень админа не сходится с зарегистрированным, то:
				{
					strdel(LogAdm[i], 0, 256);//очистить лог админа
					strcat(LogAdm[i], persea);//"собираем" переменную перерегистрации
					strcat(LogAdm[i], rea);
					SaveLogAdm();//запись регистрации админов
				}
			}
		}
	}
	if(dopper == 0)//если 1-маркерная переменная dopper = 0 (лога админа нет в регистрации), то:
	{
		for(new i = 0; i < 100; i++)//поиск первой пустой переменной в регистрации
		{
 			if(!strlen(LogAdm[i]) && dopper22 == 0)//если переменная в регистрации - пустая,
			{//и 2-маркерная переменная = 0, то:
				dopper22 = 1;//делаем отметку во 2-маркерной переменной dopper22
				strcat(LogAdm[i], persea);//"собираем" переменную регистрации
				strcat(LogAdm[i], rea);
			}
		}
		SaveLogAdm();//запись регистрации админов
	}
	return 1;//возвращаем "1" (функция завершена успешно)
}

public ReadLogAdm()
{
	new string[256];
	format(string,sizeof(string),"data/cash.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ];
	new Data[ 256 ];
	new para1 = 0;
	new locstr[16];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		format(locstr, sizeof(locstr), "I%02d", para1);
		if( strcmp( key , locstr , true ) == 0 ) { LogAdm[para1] = ini_GetValue( Data ); }
		para1++;
	}
	fclose(UserFile);
	for(new mm = 0; mm < 100; mm++)
	{
		strdel(LogAdm[mm], strlen(LogAdm[mm])-1, strlen(LogAdm[mm]));//корректировки LogAdm
	}
	return 1;
}

public SaveLogAdm()
{
	new string[256];
	format(string,sizeof(string),"data/cash.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[128];
		for(new mm = 0; mm < 100; mm++)
		{
			format(var, 128, "I%02d=%s\n",mm,LogAdm[mm]);fwrite(hFile, var);
		}
		fclose(hFile);
	}
	return 1;
}

public ReadServCon()
{
	new string[256];
	format(string,sizeof(string),"data/servcon.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "servname" , true ) == 0 ) { servname = ini_GetValue( Data ); }
		if( strcmp( key , "servpass" , true ) == 0 ) { servpass = ini_GetValue( Data ); }
		if( strcmp( key , "servmap" , true ) == 0 ) { servmap = ini_GetValue( Data ); }
		if( strcmp( key , "servurl" , true ) == 0 ) { servurl = ini_GetValue( Data ); }
 		if( strcmp( key , "status" , true ) == 0 ) { val = ini_GetValue( Data ); status = strval( val ); }
		if( strcmp( key , "relfs0" , true ) == 0 ) { relfs[0] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs1" , true ) == 0 ) { relfs[1] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs2" , true ) == 0 ) { relfs[2] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs3" , true ) == 0 ) { relfs[3] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs4" , true ) == 0 ) { relfs[4] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs5" , true ) == 0 ) { relfs[5] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs6" , true ) == 0 ) { relfs[6] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs7" , true ) == 0 ) { relfs[7] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs8" , true ) == 0 ) { relfs[8] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs9" , true ) == 0 ) { relfs[9] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs10" , true ) == 0 ) { relfs[10] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs11" , true ) == 0 ) { relfs[11] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs12" , true ) == 0 ) { relfs[12] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs13" , true ) == 0 ) { relfs[13] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs14" , true ) == 0 ) { relfs[14] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs15" , true ) == 0 ) { relfs[15] = ini_GetValue( Data ); }
 		if( strcmp( key , "servchas" , true ) == 0 ) { val = ini_GetValue( Data ); servchas = strval( val ); }
 		if( strcmp( key , "packlim" , true ) == 0 ) { val = ini_GetValue( Data ); packlim = strval( val ); }
 		if( strcmp( key , "netreccon" , true ) == 0 ) { val = ini_GetValue( Data ); NETrecCon = strval( val ); }
 		if( strcmp( key , "netsencon" , true ) == 0 ) { val = ini_GetValue( Data ); NETsenCon = strval( val ); }
	}
	fclose(UserFile);
	strdel(servname, strlen(servname)-1, strlen(servname));//корректировка servname
	strdel(servpass, strlen(servpass)-1, strlen(servpass));//корректировка servpass
	strdel(servmap, strlen(servmap)-1, strlen(servmap));//корректировка servmap
	strdel(servurl, strlen(servurl)-1, strlen(servurl));//корректировка servurl
	for(new mm = 0; mm < 16; mm++)
	{
		strdel(relfs[mm], strlen(relfs[mm])-1, strlen(relfs[mm]));//корректировки relfs
	}
	return 1;
}

public SaveServCon()
{
	new string[256];
	format(string,sizeof(string),"data/servcon.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[128];
		format(var, 128, "servname=%s\n",servname);fwrite(hFile, var);
		format(var, 128, "servpass=%s\n",servpass);fwrite(hFile, var);
		format(var, 128, "servmap=%s\n",servmap);fwrite(hFile, var);
		format(var, 128, "servurl=%s\n",servurl);fwrite(hFile, var);
		format(var, 128, "status=%d\n",status);fwrite(hFile, var);
		format(var, 128, "relfs0=%s\n",relfs[0]);fwrite(hFile, var);
		format(var, 128, "relfs1=%s\n",relfs[1]);fwrite(hFile, var);
		format(var, 128, "relfs2=%s\n",relfs[2]);fwrite(hFile, var);
		format(var, 128, "relfs3=%s\n",relfs[3]);fwrite(hFile, var);
		format(var, 128, "relfs4=%s\n",relfs[4]);fwrite(hFile, var);
		format(var, 128, "relfs5=%s\n",relfs[5]);fwrite(hFile, var);
		format(var, 128, "relfs6=%s\n",relfs[6]);fwrite(hFile, var);
		format(var, 128, "relfs7=%s\n",relfs[7]);fwrite(hFile, var);
		format(var, 128, "relfs8=%s\n",relfs[8]);fwrite(hFile, var);
		format(var, 128, "relfs9=%s\n",relfs[9]);fwrite(hFile, var);
		format(var, 128, "relfs10=%s\n",relfs[10]);fwrite(hFile, var);
		format(var, 128, "relfs11=%s\n",relfs[11]);fwrite(hFile, var);
		format(var, 128, "relfs12=%s\n",relfs[12]);fwrite(hFile, var);
		format(var, 128, "relfs13=%s\n",relfs[13]);fwrite(hFile, var);
		format(var, 128, "relfs14=%s\n",relfs[14]);fwrite(hFile, var);
		format(var, 128, "relfs15=%s\n",relfs[15]);fwrite(hFile, var);
		format(var, 128, "servchas=%d\n",servchas);fwrite(hFile, var);
		format(var, 128, "packlim=%d\n",packlim);fwrite(hFile, var);
		format(var, 128, "netreccon=%d\n",NETrecCon);fwrite(hFile, var);
		format(var, 128, "netsencon=%d\n",NETsenCon);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public ReadOpenIP()
{
	new string[256];
	format(string,sizeof(string),"data/openip.ini");
	if(!fexist(string)) {return 1;}//строка оставлена для совместимости с ранней версией мода !!!
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "openip00" , true ) == 0 ) { OpenIP[0] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon00" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[0] = strval( val ); }
		if( strcmp( key , "openip01" , true ) == 0 ) { OpenIP[1] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon01" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[1] = strval( val ); }
		if( strcmp( key , "openip02" , true ) == 0 ) { OpenIP[2] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon02" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[2] = strval( val ); }
		if( strcmp( key , "openip03" , true ) == 0 ) { OpenIP[3] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon03" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[3] = strval( val ); }
		if( strcmp( key , "openip04" , true ) == 0 ) { OpenIP[4] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon04" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[4] = strval( val ); }
		if( strcmp( key , "openip05" , true ) == 0 ) { OpenIP[5] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon05" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[5] = strval( val ); }
		if( strcmp( key , "openip06" , true ) == 0 ) { OpenIP[6] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon06" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[6] = strval( val ); }
		if( strcmp( key , "openip07" , true ) == 0 ) { OpenIP[7] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon07" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[7] = strval( val ); }
		if( strcmp( key , "openip08" , true ) == 0 ) { OpenIP[8] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon08" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[8] = strval( val ); }
		if( strcmp( key , "openip09" , true ) == 0 ) { OpenIP[9] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon09" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[9] = strval( val ); }
		if( strcmp( key , "openip10" , true ) == 0 ) { OpenIP[10] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon10" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[10] = strval( val ); }
		if( strcmp( key , "openip11" , true ) == 0 ) { OpenIP[11] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon11" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[11] = strval( val ); }
		if( strcmp( key , "openip12" , true ) == 0 ) { OpenIP[12] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon12" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[12] = strval( val ); }
		if( strcmp( key , "openip13" , true ) == 0 ) { OpenIP[13] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon13" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[13] = strval( val ); }
		if( strcmp( key , "openip14" , true ) == 0 ) { OpenIP[14] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon14" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[14] = strval( val ); }
		if( strcmp( key , "openip15" , true ) == 0 ) { OpenIP[15] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon15" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[15] = strval( val ); }
		if( strcmp( key , "openip16" , true ) == 0 ) { OpenIP[16] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon16" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[16] = strval( val ); }
		if( strcmp( key , "openip17" , true ) == 0 ) { OpenIP[17] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon17" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[17] = strval( val ); }
		if( strcmp( key , "openip18" , true ) == 0 ) { OpenIP[18] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon18" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[18] = strval( val ); }
		if( strcmp( key , "openip19" , true ) == 0 ) { OpenIP[19] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon19" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[19] = strval( val ); }
		if( strcmp( key , "openip20" , true ) == 0 ) { OpenIP[20] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon20" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[20] = strval( val ); }
		if( strcmp( key , "openip21" , true ) == 0 ) { OpenIP[21] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon21" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[21] = strval( val ); }
		if( strcmp( key , "openip22" , true ) == 0 ) { OpenIP[22] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon22" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[22] = strval( val ); }
		if( strcmp( key , "openip23" , true ) == 0 ) { OpenIP[23] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon23" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[23] = strval( val ); }
		if( strcmp( key , "openip24" , true ) == 0 ) { OpenIP[24] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon24" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[24] = strval( val ); }
		if( strcmp( key , "openip25" , true ) == 0 ) { OpenIP[25] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon25" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[25] = strval( val ); }
		if( strcmp( key , "openip26" , true ) == 0 ) { OpenIP[26] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon26" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[26] = strval( val ); }
		if( strcmp( key , "openip27" , true ) == 0 ) { OpenIP[27] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon27" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[27] = strval( val ); }
		if( strcmp( key , "openip28" , true ) == 0 ) { OpenIP[28] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon28" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[28] = strval( val ); }
		if( strcmp( key , "openip29" , true ) == 0 ) { OpenIP[29] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon29" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[29] = strval( val ); }
		if( strcmp( key , "openip30" , true ) == 0 ) { OpenIP[30] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon30" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[30] = strval( val ); }
		if( strcmp( key , "openip31" , true ) == 0 ) { OpenIP[31] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon31" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[31] = strval( val ); }
		if( strcmp( key , "openip32" , true ) == 0 ) { OpenIP[32] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon32" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[32] = strval( val ); }
		if( strcmp( key , "openip33" , true ) == 0 ) { OpenIP[33] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon33" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[33] = strval( val ); }
		if( strcmp( key , "openip34" , true ) == 0 ) { OpenIP[34] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon34" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[34] = strval( val ); }
		if( strcmp( key , "openip35" , true ) == 0 ) { OpenIP[35] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon35" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[35] = strval( val ); }
		if( strcmp( key , "openip36" , true ) == 0 ) { OpenIP[36] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon36" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[36] = strval( val ); }
		if( strcmp( key , "openip37" , true ) == 0 ) { OpenIP[37] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon37" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[37] = strval( val ); }
		if( strcmp( key , "openip38" , true ) == 0 ) { OpenIP[38] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon38" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[38] = strval( val ); }
		if( strcmp( key , "openip39" , true ) == 0 ) { OpenIP[39] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon39" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[39] = strval( val ); }
	}
	fclose(UserFile);
	for(new i = 0; i < 40; i++)
	{
		strdel(OpenIP[i], strlen(OpenIP[i])-1, strlen(OpenIP[i]));//корректировки OpenIP
	}
	return 1;
}

public SaveOpenIP()
{
	new string[256];
	format(string,sizeof(string),"data/openip.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[128];
		format(var, 128, "openip00=%s\n",OpenIP[0]);fwrite(hFile, var);
		format(var, 128, "numcon00=%d\n",OpenIP22[0]);fwrite(hFile, var);
		format(var, 128, "openip01=%s\n",OpenIP[1]);fwrite(hFile, var);
		format(var, 128, "numcon01=%d\n",OpenIP22[1]);fwrite(hFile, var);
		format(var, 128, "openip02=%s\n",OpenIP[2]);fwrite(hFile, var);
		format(var, 128, "numcon02=%d\n",OpenIP22[2]);fwrite(hFile, var);
		format(var, 128, "openip03=%s\n",OpenIP[3]);fwrite(hFile, var);
		format(var, 128, "numcon03=%d\n",OpenIP22[3]);fwrite(hFile, var);
		format(var, 128, "openip04=%s\n",OpenIP[4]);fwrite(hFile, var);
		format(var, 128, "numcon04=%d\n",OpenIP22[4]);fwrite(hFile, var);
		format(var, 128, "openip05=%s\n",OpenIP[5]);fwrite(hFile, var);
		format(var, 128, "numcon05=%d\n",OpenIP22[5]);fwrite(hFile, var);
		format(var, 128, "openip06=%s\n",OpenIP[6]);fwrite(hFile, var);
		format(var, 128, "numcon06=%d\n",OpenIP22[6]);fwrite(hFile, var);
		format(var, 128, "openip07=%s\n",OpenIP[7]);fwrite(hFile, var);
		format(var, 128, "numcon07=%d\n",OpenIP22[7]);fwrite(hFile, var);
		format(var, 128, "openip08=%s\n",OpenIP[8]);fwrite(hFile, var);
		format(var, 128, "numcon08=%d\n",OpenIP22[8]);fwrite(hFile, var);
		format(var, 128, "openip09=%s\n",OpenIP[9]);fwrite(hFile, var);
		format(var, 128, "numcon09=%d\n",OpenIP22[9]);fwrite(hFile, var);
		format(var, 128, "openip10=%s\n",OpenIP[10]);fwrite(hFile, var);
		format(var, 128, "numcon10=%d\n",OpenIP22[10]);fwrite(hFile, var);
		format(var, 128, "openip11=%s\n",OpenIP[11]);fwrite(hFile, var);
		format(var, 128, "numcon11=%d\n",OpenIP22[11]);fwrite(hFile, var);
		format(var, 128, "openip12=%s\n",OpenIP[12]);fwrite(hFile, var);
		format(var, 128, "numcon12=%d\n",OpenIP22[12]);fwrite(hFile, var);
		format(var, 128, "openip13=%s\n",OpenIP[13]);fwrite(hFile, var);
		format(var, 128, "numcon13=%d\n",OpenIP22[13]);fwrite(hFile, var);
		format(var, 128, "openip14=%s\n",OpenIP[14]);fwrite(hFile, var);
		format(var, 128, "numcon14=%d\n",OpenIP22[14]);fwrite(hFile, var);
		format(var, 128, "openip15=%s\n",OpenIP[15]);fwrite(hFile, var);
		format(var, 128, "numcon15=%d\n",OpenIP22[15]);fwrite(hFile, var);
		format(var, 128, "openip16=%s\n",OpenIP[16]);fwrite(hFile, var);
		format(var, 128, "numcon16=%d\n",OpenIP22[16]);fwrite(hFile, var);
		format(var, 128, "openip17=%s\n",OpenIP[17]);fwrite(hFile, var);
		format(var, 128, "numcon17=%d\n",OpenIP22[17]);fwrite(hFile, var);
		format(var, 128, "openip18=%s\n",OpenIP[18]);fwrite(hFile, var);
		format(var, 128, "numcon18=%d\n",OpenIP22[18]);fwrite(hFile, var);
		format(var, 128, "openip19=%s\n",OpenIP[19]);fwrite(hFile, var);
		format(var, 128, "numcon19=%d\n",OpenIP22[19]);fwrite(hFile, var);
		format(var, 128, "openip20=%s\n",OpenIP[20]);fwrite(hFile, var);
		format(var, 128, "numcon20=%d\n",OpenIP22[20]);fwrite(hFile, var);
		format(var, 128, "openip21=%s\n",OpenIP[21]);fwrite(hFile, var);
		format(var, 128, "numcon21=%d\n",OpenIP22[21]);fwrite(hFile, var);
		format(var, 128, "openip22=%s\n",OpenIP[22]);fwrite(hFile, var);
		format(var, 128, "numcon22=%d\n",OpenIP22[22]);fwrite(hFile, var);
		format(var, 128, "openip23=%s\n",OpenIP[23]);fwrite(hFile, var);
		format(var, 128, "numcon23=%d\n",OpenIP22[23]);fwrite(hFile, var);
		format(var, 128, "openip24=%s\n",OpenIP[24]);fwrite(hFile, var);
		format(var, 128, "numcon24=%d\n",OpenIP22[24]);fwrite(hFile, var);
		format(var, 128, "openip25=%s\n",OpenIP[25]);fwrite(hFile, var);
		format(var, 128, "numcon25=%d\n",OpenIP22[25]);fwrite(hFile, var);
		format(var, 128, "openip26=%s\n",OpenIP[26]);fwrite(hFile, var);
		format(var, 128, "numcon26=%d\n",OpenIP22[26]);fwrite(hFile, var);
		format(var, 128, "openip27=%s\n",OpenIP[27]);fwrite(hFile, var);
		format(var, 128, "numcon27=%d\n",OpenIP22[27]);fwrite(hFile, var);
		format(var, 128, "openip28=%s\n",OpenIP[28]);fwrite(hFile, var);
		format(var, 128, "numcon28=%d\n",OpenIP22[28]);fwrite(hFile, var);
		format(var, 128, "openip29=%s\n",OpenIP[29]);fwrite(hFile, var);
		format(var, 128, "numcon29=%d\n",OpenIP22[29]);fwrite(hFile, var);
		format(var, 128, "openip30=%s\n",OpenIP[30]);fwrite(hFile, var);
		format(var, 128, "numcon30=%d\n",OpenIP22[30]);fwrite(hFile, var);
		format(var, 128, "openip31=%s\n",OpenIP[31]);fwrite(hFile, var);
		format(var, 128, "numcon31=%d\n",OpenIP22[31]);fwrite(hFile, var);
		format(var, 128, "openip32=%s\n",OpenIP[32]);fwrite(hFile, var);
		format(var, 128, "numcon32=%d\n",OpenIP22[32]);fwrite(hFile, var);
		format(var, 128, "openip33=%s\n",OpenIP[33]);fwrite(hFile, var);
		format(var, 128, "numcon33=%d\n",OpenIP22[33]);fwrite(hFile, var);
		format(var, 128, "openip34=%s\n",OpenIP[34]);fwrite(hFile, var);
		format(var, 128, "numcon34=%d\n",OpenIP22[34]);fwrite(hFile, var);
		format(var, 128, "openip35=%s\n",OpenIP[35]);fwrite(hFile, var);
		format(var, 128, "numcon35=%d\n",OpenIP22[35]);fwrite(hFile, var);
		format(var, 128, "openip36=%s\n",OpenIP[36]);fwrite(hFile, var);
		format(var, 128, "numcon36=%d\n",OpenIP22[36]);fwrite(hFile, var);
		format(var, 128, "openip37=%s\n",OpenIP[37]);fwrite(hFile, var);
		format(var, 128, "numcon37=%d\n",OpenIP22[37]);fwrite(hFile, var);
		format(var, 128, "openip38=%s\n",OpenIP[38]);fwrite(hFile, var);
		format(var, 128, "numcon38=%d\n",OpenIP22[38]);fwrite(hFile, var);
		format(var, 128, "openip39=%s\n",OpenIP[39]);fwrite(hFile, var);
		format(var, 128, "numcon39=%d\n",OpenIP22[39]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public DatCor()
{
	new Float:flyear;
	timecor[3] = timecor[3] + CorTime[3];//обработка месяца
	timecor[5] = 0;//перенос на год
	if(timecor[3] < 1)
	{
		timecor[3] = 12 + timecor[3];
		timecor[5] = -1;//перенос на год
	}
	if(timecor[3] > 12)
	{
		timecor[3] = timecor[3] - 12;
		timecor[5] = 1;//перенос на год
	}
	timecor[2] = timecor[2] + CorTime[4] + timecor[5];//обработка года
	flyear = float(timecor[2]);
	flyear = floatdiv(flyear, 4);
	flyear = floatfract(flyear);
	if(flyear != 0){timecor[7] = 0;}//НЕ високосный год
	if(flyear == 0){timecor[7] = 1;}//високосный год
	timecor[4] = timecor[4] + CorTime[2] + timecor[6];//обработка числа
	timecor[5] = 0;//перенос на месяц
	if(timecor[4] < 1 && timecor[3] == 3 && timecor[7] == 0)
	{
		timecor[4] = 28 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] < 1 && timecor[3] == 3 && timecor[7] == 1)
	{
		timecor[4] = 29 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] < 1 && (timecor[3] == 5 || timecor[3] == 7 || timecor[3] == 10 || timecor[3] == 12))
	{
		timecor[4] = 30 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] < 1 && (timecor[3] == 2 || timecor[3] == 4 || timecor[3] == 6 || timecor[3] == 8 || timecor[3] == 9 || timecor[3] == 11 || timecor[3] == 1))
	{
		timecor[4] = 31 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] > 28 && timecor[3] == 2 && timecor[7] == 0)
	{
		timecor[4] = timecor[4] - 28;
		timecor[5] = 1;//перенос на месяц
	}
	if(timecor[4] > 29 && timecor[3] == 2 && timecor[7] == 1)
	{
		timecor[4] = timecor[4] - 29;
		timecor[5] = 1;//перенос на месяц
	}
	if(timecor[4] > 30 && (timecor[3] == 4 || timecor[3] == 6 || timecor[3] == 9 || timecor[3] == 11))
	{
		timecor[4] = timecor[4] - 30;
		timecor[5] = 1;//перенос на месяц
	}
	if(timecor[4] > 31 && (timecor[3] == 1 || timecor[3] == 3 || timecor[3] == 5 || timecor[3] == 7 || timecor[3] == 8 || timecor[3] == 10 || timecor[3] == 12))
	{
		timecor[4] = timecor[4] - 31;
		timecor[5] = 1;//перенос на месяц
	}
	timecor[3] = timecor[3] + timecor[5];//коррекция месяца
	timecor[5] = 0;//перенос на год
	if(timecor[3] < 1)
	{
		timecor[3] = 12 + timecor[3];
		timecor[5] = -1;//перенос на год
	}
	if(timecor[3] > 12)
	{
		timecor[3] = timecor[3] - 12;
		timecor[5] = 1;//перенос на год
	}
	timecor[2] = timecor[2] + timecor[5];//коррекция года
	return 1;
}

public TimCor()
{
	timecor[1] = timecor[1] + CorTime[1];//обработка минут
	timecor[5] = 0;//перенос на час
	if(timecor[1] < 0)
	{
		timecor[1] = 60 + timecor[1];
		timecor[5] = -1;//перенос на час
	}
	if(timecor[1] > 59)
	{
		timecor[1] = timecor[1] - 60;
		timecor[5] = 1;//перенос на час
	}
	timecor[0] = timecor[0] + CorTime[0] + timecor[5];//обработка часов
	timecor[6] = 0;//перенос на день
	if(timecor[0] < 0)
	{
		timecor[0] = 24 + timecor[0];
		timecor[6] = -1;//перенос на день
	}
	if(timecor[0] > 23)
	{
		timecor[0] = timecor[0] - 24;
		timecor[6] = 1;//перенос на день
	}
	return 1;
}

public ReadCorTime()
{
	new string[256];
	format(string,sizeof(string),"data/cortime.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "realtime" , true ) == 0 ) { val = ini_GetValue( Data ); timecor[8] = strval( val ); }
		if( strcmp( key , "hour" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[0] = strval( val ); }
		if( strcmp( key , "minute" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[1] = strval( val ); }
		if( strcmp( key , "day" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[2] = strval( val ); }
		if( strcmp( key , "month" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[3] = strval( val ); }
		if( strcmp( key , "year" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[4] = strval( val ); }
	}
	fclose(UserFile);
	return 1;
}

public SaveCorTime()
{
	new string[256];
	format(string,sizeof(string),"data/cortime.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[32];
		format(var, 32, "realtime=%d\n",timecor[8]);fwrite(hFile, var);
		format(var, 32, "hour=%d\n",CorTime[0]);fwrite(hFile, var);
		format(var, 32, "minute=%d\n",CorTime[1]);fwrite(hFile, var);
		format(var, 32, "day=%d\n",CorTime[2]);fwrite(hFile, var);
		format(var, 32, "month=%d\n",CorTime[3]);fwrite(hFile, var);
		format(var, 32, "year=%d\n",CorTime[4]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public DestrCar(playerid)
{
	if(GetPlayerVehicleID(playerid) != 0)//если игрок в транспорте, то:
	{
		new Float:igx, Float:igy, Float:igz;//высадить игрока
		GetPlayerPos(playerid, igx, igy, igz);
		SetPlayerPos(playerid, igx+3, igy+3, igz+5);
	}
	if(playcar[playerid] != 0)//если у игрока есть свой транспорт, то:
	{
		for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона и чужой мигалки И обход антикрашера - 3
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(GetPlayerVehicleID(i) == playcar[playerid])
				{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
					EnterTick33[i] = 1;//обход антикрашера - 3
				}
			}
			if(playcar[playerid] == neon[i][2])
			{
				DestroyObject(neon[i][0]);//убрать неон
				DestroyObject(neon[i][1]);//убрать неон
				neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][2] = 0;//несуществующий ид транспорта с неоном
 			}
			if(playcar[playerid] == migalka[i][1])
			{
				DestroyObject(migalka[i][0]);//убрать мигалку
				migalka[i][0] = 0;//присваиваем мигалке несуществующий номер объекта
				migalka[i][1] = 0;//несуществующий ид транспорта с мигалкой
 			}
		}
		if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
		if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
		neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
		neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
		neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
		if(migalka[playerid][0] != 0) { DestroyObject(migalka[playerid][0]); }//убрать мигалку
		migalka[playerid][0] = 0;//присваиваем мигалке несуществующий номер объекта
		migalka[playerid][1] = 0;//несуществующий ид транспорта с мигалкой
		playcarvw[playcar[playerid]] = -100;//обнулить виртуальный мир транспорта игрока
		DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
		playcar[playerid] = 0;//несуществующий ид транспорта
	}
	return 1;
}

public StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3)
{
	new carpl, modelcar;
	carpl = GetPlayerVehicleID(playerid);//получение ид авто инициатора
	modelcar = GetVehicleModel(carpl);//получение ид модели авто инициатора
	new Float: X, Float:Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerVehicleID(i) == carpl)//если игрок в авто инициатора,
			{//или это сам инициатор, то:
				PlayCRTP[i] = 1;//блокировка контроля координат
				tpdrift[i] = 1;//блокировка счётчика дрифта
				SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
			}
			if(IsPlayerInRangeOfPoint(i, 15.0, X, Y, Z))//если игрок в радиусе 15 (стоит на машине), то:
			{
				PlayCRTP[i] = 1;//блокировка контроля координат
				SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
			}
		}
	}
	if(modelcar != 432)//если игрок НЕ в танке, то: тп 1 раз
	{
		SetTimerEx("TelPort", 300, 0, "ddddffff", playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
	}
	else//иначе: тп 3 раза
	{
		PlayCRSH[playerid] = 1;//блокировка спидхака
		SetTimerEx("TelPort", 300, 0, "ddddffff", playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
		TelPortDop11(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
		TelPortDop22(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
	}
	return 1;
}

forward TelPortDop11(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
public TelPortDop11(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3)
{
	SetTimerEx("TelPort", 600, 0, "ddddffff", playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
	return 1;
}

forward TelPortDop22(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
public TelPortDop22(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3)
{
	SetTimerEx("TelPort", 900, 0, "ddddffff", playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
	return 1;
}

public TelPort(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3)
{
	new carpl, modelcar;
	carpl = GetPlayerVehicleID(playerid);//получение ид авто инициатора
	modelcar = GetVehicleModel(carpl);//получение ид модели авто инициатора
	new Float: X, Float:Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerVehicleID(i) == carpl)//если игрок в авто инициатора,
			{//или это сам инициатор, то:
				PlayCRTP[i] = 1;//блокировка контроля координат
				tpdrift[i] = 1;//блокировка счётчика дрифта
			}
			if(IsPlayerInRangeOfPoint(i, 15.0, X, Y, Z))//если игрок в радиусе 15 (стоит на машине), то:
			{
				PlayCRTP[i] = 1;//блокировка контроля координат
			}
		}
	}
	if(modelcar == 432)//если игрок в танке, то:
	{
		PlayCRSH[playerid] = 1;//блокировка спидхака
	}
	if(regm == 0)
	{
		new car;//флипнуть
		new Float:angle;
		car = GetPlayerVehicleID(playerid);
		GetVehicleZAngle(car, angle);
		SetVehicleZAngle(car, angle);
		return 1;
	}
	if(regm == 1)
	{
		if(PlayerInfo[playerid][pAdmin] <= 4 && per1 == 3)
		{//если игрок - админ 4 лвл или ниже, И ТП в интерьер тюрьмы то:
			SetPlayerInterior(playerid, per1);//тп БЕЗ транспорта
			SetPlayerVirtualWorld(playerid, per2);
			SetPlayerPos(playerid, cor1, cor2, cor3);
		}
		else//иначе:
		{
			SetPlayerInterior(playerid, per1);//телепортировать
			SetPlayerVirtualWorld(playerid, per2);
			new VID = GetPlayerVehicleID(playerid);
			new Float:angle;
			LinkVehicleToInterior(VID, per1);//подключить транспорт к ТП интерьеру
			SetVehicleVirtualWorld(VID, per2);//установить транспорту виртуальный мир игрока
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(GetPlayerVehicleID(i) == VID && i != playerid)
					{//установить пассажирам интерьер и виртуальный мир игрока
						SetPlayerInterior(i, per1);
						SetPlayerVirtualWorld(i, per2);
					}
				}
			}
			SetVehiclePos(VID, cor1, cor2, cor3);
			GetVehicleZAngle(VID, angle);//флипнуть
			SetVehicleZAngle(VID, angle);
			SetPlayerPos(playerid, cor1, cor2, cor3);
			PutPlayerInVehicle(playerid, VID, 0);
		}
		return 1;
	}
	if(regm == 2)
	{
		if(PlayerInfo[playerid][pAdmin] <= 4 && per1 == 3)
		{//если игрок - админ 4 лвл или ниже, И ТП в интерьер тюрьмы то:
			SetPlayerInterior(playerid, per1);//тп БЕЗ транспорта
			SetPlayerVirtualWorld(playerid, per2);
			SetPlayerPos(playerid, cor1, cor2, cor3);
		}
		else//иначе:
		{
			SetPlayerInterior(playerid, per1);//телепортировать с углом авто
			SetPlayerVirtualWorld(playerid, per2);
			new VID = GetPlayerVehicleID(playerid);
			LinkVehicleToInterior(VID, per1);//подключить транспорт к ТП интерьеру
			SetVehicleVirtualWorld(VID, per2);//установить транспорту виртуальный мир игрока
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(GetPlayerVehicleID(i) == VID && i != playerid)
					{//установить пассажирам интерьер и виртуальный мир игрока
						SetPlayerInterior(i, per1);
						SetPlayerVirtualWorld(i, per2);
					}
				}
			}
			SetVehiclePos(VID, cor1, cor2, cor3);
			SetVehicleZAngle(VID, per3);
			SetPlayerPos(playerid, cor1, cor2, cor3);
			PutPlayerInVehicle(playerid, VID, 0);
		}
	}
	return 1;
}

forward TPDerby(playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3);
public TPDerby(playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3)
{
	tpdrift[playerid] = 1;
	SetPlayerInterior(playerid, per1);
	SetPlayerVirtualWorld(playerid, per2);
	SetPlayerPos(playerid, cor1, cor2, cor3);
	return 1;
}

public LineOn1()
{
	MoveDynamicObject(LineObj1[0], 2835.44, -1657.23, 9.69, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[1], 2836.30, -1660.23, 17.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[2], 2836.31, -1657.30, 17.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[3], 2836.29, -1654.31, 17.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[4], 2823.33, -1650.61, 10.46, 20); //0.00, 0.00, 196.58);
	MoveDynamicObject(LineObj1[5], 2740.17, -1648.85, 12.79, 20); //0.00, 0.00, 187.50);
	MoveDynamicObject(LineObj1[6], 2730.98, -1650.00, 12.79, 20); //0.00, 0.00, 186.61);
	MoveDynamicObject(LineObj1[7], 2721.73, -1651.11, 12.79, 20); //0.00, 0.00, 186.74);
	MoveDynamicObject(LineObj1[8], 2635.18, -1661.60, 10.59, 20); //0.00, 0.00, 254.96);
	MoveDynamicObject(LineObj1[9], 2648.33, -1650.41, 10.53, 20); //0.00, 0.00, 191.68);
	MoveDynamicObject(LineObj1[10], 2640.04, -1654.23, 10.53, 20); //0.00, 0.00, 217.69);
	MoveDynamicObject(LineObj1[11], 2648.32, -1737.32, 10.60, 20); //0.00, 0.00, 31.55);
	MoveDynamicObject(LineObj1[12], 2639.80, -1740.47, 10.60, 20); //0.00, 0.00, 9.52);
	MoveDynamicObject(LineObj1[13], 2527.49, -1739.47, 13.08, 20); //0.00, 0.00, 341.45);
	MoveDynamicObject(LineObj1[14], 2431.01, -1724.72, 13.41, 20); //0.00, 0.00, 197.71);
	MoveDynamicObject(LineObj1[15], 2413.74, -1739.72, 13.07, 20); //0.00, 0.00, 341.46);
	MoveDynamicObject(LineObj1[16], 2342.74, -1725.10, 13.41, 20); //0.00, 0.00, 200.35);
	MoveDynamicObject(LineObj1[17], 2313.70, -1740.14, 13.09, 20); //0.00, 0.00, 343.65);
	MoveDynamicObject(LineObj1[18], 2217.92, -1724.51, 13.19, 20); //0.00, 0.00, 210.19);
	MoveDynamicObject(LineObj1[19], 2212.31, -1731.37, 13.19, 20); //0.00, 0.00, 250.60);
	MoveDynamicObject(LineObj1[20], 2210.78, -1740.52, 13.19, 20); //0.00, 0.00, 269.91);
	MoveDynamicObject(LineObj1[21], 2211.37, -1894.33, 13.19, 20); //0.00, 0.00, 292.25);
	MoveDynamicObject(LineObj1[22], 2225.35, -1894.73, 13.18, 20); //0.00, 0.00, 71.52);
	MoveDynamicObject(LineObj1[23], 2221.17, -1972.03, 13.12, 20); //0.00, 0.00, 67.79);
	MoveDynamicObject(LineObj1[24], 2289.06, -2073.82, 13.15, 20); //0.00, 0.00, 129.90);
	MoveDynamicObject(LineObj1[25], 2291.81, -2081.95, 13.15, 20); //0.00, 0.00, 87.13);
	MoveDynamicObject(LineObj1[26], 2288.21, -2089.73, 13.15, 20); //0.00, 0.00, 43.88);
	MoveDynamicObject(LineObj1[27], 2267.33, -2108.72, 13.32, 20); //0.00, 0.00, 32.75);
	MoveDynamicObject(LineObj1[28], 2255.69, -2097.16, 13.33, 20); //0.00, 0.00, 244.26);
	MoveDynamicObject(LineObj1[29], 2204.08, -2169.74, 13.21, 20); //0.00, 0.00, 29.10);
	MoveDynamicObject(LineObj1[30], 2194.43, -2160.27, 13.12, 20); //0.00, 0.00, 242.30);
	MoveDynamicObject(LineObj1[31], 2140.19, -2227.21, 13.25, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[32], 2148.92, -2224.95, 13.25, 20); //0.00, 0.00, 29.03);
	MoveDynamicObject(LineObj1[33], 2132.67, -2223.65, 13.25, 20); //0.00, 0.00, 309.95);
	MoveDynamicObject(LineObj1[34], 1963.46, -2173.74, 13.08, 20); //0.00, 0.00, 341.65);
	MoveDynamicObject(LineObj1[35], 1956.02, -2168.75, 13.08, 20); //0.00, 0.00, 310.37);
	MoveDynamicObject(LineObj1[36], 1953.24, -2160.52, 13.08, 20); //0.00, 0.00, 267.15);
	MoveDynamicObject(LineObj1[37], 1968.51, -2110.19, 13.08, 20); //0.00, 0.00, 107.99);
	MoveDynamicObject(LineObj1[38], 1968.82, -2060.70, 13.08, 20); //0.00, 0.00, 106.98);
	MoveDynamicObject(LineObj1[39], 1954.40, -2052.61, 13.12, 20); //0.00, 0.00, 253.21);
	MoveDynamicObject(LineObj1[40], 1969.29, -1956.69, 13.28, 20); //0.00, 0.00, 105.84);
	MoveDynamicObject(LineObj1[41], 1954.02, -1955.91, 13.26, 20); //0.00, 0.00, 257.96);
	MoveDynamicObject(LineObj1[42], 1954.03, -1933.10, 13.18, 20); //0.00, 0.00, 257.02);
	MoveDynamicObject(LineObj1[43], 1968.88, -1932.71, 12.98, 20); //0.00, 0.00, 103.62);
	MoveDynamicObject(LineObj1[44], 1953.89, -1787.06, 12.96, 20); //0.00, 0.00, 245.72);
	MoveDynamicObject(LineObj1[45], 1969.83, -1812.39, 13.05, 20); //0.00, 0.00, 108.81);
	MoveDynamicObject(LineObj1[46], 1967.76, -1751.78, 13.08, 20); //0.00, 0.00, 125.37);
	MoveDynamicObject(LineObj1[47], 1960.78, -1746.48, 13.08, 20); //0.00, 0.00, 160.23);
	MoveDynamicObject(LineObj1[48], 1943.51, -1759.92, 13.18, 20); //0.00, 0.00, 348.05);
	MoveDynamicObject(LineObj1[49], 1936.50, -1755.00, 13.18, 20); //0.00, 0.00, 301.72);
	MoveDynamicObject(LineObj1[50], 1934.32, -1746.40, 13.18, 20); //0.00, 0.00, 266.33);
	MoveDynamicObject(LineObj1[51], 1937.54, -1605.19, 13.27, 20); //0.00, 0.00, 169.55);
	MoveDynamicObject(LineObj1[52], 1824.84, -1619.86, 13.08, 20); //0.00, 0.00, 353.04);
	MoveDynamicObject(LineObj1[53], 1817.04, -1615.92, 13.08, 20); //0.00, 0.00, 313.52);
	MoveDynamicObject(LineObj1[54], 1813.98, -1607.80, 13.08, 20); //0.00, 0.00, 268.40);
	MoveDynamicObject(LineObj1[55], 1832.10, -1577.99, 13.27, 20); //0.00, 0.00, 89.41);
	MoveDynamicObject(LineObj1[56], 1832.46, -1568.84, 13.27, 20); //0.00, 0.00, 86.07);
	MoveDynamicObject(LineObj1[57], 1833.59, -1559.74, 13.27, 20); //0.00, 0.00, 79.88);
	MoveDynamicObject(LineObj1[58], 1839.82, -1461.70, 13.07, 20); //0.00, 0.00, 258.29);
	MoveDynamicObject(LineObj1[59], 1858.54, -1464.20, 13.18, 20); //0.00, 0.00, 106.62);
	MoveDynamicObject(LineObj1[60], 1858.94, -1341.01, 13.07, 20); //0.00, 0.00, 109.23);
	MoveDynamicObject(LineObj1[61], 1858.78, -1260.86, 13.06, 20); //0.00, 0.00, 105.20);
	MoveDynamicObject(LineObj1[62], 1839.73, -1261.31, 13.21, 20); //0.00, 0.00, 255.05);
	MoveDynamicObject(LineObj1[63], 1840.29, -1186.67, 23.34, 20); //0.00, 0.00, 261.59);
	MoveDynamicObject(LineObj1[64], 1843.84, -1178.44, 23.34, 20); //0.00, 0.00, 231.75);
	MoveDynamicObject(LineObj1[65], 1851.33, -1173.89, 23.34, 20); //0.00, 0.00, 190.71);
	MoveDynamicObject(LineObj1[66], 1874.13, -1135.96, 23.43, 20); //0.00, 0.00, 108.95);
	MoveDynamicObject(LineObj1[67], 1983.85, -1045.88, 24.13, 20); //0.00, 0.00, 139.77);
	MoveDynamicObject(LineObj1[68], 1979.98, -1060.34, 24.06, 20); //0.00, 0.00, 4.27);
	MoveDynamicObject(LineObj1[69], 2068.95, -1097.47, 24.61, 20); //0.00, 0.00, 352.51);
	MoveDynamicObject(LineObj1[70], 2175.65, -1126.70, 24.83, 20); //0.00, 0.00, 11.84);
	MoveDynamicObject(LineObj1[71], 2192.39, -1116.30, 24.49, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[72], 2200.96, -1119.81, 25.01, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[73], 2209.56, -1123.31, 25.21, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[74], 2218.60, -1140.44, 25.44, 20); //0.00, 0.00, 1.96);
	MoveDynamicObject(LineObj1[75], 2218.00, -1126.76, 25.31, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[76], 2270.95, -1154.09, 26.55, 20); //0.00, 0.00, 3.14);
	MoveDynamicObject(LineObj1[77], 2303.51, -1158.66, 26.40, 20); //0.00, 0.00, 6.97);
	MoveDynamicObject(LineObj1[78], 2323.76, -1146.46, 26.58, 20); //0.00, 0.00, 156.02);
	MoveDynamicObject(LineObj1[79], 2369.98, -1160.04, 27.22, 20); //0.00, 0.00, 8.05);
	MoveDynamicObject(LineObj1[80], 2361.12, -1162.24, 27.22, 20); //0.00, 0.00, 19.68);
	MoveDynamicObject(LineObj1[81], 2862.98, -1128.34, 10.59, 20); //0.00, 0.00, 171.76);
	MoveDynamicObject(LineObj1[82], 2871.13, -1132.05, 10.59, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[83], 2878.08, -1138.02, 10.59, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[84], 2879.43, -1662.23, 10.59, 20); //0.00, 0.00, 40.25);
	MoveDynamicObject(LineObj1[85], 2871.59, -1667.10, 10.59, 20); //0.00, 0.00, 23.66);
	MoveDynamicObject(LineObj1[86], 2862.66, -1669.59, 10.59, 20); //0.00, 0.00, 7.50);
	MoveDynamicObject(LineObj1[87], 2853.43, -1669.38, 10.59, 20); //0.00, 0.00, 349.68);
	return 1;
}

public LineOff1()
{
	MoveDynamicObject(LineObj1[0], 2835.44, -1657.23, -5.31, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[1], 2836.30, -1660.23, 2.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[2], 2836.31, -1657.30, 2.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[3], 2836.29, -1654.31, 2.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[4], 2823.33, -1650.61, -4.54, 20); //0.00, 0.00, 196.58);
	MoveDynamicObject(LineObj1[5], 2740.17, -1648.85, -2.21, 20); //0.00, 0.00, 187.50);
	MoveDynamicObject(LineObj1[6], 2730.98, -1650.00, -2.21, 20); //0.00, 0.00, 186.61);
	MoveDynamicObject(LineObj1[7], 2721.73, -1651.11, -2.21, 20); //0.00, 0.00, 186.74);
	MoveDynamicObject(LineObj1[8], 2635.18, -1661.60, -4.41, 20); //0.00, 0.00, 254.96);
	MoveDynamicObject(LineObj1[9], 2648.33, -1650.41, -4.47, 20); //0.00, 0.00, 191.68);
	MoveDynamicObject(LineObj1[10], 2640.04, -1654.23, -4.47, 20); //0.00, 0.00, 217.69);
	MoveDynamicObject(LineObj1[11], 2648.32, -1737.32, -4.4, 20); //0.00, 0.00, 31.55);
	MoveDynamicObject(LineObj1[12], 2639.80, -1740.47, -4.4, 20); //0.00, 0.00, 9.52);
	MoveDynamicObject(LineObj1[13], 2527.49, -1739.47, -1.92, 20); //0.00, 0.00, 341.45);
	MoveDynamicObject(LineObj1[14], 2431.01, -1724.72, -1.59, 20); //0.00, 0.00, 197.71);
	MoveDynamicObject(LineObj1[15], 2413.74, -1739.72, -1.93, 20); //0.00, 0.00, 341.46);
	MoveDynamicObject(LineObj1[16], 2342.74, -1725.10, -1.59, 20); //0.00, 0.00, 200.35);
	MoveDynamicObject(LineObj1[17], 2313.70, -1740.14, -1.91, 20); //0.00, 0.00, 343.65);
	MoveDynamicObject(LineObj1[18], 2217.92, -1724.51, -1.81, 20); //0.00, 0.00, 210.19);
	MoveDynamicObject(LineObj1[19], 2212.31, -1731.37, -1.81, 20); //0.00, 0.00, 250.60);
	MoveDynamicObject(LineObj1[20], 2210.78, -1740.52, -1.81, 20); //0.00, 0.00, 269.91);
	MoveDynamicObject(LineObj1[21], 2211.37, -1894.33, -1.81, 20); //0.00, 0.00, 292.25);
	MoveDynamicObject(LineObj1[22], 2225.35, -1894.73, -1.82, 20); //0.00, 0.00, 71.52);
	MoveDynamicObject(LineObj1[23], 2221.17, -1972.03, -1.88, 20); //0.00, 0.00, 67.79);
	MoveDynamicObject(LineObj1[24], 2289.06, -2073.82, -1.85, 20); //0.00, 0.00, 129.90);
	MoveDynamicObject(LineObj1[25], 2291.81, -2081.95, -1.85, 20); //0.00, 0.00, 87.13);
	MoveDynamicObject(LineObj1[26], 2288.21, -2089.73, -1.85, 20); //0.00, 0.00, 43.88);
	MoveDynamicObject(LineObj1[27], 2267.33, -2108.72, -1.68, 20); //0.00, 0.00, 32.75);
	MoveDynamicObject(LineObj1[28], 2255.69, -2097.16, -1.67, 20); //0.00, 0.00, 244.26);
	MoveDynamicObject(LineObj1[29], 2204.08, -2169.74, -1.79, 20); //0.00, 0.00, 29.10);
	MoveDynamicObject(LineObj1[30], 2194.43, -2160.27, -1.88, 20); //0.00, 0.00, 242.30);
	MoveDynamicObject(LineObj1[31], 2140.19, -2227.21, -1.75, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[32], 2148.92, -2224.95, -1.75, 20); //0.00, 0.00, 29.03);
	MoveDynamicObject(LineObj1[33], 2132.67, -2223.65, -1.75, 20); //0.00, 0.00, 309.95);
	MoveDynamicObject(LineObj1[34], 1963.46, -2173.74, -1.92, 20); //0.00, 0.00, 341.65);
	MoveDynamicObject(LineObj1[35], 1956.02, -2168.75, -1.92, 20); //0.00, 0.00, 310.37);
	MoveDynamicObject(LineObj1[36], 1953.24, -2160.52, -1.92, 20); //0.00, 0.00, 267.15);
	MoveDynamicObject(LineObj1[37], 1968.51, -2110.19, -1.92, 20); //0.00, 0.00, 107.99);
	MoveDynamicObject(LineObj1[38], 1968.82, -2060.70, -1.92, 20); //0.00, 0.00, 106.98);
	MoveDynamicObject(LineObj1[39], 1954.40, -2052.61, -1.88, 20); //0.00, 0.00, 253.21);
	MoveDynamicObject(LineObj1[40], 1969.29, -1956.69, -1.72, 20); //0.00, 0.00, 105.84);
	MoveDynamicObject(LineObj1[41], 1954.02, -1955.91, -1.74, 20); //0.00, 0.00, 257.96);
	MoveDynamicObject(LineObj1[42], 1954.03, -1933.10, -1.82, 20); //0.00, 0.00, 257.02);
	MoveDynamicObject(LineObj1[43], 1968.88, -1932.71, -2.02, 20); //0.00, 0.00, 103.62);
	MoveDynamicObject(LineObj1[44], 1953.89, -1787.06, -2.04, 20); //0.00, 0.00, 245.72);
	MoveDynamicObject(LineObj1[45], 1969.83, -1812.39, -1.95, 20); //0.00, 0.00, 108.81);
	MoveDynamicObject(LineObj1[46], 1967.76, -1751.78, -1.92, 20); //0.00, 0.00, 125.37);
	MoveDynamicObject(LineObj1[47], 1960.78, -1746.48, -1.92, 20); //0.00, 0.00, 160.23);
	MoveDynamicObject(LineObj1[48], 1943.51, -1759.92, -1.82, 20); //0.00, 0.00, 348.05);
	MoveDynamicObject(LineObj1[49], 1936.50, -1755.00, -1.82, 20); //0.00, 0.00, 301.72);
	MoveDynamicObject(LineObj1[50], 1934.32, -1746.40, -1.82, 20); //0.00, 0.00, 266.33);
	MoveDynamicObject(LineObj1[51], 1937.54, -1605.19, -1.73, 20); //0.00, 0.00, 169.55);
	MoveDynamicObject(LineObj1[52], 1824.84, -1619.86, -1.92, 20); //0.00, 0.00, 353.04);
	MoveDynamicObject(LineObj1[53], 1817.04, -1615.92, -1.92, 20); //0.00, 0.00, 313.52);
	MoveDynamicObject(LineObj1[54], 1813.98, -1607.80, -1.92, 20); //0.00, 0.00, 268.40);
	MoveDynamicObject(LineObj1[55], 1832.10, -1577.99, -1.73, 20); //0.00, 0.00, 89.41);
	MoveDynamicObject(LineObj1[56], 1832.46, -1568.84, -1.73, 20); //0.00, 0.00, 86.07);
	MoveDynamicObject(LineObj1[57], 1833.59, -1559.74, -1.73, 20); //0.00, 0.00, 79.88);
	MoveDynamicObject(LineObj1[58], 1839.82, -1461.70, -1.93, 20); //0.00, 0.00, 258.29);
	MoveDynamicObject(LineObj1[59], 1858.54, -1464.20, -1.82, 20); //0.00, 0.00, 106.62);
	MoveDynamicObject(LineObj1[60], 1858.94, -1341.01, -1.93, 20); //0.00, 0.00, 109.23);
	MoveDynamicObject(LineObj1[61], 1858.78, -1260.86, -1.94, 20); //0.00, 0.00, 105.20);
	MoveDynamicObject(LineObj1[62], 1839.73, -1261.31, -1.79, 20); //0.00, 0.00, 255.05);
	MoveDynamicObject(LineObj1[63], 1840.29, -1186.67, 8.34, 20); //0.00, 0.00, 261.59);
	MoveDynamicObject(LineObj1[64], 1843.84, -1178.44, 8.34, 20); //0.00, 0.00, 231.75);
	MoveDynamicObject(LineObj1[65], 1851.33, -1173.89, 8.34, 20); //0.00, 0.00, 190.71);
	MoveDynamicObject(LineObj1[66], 1874.13, -1135.96, 8.43, 20); //0.00, 0.00, 108.95);
	MoveDynamicObject(LineObj1[67], 1983.85, -1045.88, 9.13, 20); //0.00, 0.00, 139.77);
	MoveDynamicObject(LineObj1[68], 1979.98, -1060.34, 9.06, 20); //0.00, 0.00, 4.27);
	MoveDynamicObject(LineObj1[69], 2068.95, -1097.47, 9.61, 20); //0.00, 0.00, 352.51);
	MoveDynamicObject(LineObj1[70], 2175.65, -1126.70, 9.83, 20); //0.00, 0.00, 11.84);
	MoveDynamicObject(LineObj1[71], 2192.39, -1116.30, 9.49, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[72], 2200.96, -1119.81, 10.01, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[73], 2209.56, -1123.31, 10.21, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[74], 2218.60, -1140.44, 10.44, 20); //0.00, 0.00, 1.96);
	MoveDynamicObject(LineObj1[75], 2218.00, -1126.76, 10.31, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[76], 2270.95, -1154.09, 11.55, 20); //0.00, 0.00, 3.14);
	MoveDynamicObject(LineObj1[77], 2303.51, -1158.66, 11.4, 20); //0.00, 0.00, 6.97);
	MoveDynamicObject(LineObj1[78], 2323.76, -1146.46, 11.58, 20); //0.00, 0.00, 156.02);
	MoveDynamicObject(LineObj1[79], 2369.98, -1160.04, 12.22, 20); //0.00, 0.00, 8.05);
	MoveDynamicObject(LineObj1[80], 2361.12, -1162.24, 12.22, 20); //0.00, 0.00, 19.68);
	MoveDynamicObject(LineObj1[81], 2862.98, -1128.34, -4.41, 20); //0.00, 0.00, 171.76);
	MoveDynamicObject(LineObj1[82], 2871.13, -1132.05, -4.41, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[83], 2878.08, -1138.02, -4.41, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[84], 2879.43, -1662.23, -4.41, 20); //0.00, 0.00, 40.25);
	MoveDynamicObject(LineObj1[85], 2871.59, -1667.10, -4.41, 20); //0.00, 0.00, 23.66);
	MoveDynamicObject(LineObj1[86], 2862.66, -1669.59, -4.41, 20); //0.00, 0.00, 7.50);
	MoveDynamicObject(LineObj1[87], 2853.43, -1669.38, -4.41, 20); //0.00, 0.00, 349.68);
	return 1;
}

public LineOn2()
{
	MoveDynamicObject(LineObj2[0], 494.77, -307.58, 39.26, 20); //0.00, 0.00, 76.04);
	MoveDynamicObject(LineObj2[1], 495.09, -306.60, 46.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[2], 492.06, -305.94, 46.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[3], 498.06, -307.40, 46.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[4], 475.69, -410.62, 28.20, 20); //0.00, 0.00, 61.01);
	MoveDynamicObject(LineObj2[5], 461.76, -407.31, 28.07, 20); //0.00, 0.00, 267.86);
	MoveDynamicObject(LineObj2[6], 428.41, -588.99, 37.06, 20); //0.00, 0.00, 46.05);
	MoveDynamicObject(LineObj2[7], 420.88, -594.13, 36.60, 20); //0.00, 0.00, 21.49);
	MoveDynamicObject(LineObj2[8], 412.24, -594.03, 36.14, 20); //0.00, 0.00, 336.79);
	MoveDynamicObject(LineObj2[9], 34.37, -658.49, 3.21, 20); //0.00, 0.00, 332.07);
	MoveDynamicObject(LineObj2[10], 28.13, -652.15, 3.21, 20); //0.00, 0.00, 296.75);
	MoveDynamicObject(LineObj2[11], 27.32, -643.47, 3.21, 20); //0.00, 0.00, 253.78);
	MoveDynamicObject(LineObj2[12], -256.69, -271.16, 1.17, 20); //0.00, 0.00, 295.17);
	MoveDynamicObject(LineObj2[13], -299.64, -149.71, 0.86, 20); //0.00, 0.00, 124.75);
	MoveDynamicObject(LineObj2[14], -298.59, -71.51, 1.25, 20); //0.00, 0.00, 99.61);
	MoveDynamicObject(LineObj2[15], -236.61, 133.86, 1.83, 20); //0.00, 0.00, 85.63);
	MoveDynamicObject(LineObj2[16], -207.01, 206.24, 11.12, 20); //0.00, 0.00, 79.51);
	MoveDynamicObject(LineObj2[17], -225.80, 206.35, 10.73, 20); //0.00, 0.00, 230.96);
	MoveDynamicObject(LineObj2[18], -206.32, 245.29, 11.83, 20); //0.00, 0.00, 213.66);
	MoveDynamicObject(LineObj2[19], -212.95, 238.97, 11.83, 20); //0.00, 0.00, 233.07);
	MoveDynamicObject(LineObj2[20], -197.85, 247.03, 11.83, 20); //0.00, 0.00, 169.92);
	MoveDynamicObject(LineObj2[21], -26.40, 166.45, 2.23, 20); //0.00, 0.00, 349.28);
	MoveDynamicObject(LineObj2[22], 231.82, 41.21, 2.11, 20); //0.00, 0.00, 9.58);
	MoveDynamicObject(LineObj2[23], 325.15, 74.36, 3.13, 20); //0.00, 0.00, 40.56);
	MoveDynamicObject(LineObj2[24], 511.41, 224.17, 13.28, 20); //0.00, 0.00, 55.41);
	MoveDynamicObject(LineObj2[25], 620.00, 317.28, 19.50, 20); //0.00, 0.00, 170.85);
	MoveDynamicObject(LineObj2[26], 754.38, 331.24, 19.83, 20); //0.00, 0.00, 180.59);
	MoveDynamicObject(LineObj2[27], 754.13, 316.28, 19.91, 20); //0.00, 0.00, 25.14);
	MoveDynamicObject(LineObj2[28], 769.04, 319.09, 19.91, 20); //0.00, 0.00, 21.94);
	MoveDynamicObject(LineObj2[29], 1029.28, 473.46, 19.78, 20); //0.00, 0.00, 85.57);
	MoveDynamicObject(LineObj2[30], 1350.50, 466.03, 19.85, 20); //0.00, 0.00, 143.17);
	MoveDynamicObject(LineObj2[31], 1380.39, 436.61, 19.66, 20); //0.00, 0.00, 62.74);
	MoveDynamicObject(LineObj2[32], 1381.73, 445.35, 19.66, 20); //0.00, 0.00, 100.59);
	MoveDynamicObject(LineObj2[33], 1377.34, 453.02, 19.66, 20); //0.00, 0.00, 139.43);
	MoveDynamicObject(LineObj2[34], 1331.53, 361.91, 19.20, 20); //0.00, 0.00, 263.33);
	MoveDynamicObject(LineObj2[35], 1311.30, 316.35, 19.10, 20); //0.00, 0.00, 264.38);
	MoveDynamicObject(LineObj2[36], 1324.59, 310.78, 19.25, 20); //0.00, 0.00, 47.65);
	MoveDynamicObject(LineObj2[37], 1296.31, 246.40, 19.14, 20); //0.00, 0.00, 46.53);
	MoveDynamicObject(LineObj2[38], 1282.91, 252.33, 19.10, 20); //0.00, 0.00, 265.80);
	MoveDynamicObject(LineObj2[39], 1254.35, 188.20, 19.11, 20); //0.00, 0.00, 267.57);
	MoveDynamicObject(LineObj2[40], 1267.79, 182.88, 19.30, 20); //0.00, 0.00, 47.07);
	MoveDynamicObject(LineObj2[41], 1231.08, 105.40, 20.70, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[42], 1230.19, 75.26, 22.03, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[43], 1301.92, -85.60, 36.26, 20); //0.00, 0.00, 40.76);
	MoveDynamicObject(LineObj2[44], 1305.67, -77.85, 36.26, 20); //0.00, 0.00, 87.51);
	MoveDynamicObject(LineObj2[45], 1303.61, -69.08, 36.26, 20); //0.00, 0.00, 118.41);
	MoveDynamicObject(LineObj2[46], 1242.97, -134.60, 38.75, 20); //0.00, 0.00, 21.21);
	MoveDynamicObject(LineObj2[47], 1233.21, -122.87, 38.77, 20); //0.00, 0.00, 227.92);
	MoveDynamicObject(LineObj2[48], 1183.07, -172.08, 40.29, 20); //0.00, 0.00, 8.42);
	MoveDynamicObject(LineObj2[49], 530.89, -134.12, 37.55, 20); //0.00, 0.00, 184.21);
	MoveDynamicObject(LineObj2[50], 522.92, -137.82, 37.55, 20); //0.00, 0.00, 225.61);
	MoveDynamicObject(LineObj2[51], 518.88, -145.76, 37.55, 20); //0.00, 0.00, 260.07);
	MoveDynamicObject(LineObj2[52], 752.47, -156.06, 18.51, 20); //0.00, 0.00, 183.58);
	MoveDynamicObject(LineObj2[53], 737.81, -168.84, 19.43, 20); //0.00, 0.00, 344.08);
	return 1;
}

public LineOff2()
{
	MoveDynamicObject(LineObj2[0], 494.77, -307.58, 24.26, 20); //0.00, 0.00, 76.04);
	MoveDynamicObject(LineObj2[1], 495.09, -306.60, 31.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[2], 492.06, -305.94, 31.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[3], 498.06, -307.40, 31.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[4], 475.69, -410.62, 13.2, 20); //0.00, 0.00, 61.01);
	MoveDynamicObject(LineObj2[5], 461.76, -407.31, 13.07, 20); //0.00, 0.00, 267.86);
	MoveDynamicObject(LineObj2[6], 428.41, -588.99, 22.06, 20); //0.00, 0.00, 46.05);
	MoveDynamicObject(LineObj2[7], 420.88, -594.13, 21.6, 20); //0.00, 0.00, 21.49);
	MoveDynamicObject(LineObj2[8], 412.24, -594.03, 21.14, 20); //0.00, 0.00, 336.79);
	MoveDynamicObject(LineObj2[9], 34.37, -658.49, -11.79, 20); //0.00, 0.00, 332.07);
	MoveDynamicObject(LineObj2[10], 28.13, -652.15, -11.79, 20); //0.00, 0.00, 296.75);
	MoveDynamicObject(LineObj2[11], 27.32, -643.47, -11.79, 20); //0.00, 0.00, 253.78);
	MoveDynamicObject(LineObj2[12], -256.69, -271.16, -13.83, 20); //0.00, 0.00, 295.17);
	MoveDynamicObject(LineObj2[13], -299.64, -149.71, -14.14, 20); //0.00, 0.00, 124.75);
	MoveDynamicObject(LineObj2[14], -298.59, -71.51, -13.75, 20); //0.00, 0.00, 99.61);
	MoveDynamicObject(LineObj2[15], -236.61, 133.86, -13.17, 20); //0.00, 0.00, 85.63);
	MoveDynamicObject(LineObj2[16], -207.01, 206.24, -3.88, 20); //0.00, 0.00, 79.51);
	MoveDynamicObject(LineObj2[17], -225.80, 206.35, -4.27, 20); //0.00, 0.00, 230.96);
	MoveDynamicObject(LineObj2[18], -206.32, 245.29, -3.17, 20); //0.00, 0.00, 213.66);
	MoveDynamicObject(LineObj2[19], -212.95, 238.97, -3.17, 20); //0.00, 0.00, 233.07);
	MoveDynamicObject(LineObj2[20], -197.85, 247.03, -3.17, 20); //0.00, 0.00, 169.92);
	MoveDynamicObject(LineObj2[21], -26.40, 166.45, -12.77, 20); //0.00, 0.00, 349.28);
	MoveDynamicObject(LineObj2[22], 231.82, 41.21, -12.89, 20); //0.00, 0.00, 9.58);
	MoveDynamicObject(LineObj2[23], 325.15, 74.36, -11.87, 20); //0.00, 0.00, 40.56);
	MoveDynamicObject(LineObj2[24], 511.41, 224.17, -1.72, 20); //0.00, 0.00, 55.41);
	MoveDynamicObject(LineObj2[25], 620.00, 317.28, 4.5, 20); //0.00, 0.00, 170.85);
	MoveDynamicObject(LineObj2[26], 754.38, 331.24, 4.83, 20); //0.00, 0.00, 180.59);
	MoveDynamicObject(LineObj2[27], 754.13, 316.28, 4.91, 20); //0.00, 0.00, 25.14);
	MoveDynamicObject(LineObj2[28], 769.04, 319.09, 4.91, 20); //0.00, 0.00, 21.94);
	MoveDynamicObject(LineObj2[29], 1029.28, 473.46, 4.78, 20); //0.00, 0.00, 85.57);
	MoveDynamicObject(LineObj2[30], 1350.50, 466.03, 4.85, 20); //0.00, 0.00, 143.17);
	MoveDynamicObject(LineObj2[31], 1380.39, 436.61, 4.66, 20); //0.00, 0.00, 62.74);
	MoveDynamicObject(LineObj2[32], 1381.73, 445.35, 4.66, 20); //0.00, 0.00, 100.59);
	MoveDynamicObject(LineObj2[33], 1377.34, 453.02, 4.66, 20); //0.00, 0.00, 139.43);
	MoveDynamicObject(LineObj2[34], 1331.53, 361.91, 4.2, 20); //0.00, 0.00, 263.33);
	MoveDynamicObject(LineObj2[35], 1311.30, 316.35, 4.1, 20); //0.00, 0.00, 264.38);
	MoveDynamicObject(LineObj2[36], 1324.59, 310.78, 4.25, 20); //0.00, 0.00, 47.65);
	MoveDynamicObject(LineObj2[37], 1296.31, 246.40, 4.14, 20); //0.00, 0.00, 46.53);
	MoveDynamicObject(LineObj2[38], 1282.91, 252.33, 4.1, 20); //0.00, 0.00, 265.80);
	MoveDynamicObject(LineObj2[39], 1254.35, 188.20, 4.11, 20); //0.00, 0.00, 267.57);
	MoveDynamicObject(LineObj2[40], 1267.79, 182.88, 4.3, 20); //0.00, 0.00, 47.07);
	MoveDynamicObject(LineObj2[41], 1231.08, 105.40, 5.7, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[42], 1230.19, 75.26, 7.03, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[43], 1301.92, -85.60, 21.26, 20); //0.00, 0.00, 40.76);
	MoveDynamicObject(LineObj2[44], 1305.67, -77.85, 21.26, 20); //0.00, 0.00, 87.51);
	MoveDynamicObject(LineObj2[45], 1303.61, -69.08, 21.26, 20); //0.00, 0.00, 118.41);
	MoveDynamicObject(LineObj2[46], 1242.97, -134.60, 23.75, 20); //0.00, 0.00, 21.21);
	MoveDynamicObject(LineObj2[47], 1233.21, -122.87, 23.77, 20); //0.00, 0.00, 227.92);
	MoveDynamicObject(LineObj2[48], 1183.07, -172.08, 25.29, 20); //0.00, 0.00, 8.42);
	MoveDynamicObject(LineObj2[49], 530.89, -134.12, 22.55, 20); //0.00, 0.00, 184.21);
	MoveDynamicObject(LineObj2[50], 522.92, -137.82, 22.55, 20); //0.00, 0.00, 225.61);
	MoveDynamicObject(LineObj2[51], 518.88, -145.76, 22.55, 20); //0.00, 0.00, 260.07);
	MoveDynamicObject(LineObj2[52], 752.47, -156.06, 3.51, 20); //0.00, 0.00, 183.58);
	MoveDynamicObject(LineObj2[53], 737.81, -168.84, 4.43, 20); //0.00, 0.00, 344.08);
	return 1;
}

public LineOn3()
{
	MoveDynamicObject(LineObj3[0], -2421.08, -11.79, 34.67, 20); //0.00, 0.00, 271.14);
	MoveDynamicObject(LineObj3[1], -2421.01, -10.80, 42.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[2], -2417.99, -10.84, 42.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[3], -2424.07, -10.95, 42.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[4], -2414.12, -69.62, 35.05, 20); //0.00, 0.00, 68.19);
	MoveDynamicObject(LineObj3[5], -2428.36, -69.73, 34.98, 20); //0.00, 0.00, 291.96);
	MoveDynamicObject(LineObj3[6], -2501.12, -203.59, 25.16, 20); //0.00, 0.00, 198.43);
	MoveDynamicObject(LineObj3[7], -2603.68, -203.19, 3.90, 20); //0.00, 0.00, 199.44);
	MoveDynamicObject(LineObj3[8], -2655.14, -203.29, 3.95, 20); //0.00, 0.00, 200.73);
	MoveDynamicObject(LineObj3[9], -2655.00, -217.27, 3.93, 20); //0.00, 0.00, 341.23);
	MoveDynamicObject(LineObj3[10], -2706.01, -203.48, 3.88, 20); //0.00, 0.00, 196.91);
	MoveDynamicObject(LineObj3[11], -2758.22, -203.52, 6.73, 20); //0.00, 0.00, 196.13);
	MoveDynamicObject(LineObj3[12], -2803.06, -218.78, 6.83, 20); //0.00, 0.00, 350.77);
	MoveDynamicObject(LineObj3[13], -2811.27, -215.07, 6.83, 20); //0.00, 0.00, 320.25);
	MoveDynamicObject(LineObj3[14], -2814.64, -207.43, 6.83, 20); //0.00, 0.00, 267.24);
	MoveDynamicObject(LineObj3[15], -2801.83, -70.45, 6.73, 20); //0.00, 0.00, 112.02);
	MoveDynamicObject(LineObj3[16], -2801.80, -6.27, 6.83, 20); //0.00, 0.00, 117.34);
	MoveDynamicObject(LineObj3[17], -2801.64, 39.50, 6.74, 20); //0.00, 0.00, 115.95);
	MoveDynamicObject(LineObj3[18], -2801.82, 157.63, 6.74, 20); //0.00, 0.00, 114.09);
	MoveDynamicObject(LineObj3[19], -2815.48, 282.21, 6.88, 20); //0.00, 0.00, 253.22);
	MoveDynamicObject(LineObj3[20], -2810.66, 289.76, 6.88, 20); //0.00, 0.00, 221.78);
	MoveDynamicObject(LineObj3[21], -2802.54, 292.90, 6.88, 20); //0.00, 0.00, 180.33);
	MoveDynamicObject(LineObj3[22], -2706.42, 295.33, 3.83, 20); //0.00, 0.00, 162.98);
	MoveDynamicObject(LineObj3[23], -2706.97, 281.25, 4.03, 20); //0.00, 0.00, 20.49);
	MoveDynamicObject(LineObj3[24], -2666.05, 281.14, 3.95, 20); //0.00, 0.00, 22.87);
	MoveDynamicObject(LineObj3[25], -2646.58, 281.10, 3.95, 20); //0.00, 0.00, 23.12);
	MoveDynamicObject(LineObj3[26], -2599.48, 348.48, 3.87, 20); //0.00, 0.00, 114.72);
	MoveDynamicObject(LineObj3[27], -2613.86, 328.00, 3.88, 20); //0.00, 0.00, 242.26);
	MoveDynamicObject(LineObj3[28], -2599.32, 384.99, 8.47, 20); //0.00, -9.00, 118.00);
	MoveDynamicObject(LineObj3[29], -2613.90, 468.25, 14.17, 20); //0.00, 0.00, 251.45);
	MoveDynamicObject(LineObj3[30], -2599.51, 468.07, 14.15, 20); //0.00, 0.00, 111.96);
	MoveDynamicObject(LineObj3[31], -2599.28, 573.41, 14.21, 20); //0.00, 0.00, 180.68);
	MoveDynamicObject(LineObj3[32], -2607.77, 570.66, 14.21, 20); //0.00, 0.00, 215.28);
	MoveDynamicObject(LineObj3[33], -2613.33, 563.63, 14.21, 20); //0.00, 0.00, 247.83);
	MoveDynamicObject(LineObj3[34], -2566.64, 575.62, 14.15, 20); //0.00, 0.00, 158.51);
	MoveDynamicObject(LineObj3[35], -2526.90, 575.76, 14.15, 20); //0.00, 0.00, 156.16);
	MoveDynamicObject(LineObj3[36], -2526.76, 556.07, 14.15, 20); //0.00, 0.00, 24.08);
	MoveDynamicObject(LineObj3[37], -2386.91, 555.96, 24.43, 20); //0.00, 0.00, 24.03);
	MoveDynamicObject(LineObj3[38], -2387.21, 575.58, 24.43, 20); //0.00, 0.00, 161.28);
	MoveDynamicObject(LineObj3[39], -2269.61, 575.49, 34.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[40], -2265.55, 556.11, 34.80, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[41], -2261.06, 575.73, 34.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[42], -2251.69, 575.65, 34.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[43], -2256.73, 556.16, 34.80, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[44], -2221.18, 558.44, 34.71, 20); //0.00, 0.00, 84.73);
	MoveDynamicObject(LineObj3[45], -2222.69, 567.31, 34.71, 20); //0.00, 0.00, 114.54);
	MoveDynamicObject(LineObj3[46], -2228.89, 573.47, 34.71, 20); //0.00, 0.00, 155.92);
	MoveDynamicObject(LineObj3[47], -2219.01, 508.16, 34.61, 20); //0.00, 0.00, 63.08);
	MoveDynamicObject(LineObj3[48], -2234.06, 508.71, 34.63, 20); //0.00, 0.00, 291.71);
	MoveDynamicObject(LineObj3[49], -2287.81, 390.91, 34.43, 20); //0.00, 0.00, 319.05);
	MoveDynamicObject(LineObj3[50], -2279.60, 387.65, 34.43, 20); //0.00, 0.00, 357.63);
	MoveDynamicObject(LineObj3[51], -2270.90, 389.57, 34.43, 20); //0.00, 0.00, 27.50);
	MoveDynamicObject(LineObj3[52], -2318.85, 417.08, 34.82, 20); //0.00, 0.00, 225.36);
	MoveDynamicObject(LineObj3[53], -2310.97, 421.34, 34.82, 20); //0.00, 0.00, 191.94);
	MoveDynamicObject(LineObj3[54], -2302.17, 420.31, 34.82, 20); //0.00, 0.00, 154.99);
	MoveDynamicObject(LineObj3[55], -2362.75, 375.43, 34.69, 20); //0.00, 0.00, 247.64);
	MoveDynamicObject(LineObj3[56], -2387.65, 348.57, 34.69, 20); //0.00, 0.00, 257.66);
	MoveDynamicObject(LineObj3[57], -2416.36, 298.36, 34.69, 20); //0.00, 0.00, 271.08);
	MoveDynamicObject(LineObj3[58], -2425.84, 179.54, 34.71, 20); //0.00, 0.00, 286.19);
	MoveDynamicObject(LineObj3[59], -2428.32, 136.97, 34.71, 20); //0.00, 0.00, 292.34);
	MoveDynamicObject(LineObj3[60], -2428.27, 79.39, 34.71, 20); //0.00, 0.00, 293.47);
	MoveDynamicObject(LineObj3[61], -2428.32, 39.46, 34.71, 20); //0.00, 0.00, 293.51);
	return 1;
}

public LineOff3()
{
	MoveDynamicObject(LineObj3[0], -2421.08, -11.79, 19.67, 20); //0.00, 0.00, 271.14);
	MoveDynamicObject(LineObj3[1], -2421.01, -10.80, 27.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[2], -2417.99, -10.84, 27.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[3], -2424.07, -10.95, 27.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[4], -2414.12, -69.62, 20.05, 20); //0.00, 0.00, 68.19);
	MoveDynamicObject(LineObj3[5], -2428.36, -69.73, 19.98, 20); //0.00, 0.00, 291.96);
	MoveDynamicObject(LineObj3[6], -2501.12, -203.59, 10.16, 20); //0.00, 0.00, 198.43);
	MoveDynamicObject(LineObj3[7], -2603.68, -203.19, -11.1, 20); //0.00, 0.00, 199.44);
	MoveDynamicObject(LineObj3[8], -2655.14, -203.29, -11.05, 20); //0.00, 0.00, 200.73);
	MoveDynamicObject(LineObj3[9], -2655.00, -217.27, -11.07, 20); //0.00, 0.00, 341.23);
	MoveDynamicObject(LineObj3[10], -2706.01, -203.48, -11.12, 20); //0.00, 0.00, 196.91);
	MoveDynamicObject(LineObj3[11], -2758.22, -203.52, -8.27, 20); //0.00, 0.00, 196.13);
	MoveDynamicObject(LineObj3[12], -2803.06, -218.78, -8.17, 20); //0.00, 0.00, 350.77);
	MoveDynamicObject(LineObj3[13], -2811.27, -215.07, -8.17, 20); //0.00, 0.00, 320.25);
	MoveDynamicObject(LineObj3[14], -2814.64, -207.43, -8.17, 20); //0.00, 0.00, 267.24);
	MoveDynamicObject(LineObj3[15], -2801.83, -70.45, -8.27, 20); //0.00, 0.00, 112.02);
	MoveDynamicObject(LineObj3[16], -2801.80, -6.27, -8.17, 20); //0.00, 0.00, 117.34);
	MoveDynamicObject(LineObj3[17], -2801.64, 39.50, -8.26, 20); //0.00, 0.00, 115.95);
	MoveDynamicObject(LineObj3[18], -2801.82, 157.63, -8.26, 20); //0.00, 0.00, 114.09);
	MoveDynamicObject(LineObj3[19], -2815.48, 282.21, -8.12, 20); //0.00, 0.00, 253.22);
	MoveDynamicObject(LineObj3[20], -2810.66, 289.76, -8.12, 20); //0.00, 0.00, 221.78);
	MoveDynamicObject(LineObj3[21], -2802.54, 292.90, -8.12, 20); //0.00, 0.00, 180.33);
	MoveDynamicObject(LineObj3[22], -2706.42, 295.33, -11.17, 20); //0.00, 0.00, 162.98);
	MoveDynamicObject(LineObj3[23], -2706.97, 281.25, -10.97, 20); //0.00, 0.00, 20.49);
	MoveDynamicObject(LineObj3[24], -2666.05, 281.14, -11.05, 20); //0.00, 0.00, 22.87);
	MoveDynamicObject(LineObj3[25], -2646.58, 281.10, -11.05, 20); //0.00, 0.00, 23.12);
	MoveDynamicObject(LineObj3[26], -2599.48, 348.48, -11.13, 20); //0.00, 0.00, 114.72);
	MoveDynamicObject(LineObj3[27], -2613.86, 328.00, -11.12, 20); //0.00, 0.00, 242.26);
	MoveDynamicObject(LineObj3[28], -2599.32, 384.99, -6.53, 20); //0.00, -9.00, 118.00);
	MoveDynamicObject(LineObj3[29], -2613.90, 468.25, -0.83, 20); //0.00, 0.00, 251.45);
	MoveDynamicObject(LineObj3[30], -2599.51, 468.07, -0.85, 20); //0.00, 0.00, 111.96);
	MoveDynamicObject(LineObj3[31], -2599.28, 573.41, -0.79, 20); //0.00, 0.00, 180.68);
	MoveDynamicObject(LineObj3[32], -2607.77, 570.66, -0.79, 20); //0.00, 0.00, 215.28);
	MoveDynamicObject(LineObj3[33], -2613.33, 563.63, -0.79, 20); //0.00, 0.00, 247.83);
	MoveDynamicObject(LineObj3[34], -2566.64, 575.62, -0.85, 20); //0.00, 0.00, 158.51);
	MoveDynamicObject(LineObj3[35], -2526.90, 575.76, -0.85, 20); //0.00, 0.00, 156.16);
	MoveDynamicObject(LineObj3[36], -2526.76, 556.07, -0.85, 20); //0.00, 0.00, 24.08);
	MoveDynamicObject(LineObj3[37], -2386.91, 555.96, 9.43, 20); //0.00, 0.00, 24.03);
	MoveDynamicObject(LineObj3[38], -2387.21, 575.58, 9.43, 20); //0.00, 0.00, 161.28);
	MoveDynamicObject(LineObj3[39], -2269.61, 575.49, 19.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[40], -2265.55, 556.11, 19.8, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[41], -2261.06, 575.73, 19.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[42], -2251.69, 575.65, 19.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[43], -2256.73, 556.16, 19.8, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[44], -2221.18, 558.44, 19.71, 20); //0.00, 0.00, 84.73);
	MoveDynamicObject(LineObj3[45], -2222.69, 567.31, 19.71, 20); //0.00, 0.00, 114.54);
	MoveDynamicObject(LineObj3[46], -2228.89, 573.47, 19.71, 20); //0.00, 0.00, 155.92);
	MoveDynamicObject(LineObj3[47], -2219.01, 508.16, 19.61, 20); //0.00, 0.00, 63.08);
	MoveDynamicObject(LineObj3[48], -2234.06, 508.71, 19.63, 20); //0.00, 0.00, 291.71);
	MoveDynamicObject(LineObj3[49], -2287.81, 390.91, 19.43, 20); //0.00, 0.00, 319.05);
	MoveDynamicObject(LineObj3[50], -2279.60, 387.65, 19.43, 20); //0.00, 0.00, 357.63);
	MoveDynamicObject(LineObj3[51], -2270.90, 389.57, 19.43, 20); //0.00, 0.00, 27.50);
	MoveDynamicObject(LineObj3[52], -2318.85, 417.08, 19.82, 20); //0.00, 0.00, 225.36);
	MoveDynamicObject(LineObj3[53], -2310.97, 421.34, 19.82, 20); //0.00, 0.00, 191.94);
	MoveDynamicObject(LineObj3[54], -2302.17, 420.31, 19.82, 20); //0.00, 0.00, 154.99);
	MoveDynamicObject(LineObj3[55], -2362.75, 375.43, 19.69, 20); //0.00, 0.00, 247.64);
	MoveDynamicObject(LineObj3[56], -2387.65, 348.57, 19.69, 20); //0.00, 0.00, 257.66);
	MoveDynamicObject(LineObj3[57], -2416.36, 298.36, 19.69, 20); //0.00, 0.00, 271.08);
	MoveDynamicObject(LineObj3[58], -2425.84, 179.54, 19.71, 20); //0.00, 0.00, 286.19);
	MoveDynamicObject(LineObj3[59], -2428.32, 136.97, 19.71, 20); //0.00, 0.00, 292.34);
	MoveDynamicObject(LineObj3[60], -2428.27, 79.39, 19.71, 20); //0.00, 0.00, 293.47);
	MoveDynamicObject(LineObj3[61], -2428.32, 39.46, 19.71, 20); //0.00, 0.00, 293.51);
	return 1;
}

public LineOn4()
{
	MoveDynamicObject(LineObj4[0], -1403.67, 2290.17, 54.40, 20); //0.00, 0.00, 295.21);
	MoveDynamicObject(LineObj4[1], -1404.00, 2291.06, 61.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[2], -1401.29, 2292.32, 61.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[3], -1406.74, 2289.74, 61.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[4], -1360.53, 2172.21, 48.32, 20); //0.00, 0.00, 21.36);
	MoveDynamicObject(LineObj4[5], -1352.65, 2176.88, 48.62, 20); //0.00, 0.00, 39.59);
	MoveDynamicObject(LineObj4[6], -1348.24, 2184.43, 49.03, 20); //0.00, 0.00, 79.86);
	MoveDynamicObject(LineObj4[7], -1488.85, 2112.11, 45.48, 20); //0.00, 0.00, 291.38);
	MoveDynamicObject(LineObj4[8], -1482.76, 2106.31, 45.48, 20); //0.00, 0.00, 341.38);
	MoveDynamicObject(LineObj4[9], -1473.83, 2105.89, 45.60, 20); //0.00, 0.00, 13.09);
	MoveDynamicObject(LineObj4[10], -1530.23, 2367.74, 46.22, 20); //0.00, 0.00, 151.93);
	MoveDynamicObject(LineObj4[11], -1524.60, 2361.20, 46.72, 20); //0.00, 0.00, 110.82);
	MoveDynamicObject(LineObj4[12], -1538.64, 2368.86, 45.71, 20); //0.00, 0.00, 194.92);
	MoveDynamicObject(LineObj4[13], -1635.95, 2382.55, 48.92, 20); //0.00, 12.00, 223.78);
	MoveDynamicObject(LineObj4[14], -1628.77, 2388.09, 50.55, 20); //0.00, 9.00, 211.96);
	MoveDynamicObject(LineObj4[15], -1611.41, 2388.58, 51.98, 20); //0.00, 0.00, 154.59);
	MoveDynamicObject(LineObj4[16], -1620.20, 2390.50, 51.68, 20); //0.00, 3.00, 181.00);
	MoveDynamicObject(LineObj4[17], -1684.92, 2334.25, 31.71, 20); //0.00, 9.00, 255.04);
	MoveDynamicObject(LineObj4[18], -1816.25, 2128.67, 7.57, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj4[19], -1825.23, 2130.28, 7.57, 20); //0.00, 0.00, 340.36);
	MoveDynamicObject(LineObj4[20], -1831.45, 2136.07, 7.47, 20); //0.00, 0.00, 294.00);
	MoveDynamicObject(LineObj4[21], -2001.18, 2276.40, 18.10, 20); //0.00, 0.00, 247.40);
	MoveDynamicObject(LineObj4[22], -1816.57, 2685.47, 55.21, 20); //0.00, 4.00, 209.85);
	MoveDynamicObject(LineObj4[23], -1767.45, 2707.07, 59.09, 20); //0.00, 0.00, 53.80);
	MoveDynamicObject(LineObj4[24], -1634.58, 2715.81, 57.36, 20); //0.00, 0.00, 27.92);
	MoveDynamicObject(LineObj4[25], -1339.70, 2635.68, 50.55, 20); //0.00, 0.00, 78.47);
	MoveDynamicObject(LineObj4[26], -1341.16, 2653.71, 50.75, 20); //0.00, 0.00, 107.72);
	MoveDynamicObject(LineObj4[27], -1339.25, 2644.76, 50.24, 20); //0.00, 0.00, 96.43);
	MoveDynamicObject(LineObj4[28], -1344.32, 2628.22, 51.25, 20); //0.00, 4.00, 39.55);
	MoveDynamicObject(LineObj4[29], -1386.67, 2601.23, 54.99, 20); //0.00, -5.00, 258.81);
	MoveDynamicObject(LineObj4[30], -1442.20, 2367.98, 52.75, 20); //0.00, 0.00, 307.28);
	return 1;
}

public LineOff4()
{
	MoveDynamicObject(LineObj4[0], -1403.67, 2290.17, 39.4, 20); //0.00, 0.00, 295.21);
	MoveDynamicObject(LineObj4[1], -1404.00, 2291.06, 46.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[2], -1401.29, 2292.32, 46.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[3], -1406.74, 2289.74, 46.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[4], -1360.53, 2172.21, 33.32, 20); //0.00, 0.00, 21.36);
	MoveDynamicObject(LineObj4[5], -1352.65, 2176.88, 33.62, 20); //0.00, 0.00, 39.59);
	MoveDynamicObject(LineObj4[6], -1348.24, 2184.43, 34.03, 20); //0.00, 0.00, 79.86);
	MoveDynamicObject(LineObj4[7], -1488.85, 2112.11, 30.48, 20); //0.00, 0.00, 291.38);
	MoveDynamicObject(LineObj4[8], -1482.76, 2106.31, 30.48, 20); //0.00, 0.00, 341.38);
	MoveDynamicObject(LineObj4[9], -1473.83, 2105.89, 30.6, 20); //0.00, 0.00, 13.09);
	MoveDynamicObject(LineObj4[10], -1530.23, 2367.74, 31.22, 20); //0.00, 0.00, 151.93);
	MoveDynamicObject(LineObj4[11], -1524.60, 2361.20, 31.72, 20); //0.00, 0.00, 110.82);
	MoveDynamicObject(LineObj4[12], -1538.64, 2368.86, 30.71, 20); //0.00, 0.00, 194.92);
	MoveDynamicObject(LineObj4[13], -1635.95, 2382.55, 33.92, 20); //0.00, 12.00, 223.78);
	MoveDynamicObject(LineObj4[14], -1628.77, 2388.09, 35.55, 20); //0.00, 9.00, 211.96);
	MoveDynamicObject(LineObj4[15], -1611.41, 2388.58, 36.98, 20); //0.00, 0.00, 154.59);
	MoveDynamicObject(LineObj4[16], -1620.20, 2390.50, 36.68, 20); //0.00, 3.00, 181.00);
	MoveDynamicObject(LineObj4[17], -1684.92, 2334.25, 16.71, 20); //0.00, 9.00, 255.04);
	MoveDynamicObject(LineObj4[18], -1816.25, 2128.67, -7.43, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj4[19], -1825.23, 2130.28, -7.43, 20); //0.00, 0.00, 340.36);
	MoveDynamicObject(LineObj4[20], -1831.45, 2136.07, -7.53, 20); //0.00, 0.00, 294.00);
	MoveDynamicObject(LineObj4[21], -2001.18, 2276.40, 3.1, 20); //0.00, 0.00, 247.40);
	MoveDynamicObject(LineObj4[22], -1816.57, 2685.47, 40.21, 20); //0.00, 4.00, 209.85);
	MoveDynamicObject(LineObj4[23], -1767.45, 2707.07, 44.09, 20); //0.00, 0.00, 53.80);
	MoveDynamicObject(LineObj4[24], -1634.58, 2715.81, 42.36, 20); //0.00, 0.00, 27.92);
	MoveDynamicObject(LineObj4[25], -1339.70, 2635.68, 35.55, 20); //0.00, 0.00, 78.47);
	MoveDynamicObject(LineObj4[26], -1341.16, 2653.71, 35.75, 20); //0.00, 0.00, 107.72);
	MoveDynamicObject(LineObj4[27], -1339.25, 2644.76, 35.24, 20); //0.00, 0.00, 96.43);
	MoveDynamicObject(LineObj4[28], -1344.32, 2628.22, 36.25, 20); //0.00, 4.00, 39.55);
	MoveDynamicObject(LineObj4[29], -1386.67, 2601.23, 39.99, 20); //0.00, -5.00, 258.81);
	MoveDynamicObject(LineObj4[30], -1442.20, 2367.98, 37.75, 20); //0.00, 0.00, 307.28);
	return 1;
}

public LineOn5()
{
	MoveDynamicObject(LineObj5[0], 2708.59, 1773.22, 6.03, 20); //0.00, 0.00, 268.86);
	MoveDynamicObject(LineObj5[1], 2708.49, 1772.32, 13.52, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[2], 2705.55, 1772.35, 13.52, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[3], 2711.56, 1772.25, 13.52, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[4], 2717.29, 1894.15, 6.41, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[5], 2717.30, 1913.23, 6.41, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[6], 2698.83, 2007.06, 6.47, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[7], 2704.51, 1999.91, 6.47, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[8], 2710.29, 1992.66, 6.47, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[9], 2715.01, 1984.79, 6.47, 20); //0.00, 0.00, 113.44);
	MoveDynamicObject(LineObj5[10], 2642.83, 2116.34, 10.52, 20); //0.00, 0.00, 127.35);
	MoveDynamicObject(LineObj5[11], 2635.33, 2120.28, 10.52, 20); //0.00, 0.00, 177.58);
	MoveDynamicObject(LineObj5[12], 2626.09, 2120.55, 10.52, 20); //0.00, 0.00, 179.57);
	MoveDynamicObject(LineObj5[13], 2647.53, 2108.43, 10.52, 20); //0.00, 0.00, 114.06);
	MoveDynamicObject(LineObj5[14], 2651.10, 2099.93, 10.52, 20); //0.00, 0.00, 111.70);
	MoveDynamicObject(LineObj5[15], 2533.96, 2105.23, 10.53, 20); //0.00, 0.00, 348.27);
	MoveDynamicObject(LineObj5[16], 2525.82, 2109.10, 10.53, 20); //0.00, 0.00, 320.69);
	MoveDynamicObject(LineObj5[17], 2522.17, 2116.69, 10.53, 20); //0.00, 0.00, 269.90);
	MoveDynamicObject(LineObj5[18], 2520.40, 2137.04, 10.37, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[19], 2519.99, 2149.25, 10.37, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[20], 2520.41, 2232.62, 10.50, 20); //0.00, 0.00, 252.85);
	MoveDynamicObject(LineObj5[21], 2534.42, 2232.64, 10.53, 20); //0.00, 0.00, 108.32);
	MoveDynamicObject(LineObj5[22], 2530.54, 2415.70, 10.60, 20); //0.00, 0.00, 139.81);
	MoveDynamicObject(LineObj5[23], 2522.31, 2418.94, 10.60, 20); //0.00, 0.00, 177.83);
	MoveDynamicObject(LineObj5[24], 2535.36, 2408.27, 10.60, 20); //0.00, 0.00, 105.97);
	MoveDynamicObject(LineObj5[25], 2426.74, 2406.06, 10.46, 20); //0.00, 0.00, 339.36);
	MoveDynamicObject(LineObj5[26], 2367.13, 2420.44, 10.47, 20); //0.00, 0.00, 198.94);
	MoveDynamicObject(LineObj5[27], 2286.99, 2405.99, 10.37, 20); //0.00, 0.00, 340.20);
	MoveDynamicObject(LineObj5[28], 2225.56, 2416.82, 10.50, 20); //0.00, 0.00, 216.66);
	MoveDynamicObject(LineObj5[29], 2233.86, 2420.48, 10.50, 20); //0.00, 0.00, 190.92);
	MoveDynamicObject(LineObj5[30], 2221.73, 2409.37, 10.50, 20); //0.00, 0.00, 268.95);
	MoveDynamicObject(LineObj5[31], 2225.94, 2364.55, 10.47, 20); //0.00, 0.00, 44.57);
	MoveDynamicObject(LineObj5[32], 2194.23, 2344.01, 10.26, 20); //0.00, 0.00, 254.95);
	MoveDynamicObject(LineObj5[33], 2169.97, 2283.67, 10.27, 20); //0.00, 0.00, 44.13);
	MoveDynamicObject(LineObj5[34], 2150.48, 2280.06, 10.42, 20); //0.00, 0.00, 264.56);
	MoveDynamicObject(LineObj5[35], 2137.66, 2152.76, 10.37, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[36], 2159.62, 2149.39, 10.37, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[37], 2159.83, 2136.41, 10.37, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[38], 2137.55, 2136.72, 10.37, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[39], 2159.79, 2022.24, 10.37, 20); //0.00, 0.00, 71.58);
	MoveDynamicObject(LineObj5[40], 2160.01, 1893.45, 10.35, 20); //0.00, 0.00, 70.66);
	MoveDynamicObject(LineObj5[41], 2115.02, 1773.32, 10.37, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[42], 2088.98, 1721.15, 10.37, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[43], 2092.83, 1774.00, 10.28, 20); //0.00, 0.00, 267.29);
	MoveDynamicObject(LineObj5[44], 2062.88, 1714.34, 10.47, 20); //0.00, 0.00, 268.94);
	MoveDynamicObject(LineObj5[45], 2057.47, 1646.01, 10.36, 20); //0.00, 0.00, 290.90);
	MoveDynamicObject(LineObj5[46], 2080.56, 1644.63, 10.46, 20); //0.00, 0.00, 66.19);
	MoveDynamicObject(LineObj5[47], 2080.00, 1533.08, 10.26, 20); //0.00, 0.00, 69.17);
	MoveDynamicObject(LineObj5[48], 2057.57, 1534.09, 10.36, 20); //0.00, 0.00, 293.35);
	MoveDynamicObject(LineObj5[49], 2057.53, 1453.05, 10.28, 20); //0.00, 0.00, 293.64);
	MoveDynamicObject(LineObj5[50], 2079.80, 1433.05, 10.35, 20); //0.00, 0.00, 70.36);
	MoveDynamicObject(LineObj5[51], 2079.96, 1372.88, 10.35, 20); //0.00, 0.00, 68.85);
	MoveDynamicObject(LineObj5[52], 2057.31, 1373.59, 10.36, 20); //0.00, 0.00, 293.16);
	MoveDynamicObject(LineObj5[53], 2057.73, 1273.80, 10.26, 20); //0.00, 0.00, 292.23);
	MoveDynamicObject(LineObj5[54], 2057.73, 1193.69, 10.37, 20); //0.00, 0.00, 292.27);
	MoveDynamicObject(LineObj5[55], 2080.19, 1193.32, 10.38, 20); //0.00, 0.00, 67.55);
	MoveDynamicObject(LineObj5[56], 2079.86, 1033.23, 10.47, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[57], 2079.97, 973.52, 10.47, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[58], 2057.77, 972.90, 10.16, 20); //0.00, 0.00, 293.87);
	MoveDynamicObject(LineObj5[59], 2078.56, 844.39, 6.41, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj5[60], 2069.67, 846.35, 6.41, 20); //0.00, 0.00, 335.26);
	MoveDynamicObject(LineObj5[61], 2062.03, 851.44, 6.41, 20); //0.00, 0.00, 317.52);
	MoveDynamicObject(LineObj5[62], 2058.35, 859.22, 6.41, 20); //0.00, 0.00, 273.92);
	MoveDynamicObject(LineObj5[63], 2168.78, 842.90, 6.27, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[64], 2146.52, 861.99, 6.35, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[65], 2163.58, 861.99, 6.35, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[66], 2185.17, 842.96, 6.27, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[67], 2395.40, 862.21, 6.32, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[68], 2417.13, 862.01, 6.32, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[69], 2428.87, 842.76, 6.30, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[70], 2445.13, 842.83, 6.30, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[71], 2641.51, 931.30, 6.29, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[72], 2652.94, 944.03, 6.29, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[73], 2663.31, 957.11, 6.29, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[74], 2718.02, 1234.94, 6.30, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[75], 2718.31, 1335.31, 6.39, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[76], 2718.21, 1351.45, 6.39, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[77], 2717.79, 1250.57, 6.30, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[78], 2698.77, 1330.69, 6.33, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[79], 2698.67, 1351.64, 6.33, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[80], 2699.16, 1580.05, 6.44, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[81], 2699.57, 1603.06, 6.44, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[82], 2717.11, 1613.67, 6.39, 20); //0.00, 0.00, 115.79);
	MoveDynamicObject(LineObj5[83], 2717.38, 1630.53, 6.39, 20); //0.00, 0.00, 115.79);
	return 1;
}

public LineOff5()
{
	MoveDynamicObject(LineObj5[0], 2708.59, 1773.22, -8.97, 20); //0.00, 0.00, 268.86);
	MoveDynamicObject(LineObj5[1], 2708.49, 1772.32, -1.48, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[2], 2705.55, 1772.35, -1.48, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[3], 2711.56, 1772.25, -1.48, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[4], 2717.29, 1894.15, -8.59, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[5], 2717.30, 1913.23, -8.59, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[6], 2698.83, 2007.06, -8.53, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[7], 2704.51, 1999.91, -8.53, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[8], 2710.29, 1992.66, -8.53, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[9], 2715.01, 1984.79, -8.53, 20); //0.00, 0.00, 113.44);
	MoveDynamicObject(LineObj5[10], 2642.83, 2116.34, -4.48, 20); //0.00, 0.00, 127.35);
	MoveDynamicObject(LineObj5[11], 2635.33, 2120.28, -4.48, 20); //0.00, 0.00, 177.58);
	MoveDynamicObject(LineObj5[12], 2626.09, 2120.55, -4.48, 20); //0.00, 0.00, 179.57);
	MoveDynamicObject(LineObj5[13], 2647.53, 2108.43, -4.48, 20); //0.00, 0.00, 114.06);
	MoveDynamicObject(LineObj5[14], 2651.10, 2099.93, -4.48, 20); //0.00, 0.00, 111.70);
	MoveDynamicObject(LineObj5[15], 2533.96, 2105.23, -4.47, 20); //0.00, 0.00, 348.27);
	MoveDynamicObject(LineObj5[16], 2525.82, 2109.10, -4.47, 20); //0.00, 0.00, 320.69);
	MoveDynamicObject(LineObj5[17], 2522.17, 2116.69, -4.47, 20); //0.00, 0.00, 269.90);
	MoveDynamicObject(LineObj5[18], 2520.40, 2137.04, -4.63, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[19], 2519.99, 2149.25, -4.63, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[20], 2520.41, 2232.62, -4.5, 20); //0.00, 0.00, 252.85);
	MoveDynamicObject(LineObj5[21], 2534.42, 2232.64, -4.47, 20); //0.00, 0.00, 108.32);
	MoveDynamicObject(LineObj5[22], 2530.54, 2415.70, -4.4, 20); //0.00, 0.00, 139.81);
	MoveDynamicObject(LineObj5[23], 2522.31, 2418.94, -4.4, 20); //0.00, 0.00, 177.83);
	MoveDynamicObject(LineObj5[24], 2535.36, 2408.27, -4.4, 20); //0.00, 0.00, 105.97);
	MoveDynamicObject(LineObj5[25], 2426.74, 2406.06, -4.54, 20); //0.00, 0.00, 339.36);
	MoveDynamicObject(LineObj5[26], 2367.13, 2420.44, -4.53, 20); //0.00, 0.00, 198.94);
	MoveDynamicObject(LineObj5[27], 2286.99, 2405.99, -4.63, 20); //0.00, 0.00, 340.20);
	MoveDynamicObject(LineObj5[28], 2225.56, 2416.82, -4.5, 20); //0.00, 0.00, 216.66);
	MoveDynamicObject(LineObj5[29], 2233.86, 2420.48, -4.5, 20); //0.00, 0.00, 190.92);
	MoveDynamicObject(LineObj5[30], 2221.73, 2409.37, -4.5, 20); //0.00, 0.00, 268.95);
	MoveDynamicObject(LineObj5[31], 2225.94, 2364.55, -4.53, 20); //0.00, 0.00, 44.57);
	MoveDynamicObject(LineObj5[32], 2194.23, 2344.01, -4.74, 20); //0.00, 0.00, 254.95);
	MoveDynamicObject(LineObj5[33], 2169.97, 2283.67, -4.73, 20); //0.00, 0.00, 44.13);
	MoveDynamicObject(LineObj5[34], 2150.48, 2280.06, -4.58, 20); //0.00, 0.00, 264.56);
	MoveDynamicObject(LineObj5[35], 2137.66, 2152.76, -4.63, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[36], 2159.62, 2149.39, -4.63, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[37], 2159.83, 2136.41, -4.63, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[38], 2137.55, 2136.72, -4.63, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[39], 2159.79, 2022.24, -4.63, 20); //0.00, 0.00, 71.58);
	MoveDynamicObject(LineObj5[40], 2160.01, 1893.45, -4.65, 20); //0.00, 0.00, 70.66);
	MoveDynamicObject(LineObj5[41], 2115.02, 1773.32, -4.63, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[42], 2088.98, 1721.15, -4.63, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[43], 2092.83, 1774.00, -4.72, 20); //0.00, 0.00, 267.29);
	MoveDynamicObject(LineObj5[44], 2062.88, 1714.34, -4.53, 20); //0.00, 0.00, 268.94);
	MoveDynamicObject(LineObj5[45], 2057.47, 1646.01, -4.64, 20); //0.00, 0.00, 290.90);
	MoveDynamicObject(LineObj5[46], 2080.56, 1644.63, -4.54, 20); //0.00, 0.00, 66.19);
	MoveDynamicObject(LineObj5[47], 2080.00, 1533.08, -4.74, 20); //0.00, 0.00, 69.17);
	MoveDynamicObject(LineObj5[48], 2057.57, 1534.09, -4.64, 20); //0.00, 0.00, 293.35);
	MoveDynamicObject(LineObj5[49], 2057.53, 1453.05, -4.72, 20); //0.00, 0.00, 293.64);
	MoveDynamicObject(LineObj5[50], 2079.80, 1433.05, -4.65, 20); //0.00, 0.00, 70.36);
	MoveDynamicObject(LineObj5[51], 2079.96, 1372.88, -4.65, 20); //0.00, 0.00, 68.85);
	MoveDynamicObject(LineObj5[52], 2057.31, 1373.59, -4.64, 20); //0.00, 0.00, 293.16);
	MoveDynamicObject(LineObj5[53], 2057.73, 1273.80, -4.74, 20); //0.00, 0.00, 292.23);
	MoveDynamicObject(LineObj5[54], 2057.73, 1193.69, -4.63, 20); //0.00, 0.00, 292.27);
	MoveDynamicObject(LineObj5[55], 2080.19, 1193.32, -4.62, 20); //0.00, 0.00, 67.55);
	MoveDynamicObject(LineObj5[56], 2079.86, 1033.23, -4.53, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[57], 2079.97, 973.52, -4.53, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[58], 2057.77, 972.90, -4.84, 20); //0.00, 0.00, 293.87);
	MoveDynamicObject(LineObj5[59], 2078.56, 844.39, -8.59, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj5[60], 2069.67, 846.35, -8.59, 20); //0.00, 0.00, 335.26);
	MoveDynamicObject(LineObj5[61], 2062.03, 851.44, -8.59, 20); //0.00, 0.00, 317.52);
	MoveDynamicObject(LineObj5[62], 2058.35, 859.22, -8.59, 20); //0.00, 0.00, 273.92);
	MoveDynamicObject(LineObj5[63], 2168.78, 842.90, -8.73, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[64], 2146.52, 861.99, -8.65, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[65], 2163.58, 861.99, -8.65, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[66], 2185.17, 842.96, -8.73, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[67], 2395.40, 862.21, -8.68, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[68], 2417.13, 862.01, -8.68, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[69], 2428.87, 842.76, -8.7, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[70], 2445.13, 842.83, -8.7, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[71], 2641.51, 931.30, -8.71, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[72], 2652.94, 944.03, -8.71, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[73], 2663.31, 957.11, -8.71, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[74], 2718.02, 1234.94, -8.7, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[75], 2718.31, 1335.31, -8.61, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[76], 2718.21, 1351.45, -8.61, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[77], 2717.79, 1250.57, -8.7, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[78], 2698.77, 1330.69, -8.67, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[79], 2698.67, 1351.64, -8.67, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[80], 2699.16, 1580.05, -8.56, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[81], 2699.57, 1603.06, -8.56, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[82], 2717.11, 1613.67, -8.61, 20); //0.00, 0.00, 115.79);
	MoveDynamicObject(LineObj5[83], 2717.38, 1630.53, -8.61, 20); //0.00, 0.00, 115.79);
	return 1;
}

public ReadLine()
{
	new string[256];
	format(string,sizeof(string),"data/line.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "Line1" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[1] = strval( val ); }
		if( strcmp( key , "Line2" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[2] = strval( val ); }
		if( strcmp( key , "Line3" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[3] = strval( val ); }
		if( strcmp( key , "Line4" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[4] = strval( val ); }
		if( strcmp( key , "Line5" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[5] = strval( val ); }
	}
	fclose(UserFile);
	return 1;
}

public SaveLine()
{
	new string[256];
	format(string,sizeof(string),"data/line.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[32];
		format(var, 32, "Line1=%d\n",LineStat[1]);fwrite(hFile, var);
		format(var, 32, "Line2=%d\n",LineStat[2]);fwrite(hFile, var);
		format(var, 32, "Line3=%d\n",LineStat[3]);fwrite(hFile, var);
		format(var, 32, "Line4=%d\n",LineStat[4]);fwrite(hFile, var);
		format(var, 32, "Line5=%d\n",LineStat[5]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public PlayDeport(playerid, target)
{
	new string[256], dopper, dopper44;
	dopper44 = GetPVarInt(target, "PlMon");//запоминаем деньги игрока
	dopper = PlayerInfo[target][pAdmin];
	PlayerInfo[target][pAdmin] = 0;//отбираем админку
	PlayerInfo[target][pAdmshad] = 0;//убираем скрытость
	if(dopper >= 6)
	{
		new twenlim, restlim;
		Fmadmins(0, RealName[target], 0, twenlim, restlim);
	}
	if(dopper >= 5)
	{
		PlayerInfo[target][pAdmlive] = 0;//выключаем бессмертие
		SendClientMessage(target, COLOR_RED, " Бессмертие выключено.");
	}
	PlayerInfo[target][pPolice] = 0;//отбираем лвл полиции
	PlayerInfo[target][pDeport] = 1;//устанавливаем статус депортации
	printf(" *** Админ %s начал депортацию игрока %s .", RealName[playerid], RealName[target]);
	printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[target], target, dopper44);
	format(string, sizeof(string), " *** Админ %s начал делопроизводство по депортации игрока %s .", RealName[playerid], RealName[target]);
	SendClientMessageToAll(COLOR_RED, string);
	format(string, sizeof(string), " *** Вы приглашаетесь в админ-чат ( /a [текст] ) , на слушание Вашего дела.");
	SendClientMessage(target, COLOR_RED, string);
	format(string, sizeof(string), " *** Так же, в админ-чат, Вы можете подать апелляционную жалобу.");
	SendClientMessage(target, COLOR_RED, string);
	return 1;
}

public ResServ(per)
{
	new string[256];//выгрузка с 0-го по 15-й слот FS
	for(new j=0; j<16; j++)
	{
		if(strlen(relfs[j]))//если строка НЕ пустая, то:
		{
			strdel(string,0,256);//очистка переменной string
			strcat(string, "unloadfs ");//сборка RCON-команды выгрузки фильтрскрипта
			strcat(string, relfs[j]);
			SendRconCommand(string);//RCON-команда выгрузки фильтрскрипта
		}
	}

 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	if(mapiconid[i] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    	{
			DestroyDynamicMapIcon(mapiconid[i]);//удаление мап иконки наблюдения
		}
		mapiconid[i] = -600;//очистка ID мап иконки наблюдения
		if(IsPlayerConnected(i))
		{
//		    DisablePlayerCheckpoint(i);
			PlayKick(i);
//    		Kick(i);
		}
	}

	Delete3DTextLabel(fantxt);//удаляем 3D-текст с несущесвующим ИД

 	for(new i = 0; i < 8; i++)
	{
		DestroyVehicle(TrainID[i]);
	}
 	for(new i = 0; i < 88; i++)
	{
		DestroyDynamicObject(LineObj1[i]);
	}
 	for(new i = 0; i < 54; i++)
	{
		DestroyDynamicObject(LineObj2[i]);
	}
 	for(new i = 0; i < 62; i++)
	{
		DestroyDynamicObject(LineObj3[i]);
	}
 	for(new i = 0; i < 31; i++)
	{
		DestroyDynamicObject(LineObj4[i]);
	}
 	for(new i = 0; i < 84; i++)
	{
		DestroyDynamicObject(LineObj5[i]);
	}
#if (MOD11INS <= 3)
 	for(new i = 0; i < 43; i++)
	{
		DestroyObject(ObjGam[i]);
	}
#endif
#if (MOD11INS == 4)
 	for(new i = 0; i < 44; i++)
	{
		DestroyObject(ObjGam[i]);
	}
#endif

	TextDrawDestroy(Times);

	for(new i=0; i<11; i++)//drift bonus
	{
		TextDrawDestroy(leveldr[i]);
	}
//	TextDrawDestroy(Textdraw0);
//	TextDrawDestroy(Textdraw1);
	new Max = GetMaxPlayers();
	for(new i=0; i<Max; i++)
	{
		Delete3DTextLabel(Level3D[i]);
	}

	for(new i = 0; i < MAX_PLAYERS; i++)//speedometer
	{
	    PlayerTextDrawHide(i, VehicleSpeed[i]);
	    TextDrawHideForPlayer(i, KMH);
		TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
		PlayerTextDrawHide(i, HMS44[i]);
		PlayerTextDrawHide(i, dmkillTD[i]);//отключаем текстдравы DM-зон
		PlayerTextDrawHide(i, dmdeathTD[i]);
		if(IsPlayerConnected(i))
		{
			PlayerTextDrawDestroy(i, VehicleSpeed[i]);
			PlayerTextDrawDestroy(i, HMS44[i]);//удаляем текстдравы максимальной горизонтальной скорости
			PlayerTextDrawDestroy(i, dmkillTD[i]);//удаляем текстдравы DM-зон
			PlayerTextDrawDestroy(i, dmdeathTD[i]);
		}
		conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	}
	TextDrawDestroy(KMH);
	TextDrawDestroy(HMS22);//удаляем текстдрав максимальной горизонтальной скорости

//==============================================================================
//                              GarHouse
//==============================================================================
	new file[HOUSEFILE_LENGTH], tmp;
	Loop(i, MAX_PLAYERS)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
	        tmp = GetPVarInt(i, "LastHouseCP");
			format(file, sizeof(file), FILEPATH, tmp);
		    if(!strcmp(GetHouseOwner(tmp), RealName[i], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
			{
			    dini_IntSet(file, "QuitInHouse", 1);
			    #if defined GH_HOUSECARS
			    	SaveHouseCar(tmp);
		        #endif
			}
		}
	}
    UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
//==============================================================================
//                              End GarHouse
//==============================================================================

//----------------------------- Elevator - 1 -----------------------------------
	DestroyObject(Obj_Elevator);
	DestroyObject(Obj_ElevatorDoors[0]);
	DestroyObject(Obj_ElevatorDoors[1]);
	DestroyDynamic3DTextLabel(Label_Elevator);

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    DestroyDynamicObject(Obj_FloorDoors[i][0]);
		DestroyDynamicObject(Obj_FloorDoors[i][1]);
		DestroyDynamic3DTextLabel(Label_Floors[i]);
		DestroyDynamic3DTextLabel(Label2_Floors[i]);
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	DestroyObject(Obj_Elevator22);
	DestroyObject(Obj_ElevatorDoors22[0]);
	DestroyObject(Obj_ElevatorDoors22[1]);
	DestroyDynamic3DTextLabel(Label_Elevator22);

	for(new i; i < sizeof(Obj_FloorDoors22); i ++)
	{
	    DestroyDynamicObject(Obj_FloorDoors22[i][0]);
		DestroyDynamicObject(Obj_FloorDoors22[i][1]);
		DestroyDynamic3DTextLabel(Label_Floors22[i]);
		DestroyDynamic3DTextLabel(Label2_Floors22[i]);
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	UnloadBusSystem();//выгрузка системы бизнесов//BusSystem

#if (MOD22INS == 1)
	fileClose(ServerLogFile);//античит-2
#endif

#if (MOD22INS == 1 && MOD55INS == 1)
	fileClose(inLog);//закрываем сервер-лог
	fileClose(outLog);//закрываем резервную копию сервер-лога
#endif

	SetTimerEx("ResServ555", 1000, 0, "i", per);
	return 1;
}

forward ResServ555(per);
public ResServ555(per)
{
	conopen222 = 0;//отключение коннекта к серверу
#if (MOD90INS == 0)
	SetTimerEx("ResServ333", 5000, 0, "i", per);
#endif
#if (MOD90INS == 1)
	SetTimerEx("ResServ444", 10000, 0, "i", per);
#endif
	return 1;
}

#if (MOD90INS == 0)
	forward ResServ333(per);
	public ResServ333(per)
	{
		db_close(scrnet1db);//отключаем базу данных сетевого экрана 1 от сервера
		SetTimerEx("ResServ222", 1000, 0, "i", per);
		return 1;
	}
#endif

#if (MOD90INS == 1)
	forward ResServ444(per);
	public ResServ444(per)
	{
		db_close(scrnet1db);//отключаем базу данных сетевого экрана 1 от сервера
		db_close(playerdb);//отключаем базу данных аккаунтов игроков от сервера
		SetTimerEx("ResServ222", 1000, 0, "i", per);
		return 1;
	}
#endif

forward ResServ222(per);
public ResServ222(per)
{
// 	GameModeExit();
	SendRconCommand("gmx");
	return 1;
}

public SecSpa(playerid)
{
	LockSpawn[playerid] = 1;//блокировка заполнения слотов оружия и предметов
	SpawnPlayer(playerid);
	return 1;
}

forward SecSpaIsl(playerid);
public SecSpaIsl(playerid)
{
	if(admper1[playerid] != 600)//если полицейский в наблюдении, то:
	{
		TogglePlayerSpectating(playerid, 0);//запретить наблюдение для полицейского
		admper6[playerid] = 0;//обнуляем отметку о переключении наблюдения
	}
	LockSpawn[playerid] = 1;//блокировка заполнения слотов оружия и предметов
	SpawnPlayer(playerid);
	return 1;
}

forward SecSpaDop(playerid);
public SecSpaDop(playerid)
{
	SpawnPlayer(playerid);
	return 1;
}

public SecSpa22(playerid)//дополнительный спавн игрока (только координаты И -30 жизни)
{
	SetPlayerInterior(playerid, 0);//установка интерьера 0
	SetPlayerVirtualWorld(playerid, 0);//установка виртуального мира 0
	SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
	SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
	SetCameraBehindPlayer(playerid);//расположить камеру за игроком
	SetTimerEx("SecSpa777", 500, 0, "i", playerid);
	return 1;
}

forward SecSpa777(playerid);
public SecSpa777(playerid)
{
	new Float:hp;
	GetPlayerHealth(playerid,hp);
	SetPlayerHealth(playerid,hp-30);
	return 1;
}

stock ConvIP(ipadr[])
{
	new ipout[128];
	strdel(ipout, 0, 128);
	new dln, ind;
	dln = strlen(ipadr);
	ind = 0;
	for(new i = 0; i < dln; i++)
	{
		if(ipadr[i] >= 48 && ipadr[i] <= 57)
		{
			ipout[ind] = ipadr[i];
			ind++;
		}
		if(ipadr[i] == '.')
		{
			ipout[ind] = '_';
			ind++;
		}
	}
	return ipout;
}

public PlayBanList(playerid, reason[], idbanf)
{
	new string[256], dataip[128];
	GetPlayerIp(playerid, dataip, sizeof(dataip));
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты

#if (MOD90INS == 0)
	format(string,sizeof(string),"players/%s.ini",RealName[playerid]);
	if(!fexist(string))//если аккаунт игрока НЕ существует, то:
	{//создаём аккаунт игрока:
		new datak[64], datar[64], datap[64];
		strdel(datak, 0, 64);
		strcat(datak, "111");
		format(datar, 256, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
		strdel(datap, 0, 64);
		strcat(datap, "---");
		new File: hFile44 = fopen(string, io_write);
		if (hFile44)
		{
			new var[128];
			format(var, 128, "Key=%s\n",datak);fwrite(hFile44, var);
			format(var, 128, "TDReg=%s\n",datar);fwrite(hFile44, var);
			format(var, 128, "DEndConD=%d\n",EndConD);fwrite(hFile44, var);
			format(var, 128, "DEndConM=%d\n",EndConM);fwrite(hFile44, var);
			format(var, 128, "DEndConY=%d\n",EndConY);fwrite(hFile44, var);
			format(var, 128, "IPAdr=%s\n",dataip);fwrite(hFile44, var);
			format(var, 128, "MinLog=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "AdminLevel=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "AdminShadow=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "AdminLive=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "AdminScanCom=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Registered=%d\n",1);fwrite(hFile44, var);
			format(var, 128, "Prison=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Prisonsec=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Muted=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Mutedsec=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Money=%d\n",1000);fwrite(hFile44, var);
			format(var, 128, "Kills=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Deaths=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Police=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Deport=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "RecPM=%d\n",1);fwrite(hFile44, var);
			format(var, 128, "Wanted=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Lock=%d\n",1);fwrite(hFile44, var);
			format(var, 128, "Gang=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "GangLvl=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Pass_data1=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_inout1=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_ver1=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_count1=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Pass_data2=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_inout2=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_ver2=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_count2=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Pass_data3=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_inout3=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_ver3=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_count3=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "Pass_data4=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_inout4=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_ver4=%s\n",datap);fwrite(hFile44, var);
			format(var, 128, "Pass_count4=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "PassMode=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "PassDel=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "PassLock=%d\n",0);fwrite(hFile44, var);
			format(var, 128, "PassError=%d\n",0);fwrite(hFile44, var);
			fclose(hFile44);
		}
	}
#endif
#if (MOD90INS == 1)
	new strdln[4000];
	new mgrakk = 0;
	format(string,sizeof(string),"players/%s.ini",RealName[playerid]);
	if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
	{
		mgrakk = 1;
		new File: UserFile = fopen(string, io_read);//чтение аккаунта
		new key[ 256 ] , val[ 256 ];
		new Data[ 256 ];
		while ( fread( UserFile , Data , sizeof( Data ) ) )
		{
			key = ini_GetKey( Data );
			if( strcmp( key , "Key" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dKey], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dTDReg], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "DEndConD" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConD] = strval( val ); }
			if( strcmp( key , "DEndConM" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConM] = strval( val ); }
			if( strcmp( key , "DEndConY" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConY] = strval( val ); }
			if( strcmp( key , "IPAdr" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dIPAdr], val, 0, strlen(val)-1, 128); }
			if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMinlog] = strval( val ); }
		    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmin] = strval( val ); }
		    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmshad] = strval( val ); }
		    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmlive] = strval( val ); }
			if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmscancom] = strval( val ); }
			if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dReg] = strval( val ); }
			if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPrison] = strval( val ); }
			if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPrisonsec] = strval( val ); }
			if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMuted] = strval( val ); }
			if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMutedsec] = strval( val ); }
			if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMoney] = strval( val ); }
			if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dKills] = strval( val ); }
			if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dDeaths] = strval( val ); }
			if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPolice] = strval( val ); }
			if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dDeport] = strval( val ); }
			if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dRecPM] = strval( val ); }
			if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dWanted] = strval( val ); }
			if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dLock] = strval( val ); }
			if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGang] = strval( val ); }
			if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGangLvl] = strval( val ); }
			if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data1], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout1], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver1], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count1] = strval( val ); }
			if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data2], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout2], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver2], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count2] = strval( val ); }
			if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data3], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout3], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver3], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count3] = strval( val ); }
			if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data4], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout4], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver4], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count4] = strval( val ); }
			if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassMode] = strval( val ); }
			if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassDel] = strval( val ); }
			if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassLock] = strval( val ); }
			if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassError] = strval( val ); }
		}
		fclose(UserFile);
	}
	else//иначе: (если аккаунт зарегистрирован в SQLite)
	{
		format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
		querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
		if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
		{//если число строк = 0 (такого аккаунта в БД нет), то - создаём аккаунт игрока:
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
			new datak[64], datar[64], datap[64];
			strdel(datak, 0, 64);
			strcat(datak, "111");
			format(datar, 256, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
			strdel(datap, 0, 64);
			strcat(datap, "---");

			format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
			format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,AdminScanCom,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,", strdln);
			format(strdln, sizeof(strdln), "%sPolice,Deport,RecPM,Wanted,Lock,Gang,GangLvl,Pass_data1,Pass_inout1,Pass_ver1,Pass_count1,", strdln);
			format(strdln, sizeof(strdln), "%sPass_data2,Pass_inout2,Pass_ver2,Pass_count2,Pass_data3,Pass_inout3,Pass_ver3,Pass_count3,", strdln);
			format(strdln, sizeof(strdln), "%sPass_data4,Pass_inout4,Pass_ver4,Pass_count4,PassMode,PassDel,PassLock,PassError) ", strdln);
			format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],datak,datar);//Name,Key,TDReg
			format(strdln, sizeof(strdln), "%s%d,%d,%d,'%s',", strdln, EndConD,EndConM,EndConY,dataip);//DEndConD,DEndConM,DEndConY,IPAdr
			format(strdln, sizeof(strdln), "%s0,0,0,", strdln);//MinLog,AdminLevel,AdminShadow
			format(strdln, sizeof(strdln), "%s0,0,1,", strdln);//AdminLive,AdminScanCom,Registered
			format(strdln, sizeof(strdln), "%s0,0,0,", strdln);//Prison,Prisonsec,Muted
			format(strdln, sizeof(strdln), "%s0,1000,0,", strdln);//Mutedsec,Money,Kills
			format(strdln, sizeof(strdln), "%s0,0,0,", strdln);//Deaths,Police,Deport
			format(strdln, sizeof(strdln), "%s1,0,1,", strdln);//RecPM,Wanted,Lock
			format(strdln, sizeof(strdln), "%s0,0,'%s',", strdln, datap);//Gang,GangLvl,Pass_data1
			format(strdln, sizeof(strdln), "%s'%s','%s',0,", strdln, datap,datap);//Pass_inout1,Pass_ver1,Pass_count1
			format(strdln, sizeof(strdln), "%s'%s','%s','%s',", strdln, datap,datap,datap);//Pass_data2,Pass_inout2,Pass_ver2
			format(strdln, sizeof(strdln), "%s0,'%s','%s',", strdln, datap,datap);//Pass_count2,Pass_data3,Pass_inout3
			format(strdln, sizeof(strdln), "%s'%s',0,'%s',", strdln, datap,datap);//Pass_ver3,Pass_count3,Pass_data4
			format(strdln, sizeof(strdln), "%s'%s','%s',0,", strdln, datap,datap);//Pass_inout4,Pass_ver4,Pass_count4
			format(strdln, sizeof(strdln), "%s0,0,0,0)", strdln);//PassMode,PassDel,PassLock,PassError
			db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

		}
	}
	if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
	{
		new ssss[128];
		format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", RealName[playerid]);//миграция аккаунта в БД, создаём запрос БД
		db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

		admData[playerid][dLock] = 1;//блокировка аккаунта при миграции

		format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
		format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,AdminScanCom,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,", strdln);
		format(strdln, sizeof(strdln), "%sPolice,Deport,RecPM,Wanted,Lock,Gang,GangLvl,Pass_data1,Pass_inout1,Pass_ver1,Pass_count1,", strdln);
		format(strdln, sizeof(strdln), "%sPass_data2,Pass_inout2,Pass_ver2,Pass_count2,Pass_data3,Pass_inout3,Pass_ver3,Pass_count3,", strdln);
		format(strdln, sizeof(strdln), "%sPass_data4,Pass_inout4,Pass_ver4,Pass_count4,PassMode,PassDel,PassLock,PassError) ", strdln);
		format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],admData[playerid][dKey],admData[playerid][dTDReg]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dEndConD],admData[playerid][dEndConM],admData[playerid][dEndConY]);
		format(strdln, sizeof(strdln), "%s'%s',%d,%d,", strdln, admData[playerid][dIPAdr],admData[playerid][dMinlog],admData[playerid][dAdmin]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dAdmshad],admData[playerid][dAdmlive],admData[playerid][dAdmscancom]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dReg],admData[playerid][dPrison],admData[playerid][dPrisonsec]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dMuted],admData[playerid][dMutedsec],admData[playerid][dMoney]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dKills],admData[playerid][dDeaths],admData[playerid][dPolice]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dDeport],admData[playerid][dRecPM],admData[playerid][dWanted]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dLock],admData[playerid][dGang],admData[playerid][dGangLvl]);
		format(strdln, sizeof(strdln), "%s'%s','%s','%s',", strdln, admData[playerid][dPass_data1],admData[playerid][dPass_inout1],admData[playerid][dPass_ver1]);
		format(strdln, sizeof(strdln), "%s%d,'%s','%s',", strdln, admData[playerid][dPass_count1],admData[playerid][dPass_data2],admData[playerid][dPass_inout2]);
		format(strdln, sizeof(strdln), "%s'%s',%d,'%s',", strdln, admData[playerid][dPass_ver2],admData[playerid][dPass_count2],admData[playerid][dPass_data3]);
		format(strdln, sizeof(strdln), "%s'%s','%s',%d,", strdln, admData[playerid][dPass_inout3],admData[playerid][dPass_ver3],admData[playerid][dPass_count3]);
		format(strdln, sizeof(strdln), "%s'%s','%s','%s',", strdln, admData[playerid][dPass_data4],admData[playerid][dPass_inout4],admData[playerid][dPass_ver4]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dPass_count4],admData[playerid][dPassMode],admData[playerid][dPassDel]);
		format(strdln, sizeof(strdln), "%s%d,%d)", strdln, admData[playerid][dPassLock],admData[playerid][dPassError]);
		db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

		if(fexist(string))
		{
			fremove(string);//удаляем аккаунт из fopen
		}
	}
#endif

	new stringdop[256];
	format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - %s",dataip,timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
	format(string,sizeof(string),"banlist/players/%s.ini",RealName[playerid]);
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[256];
		format(var, 256, "Data=%s\n",stringdop);fwrite(hFile, var);
		format(var, 256, "IDFile=%d\n",idbanf);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public IPBanList(ipadr[], reason[])
{
	new ip333[128];
	ip333 = ConvIP(ipadr);
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	new stringdop[256];
	format(stringdop,256,"[%02d:%02d | %02d/%02d/%04d] - %s",timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
	new string[256];
	format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[256];
		format(var, 256, "Data=%s\n",stringdop);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public PlayKickTimer(admlvl, target)
{
	new string[256];
	if(!IsPlayerConnected(target) || strcmp(NameTarget[target],RealName[target],false) != 0)
	{
		format(string, sizeof(string), "Russian_Drift: Кик игрока %s был отменён , по причине выхода последнего из игры.", NameTarget[target]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	if(admlvl <= 3 && PlayerInfo[target][pAdmin] >= 1)
	{
		format(string,256," *** Админ %s попытался кикнуть админа %s",NameAdmin[target],NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_GREEN, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	format(string, 256, " *** Админ %s кикнул игрока %s , причина: %s", NameAdmin[target], NameTarget[target], ReasonTarget[target]);
	print(string);
	SendClientMessageToAll(COLOR_RED, string);

	NameClick[target] = 0;//очистка признака бана или кика по таймеру
	strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
	strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
	strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
	SetTimerEx("PlayKick", 300, 0, "i", target);
	return 1;
}

public PlayBanTimer(admlvl, target)
{
	new string[256];
	if(!IsPlayerConnected(target) || strcmp(NameTarget[target],RealName[target],false) != 0)
	{
		format(string, sizeof(string), "Russian_Drift: Бан игрока %s был отменён , по причине выхода последнего из игры.", NameTarget[target]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	if(admlvl <= 3 && PlayerInfo[target][pAdmin] >= 1)
	{
		format(string,256," *** Админ %s попытался забанить админа %s",NameAdmin[target],NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_GREEN, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	new ip[128];
	GetPlayerIp(target, ip, sizeof(ip));
	format(string, 256, " *** Админ %s забанил игрока %s , причина: %s", NameAdmin[target], NameTarget[target], ReasonTarget[target]);
	print(string);
	SendClientMessageToAll(COLOR_RED, string);
	format(string, 256 ," *** IP игрока %s : [%s]", NameTarget[target], ip);
	print(string);
	SendAdminMessage(COLOR_RED, string);

	if(gPlayerLogged[target] == 1)//если игрок успел залогиниться, то:
	{
		PlayerInfo[target][pLock] = 1;//блокируем аккаунт игрока
		format(string,sizeof(string),"Russian_Drift: Бан до логирования: игрок [%s] успел залогиниться, блокировка аккаунта игрока !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	else//если игрок ещё НЕ залогинился, то:
	{
		format(string,sizeof(string),"Russian_Drift: Бан до логирования: аккаунт игрока [%s] НЕ был изменён !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	new soob[256];//переменная для метки админа
	if(!strlen(ReasonTarget[target]))//делаем отметку, если причина не указана
	{
		format(ReasonTarget[target], 256, "* Причина не указана.");
	}
	format(soob, 256, " (бан до логирования) Админ: [ %s ]", NameAdmin[target]);//формируем метку админа
	strdel(fbanreason[target], 0, 256);//очистка причины бана
	strcat(fbanreason[target], ReasonTarget[target]);//добавляем в символьную переменную причину
	strcat(fbanreason[target], soob);//добавляем в символьную переменную метку админа
	NameClick[target] = 0;//очистка признака бана или кика по таймеру
	strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
	strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
	strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
	PlayBanList(target, fbanreason[target], 0);
	SetTimerEx("PlayBan", 300, 0, "i", target);
	return 1;
}

public TMPlayBanTimer(admlvl, target, dayban)
{
	new string[256];
	if(!IsPlayerConnected(target) || strcmp(NameTarget[target],RealName[target],false) != 0)
	{
		format(string, sizeof(string), "Russian_Drift: Бан игрока %s был отменён , по причине выхода последнего из игры.", NameTarget[target]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	if(admlvl <= 3 && PlayerInfo[target][pAdmin] >= 1)
	{
		format(string,256," *** Админ %s попытался забанить админа %s",NameAdmin[target],NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_GREEN, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	new ip[128];
	GetPlayerIp(target, ip, sizeof(ip));
	format(string, 256, " *** Админ %s забанил игрока %s на %d суток , причина: %s", NameAdmin[target], NameTarget[target], dayban, ReasonTarget[target]);
	print(string);
	SendClientMessageToAll(COLOR_RED, string);
	format(string, 256 ," *** IP игрока %s : [%s]", NameTarget[target], ip);
	print(string);
	SendAdminMessage(COLOR_RED, string);

	if(gPlayerLogged[target] == 1)//если игрок успел залогиниться, то:
	{
		PlayerInfo[target][pLock] = 1;//блокируем аккаунт игрока
		format(string,sizeof(string),"Russian_Drift: Бан до логирования: игрок [%s] успел залогиниться, блокировка аккаунта игрока !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	else//если игрок ещё НЕ залогинился, то:
	{
		format(string,sizeof(string),"Russian_Drift: Бан до логирования: аккаунт игрока [%s] НЕ был изменён !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}

	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты

	new csut22, string999[256];
	csut22 = ProcUnban(dayban);//вычисление дня разбана
	new doplll, doplll22, doplll33;//запись ид-файла временного бана
	doplll = 1;//переменная цикла
	doplll22 = 0;//маркерная переменная
	while(doplll < 1001)//создаём неполный цикл
	{
		format(string999,sizeof(string999),"bantime/%d.ini",doplll);
		if(!fexist(string999))//если файла с именем ид-переменной (doplll) нету, то:
		{//создаём такой файл
			doplll22 = 1;//устанавливаем маркерную переменную
			new File: hFile55 = fopen(string999, io_write);//запись файла
			if (hFile55)
			{
				new var[64];
				format(var, 64, "Login=%s\n",NameTarget[target]);fwrite(hFile55, var);
				format(var, 64, "IPAdr=%s\n",ip);fwrite(hFile55, var);
				format(var, 64, "Dataunban=%d\n",csut22);fwrite(hFile55, var);
				fclose(hFile55);
			}
			printf("[BanTime] Временному бану игрока [%s] был присвоен ид [%d] .", NameTarget[target], doplll);
			break;//завершаем неполный цикл
		}
		doplll++;//инкрементируем переменную цикла, и продолжаем цикл
	}
	doplll33 = doplll;//подготовка ид-файла к записи в бан-лист
	if(doplll22 == 0)//если после окончания цикла, маркерная переменная НЕ была установлена, то:
	{//передаём админам сообщение о переполнении таблицы временных банов
		doplll33 = 0;//ид-файла = 0 (файл НЕ создан)
		print("[BanTime] Превышен лимит файлов в таблице временных банов !!!");
		SendAdminMessage(COLOR_RED, " * Превышен лимит файлов в таблице временных банов !!!");
		print("[BanTime] Временный бан НЕ был сохранён !!!");
		SendAdminMessage(COLOR_RED, " * Временный бан НЕ был сохранён !!!");
	}

	new soob[256];//переменная для метки админа
	if(!strlen(ReasonTarget[target]))//делаем отметку, если причина не указана
	{
		format(ReasonTarget[target], 256, "* Причина не указана.");
	}
	format(soob, 256, " (на %d суток , бан до логирования) Админ: [ %s ]", dayban, NameAdmin[target]);//формируем метку админа
	strdel(fbanreason[target], 0, 256);//очистка причины бана
	strcat(fbanreason[target], ReasonTarget[target]);//добавляем в символьную переменную причину
	strcat(fbanreason[target], soob);//добавляем в символьную переменную метку админа
	NameClick[target] = 0;//очистка признака бана или кика по таймеру
	strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
	strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
	strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
	PlayBanList(target, fbanreason[target], doplll33);
	SetTimerEx("PlayBan", 300, 0, "i", target);
	return 1;
}

public ProcUnban(per11)
{
	new per22;
	per22 = per11 + timecor[4];
	if(per22 > 28 && timecor[7] == 0 && timecor[3] == 2)
	{
		per22 = per22 - 28;
	}
	if(per22 > 29 && timecor[7] == 1 && timecor[3] == 2)
	{
		per22 = per22 - 29;
	}
	if(per22 > 30 && (timecor[3] == 4 || timecor[3] == 6 || timecor[3] == 9 || timecor[3] == 11))
	{
		per22 = per22 - 30;
	}
	if(per22 > 31 && (timecor[3] == 1 || timecor[3] == 3 || timecor[3] == 5 || timecor[3] == 7 || timecor[3] == 8 || timecor[3] == 10 || timecor[3] == 12))
	{
		per22 = per22 - 31;
	}
	return per22;
}

public AutoUnban()
{
	print("+++ [BanTime] Начало авто-разбанов +++");
	new string999[256],akk[256],ip22[256],idfile;
	for(new i = 1; i < 1001; i++)
	{//чтение ид-файлов временных банов
		format(string999,sizeof(string999),"bantime/%d.ini",i);
		if(fexist(string999))//если файл с ид-именем существует, то:
		{//читаем этот файл
			new File: UserFile44 = fopen(string999, io_read);
			new key44[ 256 ] , val44[ 256 ];
			new Data44[ 256 ];
			while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
			{
				key44 = ini_GetKey( Data44 );
				if( strcmp( key44 , "Login" , true ) == 0 ) { akk = ini_GetValue( Data44 ); }
				if( strcmp( key44 , "IPAdr" , true ) == 0 ) { ip22 = ini_GetValue( Data44 ); }
				if( strcmp( key44 , "Dataunban" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
			}
			fclose(UserFile44);
			strdel(akk, strlen(akk)-1, strlen(akk));//корректировка логина игрока
			strdel(ip22, strlen(ip22)-1, strlen(ip22));//корректировка IP-адреса
			if(idfile == timecor[4])//если число разбана = числу на сервере, то:
			{
    			new ssss[256],datacon,string222[256],ip333[128];
				datacon = 0;//переменная проверки блокировки аккаунта
				strdel(dAccName[MAX_PLAYERS - 1], 0, 64);
				strcat(dAccName[MAX_PLAYERS - 1], akk);
				if(AccDataLoadUn(MAX_PLAYERS - 1) == 0)//чтение аккаунта
				{//если аккаунта игрока не существует, то:
					printf("+++ [BanTime] Аккаунт игрока [%s] не сущесвует !!! +++", akk);
					strdel(ssss, 0, 256);//сборка RCON-команды разбана
					strcat(ssss, "unbanip ");
					strcat(ssss, ip22);
					SendRconCommand(ssss);//RCON-команда разбана
					printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", ip22);

					ip333 = ConvIP(ip22);
					format(string222,sizeof(string222),"bantime/%d.ini",i);
					if(fexist(string222))
					{
						fremove(string222);//удаление ид-файла временного бана
						printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
					}
					format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
					if(fexist(string222))
					{
						fremove(string222);//удаляем аккаунт из бан-листа
						printf("+++ [BanTime] Аккаунт игрока [%s] был удалён из бан-листа +++", akk);
					}
					format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string222))
					{
						fremove(string222);//удаляем IP-адрес из бан-листа
						printf("+++ [BanTime] IP-адрес [%s] был удалён из бан-листа +++", ip22);
					}
				}
				else//если аккаунт игрока существует, то:
				{
					if(admData[MAX_PLAYERS - 1][dLock] == 1 && admData[MAX_PLAYERS - 1][dDeport] == 1)//если аккаунт заблокирован, и у игорока статус депортации, то:
					{
				    	admData[MAX_PLAYERS - 1][dDeport] = 0;//убрать статус депортации
					}
					if(admData[MAX_PLAYERS - 1][dLock] == 0)//если аккаунт НЕ был заблокирован, то:
					{
				    	datacon = 1;//записываем в переменную проверки блокировки аккаунта 1
					}
					admData[MAX_PLAYERS - 1][dLock] = 0;//сброс блокировки аккаунта
					strdel(ssss, 0, 256);//сборка RCON-команды разбана
					strcat(ssss, "unbanip ");
					strcat(ssss, admData[MAX_PLAYERS - 1][dIPAdr]);
					SendRconCommand(ssss);//RCON-команда разбана
#if (MOD90INS == 0)
					strdel(dAccName[MAX_PLAYERS - 1], 0, 64);
					strcat(dAccName[MAX_PLAYERS - 1], akk);
					AccDataSaveFo(MAX_PLAYERS - 1);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
					new strdln[1000];
					format(strdln, sizeof(strdln), "UPDATE Players SET Deport = %d,Lock = %d ",admData[MAX_PLAYERS - 1][dDeport],admData[MAX_PLAYERS - 1][dLock]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
					if(datacon == 1)//если переменная проверки блокировки аккаунта = 1, то:
					{
						printf("+++ [BanTime] Аккаунт игрока [%s] не был заблокирован +++", akk);
						printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", admData[MAX_PLAYERS - 1][dIPAdr]);
					}
					else//иначе:
					{
						printf("+++ [BanTime] Аккаунт игрока [%s] был разбанен ( IP: [%s] ) +++", akk, admData[MAX_PLAYERS - 1][dIPAdr]);
					}

					ip333 = ConvIP(admData[MAX_PLAYERS - 1][dIPAdr]);
					format(string222,sizeof(string222),"bantime/%d.ini",i);
					if(fexist(string222))
					{
						fremove(string222);//удаление ид-файла временного бана
						printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
					}
					format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
					if(fexist(string222))
					{
						fremove(string222);//удаляем аккаунт из бан-листа
						printf("+++ [BanTime] Аккаунт игрока [%s] был удалён из бан-листа +++", akk);
					}
					format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string222))
					{
						fremove(string222);//удаляем IP-адрес из бан-листа
						printf("+++ [BanTime] IP-адрес [%s] был удалён из бан-листа +++", admData[MAX_PLAYERS - 1][dIPAdr]);
					}
				}
			}
		}
	}
	print("+++ [BanTime] Авто-разбаны завершены +++");
	SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
	return 1;
}

public DopAdmtp(playerid, target)
{
	new Float:PosX, Float:PosY, Float:PosZ;
	EnterTick33[target] = 1;//обход антикрашера - 3
	tpdrift[target] = 1;
	SetPlayerInterior(target, GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(target, GetPlayerVirtualWorld(playerid));
	GetPlayerPos(playerid, PosX, PosY, PosZ);
	SetPlayerPos(target, PosX, PosY+1, PosZ+1);
	return 1;
}

public DopPlaytp(playerid, target)
{
	new Float:PosX, Float:PosY, Float:PosZ;
	EnterTick33[target] = 1;//обход антикрашера - 3
	PlayCRTP[target] = 1;//блокировка контроля координат
	tpdrift[target] = 1;
	SetPlayerInterior(target, GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(target, GetPlayerVirtualWorld(playerid));
	GetPlayerPos(playerid, PosX, PosY, PosZ);
	SetPlayerPos(target, PosX, PosY+1, PosZ+1);
	return 1;
}

public PlayKick(playerid)
{
	Kick(playerid);
	return 1;
}

public PlayBan(playerid)
{
	BanEx(playerid, fbanreason[playerid]);
	return 1;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

public PolSec()//вспомогательный таймер 450 мс
{
	new string[256];
	new Float:PosX, Float:PosY, Float:PosZ;
#if (MOD22INS == 1)
	new pos, str333[128], strarr[2][30];//античит-2
	fileSeek(ServerLogFile, -128, seek_End);
	while(fileRead(ServerLogFile, str333))
	{
		//читаем последнюю строку
	}
	pos = strfind(str333, "BAD RCON ATTEMPT BY: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		if(ParaAntCh1 == 2)
		{
		    new str444[128];
			strcat(str444, str333[pos+21]);
			if(strcmp(AntCh1, str444, false) == 0)
			{
				ParaAntCh1 = 10;
				print("[AntiCheatSys] ---------- 3.3 ----------");
				new dopper = -600;
				for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{//определение ид игрока по его IP
						if(strcmp(AntCh1, PlayerInfo[i][pIPAdr], true) == 0)
						{
							dopper = i;//ид игрока найден
						}
					}
				}
				if(dopper == -600)//если ид игрока НЕ найден, то:
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP [%s] был забанен за чит (3), мешающий работе сервера !",AntCh1);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					new reason333[128];
					format(reason333,sizeof(reason333),"* Чит (3), мешающий работе сервера.");
					IPBanList(AntCh1, reason333);
				}
				else//если ид игрока был найден, то:
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (3), мешающий работе сервера !",RealName[dopper],dopper);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					strdel(fbanreason[dopper], 0, 256);//очистка причины бана
					strcat(fbanreason[dopper], "* Чит (3), мешающий работе сервера.");
					PlayBanList(dopper, fbanreason[dopper], 0);
					SetTimerEx("PlayKick", 300, 0, "i", dopper);
				}
				new ispban[256];
				strcat(ispban, "banip ");//сборка RCON-команды бана
				strcat(ispban, AntCh1);
				SendRconCommand(ispban);//RCON-команда бана
				SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			}
			else
			{
				ParaAntCh1 = 10;
			}
		}
		if(ParaAntCh1 == 1)
		{
		    new str444[128];
			strcat(str444, str333[pos+21]);
			if(strcmp(AntCh1, str444, false) == 0)
			{
				ParaAntCh1 = 2;
				print("[AntiCheatSys] ---------- 3.2 ----------");
			}
			else
			{
				ParaAntCh1 = 10;
			}
		}
		if(ParaAntCh1 == 0)
		{
			strdel(AntCh1, 0, 128);
			strcat(AntCh1, str333[pos+21]);
			ParaAntCh1 = 1;
			print("[AntiCheatSys] ---------- 3.1 ----------");
		}
		if(ParaAntCh1 == 10)
		{
			ParaAntCh1 = 0;
		}
	}
	else
	{
		ParaAntCh1 = 0;
	}
	pos = strfind(str333, "Invalid client connecting from ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		if(ParaAntCh2 == 2)
		{
		    new str444[128];
			strcat(str444, str333[pos+31]);
			if(strcmp(AntCh2, str444, false) == 0)
			{
				ParaAntCh2 = 10;
				print("[AntiCheatSys] ---------- 4.3 ----------");
				new dopper = -600;
				for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{//определение ид игрока по его IP
						if(strcmp(AntCh2, PlayerInfo[i][pIPAdr], true) == 0)
						{
							dopper = i;//ид игрока найден
						}
					}
				}
				if(dopper == -600)//если ид игрока НЕ найден, то:
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP [%s] был забанен за чит (4), мешающий работе сервера !",AntCh2);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					new reason333[128];
					format(reason333,sizeof(reason333),"* Чит (4), мешающий работе сервера.");
					IPBanList(AntCh2, reason333);
				}
				else//если ид игрока был найден, то:
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (4), мешающий работе сервера !",RealName[dopper],dopper);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					strdel(fbanreason[dopper], 0, 256);//очистка причины бана
					strcat(fbanreason[dopper], "* Чит (4), мешающий работе сервера.");
					PlayBanList(dopper, fbanreason[dopper], 0);
					SetTimerEx("PlayKick", 300, 0, "i", dopper);
				}
				new ispban[256];
				strcat(ispban, "banip ");//сборка RCON-команды бана
				strcat(ispban, AntCh2);
				SendRconCommand(ispban);//RCON-команда бана
				SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			}
			else
			{
				ParaAntCh2 = 10;
			}
		}
		if(ParaAntCh2 == 1)
		{
		    new str444[128];
			strcat(str444, str333[pos+31]);
			if(strcmp(AntCh2, str444, false) == 0)
			{
				ParaAntCh2 = 2;
				print("[AntiCheatSys] ---------- 4.2 ----------");
			}
			else
			{
				ParaAntCh2 = 10;
			}
		}
		if(ParaAntCh2 == 0)
		{
			strdel(AntCh2, 0, 128);
			strcat(AntCh2, str333[pos+31]);
			ParaAntCh2 = 1;
			print("[AntiCheatSys] ---------- 4.1 ----------");
		}
		if(ParaAntCh2 == 10)
		{
			ParaAntCh2 = 0;
		}
	}
	else
	{
		ParaAntCh2 = 0;
	}
	pos = strfind(str333, "Packet was modified, sent by id: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh4 = 0;
		if(ParaAntCh3 == 2)
		{
			split(str333[pos+33], strarr, ',');
			new zn444 = strlen(strarr[0]);
			split(str333[pos+39+zn444], strarr, ':');
		    new str444[128];
			strcat(str444, strarr[0]);
			if(strcmp(AntCh3, str444, false) == 0)
			{
				ParaAntCh3 = 10;
				print("[AntiCheatSys] ---------- 5.3 ----------");
				new dopper = -600;
				for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{//определение ид игрока по его IP
						if(strcmp(AntCh3, PlayerInfo[i][pIPAdr], true) == 0)
						{
							dopper = i;//ид игрока найден
						}
					}
				}
				if(dopper == -600)//если ид игрока НЕ найден, то:
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP [%s] был забанен за чит (5), мешающий работе сервера !",AntCh3);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					new reason333[128];
					format(reason333,sizeof(reason333),"* Чит (5), мешающий работе сервера.");
					IPBanList(AntCh3, reason333);
				}
				else//если ид игрока был найден, то:
				{
					format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (5), мешающий работе сервера !",RealName[dopper],dopper);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW,string);
					strdel(fbanreason[dopper], 0, 256);//очистка причины бана
					strcat(fbanreason[dopper], "* Чит (5), мешающий работе сервера.");
					PlayBanList(dopper, fbanreason[dopper], 0);
					SetTimerEx("PlayKick", 300, 0, "i", dopper);
				}
				new ispban[256];
				strcat(ispban, "banip ");//сборка RCON-команды бана
				strcat(ispban, AntCh3);
				SendRconCommand(ispban);//RCON-команда бана
				SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			}
			else
			{
				ParaAntCh3 = 10;
			}
		}
		if(ParaAntCh3 == 1)
		{
			split(str333[pos+33], strarr, ',');
			new zn444 = strlen(strarr[0]);
			split(str333[pos+39+zn444], strarr, ':');
		    new str444[128];
			strcat(str444, strarr[0]);
			if(strcmp(AntCh3, str444, false) == 0)
			{
				ParaAntCh3 = 2;
				print("[AntiCheatSys] ---------- 5.2 ----------");
			}
			else
			{
				ParaAntCh3 = 10;
			}
		}
		if(ParaAntCh3 == 0)
		{
			split(str333[pos+33], strarr, ',');
			new zn444 = strlen(strarr[0]);
			split(str333[pos+39+zn444], strarr, ':');
			strdel(AntCh3, 0, 128);
			strcat(AntCh3, strarr[0]);
			ParaAntCh3 = 1;
			print("[AntiCheatSys] ---------- 5.1 ----------");
		}
		if(ParaAntCh3 == 10)
		{
			ParaAntCh3 = 0;
		}
	}
	else
	{
		ParaAntCh3 = 0;
	}
	pos = strfind(str333, "Warning: PlayerDialogResponse PlayerId: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		if(ParaAntCh4 == 2)
		{
			new idx = 0;
			new zn444 = strval(strtok(str333[pos+39], idx));
			if(AntCh4 == zn444)
			{
				ParaAntCh4 = 10;
				print("[AntiCheatSys] ---------- 6.3 ----------");
				exitcheat[AntCh4] = 1;//игрок - чит
				gPlayerLogged[AntCh4] = 1;//разрешить запись аккаунта

				ResetPlayerWeapons(AntCh4);//отбираем оружие и предметы

				format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (6), мешающий работе сервера !",RealName[AntCh4],AntCh4);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW,string);
				strdel(fbanreason[AntCh4], 0, 256);//очистка причины бана
				strcat(fbanreason[AntCh4], "* Чит (6), мешающий работе сервера.");
				PlayBanList(AntCh4, fbanreason[AntCh4], 0);
				SetTimerEx("PlayBan", 300, 0, "i", AntCh4);
			}
			else
			{
				ParaAntCh4 = 10;
			}
		}
		if(ParaAntCh4 == 1)
		{
			new idx = 0;
			new zn444 = strval(strtok(str333[pos+39], idx));
			if(AntCh4 == zn444)
			{
				ParaAntCh4 = 2;
				print("[AntiCheatSys] ---------- 6.2 ----------");
			}
			else
			{
				ParaAntCh4 = 10;
			}
		}
		if(ParaAntCh4 == 0)
		{
			new idx = 0;
			AntCh4 = strval(strtok(str333[pos+39], idx));
			ParaAntCh4 = 1;
			print("[AntiCheatSys] ---------- 6.1 ----------");
		}
		if(ParaAntCh4 == 10)
		{
			ParaAntCh4 = 0;
		}
	}
	else
	{
		ParaAntCh4 = 0;
	}
	pos = strfind(str333, "Warning: PlayerDialogResponse crash exploit from PlayerId: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		print("[AntiCheatSys] ---------- 7 ----------");
		new idx = 0;
		new zn444 = strval(strtok(str333[pos+59], idx));
		exitcheat[zn444] = 1;//игрок - чит
		gPlayerLogged[zn444] = 1;//разрешить запись аккаунта

		ResetPlayerWeapons(zn444);//отбираем оружие и предметы

		format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (7), мешающий работе сервера !",RealName[zn444],zn444);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		strdel(fbanreason[zn444], 0, 256);//очистка причины бана
		strcat(fbanreason[zn444], "* Чит (7), мешающий работе сервера.");
		PlayBanList(zn444, fbanreason[zn444], 0);
		SetTimerEx("PlayBan", 300, 0, "i", zn444);
	}
	pos = strfind(str333, "Warning: client exceeded 'messageholelimit' ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		split(str333[pos+44], strarr, ')');
		new zn444 = strlen(strarr[0]);
		split(str333[pos+46+zn444], strarr, ':');
		new str444[128];
		strcat(str444, strarr[0]);
		print("[AntiCheatSys] ---------- 8 ----------");
		new dopper = -600;
		for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{//определение ид игрока по его IP
				if(strcmp(str444, PlayerInfo[i][pIPAdr], true) == 0)
				{
					dopper = i;//ид игрока найден
				}
			}
		}
		if(dopper == -600)//если ид игрока НЕ найден, то:
		{
			format(string,sizeof(string),"Russian_Drift: {FF0000}IP [%s] был забанен за чит (8), мешающий работе сервера !",str444);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW,string);
			new reason333[128];
			format(reason333,sizeof(reason333),"* Чит (8), мешающий работе сервера.");
			IPBanList(str444, reason333);
		}
		else//если ид игрока был найден, то:
		{
			format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (8), мешающий работе сервера !",RealName[dopper],dopper);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW,string);
			strdel(fbanreason[dopper], 0, 256);//очистка причины бана
			strcat(fbanreason[dopper], "* Чит (8), мешающий работе сервера.");
			PlayBanList(dopper, fbanreason[dopper], 0);
			SetTimerEx("PlayKick", 300, 0, "i", dopper);
		}
		new ispban[256];
		strcat(ispban, "banip ");//сборка RCON-команды бана
		strcat(ispban, str444);
		SendRconCommand(ispban);//RCON-команда бана
		SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
	}
	pos = strfind(str333, "[warning] Invalid shot data for player", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		print("[AntiCheatSys] ---------- 9 ----------");
		split(str333[pos+38], strarr, '(');
		new zn999 = strlen(strarr[0]);
		split(str333[pos+39+zn999], strarr, ')');
		new zn444 = strval(strarr[0]);
		exitcheat[zn444] = 1;//игрок - чит
		gPlayerLogged[zn444] = 1;//разрешить запись аккаунта

		ResetPlayerWeapons(zn444);//отбираем оружие и предметы

		format(string,sizeof(string),"Russian_Drift: {FF0000}IP игрока %s [%d] был забанен за чит (9), мешающий работе сервера !",RealName[zn444],zn444);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW,string);
		strdel(fbanreason[zn444], 0, 256);//очистка причины бана
		strcat(fbanreason[zn444], "* Чит (9), мешающий работе сервера.");
		PlayBanList(zn444, fbanreason[zn444], 0);
		SetTimerEx("PlayBan", 300, 0, "i", zn444);
	}
#endif

//----------------------------- Elevator - 1 -----------------------------------
	if(MovObj == 1)//разрешение мониторинга лифта
	{
		new dop;
		new Float:X, Float:Y, Float:Z;
		GetObjectPos(Obj_Elevator, X, Y, Z);
		if(11.77 < Z < 18.84){dop = 0;}//нахождение этажа, где находится кабина лифта
		if(18.84 < Z < 25.84){dop = 1;}
		if(25.84 < Z < 31.30){dop = 2;}
		if(31.30 < Z < 36.75){dop = 3;}
		if(36.75 < Z < 42.20){dop = 4;}
		if(42.20 < Z < 47.65){dop = 5;}
		if(47.65 < Z < 53.10){dop = 6;}
		if(53.10 < Z < 58.55){dop = 7;}
		if(58.55 < Z < 64.01){dop = 8;}
		if(64.01 < Z < 69.46){dop = 9;}
		if(69.46 < Z < 74.91){dop = 10;}
		if(74.91 < Z < 80.36){dop = 11;}
		if(80.36 < Z < 85.81){dop = 12;}
		if(85.81 < Z < 91.26){dop = 13;}
		if(91.26 < Z < 96.71){dop = 14;}
		if(96.71 < Z < 102.17){dop = 15;}
		if(102.17 < Z < 107.62){dop = 16;}
		if(107.62 < Z < 113.07){dop = 17;}
		if(113.07 < Z < 118.52){dop = 18;}
		if(118.52 < Z < 123.97){dop = 19;}
		if(123.97 < Z < 129.42){dop = 20;}

		for(new i; i < sizeof(Obj_FloorDoors); i ++)
		{
			format(string, sizeof(string), "[ %s ]", FloorNames[dop]);//создание 3D-текстов мониторинга (в зависимости от этажа)
			UpdateDynamic3DTextLabelText(Label2_Floors[i], 0x22AA22FF, string);
		}
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	if(MovObj22 == 1)//разрешение мониторинга лифта
	{
		new dop;
		new Float:X, Float:Y, Float:Z;
		GetObjectPos(Obj_Elevator22, X, Y, Z);
		if(15.96 < Z < 25.40){dop = 0;}//нахождение этажа, где находится кабина лифта
		if(25.40 < Z < 39.97){dop = 1;}
		if(39.97 < Z < 49.25){dop = 2;}
		if(49.25 < Z < 53.75){dop = 3;}
		if(53.75 < Z < 58.25){dop = 4;}
		if(58.25 < Z < 62.75){dop = 5;}
		if(62.75 < Z < 67.26){dop = 6;}
		if(67.26 < Z < 71.76){dop = 7;}
		if(71.76 < Z < 76.26){dop = 8;}
		if(76.26 < Z < 80.76){dop = 9;}
		if(80.76 < Z < 85.26){dop = 10;}
		if(85.26 < Z < 89.76){dop = 11;}
		if(89.76 < Z < 94.26){dop = 12;}
		if(94.26 < Z < 98.76){dop = 13;}

		for(new i; i < sizeof(Obj_FloorDoors22); i ++)
		{
			format(string, sizeof(string), "[ %s ]", FloorNames22[dop]);//создание 3D-текстов мониторинга (в зависимости от этажа)
			UpdateDynamic3DTextLabelText(Label2_Floors22[i], 0x22AA22FF, string);
		}
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			GetPlayerPos(i, PosX, PosY, PosZ);
			new nmod = GetVehicleModel(GetPlayerVehicleID(i));
			if((nmod == 538 || nmod == 537) &&  pertrain == 0 && PlayerInfo[i][pAdmin] == 0)
			{//если игрок в поезде И запрещено вождение поездов, И игрок не админ, то высадить игрока из поезда, и респавн игрока
				SendClientMessage(i, COLOR_RED, " В данный момент, администрация сервера ЗАПРЕТИЛА вождение поездов !");
				tpdrift[i] = 1;
				EnterTick33[i] = 1;//обход антикрашера - 3
				SetPlayerPos(i,PosX+3,PosY+3,PosZ+5);
				SetTimerEx("SecSpa22", 300, 0, "i", i);
			}

			if(PlayLock1[0][i] != 600 && playspa[i] == 1)//если игрок заблокирован, И заспавнен, то:
			{
 				SetPlayerInterior(i, PlayLock1[1][i]);//установка интерьера блокировки
				SetPlayerVirtualWorld(i, PlayLock1[2][i]);//установка виртуального мира блокировки
				SetPlayerPos(i, PlayLock2[0][i], PlayLock2[1][i], PlayLock2[2][i]);//установка координат блокировки
				SetPlayerFacingAngle(i, PlayLock2[3][i]);//установка угла блокировки
 				SetCameraBehindPlayer(i);//расположить камеру за игроком
			}

			if(IsPlayerInAnyVehicle(i) && scrmod[1][i] == 0)//speedometer
			{
				if(bool:R_Vehicle[i] == VehicleSpeed_2)
				{
//------------------------------------------------------------------------------
// Vehicle Speed
					format(string, sizeof(string), "%d", GetPlayerSpeed(i));
					PlayerTextDrawSetString(i, VehicleSpeed[i], string);
//------------------------------------------------------------------------------
				}
			}

			if(admper1[i] != 600 && admper5[i] == 1)//если игрок - админ ведущий наблюдение,
			{//И наблюдаем за транспортом, то:
				format(string, sizeof(string), "%d", GetPlayerSpeed(admper1[i]));
				PlayerTextDrawSetString(i, VehicleSpeed[i], string);
			}

			if((1034 < PosX < 1049 && -1035 < PosY < -1002 && 27 < PosZ < 37) ||//проверка игрока в гаражах//карта
			(-1946 < PosX < -1926 && 230 < PosY < 260 && 29 < PosZ < 39) ||
			(2378 < PosX < 2396 && 1034 < PosY < 1064 && 6 < PosZ < 16) ||
			(2636 < PosX < 2653 && -2054 < PosY < -2030 && 9 < PosZ < 19) ||
			(-2737 < PosX < -2708 && 209 < PosY < 226 && -1 < PosZ < 9) ||
			(608 < PosX < 628 && -12 < PosY < 8 && 991 < PosZ < 1011) ||//интерьеры
			(607 < PosX < 627 && -85 < PosY < -65 && 988 < PosZ < 1008) ||
			(605 < PosX < 625 && -134 < PosY < -114 && 988 < PosZ < 1008))
			{//если игрок на территории (или внутри) любого из 5-и гаражей, то:
				PlayCRTP[i] = 1;//блокировка контроля координат
				tpdrift[i] = 1;//блокировка счётчика дрифта игрока
				if(GetPlayerState(i) == 2)//если игрок на месте водителя, то:
				{
					new carid;
					carid = GetPlayerVehicleID(i);//получение ид авто игрока
					LinkVehicleToInterior(carid, GetPlayerInterior(i));//задаём транспорту интерьер игрока,
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(i));//и виртуальный мир игрока
					for(new j = 0; j < MAX_PLAYERS; j++)
					{
						if(IsPlayerConnected(j))
						{
							if(GetPlayerVehicleID(j) == carid && j != i)//поиск пассажира (пассажиров)
							{
	 							SetPlayerInterior(j, GetPlayerInterior(i));//задаём пассажиру (пассажирам) интерьер игрока,
								SetPlayerVirtualWorld(j, GetPlayerVirtualWorld(i));//и виртуальный мир игрока
							}
						}
					}
				}
			}
			if((1563 < PosX < 1578 && -1341 < PosY < -1326 && 9 < PosZ < 24) ||//проверка игрока на стандартных телепортах:
			(1541 < PosX < 1556 && -1372 < PosY < -1357 && 319 < PosZ < 334) ||//небоскрёб LS
			(-1756 < PosX < -1741 && 860 < PosY < 875 && 18 < PosZ < 33) ||//шпиль SF
			(-1760 < PosX < -1745 && 877 < PosY < 892 && 288 < PosZ < 303))
			{
				PlayCRTP[i] = 1;//блокировка контроля координат
			}
			new plvw = GetPlayerVirtualWorld(i);
			if((plvw == 17001 && IsPlayerInRangeOfPoint(i, 300.0, 2139.94, -2271.36, 17.56)) ||
			(plvw == 17002 && IsPlayerInRangeOfPoint(i, 300.0, 2835.86, -2530.64, 17.95)) ||
			(plvw == 17003 && IsPlayerInRangeOfPoint(i, 300.0, -1506.37, 1373.91, 3.76)) ||
			(plvw == 17004 && IsPlayerInRangeOfPoint(i, 300.0, -1471.53, 1489.39, 8.25)) ||
			(plvw == 17005 && IsPlayerInRangeOfPoint(i, 300.0, -1456.70, 501.27, 10.01)) ||
			(plvw == 17006 && IsPlayerInRangeOfPoint(i, 300.0, -2349.67, 1540.60, 26.05)) ||
			(plvw == 17007 && IsPlayerInRangeOfPoint(i, 300.0, -1300.47, 2516.26, 87.15)) ||
			(plvw == 17008 && IsPlayerInRangeOfPoint(i, 300.0, -311.58, 1529.81, 75.35)) ||
			(plvw == 17009 && IsPlayerInRangeOfPoint(i, 300.0, 2529.02, -1712.72, 13.48)) ||
			(plvw == 17010 && IsPlayerInRangeOfPoint(i, 300.0, 20.35, 1483.39, 12.75)))//если игрок в DM-зоне, то:
			{
				if(dmplay[i] != 0)//если игрок УЖЕ находится в DM-зоне, то:
				{
					if(plvw != dmplay22[i] && dmspa[i] == 0 && admper1[i] == 600)//если игрок ТП в другую DM-зону,
					{//И разрешено сохранение координат и угла игрока, И у игрока НЕ включено наблюдение, то:
						dmkill[i] = 0;//обнуляем число убийств игрока
						dmdeath[i] = 0;//обнуляем число смертей игрока
						dmplay[i] = plvw - 17000;//устанавливаем маркер присутствия в DM-зоне
						dmplay22[i] = plvw;//копируем виртуальный мир игрока во вспомогательный маркер DM-зон
						dmmoney[i] = 0;//обнуляем маркер денежного приза игрока
						dmcount44[i] = 0;//обнуляем счётчик времени игрока
					}
					new strloc[128];
					format(strloc, sizeof(strloc), "Kills: %d", dmkill[i]);//обновляем игроку текстдравы
					PlayerTextDrawSetString(i, dmkillTD[i], strloc);
					format(strloc, sizeof(strloc), "Deaths: %d", dmdeath[i]);
					PlayerTextDrawSetString(i, dmdeathTD[i], strloc);
					format(strloc, sizeof(strloc), "Убийств: %d\n{FF0000}Смертей: %d", dmkill[i], dmdeath[i]);
					Update3DTextLabelText(dmkd3D[i], 0x00FF00FF, strloc);//обновляем игроку 3D-текст (над головой)
					if(dmcount44[i] == 0)//если счётчик времени игрока равен нулю, то:
					{
						if(dmmoney[i] == 1)//если ЕСТЬ маркер денежного приза игрока, то:
						{
							dmmoney[i] = 0;//обнуляем маркер денежного приза игрока
							dmcount44[i] = 26;//устанавливаем счётчик времени на 12 секунд (не более 5 убийств за 1 минуту !!!)
							new perloc;
							perloc = random(401);
							perloc = perloc + 1800;//генерируем для игрока денежный приз ОТ 1800 ДО 2200 $
							SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") + perloc);//даём игроку денежный приз
							format(strloc, sizeof(strloc), "Russian_Drift: {00FF00}Вы получили %d $ за убийство в DM зоне.", perloc);
							SendClientMessage(i, COLOR_YELLOW, strloc);
						}
					}
					else//если счётчик времени игрока НЕ равен нулю, то:
					{
						dmmoney[i] = 0;//обнуляем маркер денежного приза игрока
						dmcount44[i] = dmcount44[i] - 1;//уменьшаем счётчик времени игрока
					}
				}
				else//если игрок ТОЛЬКО попал в DM-зону, то:
				{
					if(admper1[i] == 600)//если у игрока НЕ включено наблюдение, то:
					{
						if(scrmod[3][i] == 0)//если у игрока была включена надпись ''уровень дрифта'' (над головой), то:
						{
							dmlock[i] = 1;//блокировка ''уровня дрифта'' (над головой)
							Delete3DTextLabel(Level3D[i]);//отключаем надпись ''уровень дрифта'' (над головой)
						}
						dmkill[i] = 0;//обнуляем число убийств игрока
						dmdeath[i] = 0;//обнуляем число смертей игрока
						PlayerTextDrawShow(i, dmkillTD[i]);//показываем игроку текстдравы
						PlayerTextDrawShow(i, dmdeathTD[i]);
						dmkd3D[i] = Create3DTextLabel(" ", 0xFFFFFFAA, 0.000, 0.000, -4.000, 18.0, 0, 1);
						Attach3DTextLabelToPlayer(dmkd3D[i], i, 0.0, 0.0, 1.00);//прикрепляем к игроку 3D-текст (над головой)
						dmplay[i] = plvw - 17000;//устанавливаем маркер присутствия в DM-зоне, И разрешаем сохранение координат и угла игрока
						dmplay22[i] = plvw;//копируем виртуальный мир игрока во вспомогательный маркер DM-зон
						dmmoney[i] = 0;//обнуляем маркер денежного приза игрока
						dmcount44[i] = 0;//обнуляем счётчик времени игрока
						SendClientMessage(i, COLOR_YELLOW, " В DM зонах Вы сможете получать ОТ 1800 ДО 2200 $ за каждое убийство");
						SendClientMessage(i, COLOR_YELLOW, " без оружия, ИЛИ кастетом, ИЛИ пистолетом, ИЛИ автоматом, ИЛИ ружьём,");
						SendClientMessage(i, COLOR_YELLOW, " но НЕ ЧАЩЕ чем через каждые 10-15 секунд отыгранного времени !!!");
					}
				}
			}
			else//если игрок НЕ в DM-зоне, то:
			{
				if(dmplay[i] != 0 && dmspa[i] == 0 && admper1[i] == 600)//если игрок ТОЛЬКО вышел с DM-зоны,
				{//И разрешено сохранение координат и угла игрока, И у игрока НЕ включено наблюдение, то:
					dmcount44[i] = 0;//обнуляем счётчик времени игрока
					dmmoney[i] = 0;//обнуляем маркер денежного приза игрока
					PlayerTextDrawHide(i, dmkillTD[i]);//отключаем игроку текстдравы
					PlayerTextDrawHide(i, dmdeathTD[i]);
					Delete3DTextLabel(dmkd3D[i]);//отключаем игроку 3D-текст (над головой)
					if(scrmod[3][i] == 0)//если у игрока была включена надпись ''уровень дрифта'' (над головой), то:
					{
						dmlock[i] = 0;//обнуляем блокировку ''уровня дрифта'' (над головой)
						Level3D[i] = Create3DTextLabel(" ", 0xFFFFFFAA, 0.000, 0.000, -4.000, 18.0, 0, 1);
						LevelStats[i] = 0;//включаем надпись ''уровень дрифта'' (над головой)
					}
					dmplay[i] = 0;//обнуляем маркер присутствия в DM-зоне
					dmplay22[i] = 0;//обнуляем вспомогательный маркер DM-зон
				}
			}
			if(plvw >= 18001 && plvw <= 18010)//если игрок в DM-мире, то:
			{
				dmwplay[i] = plvw - 18000;//устанавливаем маркер присутствия в DM-мире
			}
			else
			{
				dmwplay[i] = 0;//обнуляем маркер присутствия в DM-мире
			}
		}
	}
	return 1;
}

public OneSecOnd()
{
	gettime(timecor[0], timecor[1]);
	TimCor();//коррекция времени
	new PlayVeh, PlayVW2;
	new swper, playslot, dopper;//античит
	new play333weap[13], play333ammo[13], dopper333;//контроль запаса патров
	new Float:PosX, Float:PosY, Float:PosZ;//проверка игрока в X-зоне
	new playnam333[MAX_PLAYER_NAME];
	new string[256];
//----- антикрашер игроков - 8 (2018-2020, краш обнаружен на версии 0.3.7) -----
	new cr8d1, cr8d2;
//-------------------- антикрашер игроков - 8 (конец) --------------------------
	if(timecor[0] == servchas && timecor[1] == 0 && resauto == 0)
	{
		printf("* Рестарт сервера по таймеру !");
		SendClientMessageToAll(COLOR_YELLOW,"Russian_Drift: {FF0000}Рестарт сервера по таймеру !");
		SendClientMessageToAll(COLOR_YELLOW,"Russian_Drift: {FF0000}Внимание ! Через 2 минуты произойдёт рестарт сервера !");
		restart = SetTimer("RestartS", 120000, 1);
		resauto = 1;
	}
	if(nucexplos == 1)//если на сервере ядерный взрыв, то:
	{
		SetWeather(19);
		GlWeat = 19;
		SetWorldTime(0);
		GlTime = 0;
		nucexptime++;
		if(nucexptime == 1200)//если прошло 20 минут с момента ядерного взрыва, то:
		{
			nucexplos = 0;//активировать автоматическую отмену ядерного взрыва
			nucexptime = -100;
		}
		if(nucexplos == 0 && nucexptime == -100)//если активна автоматическая отмена ядерного взрыва, то:
		{
			SetWeather(1);
			GlWeat = 1;
			if(timecor[8] == 1)//если включено реальное время, то:
			{
				ReadCorTime();//чтение коррекции времени
				gettime(timecor[0], timecor[1]);
				TimCor();//коррекция времени
				SetWorldTime(timecor[0]);
				GlTime = timecor[0];
				TimePlay(timecor[0]);
			}
			else
			{
				SetWorldTime(12);
				GlTime = 12;
				TimePlay(12);
			}
		}
	}
	for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			if(admper1[i] != 600)//если игрок - админ ведущий наблюдение, то:
			{
				SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
			}
			if(NETafkPl[i][0] >= 5) { NETafkPl[i][6] = 2; }//делаем отметку, что игрок в AFK
			if(NETafkPl[i][0] < 5 && NETafkPl[i][6] == 2) { NETafkPl[i][6] = 1; }//делаем отметку, что игрок ТОЛЬКО вышел из AFK
			if(NETafkPl[i][6] == 1)//если игрок - ТОЛЬКО вышел из AFK, то:
			{
				SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
			}
			if(NETafkPl[i][6] == 1) { NETafkPl[i][6] = 0; }//делаем отметку, что игрок НЕ в AFK
			if(GetPVarInt(i, "PlCRct9") != 0 && ct9control[i] == 5)
			{//если есть блокировка античита управления чужим транспортом, И найден чит, то:
				ct9control[i] = 1;//сброс определения чита (включение контроля чита)
			}
			if(ct9delay == 0 && ct9control[i] == 5)//если задержка равна 0, И найден чит, то:
			{
				ct9delay++;//включение задержки
				ct9control[i] = 0;//выключение контроля чита
				format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - чит управления чужим транспортом !", RealName[i], i);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
			}
			if(ct9control[i] == 5)//если чит был найден, то:
			{
				ct9control[i] = 1;//сброс определения чита (включение контроля чита)
			}
			if(GetPVarInt(i, "PlCRct9") != 0) { SetPVarInt(i, "PlCRct9", GetPVarInt(i, "PlCRct9") + 1); }
			if(GetPVarInt(i, "PlCRct9") >= 4) { SetPVarInt(i, "PlCRct9", 0); }//снятие блокировки античита управления чужим транспортом
//----- антикрашер игроков - 7 (июль 2017, краш обнаружен на версии 0.3.7) -----
			if(crash7count[i] >= 10)
			{
				format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 7 !", RealName[i], i);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
			}
			crash7count[i] = 0;
//-------------------- антикрашер игроков - 7 (конец) --------------------------
			PlayVW2 = GetPlayerVirtualWorld(i);
//-------------------------------- GarHouse ------------------------------------
			if(GetPVarInt(i, "IsInHouse") == 1 && (PlayVW2 < 1000 || PlayVW2 > MAX_VW_HOUSE))
			{
				SetPVarInt(i, "IsInHouse", 0);
			}
//------------------------------ End GarHouse ----------------------------------
			if(nucexplos == 1)//если на сервере ядерный взрыв, то:
			{
				LocTime[i] = 0;
				if(SnowONOFF[i] == 1)
				{
					new Float:hp;
					SetPlayerArmour(i,0);
					GetPlayerHealth(i,hp);
					SetPlayerHealth(i,hp-10);
					GetPlayerCameraPos(i,PosX,PosY,PosZ);
					MovePlayerObject(i,snowobj[i],PosX,PosY,PosZ-5,9999.0);
				}
			}
			if(nucexplos == 0 && nucexptime == -100)//если активна автоматическая отмена ядерного взрыва, то:
			{
				SnowONOFF[i] = 0;
				DestroyPlayerObject(i,snowobj[i]);
			}
			if(playspa[i] == 1 && PlayerInfo[i][pPrisonsec] == 0 && DerbyID[i] == 0)//если игрок заспавнился,
			{//И не сидит в тюрьме, И не в зоне дерби, то:
				for(new j = 0; j < 13; j++)//сохраняем все слоты
				{
					GetPlayerWeaponData(i, j, playweap[i][j], playammo[i][j]);
				}
			}
			PlayVeh = GetPlayerVehicleID(admper1[i]);
			if(admper1[i] != 600)//если игрок - админ ведущий наблюдение, то:
			{
				if(PlayVeh != 0 && admper5[i] == 0)//если игрок в транспорте,
				{//И мы наблюдали за игроком, то:
					PlayerSpectateVehicle(i, PlayVeh, SPECTATE_MODE_NORMAL);

					PlayerTextDrawShow(i, VehicleSpeed[i]);//включаем текстдравы спидометра
					TextDrawShowForPlayer(i, KMH);
					TextDrawShowForPlayer(i, HMS22);//включаем текстдравы максимальной горизонтальной скорости
					PlayerTextDrawShow(i, HMS44[i]);

					format(string, sizeof(string), "%d", GetHMaxSpeed(PlayVeh));//показываем максимальную горизонтальную скорость
					PlayerTextDrawSetString(i, HMS44[i], string);
					admper5[i] = 1;//наблюдаем за транспортом
				}
				if(PlayVeh == 0 && admper5[i] == 1)//если игрок НЕ в транспорте,
				{//И мы наблюдали за транспортом, то:

					PlayerTextDrawHide(i, VehicleSpeed[i]);//отключаем текстдравы спидометра
					TextDrawHideForPlayer(i, KMH);
					TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
					PlayerTextDrawHide(i, HMS44[i]);

					PlayerSpectatePlayer(i, admper1[i], SPECTATE_MODE_NORMAL);
					admper5[i] = 0;//наблюдаем за игроком
				}
				if(admper5[i] == 3)//если устанавлен второй цикл переключение наблюдения, то:
				{
					format(string, sizeof(string), "%d", GetHMaxSpeed(PlayVeh));//показываем максимальную горизонтальную скорость
					PlayerTextDrawSetString(i, HMS44[i], string);
					PlayerSpectateVehicle(i, PlayVeh, SPECTATE_MODE_NORMAL);
					admper5[i] = 1;//наблюдаем за транспортом
				}
				if(admper5[i] == 2)//если устанавленно переключение наблюдения, то:
				{
					PlayerSpectatePlayer(i, admper1[i], SPECTATE_MODE_NORMAL);//наблюдаем за игроком
					admper5[i] = 3;//устанавливаем второй цикл переключения наблюдения
				}
				if(admper6[i] == 2)//если переключение наблюдения состоялось, то:
				{
					admper6[i] = 0;//обнуляем отметку о переключении наблюдения
				}
				if(admper6[i] == 1)//если отметка о переключении наблюдения активна, то:
				{
					SetPlayerInterior(i, GetPlayerInterior(admper1[i]));//установить интерьер админу
					SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(admper1[i]));//установить мир админу
					if(PlayVeh != 0)//если игрок в транспорте, то:
					{
						format(string, sizeof(string), "%d", GetHMaxSpeed(PlayVeh));//показываем максимальную горизонтальную скорость
						PlayerTextDrawSetString(i, HMS44[i], string);
						PlayerSpectateVehicle(i, PlayVeh, SPECTATE_MODE_NORMAL);
						admper5[i] = 1;//наблюдаем за транспортом
					}
					else
					{
						PlayerSpectatePlayer(i, admper1[i], SPECTATE_MODE_NORMAL);//включить наблюдение
						admper5[i] = 0;//наблюдаем за игроком
					}
					admper6[i] = 2;//делаем отметку о переключении наблюдения
				}
				if(((GetPlayerInterior(i) != GetPlayerInterior(admper1[i])) || (PlayVW2 != GetPlayerVirtualWorld(admper1[i]))) && admper6[i] == 0)
				{//если у игрока (за кем наблюдает админ) изменился интерьер ИЛИ виртуальный мир, И отметка о переключении наблюдения НЕ активна, то:
					admper6[i] = 1;//активируем отметку о переключении наблюдения
				}
			}
			if(PlayerInfo[i][pMutedsec] > 0)//если игрок заткнут, то:
			{
				PlayerInfo[i][pMutedsec]--;
				if(PlayerInfo[i][pMutedsec] <= 0)
				{
					PlayerInfo[i][pMutedsec] = 0;
					format(string, sizeof(string), "Russian_Drift: {00FF00}Игрок %s [%d] разоткнут.", RealName[i], i);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW, string);
				}
			}
			if(PlayerInfo[i][pPrisonsec] > 0)//если игрок в тюрьме, то:
			{
				PlayerInfo[i][pPrisonsec]--;
				if(PlayerInfo[i][pPrisonsec] <= 0)
				{
					PlayerInfo[i][pPrisonsec] = 0;
					format(string, sizeof(string), "Russian_Drift: {00FF00}Игрок %s [%d] освобождён.", RealName[i], i);
					print(string);
					SendClientMessageToAll(COLOR_YELLOW, string);
					SpawnPlayer(i);
				}
			}
			if(StopHeal[i] > 0)//если переменная задержки команды /heal > 0, то:
			{
				StopHeal[i]--;//декрементируем переменную задержки
			}
			if(StopReport[i] > 0)//если переменная задержки команды /report > 0, то:
			{
				StopReport[i]--;//декрементируем переменную задержки
			}
			if(StopHH[i] > 0)//если переменная задержки команды /hh > 0, то:
			{
				StopHH[i]--;//декрементируем переменную задержки
			}
			if(StopBB[i] > 0)//если переменная задержки команды /bb > 0, то:
			{
				StopBB[i]--;//декрементируем переменную задержки
			}
			if(StopGMoney[i] > 0)//если переменная задержки команды /givecash > 0, то:
			{
				StopGMoney[i]--;//декрементируем переменную задержки
			}
			if(StopHidrav[i] > 0)//если переменная задержки гидравлики > 0, то:
			{
				StopHidrav[i]--;//декрементируем переменную задержки
			}
			if(EnterTick33[i] < 0 || EnterTick33[i] >= 2)
			{//обнуление переменной обхода антикрашера - 3 в режиме наблюдения
				EnterTick33[i] = 0;
			}
			if(EnterTick33[i] == 1)
			{
				EnterTick33[i] = 2;
			}
			if(countdown[i]>0)//если игрок запустил обратный отсчёт, то:
			{
				countdown[i]-=1;
				new str[6];
				format(str,6,"...%d",countdown[i]);
				GameTextForPlayer(i,str,950,4);
				PlayerPlaySound(i,1056,0.0,0.0,0.0);
				if(countdown[i]<4)TogglePlayerControllable(i,0);
			}
			if(countdown[i]==0)
			{
				TogglePlayerControllable(i,1);
				GameTextForPlayer(i,"~b~GO GO GO !",700,4);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				countdown[i]=-1;
			}
			if(countdown22[i]>0)//если игрок запустил обратный DM-отсчёт, то:
			{
				countdown22[i]-=1;
				new str[6];
				format(str,6,"...%d",countdown22[i]);
				GameTextForPlayer(i,str,950,4);
				PlayerPlaySound(i,1056,0.0,0.0,0.0);
			}
			if(countdown22[i]==0)
			{
				GameTextForPlayer(i,"~b~GO GO GO !",700,4);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				countdown22[i]=-1;
			}
			swper = 0;//античит
			if(playspa[i] == 0)
			{//если игрок не заспавнился, то:
				oneminkick[i]++;
				if(oneminkick[i] >= 180)
				{
					swper = 1;//не заспавнился в течение трёх минут
					oneminkick[i] = 0;
				}
			}
			else//иначе
			{
				oneminkick[i] = 0;//обнуляем переменную
			}
			if(scrnetcount[i] > 0)
			{
				scrnetcount[i]--;
				if(scrnetcount[i] <= 0)
				{
					swper = 14;//не залогинился
				}
			}
			GetPlayerName(i, playnam333, sizeof(playnam333));
			new aa333[64];//доработка для использования Русских ников
			format(aa333, sizeof(aa333), "%s", playnam333);//доработка для использования Русских ников
			if(strcmp(aa333,RealName[i],false) != 0)//доработка для использования Русских ников
//			if(strcmp(playnam333,RealName[i],false) != 0)
			{
				swper = 2;//чит на смену ника
			}
			GetPlayerWeaponData(i, 11, playslot, dopper);//читаем 11 слот
			if((playslot == 44 || playslot == 45) && PlayerInfo[i][pAdmin] == 0)//если есть запрещённые предметы в 11 слоту,
			{//и игрок НЕ админ, то:
				swper = 3;//чит на запрещённые предметы
			}
			GetPlayerWeaponData(i, 7, playslot, dopper);//читаем 7 слот
			if(playslot != 0 && PlayerInfo[i][pAdmin] == 0)//если 7 слот НЕ пустой,
			{//и игрок НЕ админ, то:
				swper = 4;//чит на запрещённое оружие
			}
			GetPlayerPos(i, PosX, PosY, PosZ);
			if(playspa[i] == 1 && PlayerInfo[i][pPrisonsec] > 0)
			{//проверка игрока в тюрьме
				if(prisoncount[i] == 3)
				{
					if(PosX < 190 || PosX > 197 || PosY < 170 || PosY > 178 || PosZ < 1001 || PosZ > 1008)
					{//если игрок САМ вышел из тюрьмы, то:
						swper = 5;//побег из тюрьмы
					}
				}
				else
				{
					prisoncount[i]++;
				}
			}
			if(PlayerInfo[i][pPrisonsec] == 0 && prisoncount[i] != 0)
			{//обнуление задержки контроля игрока в тюрьме, если она НЕ равна нулю
				prisoncount[i] = 0;
			}
//------------------------------ BusSystem -------------------------------------
			if(busdlgcon[i] > 1)//если контроль диалогов больше 1, то:
			{
				swper = 13;//чит активации пикапов
			}
			busdlgcon[i] = 0;//обнуляем контроль диалогов
//---------------------------- End BusSystem -----------------------------------
#if (MOD4CINS == 0)
			if(0 <= chatcon[i] <= 1 && 0 <= GetPVarInt(i, "CComAc0") <= 1 && 0 <= GetPVarInt(i, "CComAc1") <= 1 &&
			0 <= GetPVarInt(i, "CComAc2") <= 1 && 0 <= GetPVarInt(i, "CComAc3") <= 1 && 0 <= GetPVarInt(i, "CComAc4") <= 1 &&
			0 <= GetPVarInt(i, "CComAc5") <= 1 && 0 <= GetPVarInt(i, "CComAc6") <= 1 && 0 <= GetPVarInt(i, "CComAc7") <= 1 &&
			0 <= GetPVarInt(i, "CComAc8") <= 1 && 0 <= GetPVarInt(i, "CComAc9") <= 1 && 0 <= GetPVarInt(i, "CComAc10") <= 1 &&
			0 <= GetPVarInt(i, "CComAc11") <= 1 && 0 <= GetPVarInt(i, "CComAc12") <= 1 && 0 <= GetPVarInt(i, "CComAc13") <= 1 &&
			0 <= GetPVarInt(i, "CComAc14") <= 1 && 0 <= GetPVarInt(i, "CComAc15") <= 1)
			{//если в контрольной переменной чата записаны числа 0 или 1, то:
				chatcon[i] = 0;//обнуляем контрольную переменную чата
				SetPVarInt(i, "CComAc0", 0);
				SetPVarInt(i, "CComAc1", 0);
				SetPVarInt(i, "CComAc2", 0);
				SetPVarInt(i, "CComAc3", 0);
				SetPVarInt(i, "CComAc4", 0);
				SetPVarInt(i, "CComAc5", 0);
				SetPVarInt(i, "CComAc6", 0);
				SetPVarInt(i, "CComAc7", 0);
				SetPVarInt(i, "CComAc8", 0);
				SetPVarInt(i, "CComAc9", 0);
				SetPVarInt(i, "CComAc10", 0);
				SetPVarInt(i, "CComAc11", 0);
				SetPVarInt(i, "CComAc12", 0);
				SetPVarInt(i, "CComAc13", 0);
				SetPVarInt(i, "CComAc14", 0);
				SetPVarInt(i, "CComAc15", 0);
			}
			if(chatcon[i] > 1 || GetPVarInt(i, "CComAc0") > 1 || GetPVarInt(i, "CComAc1") > 1 ||
			GetPVarInt(i, "CComAc2") > 1 || GetPVarInt(i, "CComAc3") > 1 || GetPVarInt(i, "CComAc4") > 1 ||
			GetPVarInt(i, "CComAc5") > 1 || GetPVarInt(i, "CComAc6") > 1 || GetPVarInt(i, "CComAc7") > 1 ||
			GetPVarInt(i, "CComAc8") > 1 || GetPVarInt(i, "CComAc9") > 1 || GetPVarInt(i, "CComAc10") > 1 ||
			GetPVarInt(i, "CComAc11") > 1 || GetPVarInt(i, "CComAc12") > 1 || GetPVarInt(i, "CComAc13") > 1 ||
			GetPVarInt(i, "CComAc14") > 1 || GetPVarInt(i, "CComAc15") > 1)
			{//если игрок написал более 1-й строки за 1 секунду, то:
				if(PlayerInfo[i][pAdmin] == 0)//если игрок НЕ админ, то:
				{
					chatcon[i] = -5;//устанавливаем счётчик 4-х секунд
					SetPVarInt(i, "CComAc0", -5);
					SetPVarInt(i, "CComAc1", -5);
					SetPVarInt(i, "CComAc2", -5);
					SetPVarInt(i, "CComAc3", -5);
					SetPVarInt(i, "CComAc4", -5);
					SetPVarInt(i, "CComAc5", -5);
					SetPVarInt(i, "CComAc6", -5);
					SetPVarInt(i, "CComAc7", -5);
					SetPVarInt(i, "CComAc8", -5);
					SetPVarInt(i, "CComAc9", -5);
					SetPVarInt(i, "CComAc10", -5);
					SetPVarInt(i, "CComAc11", -5);
					SetPVarInt(i, "CComAc12", -5);
					SetPVarInt(i, "CComAc13", -5);
					SetPVarInt(i, "CComAc14", -5);
					SetPVarInt(i, "CComAc15", -5);
				}
				else//иначе (если игрок - админ):
				{
					chatcon[i] = 0;//обнуляем контрольную переменную чата
					SetPVarInt(i, "CComAc0", 0);
					SetPVarInt(i, "CComAc1", 0);
					SetPVarInt(i, "CComAc2", 0);
					SetPVarInt(i, "CComAc3", 0);
					SetPVarInt(i, "CComAc4", 0);
					SetPVarInt(i, "CComAc5", 0);
					SetPVarInt(i, "CComAc6", 0);
					SetPVarInt(i, "CComAc7", 0);
					SetPVarInt(i, "CComAc8", 0);
					SetPVarInt(i, "CComAc9", 0);
					SetPVarInt(i, "CComAc10", 0);
					SetPVarInt(i, "CComAc11", 0);
					SetPVarInt(i, "CComAc12", 0);
					SetPVarInt(i, "CComAc13", 0);
					SetPVarInt(i, "CComAc14", 0);
					SetPVarInt(i, "CComAc15", 0);
				}
			}
			if(chatcon[i] < 0 || GetPVarInt(i, "CComAc0") < 0 || GetPVarInt(i, "CComAc1") < 0 ||
			GetPVarInt(i, "CComAc2") < 0 || GetPVarInt(i, "CComAc3") < 0 || GetPVarInt(i, "CComAc4") < 0 ||
			GetPVarInt(i, "CComAc5") < 0 || GetPVarInt(i, "CComAc6") < 0 || GetPVarInt(i, "CComAc7") < 0 ||
			GetPVarInt(i, "CComAc8") < 0 || GetPVarInt(i, "CComAc9") < 0 || GetPVarInt(i, "CComAc10") < 0 ||
			GetPVarInt(i, "CComAc11") < 0 || GetPVarInt(i, "CComAc12") < 0 || GetPVarInt(i, "CComAc13") < 0 ||
			GetPVarInt(i, "CComAc14") < 0 || GetPVarInt(i, "CComAc15") < 0)
			{//если в контрольной переменной чата - счётчик секунд, то:
				chatcon[i]++;//уменьшаем счётчик секунд
				SetPVarInt(i, "CComAc0", GetPVarInt(i, "CComAc0") + 1);
				SetPVarInt(i, "CComAc1", GetPVarInt(i, "CComAc1") + 1);
				SetPVarInt(i, "CComAc2", GetPVarInt(i, "CComAc2") + 1);
				SetPVarInt(i, "CComAc3", GetPVarInt(i, "CComAc3") + 1);
				SetPVarInt(i, "CComAc4", GetPVarInt(i, "CComAc4") + 1);
				SetPVarInt(i, "CComAc5", GetPVarInt(i, "CComAc5") + 1);
				SetPVarInt(i, "CComAc6", GetPVarInt(i, "CComAc6") + 1);
				SetPVarInt(i, "CComAc7", GetPVarInt(i, "CComAc7") + 1);
				SetPVarInt(i, "CComAc8", GetPVarInt(i, "CComAc8") + 1);
				SetPVarInt(i, "CComAc9", GetPVarInt(i, "CComAc9") + 1);
				SetPVarInt(i, "CComAc10", GetPVarInt(i, "CComAc10") + 1);
				SetPVarInt(i, "CComAc11", GetPVarInt(i, "CComAc11") + 1);
				SetPVarInt(i, "CComAc12", GetPVarInt(i, "CComAc12") + 1);
				SetPVarInt(i, "CComAc13", GetPVarInt(i, "CComAc13") + 1);
				SetPVarInt(i, "CComAc14", GetPVarInt(i, "CComAc14") + 1);
				SetPVarInt(i, "CComAc15", GetPVarInt(i, "CComAc15") + 1);
			}
			if(functioncon[i] > 0)//если в контрольной переменной функций - счётчик вызовов функций, то:
			{
				functioncon[i] = 0;//обнуляем контрольную переменную функций
			}
			if(functioncon[i] < 0)//если в контрольной переменной функций - счётчик секунд, то:
			{
				functioncon[i]++;//уменьшаем счётчик секунд
			}
#endif
#if (MOD4CINS == 1)
			if((chatcon[i] > 1 || GetPVarInt(i, "CComAc0") > 1 || GetPVarInt(i, "CComAc1") > 1 ||
			GetPVarInt(i, "CComAc2") > 1 || GetPVarInt(i, "CComAc3") > 1 || GetPVarInt(i, "CComAc4") > 1 ||
			GetPVarInt(i, "CComAc5") > 1 || GetPVarInt(i, "CComAc6") > 1 || GetPVarInt(i, "CComAc7") > 1 ||
			GetPVarInt(i, "CComAc8") > 1 || GetPVarInt(i, "CComAc9") > 1 || GetPVarInt(i, "CComAc10") > 1 ||
			GetPVarInt(i, "CComAc11") > 1 || GetPVarInt(i, "CComAc12") > 1 || GetPVarInt(i, "CComAc13") > 1 ||
			GetPVarInt(i, "CComAc14") > 1 || GetPVarInt(i, "CComAc15") > 1) &&
			PlayerInfo[i][pAdmin] == 0)//если игрок написал более 1-й строки за 1 секунду,
			{//и если игрок НЕ админ, то:
				swper = 6;//спам в чате (или в командах)
			}
			chatcon[i] = 0;//обнуляем контрольную переменную чата
			SetPVarInt(i, "CComAc0", 0);
			SetPVarInt(i, "CComAc1", 0);
			SetPVarInt(i, "CComAc2", 0);
			SetPVarInt(i, "CComAc3", 0);
			SetPVarInt(i, "CComAc4", 0);
			SetPVarInt(i, "CComAc5", 0);
			SetPVarInt(i, "CComAc6", 0);
			SetPVarInt(i, "CComAc7", 0);
			SetPVarInt(i, "CComAc8", 0);
			SetPVarInt(i, "CComAc9", 0);
			SetPVarInt(i, "CComAc10", 0);
			SetPVarInt(i, "CComAc11", 0);
			SetPVarInt(i, "CComAc12", 0);
			SetPVarInt(i, "CComAc13", 0);
			SetPVarInt(i, "CComAc14", 0);
			SetPVarInt(i, "CComAc15", 0);
			if(functioncon[i] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
			{
				swper = 7;//чит вызова функций
				functioncon[i] = 0;//обнуляем контрольную переменную функций
			}
			else//иначе
			{
				functioncon[i] = 0;//обнуляем контрольную переменную функций
			}
#endif
			if(PlayCRSH[i] == 4)//если включен четвёртый цикл блокировки спидхака, то:
			{
				PlayCRSH[i] = 0;//обнуляем блокировку спидхака
			}
			if(PlayCRSH[i] == 3)//если включен третий цикл блокировки спидхака, то:
			{
				PlayCRSH[i] = 4;//включаем четвёртый цикл блокировки спидхака
			}
			if(PlayCRSH[i] == 2)//если включен второй цикл блокировки спидхака, то:
			{
				PlayCRSH[i] = 3;//включаем третий цикл блокировки спидхака
			}
			if(PlayCRSH[i] == 1)//если была блокировка спидхака, то:
			{
				PlayCRSH[i] = 2;//включаем второй цикл блокировки спидхака
			}
			if(GetPlayerSpeed(i) > CoefGrav && PlayCRSH[i] == 0 && PlayerInfo[i][pAdmin] == 0 && admper1[i] == 600)//если скорость игрока больше допустимой,
			{//И нет блокировки спидхака, И игрок НЕ админ, И полицейский НЕ ведёт наблюдение то:
				PlayerInfo[i][pWanted] = 1;//FLY-чит (или спидхак)
#if (MOD44INS == 1)
				swper = 10;//FLY-чит (или спидхак)
#endif
			}
#if (MOD66INS > 1)
			if(GetPlayerState(i) == 1 && gPlayerLogged[i] == 1 && playspa[i] == 0)
			{//если игрок заспавнился, И залогинился, И НЕ прошёл реальный спавн сервера, то:
				if(PosX < -1655 || PosX > -1649 || PosY < 1204 || PosY > 1210 || PosZ < 18 || PosZ > 24 ||
				GetPlayerInterior(i) != 0 || PlayVW2 != i + 5000)
				{//если игрок САМ изменил координаты, ИЛИ интерьер, ИЛИ виртуальный мир своего виртуального спавна, то:
					if(playspacount[i] == 1)
					{
						swper = 11;//ошибка координат спавна
					}
					if(playspacount[i] != 1)
					{
						playspacount[i] = 1;
					}
				}
			}
#endif
			if(GetPlayerState(i) == 1 && gPlayerLogged[i] == 0)
			{//если игрок заспавнился, И НЕ залогинился, то:
				if((PosX < -1655 || PosX > -1649 || PosY < 1204 || PosY > 1210 || PosZ < 18 || PosZ > 24) &&
				(PosX != 0.0 && PosY != 0.0 && PosZ != 0.0))
				{//если игрок САМ изменил координаты, то:
					if(playlogcount[i] == 1)
					{
						swper = 12;//спавн без логирования
					}
					if(playlogcount[i] != 1)
					{
						playlogcount[i] = 1;
					}
				}
			}
			dopper333 = 0;//контроль запаса патров и удаление чит-слотов
			for(new j = 0; j < 13; j++)//читаем все слоты
			{
				GetPlayerWeaponData(i, j, play333weap[j], play333ammo[j]);
			}
			if(play333ammo[0] > 1){play333ammo[0] = 1; dopper333 = 1;}//выравнивание запаса патронов
			if(play333ammo[1] > 1){play333ammo[1] = 1; dopper333 = 1;}
			if(play333ammo[2] > 2000){play333ammo[2] = 2000; dopper333 = 1;}
			if(play333ammo[3] > 2000){play333ammo[3] = 2000; dopper333 = 1;}
			if(play333ammo[4] > 5000){play333ammo[4] = 5000; dopper333 = 1;}
			if(play333ammo[5] > 5000){play333ammo[5] = 5000; dopper333 = 1;}
			if(play333ammo[6] > 2000){play333ammo[6] = 2000; dopper333 = 1;}
			if(play333weap[7] != 0 && PlayerInfo[i][pAdmin] == 0){play333weap[7] = 0; play333ammo[7] = 0; dopper333 = 1;}
			if((play333weap[7] == 35 || play333weap[7] == 36) && play333ammo[7] > 2000){play333ammo[7] = 2000; dopper333 = 1;}
			if((play333weap[7] == 37 || play333weap[7] == 38) && play333ammo[7] > 10000){play333ammo[7] = 10000; dopper333 = 1;}
			if(play333ammo[8] > 2000){play333ammo[8] = 2000; dopper333 = 1;}
			if(play333ammo[9] > 2000){play333ammo[9] = 2000; dopper333 = 1;}
			if(play333weap[10] >= 10 && play333weap[10] <= 13){play333weap[10] = 0; play333ammo[10] = 0; dopper333 = 1;}//удаление ВООБЩЕ ЗАПРЕЩЁННЫХ предметов
			if(play333ammo[10] > 1){play333ammo[10] = 1; dopper333 = 1;}
			if((play333weap[11] == 44 || play333weap[11] == 45) && PlayerInfo[i][pAdmin] == 0){play333weap[11] = 0; play333ammo[11] = 0; dopper333 = 1;}
			if(play333ammo[11] > 1){play333ammo[11] = 1; dopper333 = 1;}
			if(dopper333 == 1)
			{
				ResetPlayerWeapons(i);//отбираем оружие и предметы
				for(new j = 0; j < 13; j++)//сохраняем все слоты
				{
					GivePlayerWeapon(i, play333weap[j], play333ammo[j]);
				}
			}
			if(swper != 0)//если указатель НЕ равен 0, то:
			{
				switch(swper)
				{
					case 1: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - не заспавнился в течение трёх минут !", aa333, i);
					case 2: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за смену ника ( f. %s ) !", aa333, i, RealName[i]);
					case 3: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за ношение запрещённого предмета !", aa333, i);
					case 4: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за ношение запрещённого оружия !", aa333, i);
					case 5: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за побег из тюрьмы (или из-под стражи) !", aa333, i);
#if (MOD4CINS == 1)
					case 6: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за спам в чате (или в командах) !", aa333, i);
					case 7: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за чит (2), мешающий работе сервера !", aa333, i);
#endif
#if (MOD44INS == 1)
					case 10: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за FLY-чит (или спидхак) !", aa333, i);
#endif
#if (MOD66INS > 1)
					case 11: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - ошибка координат спавна !", aa333, i);
#endif
					case 12: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - спавн без логирования !", aa333, i);
					case 13: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за чит (3), мешающий работе сервера !", aa333, i);
					case 14: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - не залогинился !", aa333, i);
				}
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);

				SetTimerEx("PlayKick", 300, 0, "i", i);
//    			Kick(i);//кик игрока
			}
//----- антикрашер игроков - 8 (2018-2020, краш обнаружен на версии 0.3.7) -----
			cr8d1 = GetPlayerState(i);
			cr8d2 = GetPlayerVehicleSeat(i);
			if((cr8d1 == 1 && cr8d2 != -1) || (cr8d1 == 2 && cr8d2 != 0) || (cr8d1 == 3 && cr8d2 < 1))
			{
				crash8count[i] = 10;
			}
			if(crash8count[i] == 10)
			{
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 8 !", RealName[i], i);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
				crash8count[i] = 0;
			}
//-------------------- антикрашер игроков - 8 (конец) --------------------------
			if((-1602 < PosX < -1193 && 840 < PosY < 1158 && 973 < PosZ < 1101) ||
			(-1547 < PosX < -1247 && 1506 < PosY < 1705 && 1002 < PosZ < 1123))//сравниваем координаты
			{//игрок в зоне дерби
				if(DerbyID[i] == 0) { DerbyID[i] = 1; }//игрок только попал в зону дерби
			}
			else//игрок НЕ в зоне дерби
			{
				if(DerbyID[i] == 2) { DerbyID[i] = 3; }//игрок только покинул зону дерби
			}
			if(DerbyID[i] == 1)//игрок только попал в зону дерби
			{
				SendClientMessage(i, COLOR_YELLOW, "Russian_Drift: {FF0000}Вы в зоне дерби.");
			}
			if(DerbyID[i] == 3)//игрок только покинул зону дерби
			{
				SendClientMessage(i, COLOR_YELLOW, "Russian_Drift: {00FF00}Вы покинули зону дерби.");
				if(PlayerInfo[i][pPrisonsec] == 0)//если игрока НЕ посадили в тюрьму, то:
				{
					for(new j = 0; j < 13; j++)//заполняем слоты оружия и предметов
					{
						GivePlayerWeapon(i, playweap[i][j], playammo[i][j]);
					}
				}
			}
			if(DerbyID[i] == 3) { DerbyID[i] = 0; }//делаем отметку, что игрок НЕ в зоне дерби
			if(DerbyID[i] == 1)//если игрок только попал в зону дерби, то:
			{
				for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
				{
					GetPlayerWeaponData(i, j, playweap[i][j], playammo[i][j]);
				}
				ResetPlayerWeapons(i);//отбираем оружие и предметы
				if(DerbyID[i] == 1) { DerbyID[i] = 2; }//устанавливаем маркер, что игрок уже находится в зоне дерби
			}
			if(i >= Wind1SA && i < Wind2SA)//если ИД игрока "попадает" в "окно" автосохранения аккаунтов, то:
			{//делаем автосохранение этого аккаунта
				OnPlayerSaveA(i);
				if(idgangsave[i] > 0)
				{
					GangSave(idgangsave[i]);//запись ID банды в файл
				}
			}
		}
	}
	if(ct9delay != 0) { ct9delay++; }
	if(ct9delay >= 5) { ct9delay = 0; }
	if(nucexplos == 0 && nucexptime == -100)//если активна автоматическая отмена ядерного взрыва, то:
	{
		format(string, sizeof(string), "Russian_Drift: {00FF00}Последствия ядерного взрыва были автоматически ликвидированы.");
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		nucexplos = 0;
		nucexptime = 0;
	}
	if(Wind2SA < (MAX_PLAYERS - 1))//если конец "окна" автосохранения аккаунтов меньше числа слотов сервера, то:
	{//сдвигаем "окно" в сторону увеличения ИД игроков
		Wind1SA = Wind1SA + WWindSA;
		Wind2SA = Wind2SA + WWindSA;
	}
	else//иначе:
	{
		Wind1SA = 0;//обнуляем начало "окна" автосохранения аккаунтов
		Wind2SA = WWindSA;//задаём конец "окна" автосохранения аккаунтов
	}
	return 1;
}

public FiveSecTimer()
{
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	EndConD = timecor[4];
	EndConM = timecor[3];
	EndConY = timecor[2];
	new string[256];
	ReadCorTime();//чтение коррекции времени
	gettime(timecor[0], timecor[1]);
	TimCor();//коррекция времени
	if(timecor[8] == 1)//если включено реальное время, то:
	{
		format(string, sizeof string, "%s%d:%s%d", (timecor[0] < 10) ? ("0") : (""), timecor[0], (timecor[1] < 10) ? ("0") : (""), timecor[1]);
		TextDrawSetString(Times, string);
	}
	else
	{
		format(string, sizeof string, "12:00");
		TextDrawSetString(Times, string);
	}
	if(oldhour != timecor[0])
	{
		oldhour = timecor[0];
		SetWeather(1);//устанавливаем ID погоды на 1
		GlWeat = 1;
		SetGravity(0.008000);//устанавливаем гравитацию на 0.008
		GlGrav = 0.008000;
		if(timecor[8] == 1)//если включено реальное время, то:
		{
			SetWorldTime(timecor[0]);
			GlTime = timecor[0];
			TimePlay(timecor[0]);
		}
		else
		{
			SetWorldTime(12);
			GlTime = 12;
			TimePlay(12);
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(SnowONOFF[i] == 1)//если на сервере ядерный взрыв, то:
			{
				SendClientMessage(i, COLOR_RED, " Внимание !!! На сервере был произведён ядерный взрыв !!!");
				SendClientMessage(i, COLOR_RED, " Радиационный фон превышен в тысячи раз !!! Спасайтесь, кто как может.....");
			}
		}
	}
	new ssss[256], impf[256];
	new impdd = 0;
	new impdd2 = -600;
	while(impdd < 10)//поиск файла импорта команд
	{
		format(impf, 256, "data/aimpcmd/%i.txt", impdd);
		if(fexist(impf))
		{
			impdd2 = impdd;
			break;
		}
		impdd++;
	}
	if(impdd2 != -600)//если файл импорта команд был найден, то:
	{
		new data1[32], data2[32], data3[32], data4[32];//чтение файла импорта команд
		new impcon[7], impcon22[2], impdatas[3][128], impdatad[128];
		format(impf, 256, "data/aimpcmd/%i.txt", impdd2);
		new impfile = ini_openFile(impf);
		if(impfile >= 0)
		{
			impcon[0] = ini_getString(impfile, "Impservc", impdatas[0]);
			impcon[1] = ini_getString(impfile, "ImpFSc", impdatas[1]);
			ini_closeFile(impfile);
		}
		impcon22[0] = 0;//проверка файла импорта команд на корректность данных
		impcon22[1] = 0;
		if(impcon[0] == 0 && strlen(impdatas[0]) != 0)
		{//если команда была прочитана, и её длина не равна нулю, то:
			impcon22[0] = 1;
		}
		if(impcon[1] == 0 && strlen(impdatas[1]) != 0)
		{//если FS-команда была прочитана, и её длина не равна нулю, то:
			impcon22[1] = 1;
		}
		if(impcon22[0] == 0 && impcon22[1] == 0)
		{
			impcon[2] = 1;//ошибка: команды не прочитаны
		}
		if(impcon22[0] == 1 && impcon22[1] == 1)
		{
			impcon[2] = 2;//ошибка: импортировано 2 команды
		}
		if(impcon22[0] == 1 && impcon22[1] == 0)//если определена команда, то:
		{
			impcon[2] = 3;//ошибка: команда не определена
			new idx = 0;
			impdatad = strtok(impdatas[0], idx);
			if(strcmp(impdatad, "/relhouses", false) == 0)
			{
				impcon[2] = 101;//ок, команда /relhouses
			}
			if(strcmp(impdatad, "/reloadbus", false) == 0)
			{
				impcon[2] = 102;//ок, команда /reloadbus
			}
			if(strcmp(impdatad, "/export", false) == 0)
			{
				impcon[2] = 103;//ок, команда /export
			}
			if(strcmp(impdatad, "/rsnp", false) == 0)
			{
				impcon[2] = 104;//ок, команда /rsnp
			}
			if(strcmp(impdatad, "/sn1del", false) == 0)
			{
				impcon[2] = 105;//ок, команда /sn1del
			}
			if(strcmp(impdatad, "/sn1add", false) == 0)
			{
				impcon[2] = 106;//ок, команда /sn1add
			}
			if(strcmp(impdatad, "/sn1chn", false) == 0)
			{
				impcon[2] = 107;//ок, команда /sn1chn
			}
			if(strcmp(impdatad, "/rsn2", false) == 0)
			{
				impcon[2] = 108;//ок, команда /rsn2
			}
		}
		impcon[3] = 0;//если нет плагина FileFunctions
		if(impcon22[0] == 0 && impcon22[1] == 1)//если определена FS-команда, то:
		{
			new idx = 0;
			data1 = strtok(impdatas[1], idx);
			data2 = strtok(impdatas[1], idx);
			data3 = strtok(impdatas[1], idx);
			if(strcmp(data1, "/rcon", false) == 0)
			{
				impcon[2] = 5;//ошибка: FS-команда не определена
				if(strcmp(data2, "loadfs", false) == 0)
				{
					impcon[2] = 201;//ок, FS-команда loadfs
				}
				if(strcmp(data2, "unloadfs", false) == 0)
				{
					impcon[2] = 202;//ок, FS-команда unloadfs
				}
				if(strcmp(data2, "reloadfs", false) == 0)
				{
					impcon[2] = 203;//ок, FS-команда reloadfs
				}
				if(strlen(data3) == 0)
				{
					impcon[2] = 6;//ошибка: в FS-команде нет имени фильтрскрипта
				}
			}
			else
			{
				impcon[2] = 4;//ошибка: в FS-команде нет префикса /rcon
			}
		}
		if(impcon[2] == 101)//ок, команда /relhouses
		{
			new file[HOUSEFILE_LENGTH], tmp;
			Loop(i, MAX_PLAYERS)
			{
				if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		 		{
		  			tmp = GetPVarInt(i, "LastHouseCP");
					format(file, sizeof(file), FILEPATH, tmp);
		  			if(!strcmp(GetHouseOwner(tmp), RealName[i], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
					{
		  				dini_IntSet(file, "QuitInHouse", 1);
			    		#if defined GH_HOUSECARS
			    			SaveHouseCar(tmp);
		       			#endif
					}
				}
			}
			UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
			SetTimer("rmtrelhoyses1", 500, 0);
		}
		if(impcon[2] == 102)//ок, команда /reloadbus
		{
			UnloadBusSystem();//выгрузка системы бизнесов
			SetTimer("rmtreloadbus1", 500, 0);
		}
		impcon[4] = 0;//маркер ошибок: 1 - чтение сетевых экранов, 2 - чтение файлов с никами
		if(impcon[2] == 103)//ок, команда /export
		{
			new idx = 0;
			data1 = strtok(impdatas[0], idx);
			data2 = strtok(impdatas[0], idx);
			if(strlen(data2) >= 1)
			{
				format(impdatad, sizeof(impdatad), "%s", data2);//читаем параметр (имя аккаунта)
			}
			else
			{
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					impcon[4] = 3;//ошибка: команда /export без параметра
				}
			}
			if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
			{
				strdel(dAccName[MAX_PLAYERS - 1], 0, 64);
				strcat(dAccName[MAX_PLAYERS - 1], impdatad);
				if(AccDataLoadUn(MAX_PLAYERS - 1) == 1)//чтение аккаунта
				{//если аккаунт существует, то:
					new locstr[128];
					format(locstr, sizeof(locstr), "players/export/%s.ini", impdatad);
					if(fexist(locstr))//если аккаунт уже был экспортирован, то:
					{
						fremove(locstr);//удаляем старый экспортированный аккаунт
					}
					new File: hFile = fopen(locstr, io_write);//запись экспортированного аккаунта
					if (hFile)
					{
						new var[128];
						format(var, 128, "Key=%s\n",admData[MAX_PLAYERS - 1][dKey]);fwrite(hFile, var);
						format(var, 128, "TDReg=%s\n",admData[MAX_PLAYERS - 1][dTDReg]);fwrite(hFile, var);
						format(var, 128, "DEndConD=%d\n",admData[MAX_PLAYERS - 1][dEndConD]);fwrite(hFile, var);
						format(var, 128, "DEndConM=%d\n",admData[MAX_PLAYERS - 1][dEndConM]);fwrite(hFile, var);
						format(var, 128, "DEndConY=%d\n",admData[MAX_PLAYERS - 1][dEndConY]);fwrite(hFile, var);
						format(var, 128, "IPAdr=%s\n",admData[MAX_PLAYERS - 1][dIPAdr]);fwrite(hFile, var);
						format(var, 128, "MinLog=%d\n",admData[MAX_PLAYERS - 1][dMinlog]);fwrite(hFile, var);
						format(var, 128, "AdminLevel=%d\n",admData[MAX_PLAYERS - 1][dAdmin]);fwrite(hFile, var);
						format(var, 128, "AdminShadow=%d\n",admData[MAX_PLAYERS - 1][dAdmshad]);fwrite(hFile, var);
						format(var, 128, "AdminLive=%d\n",admData[MAX_PLAYERS - 1][dAdmlive]);fwrite(hFile, var);
						format(var, 128, "AdminScanCom=%d\n",admData[MAX_PLAYERS - 1][dAdmscancom]);fwrite(hFile, var);
						format(var, 128, "Registered=%d\n",admData[MAX_PLAYERS - 1][dReg]);fwrite(hFile, var);
						format(var, 128, "Prison=%d\n",admData[MAX_PLAYERS - 1][dPrison]);fwrite(hFile, var);
						format(var, 128, "Prisonsec=%d\n",admData[MAX_PLAYERS - 1][dPrisonsec]);fwrite(hFile, var);
						format(var, 128, "Muted=%d\n",admData[MAX_PLAYERS - 1][dMuted]);fwrite(hFile, var);
						format(var, 128, "Mutedsec=%d\n",admData[MAX_PLAYERS - 1][dMutedsec]);fwrite(hFile, var);
						format(var, 128, "Money=%d\n",admData[MAX_PLAYERS - 1][dMoney]);fwrite(hFile, var);
						format(var, 128, "Kills=%d\n",admData[MAX_PLAYERS - 1][dKills]);fwrite(hFile, var);
						format(var, 128, "Deaths=%d\n",admData[MAX_PLAYERS - 1][dDeaths]);fwrite(hFile, var);
						format(var, 128, "Police=%d\n",admData[MAX_PLAYERS - 1][dPolice]);fwrite(hFile, var);
						format(var, 128, "Deport=%d\n",admData[MAX_PLAYERS - 1][dDeport]);fwrite(hFile, var);
						format(var, 128, "RecPM=%d\n",admData[MAX_PLAYERS - 1][dRecPM]);fwrite(hFile, var);
						format(var, 128, "Wanted=%d\n",admData[MAX_PLAYERS - 1][dWanted]);fwrite(hFile, var);
						format(var, 128, "Lock=%d\n",admData[MAX_PLAYERS - 1][dLock]);fwrite(hFile, var);
						format(var, 128, "Gang=%d\n",admData[MAX_PLAYERS - 1][dGang]);fwrite(hFile, var);
						format(var, 128, "GangLvl=%d\n",admData[MAX_PLAYERS - 1][dGangLvl]);fwrite(hFile, var);
						format(var, 128, "Pass_data1=%s\n",admData[MAX_PLAYERS - 1][dPass_data1]);fwrite(hFile, var);
						format(var, 128, "Pass_inout1=%s\n",admData[MAX_PLAYERS - 1][dPass_inout1]);fwrite(hFile, var);
						format(var, 128, "Pass_ver1=%s\n",admData[MAX_PLAYERS - 1][dPass_ver1]);fwrite(hFile, var);
						format(var, 128, "Pass_count1=%d\n",admData[MAX_PLAYERS - 1][dPass_count1]);fwrite(hFile, var);
						format(var, 128, "Pass_data2=%s\n",admData[MAX_PLAYERS - 1][dPass_data2]);fwrite(hFile, var);
						format(var, 128, "Pass_inout2=%s\n",admData[MAX_PLAYERS - 1][dPass_inout2]);fwrite(hFile, var);
						format(var, 128, "Pass_ver2=%s\n",admData[MAX_PLAYERS - 1][dPass_ver2]);fwrite(hFile, var);
						format(var, 128, "Pass_count2=%d\n",admData[MAX_PLAYERS - 1][dPass_count2]);fwrite(hFile, var);
						format(var, 128, "Pass_data3=%s\n",admData[MAX_PLAYERS - 1][dPass_data3]);fwrite(hFile, var);
						format(var, 128, "Pass_inout3=%s\n",admData[MAX_PLAYERS - 1][dPass_inout3]);fwrite(hFile, var);
						format(var, 128, "Pass_ver3=%s\n",admData[MAX_PLAYERS - 1][dPass_ver3]);fwrite(hFile, var);
						format(var, 128, "Pass_count3=%d\n",admData[MAX_PLAYERS - 1][dPass_count3]);fwrite(hFile, var);
						format(var, 128, "Pass_data4=%s\n",admData[MAX_PLAYERS - 1][dPass_data4]);fwrite(hFile, var);
						format(var, 128, "Pass_inout4=%s\n",admData[MAX_PLAYERS - 1][dPass_inout4]);fwrite(hFile, var);
						format(var, 128, "Pass_ver4=%s\n",admData[MAX_PLAYERS - 1][dPass_ver4]);fwrite(hFile, var);
						format(var, 128, "Pass_count4=%d\n",admData[MAX_PLAYERS - 1][dPass_count4]);fwrite(hFile, var);
						format(var, 128, "PassMode=%d\n",admData[MAX_PLAYERS - 1][dPassMode]);fwrite(hFile, var);
						format(var, 128, "PassDel=%d\n",admData[MAX_PLAYERS - 1][dPassDel]);fwrite(hFile, var);
						format(var, 128, "PassLock=%d\n",admData[MAX_PLAYERS - 1][dPassLock]);fwrite(hFile, var);
						format(var, 128, "PassError=%d\n",admData[MAX_PLAYERS - 1][dPassError]);fwrite(hFile, var);
						fclose(hFile);
					}
					if(!fexist(locstr))//если аккаунт НЕ был экспортирован, то:
					{
						if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
						{
							impcon[4] = 5;//ошибка: команда /export , не создан путь: scriptfiles/players/export/
						}
					}
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						format(ssss, 256, " **** Удалённое экспортирование аккаунта игрока [%s] .", impdatad);
						print(ssss);
					}
				}
				else//если аккаунта НЕ существует, то:
				{
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						impcon[4] = 4;//ошибка: команда /export , аккаунта не существует
					}
				}
			}
		}
		if(impcon[2] == 104)//ок, команда /rsnp
		{
		    new file, f[128], ssss22[64];//чтение per-файла
			format(f, sizeof(f), "data/scrnet1/_scrnetper.ini");
			if(!fexist(f))//если файла не существует, то:
			{//создаём файл
				file = ini_createFile(f);
				if(file >= 0)
				{
					for(new i = 0; i < 20; i++)
					{
						format(ssss22, 64, "Name%03d", i);
					    ini_setString(file, ssss22, "");//записываем в файл пустую строку (за место ника)
					}
					ini_closeFile(file);
				}
			}
			file = ini_openFile(f);//читаем файл
			if(file >= 0)
			{
				for(new i = 0; i < 20; i++)
				{
					strdel(scrnetper[i], 0, 64);
					format(ssss22, 64, "Name%03d", i);
				    ini_getString(file, ssss22, scrnetper[i]);
					if(strlen(scrnetper[i]) == 0)//если прочитана пустая строка (за место ника), то:
					{
						strcat(scrnetper[i], "*** INV_PL_ID");//записываем в слот несуществующий ник
					}
					else//иначе, если прочитана НЕ пустая строка, то:
					{
						if(strlen(scrnetper[i]) > 25 || InpNameControl(scrnetper[i]) == 0)//если ник содержит ошибки, то:
						{
							if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
							{
								impcon[5] = i;//сохраняем номер слота с ошибкой
								impcon[4] = 2;//устанавливаем маркер ошибки в 2 (чтение per-файла)
							}
							strdel(scrnetper[i], 0, 64);//очищаем слот
							strcat(scrnetper[i], "*** INV_PL_ID");//записываем в слот несуществующий ник
						}
					}
				}
				ini_closeFile(file);
			}
			format(ssss, 256, " **** Удалённая перезагрузка per-файла сетевых экранов.");
			print(ssss);
			SendAdminMessage22(COLOR_YELLOW, ssss, 1, 3);
		}
		if(impcon[2] == 105)//ок, команда /sn1del
		{
			new idx = 0;
			data1 = strtok(impdatas[0], idx);
			data2 = strtok(impdatas[0], idx);
			if(strlen(data2) >= 1)
			{
				impcon[5] = strval(data2);//читаем параметр (номер IP-строки)
			}
			else
			{
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					impcon[4] = 3;//ошибка: команда /sn1del без параметра
				}
			}
			if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
			{
				new strdln[1000], locdata1;
				format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (NumSt = %d AND Active = 1)", impcon[5]);//создаём запрос БД
				qscrnet1db[MAX_PLAYERS - 1] = db_query(scrnet1db, strdln);//отправляем запрос БД
				locdata1 = db_num_rows(qscrnet1db[MAX_PLAYERS - 1]);//переведём результат запроса в число найденных строк в БД
				db_free_result(qscrnet1db[MAX_PLAYERS - 1]);//очищаем результат запроса БД
				if(locdata1 == 0)//если строка НЕ найдена в БД, то:
				{
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						impcon[4] = 4;//ошибка: команда /sn1del , IP-строка в БД не найдена
					}
				}
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					ScrNet1Save((MAX_PLAYERS - 1), 3, impcon[5]);//запись изменённой строки в БД (удаление записи из строки)
					format(ssss, 256, " **** Удалённое удаление группы IP-адресов из IP-строки %d сетевого экрана 1 .", impcon[5]);
					print(ssss);
					SendAdminMessage22(COLOR_RED, ssss, 1, 3);
				}
			}
		}
		if(impcon[2] == 106)//ок, команда /sn1add
		{
			new idx = 0;
			data1 = strtok(impdatas[0], idx);
			data2 = strtok(impdatas[0], idx);
			data3 = strtok(impdatas[0], idx);
			data4 = strtok(impdatas[0], idx);
			if(strlen(data2) >= 1)
			{
				if(strlen(data3) >= 1)
				{
					if(strlen(data4) >= 1)
					{
						format(impdatad, sizeof(impdatad), "%s %s %s", data2, data3, data4);//читаем параметры (группу IP-адресов)
					}
					else
					{
						if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
						{
							impcon[4] = 3;//ошибка: команда /sn1add без одного из параметров
						}
					}
				}
				else
				{
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						impcon[4] = 3;//ошибка: команда /sn1add без одного из параметров
					}
				}
			}
			else
			{
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					impcon[4] = 3;//ошибка: команда /sn1add без одного из параметров
				}
			}
			if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
			{
				if(ScrNetCC((MAX_PLAYERS - 1), impdatad, 1, 0) == 0)
				{//проверка группы IP-адресов на ошибки и посторонние символы
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						impcon[4] = 4;//ошибка: команда /sn1add , неверная запись группы IP-адресов
					}
				}
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					new strdln[2000], locdata1;
					format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (Active = 1 ");//создаём запрос БД
					format(strdln, sizeof(strdln), "%sAND %d = SN1b1 AND %d = SN1b2 AND %d = SN1b3 AND %d = SN1b4 ", strdln, scrnet1b[0][MAX_PLAYERS - 1], scrnet1b[1][MAX_PLAYERS - 1], scrnet1b[2][MAX_PLAYERS - 1], scrnet1b[3][MAX_PLAYERS - 1]);
					format(strdln, sizeof(strdln), "%sAND %d = SN1e1 AND %d = SN1e2 AND %d = SN1e3 AND %d = SN1e4)", strdln, scrnet1e[0][MAX_PLAYERS - 1], scrnet1e[1][MAX_PLAYERS - 1], scrnet1e[2][MAX_PLAYERS - 1], scrnet1e[3][MAX_PLAYERS - 1]);
					qscrnet1db[MAX_PLAYERS - 1] = db_query(scrnet1db, strdln);//отправляем запрос БД
					locdata1 = db_num_rows(qscrnet1db[MAX_PLAYERS - 1]);//переведём результат запроса в число найденных строк в БД
					db_free_result(qscrnet1db[MAX_PLAYERS - 1]);//очищаем результат запроса БД
					if(locdata1 >= 1)//если была найдена хотя бы 1 строка с совпадающеё группой IP-адресов в БД, то:
					{
						if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
						{
							impcon[4] = 5;//ошибка: команда /sn1add , добавляемая группа IP-адресов - уже имеется
						}
					}
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (IDCopy = 1 AND Active = 0)");//создаём запрос БД
						qscrnet1db[MAX_PLAYERS - 1] = db_query(scrnet1db, strdln);//отправляем запрос БД
						locdata1 = db_num_rows(qscrnet1db[MAX_PLAYERS - 1]);//переведём результат запроса в число найденных строк в БД
						if(locdata1 >= 1)//если была найдена хотя бы 1 строка с удалённой записью в БД, то:
						{
							new buffer[64];
							db_get_field(qscrnet1db[MAX_PLAYERS - 1], 1, buffer, 64);//читаем из первой найденой записи БД номер строки
							db_free_result(qscrnet1db[MAX_PLAYERS - 1]);//очищаем результат запроса БД
							locdata1 = strval(buffer);
							ScrNet1Save(MAX_PLAYERS - 1, 2, locdata1);//запись изменённой строки в БД (замена старой строки новыми данными)
						}
						else//иначе, если строк с удалённой записью НЕ найдено в БД, то:
						{
							db_free_result(qscrnet1db[MAX_PLAYERS - 1]);//очищаем результат запроса БД
							format(strdln, sizeof(strdln), "SELECT * FROM _scrnet1 WHERE (IDCopy = 1)");//создаём запрос БД
							qscrnet1db[MAX_PLAYERS - 1] = db_query(scrnet1db, strdln);//отправляем запрос БД
							locdata1 = db_num_rows(qscrnet1db[MAX_PLAYERS - 1]);//переведём результат запроса в число найденных строк в БД
							db_free_result(qscrnet1db[MAX_PLAYERS - 1]);//очищаем результат запроса БД
							ScrNet1Save(MAX_PLAYERS - 1, 1, locdata1);//запись изменённой строки в БД (добавление новой строки)
						}
						format(ssss, 256, " **** Удалённое добавление группы IP-адресов [%s] в IP-строку %d сетевого экрана 1 .", impdatad, locdata1);
						print(ssss);
						SendAdminMessage22(COLOR_YELLOW, ssss, 1, 3);
					}
				}
			}
		}
		if(impcon[2] == 107)//ок, команда /sn1chn
		{
		    new file, f[128], locmark, fdop[128];
			format(f, sizeof(f), "data/scrnet1/_scrnet1mark.ini");
			if(!fexist(f))//если файла не существует, то:
			{
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					impcon[4] = 3;//ошибка: команда /sn1chn , нет файла-указателя: _scrnet1mark
				}
			}
			if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
			{
				file = ini_openFile(f);//читаем файл
				if(file >= 0)
				{
					ini_getInteger(file, "Mark", locmark);//читаем указатель - на текущую БД сетевого экрана 1
					ini_closeFile(file);
				}
				if(locmark < 1 || locmark > 2)//если в файле-указателе - неверные данные, то:
				{
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						impcon[4] = 4;//ошибка: команда /sn1chn , неверные данные в файле-указателе: _scrnet1mark
					}
				}
				if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
				{
					if(locmark == 1)//меняем указатель - на текущую БД сетевого экрана 1 - на другой
					{
						locmark = 2;
					}
					else
					{
						locmark = 1;
					}
					format(fdop, sizeof(fdop), "data/scrnet1/_scrnet1%d.db", locmark);
					if(!fexist(fdop))//если файла не существует, то:
					{
						if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
						{
							impcon[5] = locmark;//сохраняем номер целевой БД
							impcon[4] = 5;//ошибка: команда /sn1chn , нет файла целевой БД: _scrnet1x
						}
					}
					if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
					{
						scrnet1mark = locmark;
						file = ini_openFile(f);//записываем файл
						if(file >= 0)
						{
							ini_setInteger(file, "Mark", scrnet1mark);//записываем указатель - на текущую БД сетевого экрана 1
							ini_closeFile(file);
						}
						conopen222 = 0;//отключение коннекта к серверу
						db_close(scrnet1db);//отключаем базу данных сетевого экрана 1 от сервера
						SetTimer("rmtsn1chn1", 1000, 0);
					}
				}
			}
		}
		if(impcon[2] == 108)//ок, команда /rsn2
		{
		    new file, f[128], ssss22[64], strload[128];//чтение сетевого экрана 2
		    format(f, sizeof(f), "data/scrnet2/_scrnet2.ini");
			if(!fexist(f))//если файла не существует, то:
			{//создаём файл
				file = ini_createFile(f);
				if(file >= 0)
				{
					for(new i = 0; i < 200; i++)
					{
						format(ssss22, 64, "ScrNet2%03d", i);
					    ini_setString(file, ssss22, "");//записываем в файл пустую строку (за место IP-адресов)
					}
					ini_closeFile(file);
				}
			}
			file = ini_openFile(f);//читаем файл
			if(file >= 0)
			{
				for(new i = 0; i < 200; i++)
				{
					strdel(strload, 0, 128);
					format(ssss22, 64, "ScrNet2%03d", i);
				    ini_getString(file, ssss22, strload);
					if(ScrNetCC(0, strload, 2, i) == 0)
					{//если IP-адреса содержат ошибки, или посторонние символы, то:
						if(impcon[4] == 0)//если маркер ошибки НЕ был установлен, то:
						{
							impcon[5] = i;//сохраняем номер слота с ошибкой
							impcon[4] = 1;//устанавливаем маркер ошибки в 1 (чтение сетевего экрана)
						}
						for(new j = 0; j < 4; j++)
						{//записываем в слот несуществующие IP-адреса (256.256.256.256 - -1.-1.-1.-1)
							scrnet2b[j][i] = 256;
							scrnet2e[j][i] = -1;
						}
						scrnet2b123[i] = -1;
						scrnet2e123[i] = -1;
					}
				}
				ini_closeFile(file);
			}
			format(ssss, 256, " **** Удалённая перезагрузка сетевого экрана 2 .");
			print(ssss);
			SendAdminMessage22(COLOR_YELLOW, ssss, 1, 3);
		}
		if(impcon[2] == 201 || impcon[2] == 202 || impcon[2] == 203)
		{
#if (MOD22INS == 0)
			format(ssss, 256, "%s %s", data2, data3);
			SendRconCommand(ssss);//отправка RCON-команды
#endif
#if (MOD22INS == 1)
			impcon[3] = 1;//если есть плагин FileFunctions, и нет фильтрскрипта
			format(ssss, 256, "filterscripts/%s.amx", data3);
			if(fileExists(ssss))
			{
				impcon[3] = 2;//если есть плагин FileFunctions, и есть фильтрскрипт
				format(ssss, 256, "%s %s", data2, data3);
				SendRconCommand(ssss);//отправка RCON-команды
			}
#endif
		}
		if(impcon[2] == 1)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда не прочитана");
		}
		if(impcon[2] == 2)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: импортировано 2 команды");
		}
		if(impcon[2] == 3)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда не определена");
		}
		if(impcon[2] == 4)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: в FS-команде нет префикса /rcon");
		}
		if(impcon[2] == 5)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: FS-команда не определена");
		}
		if(impcon[2] == 6)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: в FS-команде нет имени фильтрскрипта");
		}
		if(impcon[2] == 101)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /relhouses");
		}
		if(impcon[2] == 102)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /reloadbus");
		}
		if(impcon[4] == 0 && impcon[2] == 103)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /export");
		}
		if(impcon[4] == 3 && impcon[2] == 103)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /export без параметра");
		}
		if(impcon[4] == 4 && impcon[2] == 103)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /export , аккаунта не существует");
		}
		if(impcon[4] == 5 && impcon[2] == 103)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /export , не создан путь: scriptfiles/players/export/");
		}
		if(impcon[4] == 0 && impcon[2] == 104)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /rsnp");
		}
		if(impcon[4] == 2 && impcon[2] == 104)
		{
			format(ssss, 256, "ошибка: команда /rsnp , файл _scrnetper строка Name%03d", impcon[5]);
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], ssss);
		}
		if(impcon[4] == 0 && impcon[2] == 105)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /sn1del");
		}
		if(impcon[4] == 3 && impcon[2] == 105)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /sn1del без параметра");
		}
		if(impcon[4] == 4 && impcon[2] == 105)
		{
			format(ssss, 256, "ошибка: команда /sn1del , IP-строка %d в БД не найдена", impcon[5]);
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], ssss);
		}
		if(impcon[4] == 0 && impcon[2] == 106)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /sn1add");
		}
		if(impcon[4] == 3 && impcon[2] == 106)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /sn1add без одного из параметров");
		}
		if(impcon[4] == 4 && impcon[2] == 106)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /sn1add , неверная запись группы IP-адресов");
		}
		if(impcon[4] == 5 && impcon[2] == 106)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /sn1add , добавляемая группа IP-адресов - уже имеется");
		}
		if(impcon[4] == 0 && impcon[2] == 107)
		{
			format(ssss, 256, "ок, команда /sn1chn , текущая БД сетевого экрана 1 : _scrnet1%d", scrnet1mark);
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], ssss);
		}
		if(impcon[4] == 3 && impcon[2] == 107)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /sn1chn , нет файла-указателя: _scrnet1mark");
		}
		if(impcon[4] == 4 && impcon[2] == 107)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ошибка: команда /sn1chn , неверные данные в файле-указателе: _scrnet1mark");
		}
		if(impcon[4] == 5 && impcon[2] == 107)
		{
			format(ssss, 256, "ошибка: команда /sn1chn , нет файла целевой БД: _scrnet1%d", impcon[5]);
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], ssss);
		}
		if(impcon[4] == 0 && impcon[2] == 108)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, команда /rsn2");
		}
		if(impcon[4] == 1 && impcon[2] == 108)
		{
			format(ssss, 256, "ошибка: команда /rsn2 , файл _scrnet2 строка ScrNet2%03d", impcon[5]);
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], ssss);
		}
		if(impcon[2] == 201)
		{
			printf(" **** Удалённая загрузка фильтрскрипта %s .", data3);
		}
		if(impcon[2] == 202)
		{
			printf(" **** Удалённая выгрузка фильтрскрипта %s .", data3);
		}
		if(impcon[2] == 203)
		{
			printf(" **** Удалённая перезагрузка фильтрскрипта %s .", data3);
		}
		if(impcon[3] == 0 && impcon[2] == 201)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда loadfs");
		}
		if(impcon[3] == 0 && impcon[2] == 202)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда unloadfs");
		}
		if(impcon[3] == 0 && impcon[2] == 203)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда reloadfs");
		}
		if(impcon[3] == 1 && impcon[2] == 201)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда loadfs , FS не найден");
		}
		if(impcon[3] == 1 && impcon[2] == 202)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда unloadfs , FS не найден");
		}
		if(impcon[3] == 1 && impcon[2] == 203)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда reloadfs , FS не найден");
		}
		if(impcon[3] == 2 && impcon[2] == 201)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда loadfs , FS загружен");
		}
		if(impcon[3] == 2 && impcon[2] == 202)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда unloadfs , FS выгружен");
		}
		if(impcon[3] == 2 && impcon[2] == 203)
		{
			strdel(impdatas[2], 0, 128);
			strcat(impdatas[2], "ок, FS-команда reloadfs , FS перезагружен");
		}
		format(impf, 256, "data/aimpcmd/%i-ret.txt", impdd2);//создание файла-ответа
		if(fexist(impf))//если файл-ответа уже есть, то:
		{
			fremove(impf);//удаляем файл-ответа
		}
		impfile = ini_createFile(impf);//создаём файла-ответа
		if(impfile >= 0)
		{
			ini_setString(impfile, "ret", impdatas[2]);
			ini_closeFile(impfile);
		}
		format(impf, 256, "data/aimpcmd/%i.txt", impdd2);//удаление файла импорта команд
		if(fexist(impf))
		{
			fremove(impf);
		}
	}
	return 1;
}

forward rmtrelhoyses1();
public rmtrelhoyses1()
{
	print(" **** Удалённая перезагрузка системы домов.");
	SendClientMessageToAll(COLOR_RED, " **** Удалённая перезагрузка системы домов.");
	SetTimer("rmtrelhoyses2", 500, 0);
    return 1;
}

forward rmtrelhoyses2();
public rmtrelhoyses2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)//обнуление массива блокировок диалога ввода пароля
	{
		lockpas[i] = 0;
	}

    LoadHouses(); // Загрузка фс дома
    Loop(i, MAX_PLAYERS)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            SetPVarInt(i, "HousePrevTime", 0);
        }
    }
    return 1;
}

forward rmtreloadbus1();
public rmtreloadbus1()
{
	print(" **** Удалённая перезагрузка системы бизнесов.");
	SendClientMessageToAll(COLOR_RED, " **** Удалённая перезагрузка системы бизнесов.");
	SetTimer("rmtreloadbus2", 500, 0);
    return 1;
}

forward rmtreloadbus2();
public rmtreloadbus2()
{
	LoadBusSystem();//загрузка системы бизнесов
    return 1;
}

forward rmtsn1chn1();
public rmtsn1chn1()
{
	if(scrnet1mark == 1)//если указатель = 1, то: текущая БД: _scrnet11.db
	{
		scrnet1db = db_open("data/scrnet1/_scrnet11.db");//подключаем базу данных сетевого экрана 1 к серверу
	}
	if(scrnet1mark == 2)//если указатель = 2, то: текущая БД: _scrnet12.db
	{
		scrnet1db = db_open("data/scrnet1/_scrnet12.db");//подключаем базу данных сетевого экрана 1 к серверу
	}
	new ssss[256];
	format(ssss, 256, " **** Удалённая замена текущей БД сетевого экрана 1 на: _scrnet1%d .", scrnet1mark);
	print(ssss);
	SendAdminMessage22(COLOR_YELLOW, ssss, 1, 3);
	SetTimer("rmtsn1chn2", 1000, 0);
    return 1;
}

forward rmtsn1chn2();
public rmtsn1chn2()
{
	conopen222 = 1;//подключение коннекта к серверу
    return 1;
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new locstr[13][64], locstr44[64];
		for(new j = 0; j < 13; j++)//считать слоты оружия и слоты запаса патронов
		{
			GetPlayerWeaponData(targetid, j, playweap[targetid][j], playammo[targetid][j]);
			format(locstr44 ,sizeof(locstr44), "0");
			switch(playweap[targetid][j])
			{
				case 1: format(locstr44 ,sizeof(locstr44), "Кастет - %d", playammo[targetid][j]);
				case 2: format(locstr44 ,sizeof(locstr44), "Клюшка для гольфа - %d", playammo[targetid][j]);
				case 3: format(locstr44 ,sizeof(locstr44), "Резиновая дубинка - %d", playammo[targetid][j]);
				case 4: format(locstr44 ,sizeof(locstr44), "Нож - %d", playammo[targetid][j]);
				case 5: format(locstr44 ,sizeof(locstr44), "Бейсбольная бита - %d", playammo[targetid][j]);
				case 6: format(locstr44 ,sizeof(locstr44), "Лопата - %d", playammo[targetid][j]);
				case 7: format(locstr44 ,sizeof(locstr44), "Кий - %d", playammo[targetid][j]);
				case 8: format(locstr44 ,sizeof(locstr44), "Катана - %d", playammo[targetid][j]);
				case 9: format(locstr44 ,sizeof(locstr44), "Бензопила - %d", playammo[targetid][j]);
				case 14: format(locstr44 ,sizeof(locstr44), "Букет цветов - %d", playammo[targetid][j]);
				case 15: format(locstr44 ,sizeof(locstr44), "Трость - %d", playammo[targetid][j]);
				case 16: format(locstr44 ,sizeof(locstr44), "Граната - %d", playammo[targetid][j]);
				case 17: format(locstr44 ,sizeof(locstr44), "Слезоточивый газ - %d", playammo[targetid][j]);
				case 18: format(locstr44 ,sizeof(locstr44), "Коктейль Молотова - %d", playammo[targetid][j]);
				case 22: format(locstr44 ,sizeof(locstr44), "Пистолет - %d", playammo[targetid][j]);
				case 23: format(locstr44 ,sizeof(locstr44), "Пистолет с глушителем - %d", playammo[targetid][j]);
				case 24: format(locstr44 ,sizeof(locstr44), "Дезерт иигл - %d", playammo[targetid][j]);
				case 25: format(locstr44 ,sizeof(locstr44), "Дробовик - %d", playammo[targetid][j]);
				case 26: format(locstr44 ,sizeof(locstr44), "Обрез - %d", playammo[targetid][j]);
				case 27: format(locstr44 ,sizeof(locstr44), "SPAZ 12 - %d", playammo[targetid][j]);
				case 28: format(locstr44 ,sizeof(locstr44), "Узи - %d", playammo[targetid][j]);
				case 29: format(locstr44 ,sizeof(locstr44), "MP5 - %d", playammo[targetid][j]);
				case 30: format(locstr44 ,sizeof(locstr44), "АК-47 - %d", playammo[targetid][j]);
				case 31: format(locstr44 ,sizeof(locstr44), "М4 - %d", playammo[targetid][j]);
				case 32: format(locstr44 ,sizeof(locstr44), "Tes9 - %d", playammo[targetid][j]);
				case 33: format(locstr44 ,sizeof(locstr44), "Винтовка - %d", playammo[targetid][j]);
				case 34: format(locstr44 ,sizeof(locstr44), "Снайперская винтовка - %d", playammo[targetid][j]);
				case 35: format(locstr44 ,sizeof(locstr44), "Ракетная установка - %d", playammo[targetid][j]);
				case 36: format(locstr44 ,sizeof(locstr44), "РПГ - %d", playammo[targetid][j]);
				case 37: format(locstr44 ,sizeof(locstr44), "Огнемёт - %d", playammo[targetid][j]);
				case 38: format(locstr44 ,sizeof(locstr44), "Minigun - %d", playammo[targetid][j]);
				case 39: format(locstr44 ,sizeof(locstr44), "Взрывчатка - %d", playammo[targetid][j]);
				case 40: format(locstr44 ,sizeof(locstr44), "Кнопка для взрывчатки - %d", playammo[targetid][j]);
				case 41: format(locstr44 ,sizeof(locstr44), "Баллончик с краской - %d", playammo[targetid][j]);
				case 42: format(locstr44 ,sizeof(locstr44), "Огнетушитель - %d", playammo[targetid][j]);
				case 43: format(locstr44 ,sizeof(locstr44), "Фотоаппарат - %d", playammo[targetid][j]);
				case 44: format(locstr44 ,sizeof(locstr44), "Очки ночного видения - %d", playammo[targetid][j]);
				case 45: format(locstr44 ,sizeof(locstr44), "Инфракрасные очки - %d", playammo[targetid][j]);
				case 46: format(locstr44 ,sizeof(locstr44), "Парашют - %d", playammo[targetid][j]);
			}
			strdel(locstr[j], 0, 64);
			strcat(locstr[j], locstr44);
		}
		new cash = GetPVarInt(targetid, "PlMon");
		new deaths = PlayerInfo[targetid][pDeaths];
		new minlog = PlayerInfo[targetid][pMinlog];
		new kills = PlayerInfo[targetid][pKills];
		new admin = PlayerInfo[targetid][pAdmin];
		new per3 = 0, per4 = 0;
		if(PGang[targetid] == 0 || PGang[targetid] == -600){per3 = 0;}
		if(PGang[targetid] > 0){per3 = PGang[targetid];}
		if(PGang[targetid] == 0){per4 = 1;}
		new locper[16];
		if(GetPVarInt(targetid, "MnMode") == 1)
		{
			strcat(locper, "Alt & 2");
		}
		else
		{
			strcat(locper, "Y");
		}
//		new pistol = PlayerInfo[targetid][pPISTOL];
//		new PISTOL_SILENCED = PlayerInfo[targetid][pPISTOL_SILENCED];
//		new DESERT_EAGLE = PlayerInfo[targetid][pDESERT_EAGLE];
//		new SHOTGUN = PlayerInfo[targetid][pSHOTGUN];
//		new SAWNOFF_SHOTGUN = PlayerInfo[targetid][pSAWNOFF_SHOTGUN];
//		new SPAS12_SHOTGUN = PlayerInfo[targetid][pSPAS12_SHOTGUN];
//		new MICRO_UZI = PlayerInfo[targetid][pMICRO_UZI];
//		new MP5 = PlayerInfo[targetid][pMP5];
//		new AK47 = PlayerInfo[targetid][pAK47];
//		new M4 = PlayerInfo[targetid][pM4];
//		new SNIPERRIFLE = PlayerInfo[targetid][pSNIPERRIFLE];
		new coordsstring[512];
		SendClientMessage(playerid, COLOR_GREEN," _______________________________________");
		format(coordsstring, sizeof(coordsstring)," *** Статистика игрока [%s] ***   Время и дата регистрации: [%s] {B4B5B7}Установленное время: [%d]",RealName[targetid],PlayerInfo[targetid][pTDReg],LocTime[targetid]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Минут на сервере: [%d] Денег: [%d $] Убийств: [%d] Смертей: [%d] Админ LVL: [%d] Скрытость админа: [%d]",
		minlog,cash,kills,deaths,admin,PlayerInfo[targetid][pAdmshad]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," LVL полиции: [%d] Бессмертие [%d] Число затыков: [%d] Секунд затыка: [%d] Посадок в тюрьму: [%d] Секунд тюрьмы: [%d]",
		PlayerInfo[targetid][pPolice],PlayerInfo[targetid][pAdmlive],PlayerInfo[targetid][pMuted],PlayerInfo[targetid][pMutedsec],PlayerInfo[targetid][pPrison],PlayerInfo[targetid][pPrisonsec]);
//		format(coordsstring, sizeof(coordsstring)," Умения: Пистолет[%d/999] Пистолеты[%d/999] Дигл[%d/999] Дробовик[%d/999] Савны[%d/999]",pistol,PISTOL_SILENCED,DESERT_EAGLE,SHOTGUN,SAWNOFF_SHOTGUN);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		new plvw, data22;
		plvw = GetPlayerVirtualWorld(targetid);
		data22 = 0;
		if(plvw == 0) { data22 = 1; }
		if(plvw >= 1 && plvw <= 990) { data22 = 2; }
		if(plvw >= 1000 && plvw <= 1999) { data22 = 3; }
		if(plvw >= 2000 && plvw <= 2999) { data22 = 4; }
		if(plvw >= 3000 && plvw <= 3999) { data22 = 5; }
		if(plvw >= 4000 && plvw <= 4999) { data22 = 6; }
		if(plvw >= 5000 && plvw <= 5999) { data22 = 7; }
		if(plvw >= 6000 && plvw <= 6999) { data22 = 8; }
		if(plvw >= 7000 && plvw <= 7999) { data22 = 9; }
		if(plvw >= 8000 && plvw <= 8002) { data22 = 10; }
		if(plvw == 9990) { data22 = 11; }
		if(plvw >= 17001 && plvw <= 17010) { data22 = 12; }
		if(plvw >= 18001 && plvw <= 18005) { data22 = 13; }
		switch(data22)
		{
			case 0: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - ошибка !!!",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 1: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - основной.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 2: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - ДТ миры.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 3: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - дома.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 4: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - МП.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 5: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - гаражи.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 6: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - гонки.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 7: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - вирт. спавн.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 8: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - динамич. базы.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 9: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - гонки-2.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 10: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - банки.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 11: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - дерби-сумо.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 12: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - ДМ зоны.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
			case 13: format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s] Сканиров. команд сервера: [%d] Розыск: [%d] Виртуал. мир: [%d] - ДМ миры.",PlayerInfo[targetid][pDeport],PlayerInfo[targetid][pRecPM],locper,PlayerInfo[targetid][pAdmscancom],PlayerInfo[targetid][pWanted],plvw);
		}
//		format(coordsstring, sizeof(coordsstring)," Умения: Дробовик Спас[%d/999] Узи[%d/999] MP5[%d/999] AK-47[%d/999] M4[%d/999] Снайперская винтовка[%d/999]",SPAS12_SHOTGUN,MICRO_UZI,MP5,AK47,M4,SNIPERRIFLE);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
		if(admin >= 6)
		{
			new twenlim, restlim;
			Fmadmins(2, RealName[targetid], 0, twenlim, restlim);
			format(coordsstring,sizeof(coordsstring)," Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
			SendClientMessage(playerid, COLOR_GRAD1, coordsstring);
		}
		format(coordsstring, sizeof(coordsstring)," Предметы: Слот-0: [%s] Слот-1: [%s] Слот-9: [%s]",
		locstr[0],locstr[1],locstr[9]);
//		format(coordsstring, sizeof(coordsstring)," Умения: Дробовик Спас[%d/999] Узи[%d/999] MP5[%d/999] AK-47[%d/999] M4[%d/999] Снайперская винтовка[%d/999]",SPAS12_SHOTGUN,MICRO_UZI,MP5,AK47,M4,SNIPERRIFLE);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Предметы: Слот-10: [%s] Слот-11: [%s]",
		locstr[10],locstr[11]);
//		format(coordsstring, sizeof(coordsstring)," Умения: Дробовик Спас[%d/999] Узи[%d/999] MP5[%d/999] AK-47[%d/999] M4[%d/999] Снайперская винтовка[%d/999]",SPAS12_SHOTGUN,MICRO_UZI,MP5,AK47,M4,SNIPERRIFLE);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Оружие: Слот-2: [%s] Слот-3: [%s] Слот-4: [%s]",
		locstr[2],locstr[3],locstr[4]);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Оружие: Слот-5: [%s] Слот-6: [%s] Слот-7: [%s]",
		locstr[5],locstr[6],locstr[7]);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Оружие: Слот-8: [%s] Слот-12: [%s]",
		locstr[8],locstr[12]);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);

		format(coordsstring, sizeof(coordsstring)," Банда:  Название: [%s{B4B5B7}] Регистрация: [ %s ]",//Gangs system
		GName[per3],GTDReg[per3]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Банда:  Лидер: [%s] Уровень: [%d] Число игроков: [%d] ID: [%d] Разрешение приглашения: [%d]",
		GHead[per3],GangLvl[targetid],GPlayers[per3],per3,per4);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);

		if((PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[targetid][pAdmin] <= 9) ||
		PlayerInfo[playerid][pAdmin] >= 10)
		{
#if (MOD4DINS >= 1)
			if((PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[targetid][pAdmin] == 0) ||
			(PlayerInfo[playerid][pAdmin] <= 9 && playerid == targetid))
			{
				FnPrnPass(3, playerid, targetid);//печать для админа, данные статистики он-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
			}
			if(PlayerInfo[playerid][pAdmin] <= 9 && PlayerInfo[targetid][pAdmin] >= 1 && playerid != targetid)
			{
				FnPrnPass(4, playerid, targetid);//печать для админа, данные статистики он-лайн админа [pPass_ver1]
			}
			if(PlayerInfo[playerid][pAdmin] >= 10)
			{
				FnPrnPass(3, playerid, targetid);//печать для админа, данные статистики он-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
			}
#endif
#if (MOD4DINS == 1)
			format(coordsstring, sizeof(coordsstring)," Паспорт 1 : Всего очисток: [%d] Ошибок входных данных: [%d] (из 4-х)",
			PlayerInfo[targetid][pPassDel],PlayerInfo[targetid][pPassError]);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
#endif
#if (MOD4DINS >= 2 && MOD4DINS <= 4)
			format(coordsstring, sizeof(coordsstring)," Паспорта : Всего очисток: [%d] Ошибок входных данных: [%d] (из 4-х)",
			PlayerInfo[targetid][pPassDel],PlayerInfo[targetid][pPassError]);
			SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
#endif
		}

		SendClientMessage(playerid, COLOR_GREEN," _______________________________________");
	}
	return 1;
}

public MinServ()//таймер минут на сервере
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerInfo[i][pMinlog]++;
		}
	}

//------------------------------ BusSystem -------------------------------------
	new para1, file, f[256];
	for(new i; i < BUS_MAX; i++)//цикл для всех бизнесов
	{
		if(buscount[i] == 1 && busidplay[i] != -600)//если бизнес существует,
		{//и его владелец он-лайн, то:
			if(IsPlayerConnected(busidplay[i]) && playspabs[busidplay[i]] == 1 &&
			strcmp(RealName[busidplay[i]], busplayname[i], false) == 0)//дополнительная проверка на коннект игрока,
			{//спавн игрока, и его ник (в случае некорректного отключения от скрипта, или если игрок не заспавнился)
				busmoney[i]--;//счётчик минут бизнеса -1
				if(busmoney[i] > 0)//если счётчик минут бизнеса больше нуля, то:
				{
					format(f, 256, "bussystem/%i.ini", i);//записываем изменения в файл
					file = ini_openFile(f);
					if(file >= 0)
					{
				    	ini_setInteger(file, "Count", busmoney[i]);
						ini_closeFile(file);
					}
				}
				if(busmoney[i] <= 0)//если счётчик минут бизнеса меньше или равен нулю, то:
				{
					busmoney[i] = busminute[i];//копируем в счётчик минут бизнеса - минуты бизнеса
					format(f, 256, "bussystem/%i.ini", i);//записываем изменения в файл
					file = ini_openFile(f);
					if(file >= 0)
					{
				    	ini_setInteger(file, "Count", busmoney[i]);
						ini_closeFile(file);
					}
					para1 = GetPVarInt(busidplay[i], "PlMon");
					SetPVarInt(busidplay[i], "PlMon", GetPVarInt(busidplay[i], "PlMon") + busincome[i]);//прибавление дохода к счёту игрока
					new string[256];
					printf("[BusSystem] Игрок %s [%d] получил доход %d $ от своего бизнеса %s [ID: %d] .", RealName[busidplay[i]], busidplay[i], busincome[i], busname[i], i);
					format(string, sizeof(string), " Игрок %s [%d] получил доход %d $ от своего бизнеса %s .", RealName[busidplay[i]], busidplay[i], busincome[i], busname[i]);
					SendClientMessageToAll(0x00FFFFFF, string);
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[busidplay[i]], busidplay[i], para1);
				}
			}
		}
	}
//---------------------------- End BusSystem -----------------------------------

	return 1;
}

stock TimePlay(settime)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			LocTime[i] = settime;
		}
	}
	return 1;
}

//----- антикрашер игроков - 1 (сентябрь 2014, работает на 0.3z и выше !!!) ----
#if (MOD11INS >= 3)
stock BadFloat(Float:x)
{
	if(x >= 10.0 || x <= -10.0) return true;
	return false;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	new string[256];
	if(hittype == BULLET_HIT_TYPE_PLAYER && (BadFloat(fX) || BadFloat(fY) || BadFloat(fZ)))
	{
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 1 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 0;
	}
//----- антикрашер игроков - 4 (июль 2015, краш обнаружен на версии 0.3.7) -----
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(weaponid < 22 || weaponid > 38)
	{
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 4 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 0;
	}
	if(!(-20000.0 <= z <= 20000.0))
	{
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 4 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 0;
	}
//-------------------- антикрашер игроков - 4 (конец) --------------------------
//--- антикрашер игроков - 5 (сентябрь 2017, краш обнаружен на версии 0.3.7) ---
	if(crash5count[playerid] > 0) { crash5count[playerid]++; }
//-------------------- антикрашер игроков - 5 (конец) --------------------------
    return 1;
}
//-------------------- антикрашер игроков - 1 (конец) --------------------------
//--- антикрашер игроков - 5 (сентябрь 2017, краш обнаружен на версии 0.3.7) ---
//----- антикрашер игроков - 7 (июль 2017, краш обнаружен на версии 0.3.7) -----
//функция OnUnoccupiedVehicleUpdate работает корректно только на версии 0.3z-R4 и выше !!!
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
//----- антикрашер игроков - 8 (2018-2020, краш обнаружен на версии 0.3.7) -----
	if(passenger_seat > 0 && GetPlayerState(playerid) != 3)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	format(crash8str, 64, "%f", new_x);
	crash8dn[0] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", new_y);
	crash8dn[1] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", new_z);
	crash8dn[2] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", vel_x);
	crash8dn[3] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", vel_y);
	crash8dn[4] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", vel_z);
	crash8dn[5] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	if(crash8count[playerid] == 3)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	if(crash8dn[0] < -25000.0 || crash8dn[0] > 25000.0) { crash8count[playerid] = 4; }
	if(crash8dn[1] < -25000.0 || crash8dn[1] > 25000.0) { crash8count[playerid] = 4; }
	if(crash8dn[2] < -25000.0 || crash8dn[2] > 25000.0) { crash8count[playerid] = 4; }
	if(crash8dn[3] < -1000.0 || crash8dn[3] > 1000.0) { crash8count[playerid] = 4; }
	if(crash8dn[4] < -1000.0 || crash8dn[4] > 1000.0) { crash8count[playerid] = 4; }
	if(crash8dn[5] < -1000.0 || crash8dn[5] > 1000.0) { crash8count[playerid] = 4; }
	if(crash8count[playerid] == 4)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	if(crash8dn[0] == 0.000 && crash8dn[1] == 0.000 && crash8dn[2] == 0.000 &&
	crash8dn[3] == 0.000 && crash8dn[4] == 0.000 && crash8dn[5] == 0.000)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	if(crash8dn[3] == 0.000 && crash8dn[4] == 0.000 && crash8dn[5] == 1.000)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//-------------------- антикрашер игроков - 8 (конец) --------------------------
	if(vel_x != crash7vx[playerid] || vel_y != crash7vy[playerid] || vel_z != crash7vz[playerid])
	{
		crash5count[playerid] = 0;
		crash7count[playerid] = 0;
		crash7vx[playerid] = vel_x;
		crash7vy[playerid] = vel_y;
		crash7vz[playerid] = vel_z;
	}
	else
	{
		if(crash5count[playerid] > 0) { crash5count[playerid]++; }
		if(crash5count[playerid] == 0)
		{
			crash5count[playerid]++;
			SetTimerEx("PlayCrash5count", 1000, 0, "i", playerid);
		}
		crash7count[playerid]++;
	}
	return 1;
}
//-------------------- антикрашер игроков - 7 (конец) --------------------------
//-------------------- антикрашер игроков - 5 (конец) --------------------------
//--- антикрашер игроков - 5 (сентябрь 2017, краш обнаружен на версии 0.3.7) ---
forward PlayCrash5count(playerid);
public PlayCrash5count(playerid)
{
	if(crash5count[playerid] >= 4)
	{
		new string[256];
		format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за краш игроков - 5 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_YELLOW, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
	}
	crash5count[playerid] = 0;
	return 1;
}
#endif
//-------------------- антикрашер игроков - 5 (конец) --------------------------

//------------------------------ BusSystem -------------------------------------
forward reloadbus1(playerid);
public reloadbus1(playerid)
{
	UnloadBusSystem();//выгрузка системы бизнесов
	SetTimerEx("reloadbus2", 1000, 0, "i", playerid);
    return 1;
}

forward reloadbus2(playerid);
public reloadbus2(playerid)
{
	LoadBusSystem();//загрузка системы бизнесов
	SetTimerEx("reloadbus3", 1000, 0, "i", playerid);
    return 1;
}

forward reloadbus3(playerid);
public reloadbus3(playerid)
{
	new string[256];
	printf("[BusSystem] Админ %s [%d] перезагрузил систему бизнесов.", RealName[playerid], playerid);
	format(string, sizeof(string), " Админ %s [%d] перезагрузил систему бизнесов.", RealName[playerid], playerid);
	SendClientMessageToAll(0xFF0000FF, string);
    return 1;
}

public LoadBusSystem()//загрузка системы бизнесов
{
	new count = 0;
    new file, f[256];//чтение всех бизнесов
	for(new i; i < BUS_MAX; i++)
	{
		PickupID[i] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
	    format(f, 256, "bussystem/%i.ini", i);
		file = ini_openFile(f);
		if(file >= 0)
		{
			count++;
			buscount[i] = 1;//бизнес создан (сущесвует)
		    ini_getString(file, "BusName", busname[i]);
		    ini_getString(file, "PlayName", busplayname[i]);
		    ini_getInteger(file, "Cost", buscost[i]);
		    ini_getInteger(file, "Minute", busminute[i]);
		    ini_getInteger(file, "Income", busincome[i]);
		    ini_getInteger(file, "Day", busday[i]);
		    ini_getInteger(file, "BusVW", busvw[i]);
		    ini_getInteger(file, "BusInt", busint[i]);
		    ini_getFloat(file, "CordX", buscordx[i]);
		    ini_getFloat(file, "CordY", buscordy[i]);
		    ini_getFloat(file, "CordZ", buscordz[i]);
		    ini_getInteger(file, "Count", busmoney[i]);
			ini_closeFile(file);
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, i, busplayname[i],
			busvw[i], buscordx[i], buscordy[i], buscordz[i]);
		}
		else
		{
			buscount[i] = 0;//бизнес не создан (не сущесвует)
			strdel(busplayname[i], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
			strcat(busplayname[i], "*** INV_PL_ID");
			busday[i] = 0;//даём бизнесу право на его перекупку (покупку)
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, i, busplayname[i],
			0, 0.0, 0.0, 0.0);
		}
	}
	print(" ");
	printf(" %d бизнесов загружено.", count);

	ReadCorTime();//чтение коррекции времени
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	new string[256];
	for(new i; i < BUS_MAX; i++)
	{
		busidplay[i] = -600;//владелец бизнеса офф-лайн
		if(busday[i] == timecor[4])//если реальная дата равна дате окончания срока без права перекупки, то:
		{
			busday[i] = 0;//даём бизнесу право на его перекупку,
			format(f, 256, "bussystem/%i.ini", i);//и записываем изменения в файл
			file = ini_openFile(f);
			if(file >= 0)
			{
				ini_setInteger(file, "Day", busday[i]);
				ini_closeFile(file);
			}
		}
		if(buscount[i] == 1)//если бизнес создан, то:
		{
			PickupID[i] = CreateDynamicPickup(1274, 1, buscordx[i], buscordy[i], buscordz[i], busvw[i], busint[i], -1, 100.0);//создаём пикап бизнеса
			if(busday[i] == 0)//если у бизнеса есть право на его перекупку, то:
			{
				MapIconID[i] = CreateDynamicMapIcon(buscordx[i], buscordy[i], buscordz[i], 52, -1, busvw[i], busint[i], -1, 200.0);//создаём мап-иконку бизнеса
			}
			format(string, sizeof(string), "Бизнес: %s\nID: %d", busname[i], i);
			Nbus[i] = CreateDynamic3DTextLabel(string, 0x00FF00FF, buscordx[i], buscordy[i], buscordz[i]+0.70, 50,
			INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, busvw[i], busint[i], -1);//создаём 3D-текст бизнеса
		}
	}

	for(new i; i < MAX_PLAYERS; i++)
	{
		playspabs[i] = 0;//игрок не заспавнился
		playIDbus[i] = -600;//не существующий ИД бизнеса для игрока
		if(IsPlayerConnected(i))//если игрок в коннекте, то:
		{
			if(GetPlayerState(i) != 0)//если игрок уже заспавнился, то:
			{
				playspabs[i] = 1;//игрок заспавнился
				for(new j; j < BUS_MAX; j++)//цикл для всех бизнесов
				{
					if(buscount[j] == 1 && strcmp(RealName[i], busplayname[j], false) == 0)//если бизнес существует,
					{//и это бизнес игрока, то:
						busidplay[j] = i;//даём бизнесу ИД он-лайн игрока - владельца бизнеса
					}
				}
			}
		}
	}
	print(" ");
	print("--------------------------------------");
	print("     BusSystem успешно загружена! ");
	print("--------------------------------------\n");
	return 1;
}

public UnloadBusSystem()//выгрузка системы бизнесов
{
	for(new i; i < BUS_MAX; i++)
	{
		if(buscount[i] == 1)//если бизнес существует, то:
		{
			DestroyDynamicPickup(PickupID[i]);//удаляем пикап бизнеса
			if(busday[i] == 0)//если есть мап-иконка бизнеса, то:
			{
				DestroyDynamicMapIcon(MapIconID[i]);//удаляем мап-иконку бизнеса
			}
			DestroyDynamic3DTextLabel(Nbus[i]);//удаляем 3D-текст бизнеса
		}
		buscount[i] = 0;//бизнес не создан (не сущесвует)
		strdel(busplayname[i], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
		strcat(busplayname[i], "*** INV_PL_ID");
		busidplay[i] = -600;//владелец бизнеса офф-лайн
		PickupID[i] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
		CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, i, busplayname[i],
		0, 0.0, 0.0, 0.0);
	}
	return 1;
}
//---------------------------- End BusSystem -----------------------------------

public RepairCar()
{
#if (MOD22INS == 1 && MOD55INS == 1)
	SLCopy(0);//делаем резервную копию сервер-лога
#endif

	new swper;//контроль сети и AFK
#if (MOD11INS >= 3)
	new conrec, subrec, consen, subsen;
#endif
	new Float:PosX, Float:PosY, Float:PosZ;
	new PlInt, PlVw;
	new Float:subX, Float:subY, Float:subZ;
    for(new i=0;i<MAX_PLAYERS;i++)
	{
 		if(IsPlayerConnected(i))
 		{
			if(autorepair[i] == 1 && GetPlayerState(i) == 2 && DerbyID[i] == 0 && GetPVarInt(i, "PlConRep") == 0 &&
			GetPVarInt(i, "PlConRepDS") == 0)//если авторемонт включен,
			{//И игрок на месте водителя, И игрок не в зоне дерби, И нет удалённого отключения, то:
 				new car = GetPlayerVehicleID(i);
 				RepairVehicle(car);
 				SetVehicleHealth(car,1000);
 			}
			swper = 0;//контроль сети и AFK
#if (MOD11INS >= 3)
			conrec = NetStats_BytesReceived(i);//общее число переданных байт на сервер
			subrec = conrec - NETrecPl[i];//число переданных "дельта-байт" за единицу времени
			consen = NetStats_BytesSent(i);//общее число считанных байт с сервера
			subsen = consen - NETsenPl[i];//число считанных "дельта-байт" за единицу времени
			if(subrec > NETrecCon)//если переданных байт больше допустимого лимита, то:
			{
				swper = 1;//кик по превышению лимита переданных данных
			}
			else//иначе:
			{
				NETrecPl[i] = conrec;//сохраняем общее число переданных байт на сервер
			}
			if(subsen > NETsenCon)//если считанных байт больше допустимого лимита, то:
			{
				swper = 2;//кик по превышению лимита считанных данных
			}
			else//иначе:
			{
				NETsenPl[i] = consen;//сохраняем общее число считанных байт с сервера
			}
#endif
			if(NETafkPl[i][0] > 5) {NETafkPl[i][0] = 5;}//выравнивание контрольной переменной AFK
			if(NETafkPl[i][0] < 5 && NETafkPl[i][3] == 5)//если игрок ТОЛЬКО вышел из AFK, то:
			{
				NETafkPl[i][4] = 1;//делаем отметку выхода из AFK
			}
			else//иначе:
			{
				NETafkPl[i][4] = 0;//НЕ делаем отметку выхода из AFK
			}
			NETafkPl[i][3] = NETafkPl[i][0];//запоминаем статус AFK
			if(NETafkPl[i][0] == 5)//если игрок в AFK, то:
			{
				NETafkPl[i][5] = 1;//запоминаем статус AFK для команды /pm
				if(PlayerInfo[i][pAdmin] == 0)//если игрок НЕ админ, то:
				{
					NETafkPl[i][1]++;//считаем время AFK
				}
				NETafkPl[i][2] = 0;
				if(NETafkPl[i][1] >= 450)//если время AFK >= 15 минут, то:
				{//кикаем игрока
					NETafkPl[i][1] = 0;//обнуляем счётчик AFK
					PlayerInfo[i][pMinlog] = PlayerInfo[i][pMinlog] - 14;//отнимаем у игрока 14 минут AFK
					swper = 3;//кик по AFK
				}
			}
			if(NETafkPl[i][0] < 5)//если игрок НЕ в AFK, то:
			{
				NETafkPl[i][5] = 0;//запоминаем статус AFK для команды /pm
				if(NETafkPl[i][2] <= 3 && NETafkPl[i][1] > 0)
				{
					NETafkPl[i][2]++;//задержка выхода из AFK
					if(PlayerInfo[i][pAdmin] == 0)//если игрок НЕ админ, то:
					{
						NETafkPl[i][1]++;//считаем время AFK
					}
				}
				else
				{
					NETafkPl[i][1] = 0;//выход из AFK
					NETafkPl[i][2] = 0;
				}
			}
			GetPlayerPos(i, PosX, PosY, PosZ);//античит (FLY-чит (или чит-телепорт))
			PlInt = GetPlayerInterior(i);
			PlVw = GetPlayerVirtualWorld(i);
			if(PlayCRTP[i] == 2)//если отметка о переключении активна, то:
			{
				PlayCINT[i] = PlInt;//обновляем координаты игрока
				PlayCVW[i] = PlVw;
				PlayCX[i] = PosX;
				PlayCY[i] = PosY;
				PlayCZ[i] = PosZ;
				PlayCRTP[i] = 0;//обнуляем блокировку координат
				SetPVarInt(i, "PlCRTp", 0);
			}
			if(PlayCRTP[i] == 1 || GetPVarInt(i, "PlCRTp") == 1)//если у игрока активна блокировка координат, то:
			{
				PlayCRTP[i] = 2;//делаем отметку о переключении
			}
			if(PlayCRTP[i] == 11)//если отметка об определении чита активна, то:
			{
				PlayCRTP[i] = 0;//возвращаем контроль чит-телепорта
				SetPVarInt(i, "PlCRTp", 0);
			}
			if(PlayCRTP[i] == 10)//если было гипер-изменение координат, то:
			{
				if(PlayCINT[i] == PlInt && PlayCVW[i] == PlVw)
				{//если НЕ было изменений интерьера И виртуального мира, то:
					PlayerInfo[i][pWanted] = 1;//чит-телепорт
#if (MOD4BINS == 1)
					swper = 4;//чит-телепорт
#endif
				}
				PlayCINT[i] = PlInt;//обновляем координаты игрока
				PlayCVW[i] = PlVw;
				PlayCX[i] = PosX;
				PlayCY[i] = PosY;
				PlayCZ[i] = PosZ;
				PlayCRTP[i] = 11;//делаем отметку об определении чита
			}
			if(PlayCRTP[i] == 0)//если у игрока НЕ активна блокировка координат, то:
			{
				subX = floatabs(PlayCX[i] - PosX);
				subY = floatabs(PlayCY[i] - PosY);
				subZ = floatabs(PlayCZ[i] - PosZ);
				if((subX > CoefGrav22 || subY > CoefGrav22 || subZ > CoefGrav22) && NETafkPl[i][4] == 0 && PlayerInfo[i][pAdmin] == 0 && admper1[i] == 600)
				{//если было гипер-изменение координат, И НЕ было отметки выхода из AFK, И игрок НЕ админ, И полицейский НЕ ведёт наблюдение то:
					PlayCX[i] = PosX;//обновляем координаты игрока
					PlayCY[i] = PosY;
					PlayCZ[i] = PosZ;
					TogglePlayerControllable(i,0);//заморозить игрока на 2 секунды
					SetTimerEx("FUnfroz", 2000, 0, "i", i);//(для запрета повторной смены интерьера или виртуального мира)
					if(PlayCRTP[i] == 1 || GetPVarInt(i, "PlCRTp") == 1)//если у игрока активна блокировка координат, то:
					{
						PlayCRTP[i] = 2;//делаем отметку о переключении
					}
					else//иначе:
					{
						PlayCRTP[i] = 10;//делаем отметку об определении возможного чита
					}
				}
				if((PlayCINT[i] != PlInt || PlayCVW[i] != PlVw) && PlayerInfo[i][pAdmin] == 0 && admper1[i] == 600)
				{//если были изменения интерьера ИЛИ виртуального мира, И игрок НЕ админ, И полицейский НЕ ведёт наблюдение то:
					PlayCINT[i] = PlInt;//обновляем интерьер и виртуальный мир игрока
					PlayCVW[i] = PlVw;
					TogglePlayerControllable(i,0);//заморозить игрока на 2 секунды
					SetTimerEx("FUnfroz", 2000, 0, "i", i);//(для запрета повторной смены интерьера или виртуального мира)
					PlayCRTP[i] = 2;//делаем отметку о переключении
				}
				if((subX <= CoefGrav22 && subY <= CoefGrav22 && subZ <= CoefGrav22 && PlayCINT[i] == PlInt && PlayCVW[i] == PlVw) ||//если НЕ было гипер-изменения координат, и НЕ было изменений интерьера И виртуального мира, ИЛИ...
				((subX > CoefGrav22 || subY > CoefGrav22 || subZ > CoefGrav22) && NETafkPl[i][4] == 1 && PlayerInfo[i][pAdmin] == 0) ||//если было гипер-изменение координат, И была отметка выхода из AFK, И игрок НЕ админ, ИЛИ...
				PlayerInfo[i][pAdmin] >= 1)//если игрок - админ, то:
				{
					PlayCINT[i] = PlInt;//обновляем координаты игрока
					PlayCVW[i] = PlVw;
					PlayCX[i] = PosX;
					PlayCY[i] = PosY;
					PlayCZ[i] = PosZ;
				}
			}
			if(swper != 0)//если указатель НЕ равен 0, то:
			{
				new string[256];
				switch(swper)
				{
					case 1: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - превышен лимит переданных данных на сервер !", RealName[i], i);
					case 2: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - превышен лимит считанных данных с сервера !", RealName[i], i);
					case 3: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут - 15 минут был в AFK !", RealName[i], i);
#if (MOD4BINS == 1)
					case 4: format(string, sizeof(string), "Russian_Drift: {FF0000}Игрок %s [%d] был кикнут за FLY-чит (или чит-телепорт) !", RealName[i], i);
#endif
				}
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);

				SetTimerEx("PlayKick", 300, 0, "i", i);
			}
		}
	}
	new ssss[256], impf[256];
	new impdd = 0;
	new impdd2 = -600;
	while(impdd < 10)//поиск файла для импорта
	{
		format(impf, 256, "players/aimport/%i.txt", impdd);
		if(fexist(impf))
		{
			impdd2 = impdd;
			break;
		}
		impdd++;
	}
	if(impdd2 != -600)//если файл для импорта был найден, то:
	{
		new impcon[18], impdata[18], impdatas[4][128];//чтение файла для импорта
		format(impf, 256, "players/aimport/%i.txt", impdd2);
		new impfile = ini_openFile(impf);
		if(impfile >= 0)
		{
			impcon[0] = ini_getString(impfile, "Name", impdatas[0]);
			impcon[1] = ini_getString(impfile, "Key", impdatas[1]);
			impcon[2] = ini_getInteger(impfile, "AdminLevel", impdata[2]);
			impcon[3] = ini_getInteger(impfile, "AdminShadow", impdata[3]);
			impcon[4] = ini_getInteger(impfile, "AdminLive", impdata[4]);
			impcon[5] = ini_getInteger(impfile, "AdminScanCom", impdata[5]);
			impcon[6] = ini_getInteger(impfile, "Prisonsec", impdata[6]);
			impcon[7] = ini_getInteger(impfile, "Mutedsec", impdata[7]);
			impcon[8] = ini_getInteger(impfile, "Money", impdata[8]);
			impcon[9] = ini_getInteger(impfile, "Police", impdata[9]);
			impcon[10] = ini_getInteger(impfile, "Deport", impdata[10]);
			impcon[11] = ini_getInteger(impfile, "RecPM", impdata[11]);
			impcon[12] = ini_getInteger(impfile, "Wanted", impdata[12]);
			impcon[13] = ini_getInteger(impfile, "Lock", impdata[13]);
			impcon[14] = ini_getInteger(impfile, "Gang", impdata[14]);
			impcon[15] = ini_getInteger(impfile, "GangLvl", impdata[15]);
			ini_closeFile(impfile);
		}
		impcon[16] = 1;//проверка файла для импорта на корректность заменяемых данных
		if(impcon[0] == 0 && strlen(impdatas[0]) == 0)
		{//если прочитана пустая строка (за место имени аккаунта), то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Name");
		}
		else//иначе, если прочитана НЕ пустая строка, то:
		{
			if(strlen(impdatas[0]) > 25 || InpNameControl(impdatas[0]) == 0)//если имя аккаунта содержит ошибки, то:
			{
				impcon[12] = 0;
				strdel(impdatas[3], 0, 128);
				strcat(impdatas[3], "ошибка Name");
			}
		}
		if(impcon[1] == 0 && (strlen(impdatas[1]) < 3 || strlen(impdatas[1]) > 20 || PassControl(impdatas[1]) == 0))
		{//если неверный пароль, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Key");
		}
		if(impcon[2] == 0 && (impdata[2] < 0 || impdata[2] > 10))
		{//если неверный лвл админа, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminLevel");
		}
		if(impcon[3] == 0 && (impdata[3] < 0 || impdata[3] > 1))
		{//если неверная скрытость админа, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminShadow");
		}
		if(impcon[4] == 0 && (impdata[4] < 0 || impdata[4] > 1))
		{//если неверное бессмертие админа, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminLive");
		}
		if(impcon[5] == 0 && (impdata[5] < 0 || impdata[5] > 1))
		{//если неверное сканирование команд сервера, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminScanCom");
		}
		if(impcon[6] == 0 && (impdata[6] < 0 || impdata[6] > 2147483640))
		{//если неверное время тюрьмы, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Prisonsec");
		}
		if(impcon[7] == 0 && (impdata[7] < 0 || impdata[7] > 2147483640))
		{//если неверное время затыка, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Mutedsec");
		}
		if(impcon[8] == 0 && (impdata[8] < -2147483640 || impdata[8] > 2147483640))
		{//если неверная сумма денег, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Money");
		}
		if(impcon[9] == 0 && (impdata[9] < 0 || impdata[9] > 3))
		{//если неверный лвл полиции, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Police");
		}
		if(impcon[10] == 0 && (impdata[10] < 0 || impdata[10] > 1))
		{//если неверная депортация, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Deport");
		}
		if(impcon[11] == 0 && (impdata[11] < 0 || impdata[11] > 1))
		{//если неверный приём PM от игроков, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка RecPM");
		}
		if(impcon[12] == 0 && (impdata[12] < 0 || impdata[12] > 1))
		{//если неверный розыск, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Wanted");
		}
		if(impcon[13] == 0 && (impdata[13] < 0 || impdata[13] > 1))
		{//если неверная блокировка аккаунта, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Lock");
		}
		if(impcon[14] == 0 && (impdata[14] < -600 || -600 < impdata[14] < 0 || impdata[14] > (MAX_GANGS - 1)))
		{//если неверный ид банды, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Gang");
		}
		if(impcon[14] == 0 && 1 <= impdata[14] <= (MAX_GANGS - 1) && Gang[impdata[14]] == 0)
		{//если ид банды не существует, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ид банды не существует");
		}
		if(impcon[15] == 0 && (impdata[15] < 0 || impdata[15] > 6))
		{//если неверный лвл в банде, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка GangLvl");
		}
		new imploc = 0;
		for(new i = 1; i < 16; i++)
		{
			if(impcon[i] == -9) { imploc++; }
		}
		if(imploc >= 15)
		{//если нет заменяемых данных, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "нет заменяемых данных");
		}
		if(impcon[0] == -9)
		{//если нет данных аккаунта, то:
			impcon[16] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "нет Name");
		}
		if(impcon[16] == 1)
		{
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ок");
		}
		impcon[17] = 1;
		if(impcon[16] == 1)//если файл для импорта не содержит ошибок, то:
		{
			imploc = 0;//проверка игрока на он-лайн
			new imploc2 = -600;
			while(imploc < MAX_PLAYERS)
			{
				if(IsPlayerConnected(imploc) && gPlayerLogged[imploc] == 1)
				{//если игрок он-лайн, И игрок уже залогинился, то:
					if(strcmp(RealName[imploc], impdatas[0], false) == 0)
					{//если игрок был найден, то:
						imploc2 = imploc;
						break;
					}
				}
				imploc++;
			}
			if(imploc2 != -600)//если игрок он-лайн, то:
			{
				if(impcon[1] == 0)//замена пароля
				{
					if(strcmp(PlayerInfo[imploc2][pKey], impdatas[1], false) != 0)
					{
						strdel(impdatas[2], 0, 128);
						strcat(impdatas[2], PlayerInfo[imploc2][pKey]);
						strmid(PlayerInfo[imploc2][pKey], impdatas[1], 0, strlen(impdatas[1]), 255);
						format(ssss, sizeof(ssss), " **** Замена пароля игрока [%s] на (%s) FP: (%s) .", RealName[imploc2], PlayerInfo[imploc2][pKey], impdatas[2]);
						print(ssss);
						format(ssss, sizeof(ssss), " **** Замена пароля игрока [%s] .", RealName[imploc2]);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваш пароль был заменён на (%s) .", PlayerInfo[imploc2][pKey]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						impcon[16] = 2;
					}
				}
				if(impcon[2] == 0)//замена лвл админа
				{
					if(PlayerInfo[imploc2][pAdmin] != impdata[2])
					{
						if((impcon[10] == 0 && impdata[10] != 3) ||
						(impcon[10] == -9 && PlayerInfo[imploc2][pDeport] != 1))//если нет депортации, то:
						{
							impdata[16] = PlayerInfo[imploc2][pAdmin];
							PlayerInfo[imploc2][pAdmin] = impdata[2];
							AdmUpdate(RealName[imploc2], PlayerInfo[imploc2][pAdmin], 6);
							if(PlayerInfo[imploc2][pAdmin] == 0)//если лвл админа = 0, то:
							{
								if(impcon[3] == 0)
								{
									impdata[3] = 0;//выключение скрытости админа
									PlayerInfo[imploc2][pAdmshad] = 0;
								}
								if(impcon[3] == -9) { PlayerInfo[imploc2][pAdmshad] = 0; }
								if(impcon[5] == 0)
								{
									impdata[5] = 0;//выключение сканирования команд сервера
									PlayerInfo[imploc2][pAdmscancom] = 0;
								}
								if(impcon[5] == -9) { PlayerInfo[imploc2][pAdmscancom] = 0; }
							}
							if(PlayerInfo[imploc2][pAdmin] <= 8 && impdata[12] >= 9)
							{
								for(new i = 0; i < 20; i++)//удаление ника админа из per-файла
								{
									if(strcmp(RealName[imploc2], scrnetper[i], false) == 0)//если ник админа найден, то:
									{
										strdel(scrnetper[i], 0, 64);//очистка слота
										strcat(scrnetper[i], "*** INV_PL_ID");
										ScrNetPerSave(i);//запись изменённого слота в per-файл
									}
								}
							}
							if(PlayerInfo[imploc2][pAdmin] <= 5 && impdata[16] >= 6)
							{
								new twenlim, restlim;
								Fmadmins(0, RealName[imploc2], 0, twenlim, restlim);
							}
							if(PlayerInfo[imploc2][pAdmin] >= 6 && impdata[16] <= 5)
							{
								new twenlim = 0;
								new restlim = 0;
								Fmadmins(1, RealName[imploc2], 0, twenlim, restlim);
							}
							if(PlayerInfo[imploc2][pAdmin] >= 5 && impdata[16] <= 4)
							{
								if(impcon[4] == 0 && impdata[4] == 1)
								{
									PlayerInfo[imploc2][pAdmlive] = 1;
									SendClientMessage(imploc2, COLOR_GREEN, " Бессмертие включено.");
								}
								if(impcon[4] == -9)
								{
									PlayerInfo[imploc2][pAdmlive] = 1;
									SendClientMessage(imploc2, COLOR_GREEN, " Бессмертие включено.");
								}
							}
							if(PlayerInfo[imploc2][pAdmin] <= 4 && impdata[16] >= 5)
							{
								if(impcon[4] == 0) { impcon[4] = -9; }
								PlayerInfo[imploc2][pAdmlive] = 0;
								SendClientMessage(imploc2, COLOR_RED, " Бессмертие выключено.");
							}
							if(PlayerInfo[imploc2][pAdmin] >= 1 && impdata[16] == 0)
							{
								SendClientMessage(imploc2, COLOR_RED, "* Рекомендация: В целях безопасности и защиты своего (АДМИНИСТРАТИВНОГО)");
								SendClientMessage(imploc2, COLOR_RED, "* аккаунта - измените свой пароль !!! И НЕ используйте пароль от своего");
								SendClientMessage(imploc2, COLOR_RED, "* административного аккаунта на других серверах !!!");
							}
							format(ssss, sizeof(ssss), " **** Замена лвл админа [%s] на %d .", RealName[imploc2], PlayerInfo[imploc2][pAdmin]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш лвл админа был заменён на %d .", PlayerInfo[imploc2][pAdmin]);
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							impcon[16] = 2;
						}
					}
				}
				if(impcon[3] == 0)//замена скрытости админа
				{
					if(PlayerInfo[imploc2][pAdmshad] != impdata[3])
					{
						if(PlayerInfo[imploc2][pAdmin] >= 1)
						{
							PlayerInfo[imploc2][pAdmshad] = impdata[3];
							if(PlayerInfo[imploc2][pAdmshad] == 1)
							{
								format(ssss, sizeof(ssss), " **** Замена скрытости админа [%s] на ''включено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваша скрытость админа была заменена на ''включено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена скрытости админа [%s] на ''выключено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваша скрытость админа была заменена на ''выключено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							impcon[16] = 2;
						}
					}
				}
				if(impcon[4] == 0)//замена бессмертия админа
				{
					if(PlayerInfo[imploc2][pAdmlive] != impdata[4])
					{
						if(PlayerInfo[imploc2][pAdmin] >= 5)
						{
							PlayerInfo[imploc2][pAdmlive] = impdata[4];
							if(PlayerInfo[imploc2][pAdmlive] == 1)
							{
								format(ssss, sizeof(ssss), " **** Замена бессмертия админа [%s] на ''включено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваше бессмертие админа было заменено на ''включено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена бессмертия админа [%s] на ''выключено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваше бессмертие админа было заменено на ''выключено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							impcon[16] = 2;
						}
					}
				}
				if(impcon[5] == 0)//замена сканирования команд сервера
				{
					if(PlayerInfo[imploc2][pAdmscancom] != impdata[5])
					{
						if(PlayerInfo[imploc2][pAdmin] >= 1)
						{
							PlayerInfo[imploc2][pAdmscancom] = impdata[5];
							if(PlayerInfo[imploc2][pAdmscancom] == 1)
							{
								format(ssss, sizeof(ssss), " **** Замена сканирования команд сервера админа [%s] на ''включено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваше сканирование команд сервера было заменено на ''включено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена сканирования команд сервера админа [%s] на ''выключено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваше сканирование команд сервера было заменено на ''выключено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							impcon[16] = 2;
						}
					}
				}
				if(impcon[6] == 0)//замена времени тюрьмы
				{
					if(impdata[6] <= 3) { impdata[6] = 0; }
					if(impdata[6] == 4) { impdata[6] = 5; }
					if(PlayerInfo[imploc2][pPrisonsec] != impdata[6])
					{
						if(impdata[6] > 3)//если посадка в тюрьму, то:
						{
							if(PlayerInfo[imploc2][pPrisonsec] == 0)//если не в тюрьме, то:
							{
								if(DerbyID[imploc2] == 0)//если игрок НЕ в зоне дерби,
								{//то сохранение всех слотов
									for(new n=0;n<13;n++)//если игрок НЕ в X-зоне, то сохранение всех слотов
									{
										GetPlayerWeaponData(imploc2, n, playweap[imploc2][n], playammo[imploc2][n]);
									}
								}
								PlayerInfo[imploc2][pPrison]++;
								PlayerInfo[imploc2][pPrisonsec] = impdata[6];
								if(PlayLock1[0][imploc2] != 600)
								{//если игрок заблокирован, то разблокировать игрока
									PlayLock1[0][imploc2] = 600;//отключение блокировки
								}
								if(admper1[imploc2] != 600)
								{//если игрок в наблюдении (полицейский), то:
									LockSpawn[imploc2] = 1;//блокировка заполнения слотов оружия и предметов
									TogglePlayerSpectating(imploc2, 0);//запретить наблюдение для полицейского
								}
								else//иначе:
								{
									SecSpa(imploc2);//респавн игрока (с блокировкой заполнения слотов оружия и предметов)
								}
							}
							else//если игрок уже в тюрьме, то изменяем секунды тюрьмы
							{
								PlayerInfo[imploc2][pPrisonsec] = impdata[6];
							}
						}
						else//иначе (если освобождение из тюрьмы), то:
						{
							if(PlayerInfo[imploc2][pPrisonsec] > 0)//если игрок в тюрьме, то:
							{
								PlayerInfo[imploc2][pPrison]--;
								PlayerInfo[imploc2][pPrisonsec] = impdata[6];
								SpawnPlayer(imploc2);//респавн игрока
							}
						}
						format(ssss, sizeof(ssss), " **** Замена времени тюрьмы игрока [%s] на %d сек.", RealName[imploc2], PlayerInfo[imploc2][pPrisonsec]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваше время тюрьмы было заменено на %d сек.", PlayerInfo[imploc2][pPrisonsec]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						impcon[16] = 2;
					}
				}
				if(impcon[7] == 0)//замена времени затыка
				{
					if(impdata[7] <= 3) { impdata[7] = 0; }
					if(impdata[7] == 4) { impdata[7] = 5; }
					if(PlayerInfo[imploc2][pMutedsec] != impdata[7])
					{
						if(impdata[7] > 3)//если затык игрока, то:
						{
							if(PlayerInfo[imploc2][pMutedsec] == 0)//если игрок НЕ заткнут, то:
							{
								PlayerInfo[imploc2][pMuted]++;
							}
							PlayerInfo[imploc2][pMutedsec] = impdata[7];
						}
						else//иначе (если разоткнуть игрока), то:
						{
							if(PlayerInfo[imploc2][pMutedsec] > 0)//если игрок заткнут, то:
							{
			  					PlayerInfo[imploc2][pMuted]--;
								PlayerInfo[imploc2][pMutedsec] = impdata[7];
							}
						}
						format(ssss, sizeof(ssss), " **** Замена времени затыка игрока [%s] на %d сек.", RealName[imploc2], PlayerInfo[imploc2][pMutedsec]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваше время затыка было заменено на %d сек.", PlayerInfo[imploc2][pMutedsec]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						impcon[16] = 2;
					}
				}
				if(impcon[9] == 0)//замена лвл полиции
				{
					if(PlayerInfo[imploc2][pPolice] != impdata[9])
					{
						if(PlayerInfo[imploc2][pDeport] != 1)
						{
							PlayerInfo[imploc2][pPolice] = impdata[9];
							format(ssss, sizeof(ssss), " **** Замена лвл полиции игрока [%s] на %d .", RealName[imploc2], PlayerInfo[imploc2][pPolice]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш лвл полиции был заменён на %d .", PlayerInfo[imploc2][pPolice]);
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							impcon[16] = 2;
						}
					}
				}
				if(impcon[10] == 0)//замена депортации
				{
					if(PlayerInfo[imploc2][pDeport] != impdata[10])
					{
						new mnloc;
						if(impdata[10] == 1 && PlayerInfo[imploc2][pDeport] != 1)
						{//если замена на депортацию, И ранее НЕ была депортация, то:
							mnloc = GetPVarInt(imploc2, "PlMon");//запомнить денежную сумму
						}
						PlayerInfo[imploc2][pDeport] = impdata[10];
						if(PlayerInfo[imploc2][pDeport] == 0)
						{
							format(ssss, sizeof(ssss), " **** Замена депортации игрока [%s] на ''отменено'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваша депортация была заменена на ''отменено'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						else
						{
							PlayerInfo[imploc2][pAdmin] = 0;
							PlayerInfo[imploc2][pAdmshad] = 0;
							PlayerInfo[imploc2][pAdmlive] = 0;
							PlayerInfo[imploc2][pAdmscancom] = 0;
							PlayerInfo[imploc2][pPolice] = 0;
							SetPVarInt(imploc2, "PlMon", 1000);
							format(ssss, sizeof(ssss), " **** Замена стандартного режима игры игрока [%s] на депортацию.", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[imploc2], imploc2, mnloc);
							format(ssss, sizeof(ssss), " **** Ваш стандартный режим игры был заменён на депортацию.");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							format(ssss, sizeof(ssss), " *** Сервер начал делопроизводство по депортации игрока %s .", RealName[imploc2]);
							SendClientMessageToAll(COLOR_RED, ssss);
							format(ssss, sizeof(ssss), " *** Вы приглашаетесь в админ-чат ( /a [текст] ) , на слушание Вашего дела.");
							SendClientMessage(imploc2, COLOR_RED, ssss);
							format(ssss, sizeof(ssss), " *** Так же, в админ-чат, Вы можете подать апелляционную жалобу.");
							SendClientMessage(imploc2, COLOR_RED, ssss);
						}
						impcon[16] = 2;
					}
				}
				if(impcon[8] == 0)//замена суммы денег
				{
					if(PlayerInfo[imploc2][pDeport] != 1)//если нет депортации, то:
					{
						if(GetPVarInt(imploc2, "PlMon") != impdata[8])
						{
							new mnloc;
							mnloc = GetPVarInt(imploc2, "PlMon");
							SetPVarInt(imploc2, "PlMon", impdata[8]);
							format(ssss, sizeof(ssss), " **** Замена суммы денег игрока [%s] на %d $ .", RealName[imploc2], GetPVarInt(imploc2, "PlMon"));
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[imploc2], imploc2, mnloc);
							format(ssss, sizeof(ssss), " **** Ваша сумма денег была заменена на %d $ .", GetPVarInt(imploc2, "PlMon"));
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							impcon[16] = 2;
						}
					}
				}
				if(impcon[11] == 0)//замена приёма PM от игроков
				{
					if(PlayerInfo[imploc2][pRecPM] != impdata[11])
					{
						PlayerInfo[imploc2][pRecPM] = impdata[11];
						if(PlayerInfo[imploc2][pRecPM] == 1)
						{
							format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для игрока [%s] на ''включено'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш приём PM от игроков был заменён на ''включено'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						else
						{
							format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для игрока [%s] на ''выключено'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш приём PM от игроков был заменён на ''выключено'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						impcon[16] = 2;
					}
				}
				if(impcon[12] == 0)//замена розыска
				{
					if(PlayerInfo[imploc2][pWanted] != impdata[12])
					{
						PlayerInfo[imploc2][pWanted] = impdata[12];
						if(PlayerInfo[imploc2][pWanted] == 1)
						{
							format(ssss, sizeof(ssss), " **** Замена розыска игрока [%s] на ''объявлен в розыск'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш розыска был заменён на ''объявлен в розыск'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						else
						{
							format(ssss, sizeof(ssss), " **** Замена розыска игрока [%s] на ''убран из розыска'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш розыска был заменён на ''убран из розыска'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						impcon[16] = 2;
					}
				}
				if(impcon[13] == 0)//замена блокировки аккаунта
				{
					if(PlayerInfo[imploc2][pLock] != impdata[13])
					{
						if(PlayerInfo[imploc2][pLock] == 0 && impdata[13] == 1)
						{
							PlayerInfo[imploc2][pLock] = impdata[13];
							format(ssss, sizeof(ssss), " **** Замена стандартного режима игры игрока [%s] на блокировку аккаунта.", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш стандартный режим игры был заменён на блокировку аккаунта.");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							strdel(fbanreason[imploc2], 0, 256);//очистка причины бана
							strcat(fbanreason[imploc2], " --- Замена данных: блокировка аккаунта");//добавляем в символьную переменную метку бана
							PlayBanList(imploc2, fbanreason[imploc2], 0);
							SetTimerEx("PlayBan", 300, 0, "i", imploc2);
							impcon[16] = 2;
						}
					}
				}
				if(impcon[14] == 0)//замена ид банды
				{
					if(PGang[imploc2] != impdata[14])
					{
						PGang[imploc2] = impdata[14];
						if(PGang[imploc2] <= 0) { GangLvl[imploc2] = 0; }
						if(PGang[imploc2] >= 1) { GangLvl[imploc2] = 1; }
						if(PGang[imploc2] == 0)
						{
							format(ssss, sizeof(ssss), " **** Замена ид банды игрока [%s] на ''выход из банды'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш ид банды был заменён на ''выход из банды'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						else
						{
							if(PGang[imploc2] == -600)
							{
								format(ssss, sizeof(ssss), " **** Замена ид банды игрока [%s] на ''выход из банды'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** + Запрет игрока [%s] приглашать себя в банду .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваш ид банды был заменён на ''выход из банды'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
								format(ssss, sizeof(ssss), " **** + Установлен запрет на приглашение Вас в банду .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена ид банды игрока [%s] на %d .", RealName[imploc2], PGang[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваш ид банды был заменён на %d .", PGang[imploc2]);
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
						}
						impcon[16] = 2;
					}
				}
				if(impcon[15] == 0)//замена лвл в банде
				{
					if(PGang[imploc2] <= 0)
					{
						impdata[15] = 0;
						GangLvl[imploc2] = 0;
					}
					if(PGang[imploc2] >= 1 && impdata[15] == 0) { impdata[15] = 1; }
					if(GangLvl[imploc2] != impdata[15])
					{
						GangLvl[imploc2] = impdata[15];
						format(ssss, sizeof(ssss), " **** Замена лвл в банде игрока [%s] на %d .", RealName[imploc2], GangLvl[imploc2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваш лвл в банде был заменён на %d .", GangLvl[imploc2]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						impcon[16] = 2;
					}
				}
			}
			else//если игрок офф-лайн, то:
			{
				strdel(dAccName[MAX_PLAYERS - 1], 0, 64);
				strcat(dAccName[MAX_PLAYERS - 1], impdatas[0]);
				if(AccDataLoadUn(MAX_PLAYERS - 1) == 1)
				{//если аккаунт существует, то:
					new ddainv = 0;
					if(admData[MAX_PLAYERS - 1][dAdmin] < 0)//если лвл админа отрицательный, то:
					{
						admData[MAX_PLAYERS - 1][dAdmin] = admData[MAX_PLAYERS - 1][dAdmin] * -1;//делаем лвл админа положительным
						ddainv = 1;//делаем отметку инверсии знака лвл админа
					}
					if(impcon[1] == 0)//замена пароля
					{
						if(strcmp(admData[MAX_PLAYERS - 1][dKey], impdatas[1], false) != 0)
						{
							strdel(impdatas[2], 0, 128);
							strcat(impdatas[2], admData[MAX_PLAYERS - 1][dKey]);
							strmid(admData[MAX_PLAYERS - 1][dKey], impdatas[1], 0, strlen(impdatas[1]), 32);
							format(ssss, sizeof(ssss), " **** Замена пароля аккаунта игрока [%s] на (%s) FP: (%s) .", impdatas[0], admData[MAX_PLAYERS - 1][dKey], impdatas[2]);
							print(ssss);
							format(ssss, sizeof(ssss), " **** Замена пароля аккаунта игрока [%s] .", impdatas[0]);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							impcon[16] = 3;
						}
					}
					if(impcon[2] == 0)//замена лвл админа
					{
						if(admData[MAX_PLAYERS - 1][dAdmin] != impdata[2])
						{
							if((impcon[10] == 0 && impdata[10] != 3) ||
							(impcon[10] == -9 && admData[MAX_PLAYERS - 1][dDeport] != 1))//если нет депортации, то:
							{
								impdata[16] = admData[MAX_PLAYERS - 1][dAdmin];
								admData[MAX_PLAYERS - 1][dAdmin] = impdata[2];
								AdmUpdate(impdatas[0], admData[MAX_PLAYERS - 1][dAdmin], 6);
								if(admData[MAX_PLAYERS - 1][dAdmin] == 0)//если лвл админа = 0, то:
								{
									if(impcon[3] == 0)
									{
										impdata[3] = 0;//выключение скрытости админа
										admData[MAX_PLAYERS - 1][dAdmshad] = 0;
									}
									if(impcon[3] == -9) { admData[MAX_PLAYERS - 1][dAdmshad] = 0; }
									if(impcon[4] == 0)
									{
										impdata[4] = 0;//выключение сканирования команд сервера
										admData[MAX_PLAYERS - 1][dAdmscancom] = 0;
									}
									if(impcon[4] == -9) { admData[MAX_PLAYERS - 1][dAdmscancom] = 0; }
								}
								if(admData[MAX_PLAYERS - 1][dAdmin] <= 8 && impdata[12] >= 9)
								{
									for(new i = 0; i < 20; i++)//удаление ника админа из per-файла
									{
										if(strcmp(impdatas[0], scrnetper[i], false) == 0)//если ник админа найден, то:
										{
											strdel(scrnetper[i], 0, 64);//очистка слота
											strcat(scrnetper[i], "*** INV_PL_ID");
											ScrNetPerSave(i);//запись изменённого слота в per-файл
										}
									}
								}
								if(admData[MAX_PLAYERS - 1][dAdmin] <= 5 && impdata[16] >= 6)
								{
									new twenlim, restlim;
									Fmadmins(0, impdatas[0], 0, twenlim, restlim);
								}
								if(admData[MAX_PLAYERS - 1][dAdmin] >= 6 && impdata[16] <= 5)
								{
									new twenlim = 0;
									new restlim = 0;
									Fmadmins(1, impdatas[0], 0, twenlim, restlim);
								}
								if(admData[MAX_PLAYERS - 1][dAdmin] >= 5 && impdata[16] <= 4)
								{
									if(impcon[4] == 0 && impdata[4] == 1)
									{
										admData[MAX_PLAYERS - 1][dAdmlive] = 1;
									}
									if(impcon[4] == -9)
									{
										admData[MAX_PLAYERS - 1][dAdmlive] = 1;
									}
								}
								if(admData[MAX_PLAYERS - 1][dAdmin] <= 4 && impdata[16] >= 5)
								{
									if(impcon[4] == 0) { impcon[4] = -9; }
									admData[MAX_PLAYERS - 1][dAdmlive] = 0;
								}
								if(admData[MAX_PLAYERS - 1][dAdmin] >= 1 && impdata[16] == 0)
								{//если лвл админа был установлен после нулевого лвл админа, то:
									ddainv = 1;//делаем отметку инверсии знака лвл админа
								}
								format(ssss, sizeof(ssss), " **** Замена лвл аккаунта админа [%s] на %d .", impdatas[0], admData[MAX_PLAYERS - 1][dAdmin]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								impcon[16] = 3;
							}
						}
					}
					if(impcon[3] == 0)//замена скрытости админа
					{
						if(admData[MAX_PLAYERS - 1][dAdmshad] != impdata[3])
						{
							if(admData[MAX_PLAYERS - 1][dAdmin] >= 1)
							{
								admData[MAX_PLAYERS - 1][dAdmshad] = impdata[3];
								if(admData[MAX_PLAYERS - 1][dAdmshad] == 1)
								{
									format(ssss, sizeof(ssss), " **** Замена скрытости аккаунта админа [%s] на ''включено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								else
								{
									format(ssss, sizeof(ssss), " **** Замена скрытости аккаунта админа [%s] на ''выключено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								impcon[16] = 3;
							}
						}
					}
					if(impcon[4] == 0)//замена бессмертия админа
					{
						if(admData[MAX_PLAYERS - 1][dAdmlive] != impdata[4])
						{
							if(admData[MAX_PLAYERS - 1][dAdmin] >= 5)
							{
								admData[MAX_PLAYERS - 1][dAdmlive] = impdata[4];
								if(admData[MAX_PLAYERS - 1][dAdmlive] == 1)
								{
									format(ssss, sizeof(ssss), " **** Замена бессмертия аккаунта админа [%s] на ''включено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								else
								{
									format(ssss, sizeof(ssss), " **** Замена бессмертия аккаунта админа [%s] на ''выключено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								impcon[16] = 3;
							}
						}
					}
					if(impcon[5] == 0)//замена сканирования команд сервера
					{
						if(admData[MAX_PLAYERS - 1][dAdmscancom] != impdata[5])
						{
							if(admData[MAX_PLAYERS - 1][dAdmin] >= 1)
							{
								admData[MAX_PLAYERS - 1][dAdmscancom] = impdata[5];
								if(admData[MAX_PLAYERS - 1][dAdmscancom] == 1)
								{
									format(ssss, sizeof(ssss), " **** Замена сканирования команд сервера аккаунта админа [%s] на ''включено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								else
								{
									format(ssss, sizeof(ssss), " **** Замена сканирования команд сервера аккаунта админа [%s] на ''выключено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								impcon[16] = 3;
							}
						}
					}
					if(impcon[6] == 0)//замена времени тюрьмы
					{
						if(impdata[6] <= 3) { impdata[6] = 0; }
						if(impdata[6] == 4) { impdata[6] = 5; }
						if(admData[MAX_PLAYERS - 1][dPrisonsec] != impdata[6])
						{
							if(impdata[6] > 3)//если посадка в тюрьму, то:
							{
								if(admData[MAX_PLAYERS - 1][dPrisonsec] == 0)//если не в тюрьме, то:
								{
									admData[MAX_PLAYERS - 1][dPrison]++;//число посадок в тюрьму +1
								}
							}
							else//иначе (если освобождение из тюрьмы), то:
							{
								if(admData[MAX_PLAYERS - 1][dPrisonsec] > 0)//если игрок в тюрьме, то:
								{
									admData[MAX_PLAYERS - 1][dPrison]--;//число посадок в тюрьму -1
								}
							}
							admData[MAX_PLAYERS - 1][dPrisonsec] = impdata[6];
							format(ssss, sizeof(ssss), " **** Замена времени тюрьмы аккаунта игрока [%s] на %d сек.", impdatas[0], admData[MAX_PLAYERS - 1][dPrisonsec]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							impcon[16] = 3;
						}
					}
					if(impcon[7] == 0)//замена времени затыка
					{
						if(impdata[7] <= 3) { impdata[7] = 0; }
						if(impdata[7] == 4) { impdata[7] = 5; }
						if(admData[MAX_PLAYERS - 1][dMutedsec] != impdata[7])
						{
							if(impdata[7] > 3)//если затык, то:
							{
								if(admData[MAX_PLAYERS - 1][dMutedsec] == 0)//если не заткнут, то:
								{
									admData[MAX_PLAYERS - 1][dMuted]++;//число затыков +1
								}
							}
							else//иначе (если разоткнут), то:
							{
								if(admData[MAX_PLAYERS - 1][dMutedsec] > 0)//если заткнут, то:
								{
									admData[MAX_PLAYERS - 1][dMuted]--;//число затыков -1
								}
							}
							admData[MAX_PLAYERS - 1][dMutedsec] = impdata[7];
							format(ssss, sizeof(ssss), " **** Замена времени затыка аккаунта игрока [%s] на %d сек.", impdatas[0], admData[MAX_PLAYERS - 1][dMutedsec]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							impcon[16] = 3;
						}
					}
					if(impcon[9] == 0)//замена лвл полиции
					{
						if(admData[MAX_PLAYERS - 1][dPolice] != impdata[9])
						{
							if(admData[MAX_PLAYERS - 1][dDeport] != 1)
							{
								admData[MAX_PLAYERS - 1][dPolice] = impdata[9];
								format(ssss, sizeof(ssss), " **** Замена лвл полиции аккаунта игрока [%s] на %d .", impdatas[0], admData[MAX_PLAYERS - 1][dPolice]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								impcon[16] = 3;
							}
						}
					}
					if(impcon[10] == 0)//замена депортации
					{
						if(admData[MAX_PLAYERS - 1][dDeport] != impdata[10])
						{
							new mnloc;
							if(impdata[10] == 1 && admData[MAX_PLAYERS - 1][dDeport] != 1)
							{//если замена на депортацию, И ранее НЕ была депортация, то:
								mnloc = admData[MAX_PLAYERS - 1][dMoney];//запомнить денежную сумму
							}
							admData[MAX_PLAYERS - 1][dDeport] = impdata[10];
							if(admData[MAX_PLAYERS - 1][dDeport] == 0)
							{
								format(ssss, sizeof(ssss), " **** Замена депортации аккаунта игрока [%s] на ''отменено'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							else
							{
								admData[MAX_PLAYERS - 1][dAdmin] = 0;
								admData[MAX_PLAYERS - 1][dAdmshad] = 0;
								admData[MAX_PLAYERS - 1][dAdmlive] = 0;
								admData[MAX_PLAYERS - 1][dAdmscancom] = 0;
								admData[MAX_PLAYERS - 1][dPolice] = 0;
								admData[MAX_PLAYERS - 1][dMoney] = 1000;
								format(ssss, sizeof(ssss), " **** Замена стандартного режима игры аккаунта игрока [%s] на депортацию.", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								printf("[moneysys] Предыдущая сумма аккаунта игрока %s : %d $", impdatas[0], mnloc);
							}
							impcon[16] = 3;
						}
					}
					if(impcon[8] == 0)//замена суммы денег
					{
						if(admData[MAX_PLAYERS - 1][dDeport] != 1)//если нет депортации, то:
						{
							if(admData[MAX_PLAYERS - 1][dMoney] != impdata[8])
							{
								new mnloc;
								mnloc = admData[MAX_PLAYERS - 1][dMoney];
								admData[MAX_PLAYERS - 1][dMoney] = impdata[8];
								format(ssss, sizeof(ssss), " **** Замена суммы денег аккаунта игрока [%s] на %d $ .", impdatas[0], admData[MAX_PLAYERS - 1][dMoney]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								printf("[moneysys] Предыдущая сумма аккаунта игрока %s : %d $", impdatas[0], mnloc);
								impcon[16] = 3;
							}
						}
					}
					if(impcon[11] == 0)//замена приёма PM от игроков
					{
						if(admData[MAX_PLAYERS - 1][dRecPM] != impdata[11])
						{
							admData[MAX_PLAYERS - 1][dRecPM] = impdata[11];
							if(admData[MAX_PLAYERS - 1][dRecPM] == 1)
							{
								format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для аккаунта игрока [%s] на ''включено'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для аккаунта игрока [%s] на ''выключено'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							impcon[16] = 3;
						}
					}
					if(impcon[12] == 0)//замена розыска
					{
						if(admData[MAX_PLAYERS - 1][dWanted] != impdata[12])
						{
							admData[MAX_PLAYERS - 1][dWanted] = impdata[12];
							if(admData[MAX_PLAYERS - 1][dWanted] == 1)
							{
								format(ssss, sizeof(ssss), " **** Замена розыска аккаунта игрока [%s] на ''объявлен в розыск'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена розыска аккаунта игрока [%s] на ''убран из розыска'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							impcon[16] = 3;
						}
					}
					if(impcon[13] == 0)//замена блокировки аккаунта
					{
						if(admData[MAX_PLAYERS - 1][dLock] != impdata[13])
						{
							if(impdata[13] == 1)//блокировка аккаунта
							{
								admData[MAX_PLAYERS - 1][dLock] = impdata[13];//блокировка аккаунта
								strdel(ssss, 0, 256);//сборка RCON-команды бана
								strcat(ssss, "banip ");
								strcat(ssss, admData[MAX_PLAYERS - 1][dIPAdr]);
								SendRconCommand(ssss);//RCON-команда бана
								SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа

								gettime(timecor[0], timecor[1]);
								getdate(timecor[2], timecor[3], timecor[4]);
								TimCor();//коррекция времени
								DatCor();//коррекция даты

								new string999[256], stringdop[256];
								format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - Замена данных: блокировка аккаунта",admData[MAX_PLAYERS - 1][dIPAdr],timecor[0],timecor[1],timecor[4],timecor[3],timecor[2]);
								format(string999,sizeof(string999),"banlist/players/%s.ini",impdatas[0]);
								new File: hFile44 = fopen(string999, io_write);//запись файла бан-листа
								if (hFile44)
								{
									new var[256];
									format(var, 256, "Data=%s\n",stringdop);fwrite(hFile44, var);
									format(var, 256, "IDFile=%d\n",0);fwrite(hFile44, var);
									fclose(hFile44);
								}

								format(ssss, sizeof(ssss), " **** Замена стандартного режима игры аккаунта игрока [%s] на блокировку аккаунта.", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							if(impdata[13] == 0)//аккаунт разблокирован
							{
								admData[MAX_PLAYERS - 1][dDeport] = 0;//отмена депортации
								admData[MAX_PLAYERS - 1][dLock] = impdata[13];//сброс блокировки аккаунта
								strdel(ssss, 0, 256);//сборка RCON-команды разбана
								strcat(ssss, "unbanip ");
								strcat(ssss, admData[MAX_PLAYERS - 1][dIPAdr]);
								SendRconCommand(ssss);//RCON-команда разбана
								SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа

								new string222[256], string333[256], idfile;
								idfile = 0;
								new ip333[128];
								ip333 = ConvIP(admData[MAX_PLAYERS - 1][dIPAdr]);
								format(string222,sizeof(string222),"banlist/players/%s.ini",impdatas[0]);
								if(fexist(string222))//читаем аккаунт из бан-листа (если файл существует)
								{
									new File: UserFile44 = fopen(string222, io_read);//чтение аккаунта из бан-листа
									new key44[ 256 ] , val44[ 256 ];
									new Data44[ 256 ];
									while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
									{
										key44 = ini_GetKey( Data44 );
										if( strcmp( key44 , "Data" , true ) == 0 ) { string333 = ini_GetValue( Data44 ); }
										if( strcmp( key44 , "IDFile" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
									}
									fclose(UserFile44);
									strdel(string333, strlen(string333)-1, strlen(string333));//корректировка причины бана
								}
								format(string222,sizeof(string222),"bantime/%d.ini",idfile);
								if(fexist(string222))//если файл временного бана существует, то:
								{
									fremove(string222);//удаление ид-файла временного бана
									printf("[BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) .", impdatas[0], idfile);
								}
								format(string222,sizeof(string222),"banlist/players/%s.ini",impdatas[0]);
								if(fexist(string222))
								{
									fremove(string222);//удаляем аккаунт из бан-листа
									format(ssss,sizeof(ssss)," ( Аккаунт игрока [%s] был удалён из бан-листа ) !", impdatas[0]);
									print(ssss);
								}
								format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
								if(fexist(string222))
								{
									fremove(string222);//удаляем IP-адрес из бан-листа
									format(ssss,sizeof(ssss)," ( IP-адрес [%s] был удалён из бан-листа ) !", admData[MAX_PLAYERS - 1][dIPAdr]);
									print(ssss);
								}

								format(ssss, sizeof(ssss), " **** Замена блокировки аккаунта игрока [%s] на аккаунт разблокирован.", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							impcon[16] = 3;
						}
					}
					if(impcon[14] == 0)//замена ид банды
					{
						if(admData[MAX_PLAYERS - 1][dGang] != impdata[14])
						{
							admData[MAX_PLAYERS - 1][dGang] = impdata[14];
							if(admData[MAX_PLAYERS - 1][dGang] <= 0) { admData[MAX_PLAYERS - 1][dGangLvl] = 0; }
							if(admData[MAX_PLAYERS - 1][dGang] >= 1) { admData[MAX_PLAYERS - 1][dGangLvl] = 1; }
							if(admData[MAX_PLAYERS - 1][dGang] == 0)
							{
								format(ssss, sizeof(ssss), " **** Замена ид банды аккаунта игрока [%s] на ''выход из банды'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							else
							{
								if(admData[MAX_PLAYERS - 1][dGang] == -600)
								{
									format(ssss, sizeof(ssss), " **** Замена ид банды аккаунта игрока [%s] на ''выход из банды'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
									format(ssss, sizeof(ssss), " **** + Запрет аккаунта игрока [%s] приглашать себя в банду .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								else
								{
									format(ssss, sizeof(ssss), " **** Замена ид банды аккаунта игрока [%s] на %d .", impdatas[0], admData[MAX_PLAYERS - 1][dGang]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
							}
							impcon[16] = 3;
						}
					}
					if(impcon[15] == 0)//замена лвл в банде
					{
						if(admData[MAX_PLAYERS - 1][dGang] <= 0)
						{
							impdata[15] = 0;
							admData[MAX_PLAYERS - 1][dGangLvl] = 0;
						}
						if(admData[MAX_PLAYERS - 1][dGang] >= 1 && impdata[15] == 0) { impdata[15] = 1; }
						if(admData[MAX_PLAYERS - 1][dGangLvl] != impdata[15])
						{
							admData[MAX_PLAYERS - 1][dGangLvl] = impdata[15];
							format(ssss, sizeof(ssss), " **** Замена лвл в банде аккаунта игрока [%s] на %d .", impdatas[0], admData[MAX_PLAYERS - 1][dGangLvl]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							impcon[16] = 3;
						}
					}
					if(ddainv == 1)//если есть отметка инверсии знака лвл админа, то:
					{
						admData[MAX_PLAYERS - 1][dAdmin] = admData[MAX_PLAYERS - 1][dAdmin] * -1;//делаем лвл админа отрицательным
					}
#if (MOD90INS == 0)
					strdel(dAccName[MAX_PLAYERS - 1], 0, 64);
					strcat(dAccName[MAX_PLAYERS - 1], impdatas[0]);
					AccDataSaveFo(MAX_PLAYERS - 1);//запись изменённого аккаунта
#endif
#if (MOD90INS == 1)
					new strdln[3000];
					format(strdln, sizeof(strdln), "UPDATE Players SET Key = '%s',",admData[MAX_PLAYERS - 1][dKey]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sAdminLevel = %d,AdminShadow = %d,", strdln, admData[MAX_PLAYERS - 1][dAdmin],admData[MAX_PLAYERS - 1][dAdmshad]);
					format(strdln, sizeof(strdln), "%sAdminLive = %d,AdminScanCom = %d,", strdln, admData[MAX_PLAYERS - 1][dAdmlive],admData[MAX_PLAYERS - 1][dAdmscancom]);
					format(strdln, sizeof(strdln), "%sPrison = %d,Prisonsec = %d,", strdln, admData[MAX_PLAYERS - 1][dPrison],admData[MAX_PLAYERS - 1][dPrisonsec]);
					format(strdln, sizeof(strdln), "%sMuted = %d,Mutedsec = %d,", strdln, admData[MAX_PLAYERS - 1][dMuted],admData[MAX_PLAYERS - 1][dMutedsec]);
					format(strdln, sizeof(strdln), "%sMoney = %d,Police = %d,", strdln, admData[MAX_PLAYERS - 1][dMoney],admData[MAX_PLAYERS - 1][dPolice]);
					format(strdln, sizeof(strdln), "%sDeport = %d,RecPM = %d,", strdln, admData[MAX_PLAYERS - 1][dDeport],admData[MAX_PLAYERS - 1][dRecPM]);
					format(strdln, sizeof(strdln), "%sWanted = %d,Lock = %d,", strdln, admData[MAX_PLAYERS - 1][dWanted],admData[MAX_PLAYERS - 1][dLock]);
					format(strdln, sizeof(strdln), "%sGang = %d,GangLvl = %d ", strdln, admData[MAX_PLAYERS - 1][dGang],admData[MAX_PLAYERS - 1][dGangLvl]);
					format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, impdatas[0]);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
				}
				else//если аккаунта НЕ существует, то:
				{
					impcon[17] = 0;
				}
			}
		}
		if(impcon[16] == 2)
		{
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ок, игрок онлайн");
		}
		if(impcon[16] == 3)
		{
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ок, игрок оффлайн");
		}
		if(impcon[17] == 0)//если аккаунта не существует, то:
		{
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "аккаунта Name не существует");
		}
		format(impf, 256, "players/aimport/%i-ret.txt", impdd2);//создание файла-ответа
		if(fexist(impf))//если файл-ответа уже есть, то:
		{
			fremove(impf);//удаляем файл-ответа
		}
		impfile = ini_createFile(impf);//создаём файла-ответа
		if(impfile >= 0)
		{
			ini_setString(impfile, "ret", impdatas[3]);
			ini_closeFile(impfile);
		}
		format(impf, 256, "players/aimport/%i.txt", impdd2);//удаление файла для импорта
		if(fexist(impf))
		{
			fremove(impf);
		}
	}
	return 1;
}

#if (MOD22INS == 1 && MOD55INS == 1)
	forward SLCopy(per);
	public SLCopy(per)//резервное копирование сервер-лога
	{
		if(per == 1)//режим копии конца старого сервер-лога
		{
			position = fileLength(inLog);//узнаём и запоминаем последний размер сервер-лога

			new str333[256];
			format(str333, sizeof(str333), "\n------------------------------------------------------\n");
			fileWrite(outLog, str333);
			format(str333, sizeof(str333), "\n[server_log copy] конец старого сервер-лога (начало) !\n");
			fileWrite(outLog, str333);//делаем отметку в копии сервер-лога о начале копирования
			format(str333, sizeof(str333), "\n------------------------------------------------------\n");
			fileWrite(outLog, str333);
			fileSeek(inLog, -20000, seek_End);//устанавливаем маркер чтения с конца старого сервер-лога до минус 20000 байт
			while(fileRead(inLog, str333))//(что бы прочитать ТОЛЬКО последние 20000 байт старого сервер-лога)
			{//читаем строку за строкой (пока не достигнут конец старого сервер-лога)
				fileWrite(outLog, str333);//записываем копию старого сервер-лога строку за строкой
			}//выходим из процесса копирования, если достигнут конец сервер-лога
			format(str333, sizeof(str333), "\n-----------------------------------------------------\n");
			fileWrite(outLog, str333);
			format(str333, sizeof(str333), "\n[server_log copy] конец старого сервер-лога (конец) !\n");
			fileWrite(outLog, str333);//делаем отметку в копии сервер-лога о конце копирования
			format(str333, sizeof(str333), "\n-----------------------------------------------------\n");
			fileWrite(outLog, str333);
		}
		else//иначе: режим копии сервер-лога
		{
			new para1, para2;
			para1 = fileLength(inLog);//узнаём последний размер сервер-лога
			para2 = para1 - position;//узнаём разницу между предыдущим и последним размером сервер-лога
			position = para1;//запоминаем последний размер сервер-лога

			if(para2 > 0)//если разница между предыдущим и последним размером сервер-лога не равна нулю,
			{//(за последние 2 секунды в сервер-лог была добавлена хотя бы одна строка), то:
				new str333[256], para3;
				para3 = 0;
				fileSeek(inLog, para2 * -1, seek_End);//устанавливаем маркер чтения с конца сервер-лога до минус разницы
				while(fileRead(inLog, str333))//(что бы прочитать ТОЛЬКО байты разницы до конца сервер-лога)
				{//читаем строку за строкой (пока не достигнут конец сервер-лога)
					para3 = para3 + fileWrite(outLog, str333);//записываем копию сервер-лога строку за строкой,
					if(para3 > 10000)//И считаем число записанных байт разницы сервер-лога
					{//если за последние 2 секунды на сервере было больше 10000 байт (примерно 200 строк), то:
						format(str333, sizeof(str333), "\n----------------------------------------------------\n");
						fileWrite(outLog, str333);
						format(str333, sizeof(str333), "\n[server_log copy] превышен лимит копируемых байт !!!\n");
						fileWrite(outLog, str333);//делаем отметку в копии сервер-лога, И выходим из процесса копирования
						format(str333, sizeof(str333), "\n----------------------------------------------------\n");
						fileWrite(outLog, str333);
						break;//разницы сервер-лога
					}
				}//выходим из процесса копирования, если достигнут конец сервер-лога
			}
		}
		return 1;
	}
#endif

forward FUnfroz(playerid);
public FUnfroz(playerid)
{
	if(perfrost[playerid] == 600)//если игрок НЕ был заморожен админом, то:
	{
		TogglePlayerControllable(playerid,1);//разморозить игрока
	}
	return 1;
}

forward ContFS();
public ContFS()//перезагрузка с 0-го по 15-й слот FS
{
	new string[256];
	for(new j=0; j<16; j++)
	{
		if(strlen(relfs[j]))//если строка НЕ пустая, то:
		{
			strdel(string,0,256);//очистка переменной string
			strcat(string, "reloadfs ");//сборка RCON-команды перезагрузки фильтрскрипта
			strcat(string, relfs[j]);
			SendRconCommand(string);//RCON-команда перезагрузки фильтрскрипта
		}
	}
	return 1;
}

forward PassControl(string[]);
public PassControl(string[])//контроль пароля на посторонние символы
{
	new dln, dopper;
	dln = strlen(string);
	dopper = 1;
	for(new i = 0; i < dln; i++)
	{
		if(string[i] < 48 || (string[i] > 57 && string[i] < 65) ||
		(string[i] > 90 && string[i] < 97) || string[i] > 122) { dopper = 0; }
	}
	return dopper;
}

forward InpTxtControl(string[]);
public InpTxtControl(string[])//контроль вводимого текста на посторонние символы
{
	new dln, dopper;
	dln = strlen(string);
	dopper = 1;
	for(new i = 0; i < dln; i++)
	{
		if(string[i] < 32 || string[i] == 37 || string[i] == 126 ||
		string[i] == 127 || string[i] == 152 || string[i] == 160) { dopper = 0; }
	}
	return dopper;
}

forward InpNameControl(string[]);
public InpNameControl(string[])//контроль вводимого имени аккаунта на посторонние символы
{
	new dln, dopper;
	dln = strlen(string);
	dopper = 1;
	for(new i = 0; i < dln; i++)
	{
		if(string[i] == 32 || string[i] == 37 || string[i] == 126) { dopper = 0; }
	}
	return dopper;
}

forward FngpciControl(string[]);
public FngpciControl(string[])//контроль gpci-тега на ошибки
{
	new dln, dopper;
	dln = strlen(string);
	dopper = 1;
	if(dln != 40) { return 0; }
	for(new i = 0; i < dln; i++)
	{
		if(string[i] < 48 || (string[i] > 57 && string[i] < 65) ||
		string[i] > 70) { dopper = 0; }
	}
	return dopper;
}

forward ContSobj();
public ContSobj()//загрузка потоковых объектов, 3D-текстов, и текст-дравов сервера
{
/*
	Textdraw0 = TextDrawCreate(506.000000,96.000000,"~w~All ~g~Drifting~w~ score");//drift bonus
	TextDrawAlignment(Textdraw0,0);
	TextDrawBackgroundColor(Textdraw0,0x000000ff);
	TextDrawFont(Textdraw0,3);
	TextDrawLetterSize(Textdraw0,0.299999,1.000000);
	TextDrawColor(Textdraw0,0x00ff00ff);
	TextDrawSetOutline(Textdraw0,1);
	TextDrawSetProportional(Textdraw0,1);
	TextDrawSetShadow(Textdraw0,1);

	Textdraw1 = TextDrawCreate(498.000000,77.000000,"~g~0");
	TextDrawAlignment(Textdraw1,0);
	TextDrawBackgroundColor(Textdraw1,0x000000ff);
	TextDrawFont(Textdraw1,3);
	TextDrawLetterSize(Textdraw1,0.599999,2.200000);
	TextDrawColor(Textdraw1,0xffffffff);
	TextDrawSetOutline(Textdraw1,1);
	TextDrawSetProportional(Textdraw1,1);
	TextDrawSetShadow(Textdraw1,1);
*/
	print("Levels Downloading");
	// ==================================================================== //
	leveldr[0] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~1");
	TextDrawAlignment(leveldr[0],0);
	TextDrawBackgroundColor(leveldr[0],0x000000ff);
	TextDrawFont(leveldr[0],3);
	TextDrawLetterSize(leveldr[0],0.299999,1.000000);
	TextDrawColor(leveldr[0],0xffffffff);
	TextDrawSetOutline(leveldr[0],1);
	TextDrawSetProportional(leveldr[0],1);
	TextDrawSetShadow(leveldr[0],1);

	leveldr[1] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~2");
	TextDrawAlignment(leveldr[1],0);
	TextDrawBackgroundColor(leveldr[1],0x000000ff);
	TextDrawFont(leveldr[1],3);
	TextDrawLetterSize(leveldr[1],0.299999,1.000000);
	TextDrawColor(leveldr[1],0xffffffff);
	TextDrawSetOutline(leveldr[1],1);
	TextDrawSetProportional(leveldr[1],1);
	TextDrawSetShadow(leveldr[1],1);

	leveldr[2] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~3");
	TextDrawAlignment(leveldr[2],0);
	TextDrawBackgroundColor(leveldr[2],0x000000ff);
	TextDrawFont(leveldr[2],3);
	TextDrawLetterSize(leveldr[2],0.299999,1.000000);
	TextDrawColor(leveldr[2],0xffffffff);
	TextDrawSetOutline(leveldr[2],1);
	TextDrawSetProportional(leveldr[2],1);
	TextDrawSetShadow(leveldr[2],1);

	leveldr[3] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~4");
	TextDrawAlignment(leveldr[3],0);
	TextDrawBackgroundColor(leveldr[3],0x000000ff);
	TextDrawFont(leveldr[3],3);
	TextDrawLetterSize(leveldr[3],0.299999,1.000000);
	TextDrawColor(leveldr[3],0xffffffff);
	TextDrawSetOutline(leveldr[3],1);
	TextDrawSetProportional(leveldr[3],1);
	TextDrawSetShadow(leveldr[3],1);

	leveldr[4] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~5");
	TextDrawAlignment(leveldr[4],0);
	TextDrawBackgroundColor(leveldr[4],0x000000ff);
	TextDrawFont(leveldr[4],3);
	TextDrawLetterSize(leveldr[4],0.299999,1.000000);
	TextDrawColor(leveldr[4],0xffffffff);
	TextDrawSetOutline(leveldr[4],1);
	TextDrawSetProportional(leveldr[4],1);
	TextDrawSetShadow(leveldr[4],1);

	leveldr[5] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~6");
	TextDrawAlignment(leveldr[5],0);
	TextDrawBackgroundColor(leveldr[5],0x000000ff);
	TextDrawFont(leveldr[5],3);
	TextDrawLetterSize(leveldr[5],0.299999,1.000000);
	TextDrawColor(leveldr[5],0xffffffff);
	TextDrawSetOutline(leveldr[5],1);
	TextDrawSetProportional(leveldr[5],1);
	TextDrawSetShadow(leveldr[5],1);

	leveldr[6] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~7");
	TextDrawAlignment(leveldr[6],0);
	TextDrawBackgroundColor(leveldr[6],0x000000ff);
	TextDrawFont(leveldr[6],3);
	TextDrawLetterSize(leveldr[6],0.299999,1.000000);
	TextDrawColor(leveldr[6],0xffffffff);
	TextDrawSetOutline(leveldr[6],1);
	TextDrawSetProportional(leveldr[6],1);
	TextDrawSetShadow(leveldr[6],1);

	leveldr[7] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~8");
	TextDrawAlignment(leveldr[7],0);
	TextDrawBackgroundColor(leveldr[7],0x000000ff);
	TextDrawFont(leveldr[7],3);
	TextDrawLetterSize(leveldr[7],0.299999,1.000000);
	TextDrawColor(leveldr[7],0xffffffff);
	TextDrawSetOutline(leveldr[7],1);
	TextDrawSetProportional(leveldr[7],1);
	TextDrawSetShadow(leveldr[7],1);

	leveldr[8] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~9");
	TextDrawAlignment(leveldr[8],0);
	TextDrawBackgroundColor(leveldr[8],0x000000ff);
	TextDrawFont(leveldr[8],3);
	TextDrawLetterSize(leveldr[8],0.299999,1.000000);
	TextDrawColor(leveldr[8],0xffffffff);
	TextDrawSetOutline(leveldr[8],1);
	TextDrawSetProportional(leveldr[8],1);
	TextDrawSetShadow(leveldr[8],1);

	leveldr[9] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~10");
	TextDrawAlignment(leveldr[9],0);
	TextDrawBackgroundColor(leveldr[9],0x000000ff);
	TextDrawFont(leveldr[9],3);
	TextDrawLetterSize(leveldr[9],0.299999,1.000000);
	TextDrawColor(leveldr[9],0xffffffff);
	TextDrawSetOutline(leveldr[9],1);
	TextDrawSetProportional(leveldr[9],1);
	TextDrawSetShadow(leveldr[9],1);

	leveldr[10] = TextDrawCreate(515.000000,99.000000,"Drift level:~y~VIP");
	TextDrawAlignment(leveldr[10],0);
	TextDrawBackgroundColor(leveldr[10],0x000000ff);
	TextDrawFont(leveldr[10],3);
	TextDrawLetterSize(leveldr[10],0.299999,1.000000);
	TextDrawColor(leveldr[10],0xffffffff);
	TextDrawSetOutline(leveldr[10],1);
	TextDrawSetProportional(leveldr[10],1);
	TextDrawSetShadow(leveldr[10],1);
	// ===================================================================== //
	new Max = GetMaxPlayers();
	for(new i=0; i<Max; i++)
	{
		Level3D[i] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
	}

//==============================================================================
//                              GarHouse
//==============================================================================
	for(new i = 0; i < MAX_PLAYERS; i++)//обнуление массива блокировок диалога ввода пароля
	{
		lockpas[i] = 0;
	}

    LoadHouses(); // Загрузка фс дома
    Loop(i, MAX_PLAYERS)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            SetPVarInt(i, "HousePrevTime", 0);
        }
    }
//==============================================================================
//                              End GarHouse
//==============================================================================

//----------------------------- Elevator - 1 -----------------------------------
	new string[256];
	MovObj = 0;

	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    ElevatorQueue[i] = -1;
	    FloorRequestedBy[i] = 10000;
	}
//объекты и 3D-тексты лифта
	Obj_Elevator = CreateObject(18755, 1786.678100, -1303.459472, GROUND_Z_COORD + ELEVATOR_OFFSET, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[0] = CreateObject(18757, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[1] = CreateObject(18756, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Label_Elevator = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
	0x33AA33FF, 1784.9822, -1302.0426, 13.6491, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);

	new Float:z;//объекты дверей на этажах
	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    Obj_FloorDoors[i][0] = CreateDynamicObject(18757, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
		Obj_FloorDoors[i][1] = CreateDynamicObject(18756, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
		format(string, sizeof(string), "[ %s ]\n{33AA33}Нажмите {AA2222}''N'' {33AA33}для\nвызова лифта", FloorNames[i]);
		if(i == 0)//3D-тексты на этажах
		{
		    z = 13.4713;
		}
		else
		{
		    z = 13.4713 + 8.7396 + ((i-1) * 5.45155);
		}
		Label_Floors[i] = CreateDynamic3DTextLabel(string, 0xF0F0F0FF, 1783.9799, -1300.7660, z, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
		format(string, sizeof(string), "[ %s ]", FloorNames[0]);
		Label2_Floors[i] = CreateDynamic3DTextLabel(string, 0x33AA33FF, 1786.6799, -1300.7660, z + 2.3, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1);
	}
	Floor_OpenDoors(0);
	Elevator_OpenDoors();
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	MovObj22 = 0;

	for(new i; i < sizeof(ElevatorQueue22); i ++)
	{
	    ElevatorQueue22[i] = -1;
	    FloorRequestedBy22[i] = 10000;
	}
//объекты и 3D-тексты лифта
	Obj_Elevator22 = CreateObject(18755, 287.9500, -1609.3200, GROUND_Z_COORD22 + ELEVATOR_OFFSET22, 0.000000, 0.000000, 80.000000);
	Obj_ElevatorDoors22[0] = CreateObject(18757, X_DOOR_CLOSED22, -1609.3200, GROUND_Z_COORD22, 0.000000, 0.000000, 80.000000);
	Obj_ElevatorDoors22[1] = CreateObject(18756, X_DOOR_CLOSED22, -1609.3200, GROUND_Z_COORD22, 0.000000, 0.000000, 80.000000);
	Label_Elevator22 = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
	0x33AA33FF, 289.23, -1610.63, 17.96, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);

	new Float:z22;//объекты дверей на этажах
	for(new i; i < sizeof(Obj_FloorDoors22); i ++)
	{
	    Obj_FloorDoors22[i][0] = CreateDynamicObject(18757, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(i), 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
		Obj_FloorDoors22[i][1] = CreateDynamicObject(18756, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(i), 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
		format(string, sizeof(string), "[ %s ]\n{33AA33}Нажмите {AA2222}''N'' {33AA33}для\nвызова лифта", FloorNames22[i]);
		if(i == 0)//3D-тексты на этажах
		{
		    z22 = 17.86;
		}
		if(i == 1)
		{
		    z22 = 17.86 + 15.0782;
		}
		if(i == 2)
		{
		    z22 = 17.86 + 15.0782 + 14.0639;
		}
		if(i > 2)
		{
		    z22 = 17.86 + 15.0782 + 14.0639 + ((i-2) * 4.50115);
		}
		Label_Floors22[i] = CreateDynamic3DTextLabel(string, 0xF0F0F0FF, 290.10, -1612.84, z22, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
		format(string, sizeof(string), "[ %s ]", FloorNames22[0]);
		Label2_Floors22[i] = CreateDynamic3DTextLabel(string, 0x33AA33FF, 287.63, -1611.43, z22 + 2.3, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1);
	}
	Floor_OpenDoors22(0);
	Elevator_OpenDoors22();
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	LoadBusSystem();//загрузка системы бизнесов//BusSystem

	return 1;
}

forward AccDataLoadUn(playerid);
public AccDataLoadUn(playerid)
{
	new string[256];
	format(string, sizeof(string), "players/%s.ini", dAccName[playerid]);

#if (MOD90INS == 0)
	if(!fexist(string))
	{
		return 0;//аккаунта НЕ существует
	}
	new File: UserFile = fopen(string, io_read);//чтение аккаунта
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "Key" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dKey], val, 0, strlen(val)-1, 32); }
		if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dTDReg], val, 0, strlen(val)-1, 32); }
		if( strcmp( key , "DEndConD" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConD] = strval( val ); }
		if( strcmp( key , "DEndConM" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConM] = strval( val ); }
		if( strcmp( key , "DEndConY" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConY] = strval( val ); }
		if( strcmp( key , "IPAdr" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dIPAdr], val, 0, strlen(val)-1, 128); }
		if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMinlog] = strval( val ); }
	    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmin] = strval( val ); }
	    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmshad] = strval( val ); }
	    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmlive] = strval( val ); }
		if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmscancom] = strval( val ); }
		if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dReg] = strval( val ); }
		if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPrison] = strval( val ); }
		if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPrisonsec] = strval( val ); }
		if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMuted] = strval( val ); }
		if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMutedsec] = strval( val ); }
		if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMoney] = strval( val ); }
		if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dKills] = strval( val ); }
		if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dDeaths] = strval( val ); }
		if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPolice] = strval( val ); }
		if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dDeport] = strval( val ); }
		if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dRecPM] = strval( val ); }
		if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dWanted] = strval( val ); }
		if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dLock] = strval( val ); }
		if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGang] = strval( val ); }
		if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGangLvl] = strval( val ); }
		if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data1], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout1], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver1], val, 0, strlen(val)-1, 32); }
		if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count1] = strval( val ); }
		if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data2], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout2], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver2], val, 0, strlen(val)-1, 32); }
		if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count2] = strval( val ); }
		if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data3], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout3], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver3], val, 0, strlen(val)-1, 32); }
		if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count3] = strval( val ); }
		if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data4], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout4], val, 0, strlen(val)-1, 64); }
		if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver4], val, 0, strlen(val)-1, 32); }
		if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count4] = strval( val ); }
		if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassMode] = strval( val ); }
		if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassDel] = strval( val ); }
		if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassLock] = strval( val ); }
		if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassError] = strval( val ); }
	}
	fclose(UserFile);
//эти строки добавлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	if(strlen(admData[playerid][dPass_data1]) == 0) { strmid(admData[playerid][dPass_data1], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_inout1]) == 0) { strmid(admData[playerid][dPass_inout1], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_ver1]) == 0) { strmid(admData[playerid][dPass_ver1], "---", 0, 3, 32); }
	if(strlen(admData[playerid][dPass_data2]) == 0) { strmid(admData[playerid][dPass_data2], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_inout2]) == 0) { strmid(admData[playerid][dPass_inout2], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_ver2]) == 0) { strmid(admData[playerid][dPass_ver2], "---", 0, 3, 32); }
	if(strlen(admData[playerid][dPass_data3]) == 0) { strmid(admData[playerid][dPass_data3], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_inout3]) == 0) { strmid(admData[playerid][dPass_inout3], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_ver3]) == 0) { strmid(admData[playerid][dPass_ver3], "---", 0, 3, 32); }
	if(strlen(admData[playerid][dPass_data4]) == 0) { strmid(admData[playerid][dPass_data4], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_inout4]) == 0) { strmid(admData[playerid][dPass_inout4], "---", 0, 3, 64); }
	if(strlen(admData[playerid][dPass_ver4]) == 0) { strmid(admData[playerid][dPass_ver4], "---", 0, 3, 32); }
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
	new ssss[256];
	if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
	{
		new File: UserFile = fopen(string, io_read);//чтение аккаунта
	    new key[ 256 ] , val[ 256 ];
	    new Data[ 256 ];
		while ( fread( UserFile , Data , sizeof( Data ) ) )
		{
			key = ini_GetKey( Data );
			if( strcmp( key , "Key" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dKey], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "TDReg" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dTDReg], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "DEndConD" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConD] = strval( val ); }
			if( strcmp( key , "DEndConM" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConM] = strval( val ); }
			if( strcmp( key , "DEndConY" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dEndConY] = strval( val ); }
			if( strcmp( key , "IPAdr" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dIPAdr], val, 0, strlen(val)-1, 128); }
			if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMinlog] = strval( val ); }
		    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmin] = strval( val ); }
		    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmshad] = strval( val ); }
		    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmlive] = strval( val ); }
			if( strcmp( key , "AdminScanCom" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dAdmscancom] = strval( val ); }
			if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dReg] = strval( val ); }
			if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPrison] = strval( val ); }
			if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPrisonsec] = strval( val ); }
			if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMuted] = strval( val ); }
			if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMutedsec] = strval( val ); }
			if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dMoney] = strval( val ); }
			if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dKills] = strval( val ); }
			if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dDeaths] = strval( val ); }
			if( strcmp( key , "Police" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPolice] = strval( val ); }
			if( strcmp( key , "Deport" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dDeport] = strval( val ); }
			if( strcmp( key , "RecPM" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dRecPM] = strval( val ); }
			if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dWanted] = strval( val ); }
			if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dLock] = strval( val ); }
			if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGang] = strval( val ); }
			if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dGangLvl] = strval( val ); }
			if( strcmp( key , "Pass_data1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data1], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout1], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver1], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count1" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count1] = strval( val ); }
			if( strcmp( key , "Pass_data2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data2], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout2], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver2], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count2" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count2] = strval( val ); }
			if( strcmp( key , "Pass_data3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data3], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout3], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver3], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count3" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count3] = strval( val ); }
			if( strcmp( key , "Pass_data4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_data4], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_inout4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_inout4], val, 0, strlen(val)-1, 64); }
			if( strcmp( key , "Pass_ver4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(admData[playerid][dPass_ver4], val, 0, strlen(val)-1, 32); }
			if( strcmp( key , "Pass_count4" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPass_count4] = strval( val ); }
			if( strcmp( key , "PassMode" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassMode] = strval( val ); }
			if( strcmp( key , "PassDel" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassDel] = strval( val ); }
			if( strcmp( key , "PassLock" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassLock] = strval( val ); }
			if( strcmp( key , "PassError" , true ) == 0 ) { val = ini_GetValue( Data ); admData[playerid][dPassError] = strval( val ); }
        }
        fclose(UserFile);

//эти строки добавлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
		if(strlen(admData[playerid][dPass_data1]) == 0) { strmid(admData[playerid][dPass_data1], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_inout1]) == 0) { strmid(admData[playerid][dPass_inout1], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_ver1]) == 0) { strmid(admData[playerid][dPass_ver1], "---", 0, 3, 32); }
		if(strlen(admData[playerid][dPass_data2]) == 0) { strmid(admData[playerid][dPass_data2], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_inout2]) == 0) { strmid(admData[playerid][dPass_inout2], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_ver2]) == 0) { strmid(admData[playerid][dPass_ver2], "---", 0, 3, 32); }
		if(strlen(admData[playerid][dPass_data3]) == 0) { strmid(admData[playerid][dPass_data3], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_inout3]) == 0) { strmid(admData[playerid][dPass_inout3], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_ver3]) == 0) { strmid(admData[playerid][dPass_ver3], "---", 0, 3, 32); }
		if(strlen(admData[playerid][dPass_data4]) == 0) { strmid(admData[playerid][dPass_data4], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_inout4]) == 0) { strmid(admData[playerid][dPass_inout4], "---", 0, 3, 64); }
		if(strlen(admData[playerid][dPass_ver4]) == 0) { strmid(admData[playerid][dPass_ver4], "---", 0, 3, 32); }
//---------------------------------- конец -------------------------------------

		format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", dAccName[playerid]);//миграция аккаунта в БД, создаём запрос БД
		db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

		new strdln[4000];
		format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
		format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,AdminScanCom,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,", strdln);
		format(strdln, sizeof(strdln), "%sPolice,Deport,RecPM,Wanted,Lock,Gang,GangLvl,Pass_data1,Pass_inout1,Pass_ver1,Pass_count1,", strdln);
		format(strdln, sizeof(strdln), "%sPass_data2,Pass_inout2,Pass_ver2,Pass_count2,Pass_data3,Pass_inout3,Pass_ver3,Pass_count3,", strdln);
		format(strdln, sizeof(strdln), "%sPass_data4,Pass_inout4,Pass_ver4,Pass_count4,PassMode,PassDel,PassLock,PassError) ", strdln);
		format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, dAccName[playerid],admData[playerid][dKey],admData[playerid][dTDReg]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dEndConD],admData[playerid][dEndConM],admData[playerid][dEndConY]);
		format(strdln, sizeof(strdln), "%s'%s',%d,%d,", strdln, admData[playerid][dIPAdr],admData[playerid][dMinlog],admData[playerid][dAdmin]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dAdmshad],admData[playerid][dAdmlive],admData[playerid][dAdmscancom]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dReg],admData[playerid][dPrison],admData[playerid][dPrisonsec]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dMuted],admData[playerid][dMutedsec],admData[playerid][dMoney]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dKills],admData[playerid][dDeaths],admData[playerid][dPolice]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dDeport],admData[playerid][dRecPM],admData[playerid][dWanted]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dLock],admData[playerid][dGang],admData[playerid][dGangLvl]);
		format(strdln, sizeof(strdln), "%s'%s','%s','%s',", strdln, admData[playerid][dPass_data1],admData[playerid][dPass_inout1],admData[playerid][dPass_ver1]);
		format(strdln, sizeof(strdln), "%s%d,'%s','%s',", strdln, admData[playerid][dPass_count1],admData[playerid][dPass_data2],admData[playerid][dPass_inout2]);
		format(strdln, sizeof(strdln), "%s'%s',%d,'%s',", strdln, admData[playerid][dPass_ver2],admData[playerid][dPass_count2],admData[playerid][dPass_data3]);
		format(strdln, sizeof(strdln), "%s'%s','%s',%d,", strdln, admData[playerid][dPass_inout3],admData[playerid][dPass_ver3],admData[playerid][dPass_count3]);
		format(strdln, sizeof(strdln), "%s'%s','%s','%s',", strdln, admData[playerid][dPass_data4],admData[playerid][dPass_inout4],admData[playerid][dPass_ver4]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, admData[playerid][dPass_count4],admData[playerid][dPassMode],admData[playerid][dPassDel]);
		format(strdln, sizeof(strdln), "%s%d,%d)", strdln, admData[playerid][dPassLock],admData[playerid][dPassError]);
		db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

		if(fexist(string))
		{
			fremove(string);//удаляем аккаунт из fopen
		}
	}
	else//иначе: (если аккаунт зарегистрирован в SQLite)
	{
		format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", dAccName[playerid]);//создаём запрос БД
		querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
		if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
		{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
			return 0;//аккаунта НЕ существует
		}
		else//иначе: (если аккаунт зарегистрирован в БД)
		{
			new buffer[64];//читаем данные из БД
			db_get_field(querydb[playerid], 2, admData[playerid][dKey], 32);
			db_get_field(querydb[playerid], 3, admData[playerid][dTDReg], 32);
			db_get_field(querydb[playerid], 4, buffer, 64); admData[playerid][dEndConD] = strval(buffer);
			db_get_field(querydb[playerid], 5, buffer, 64); admData[playerid][dEndConM] = strval(buffer);
			db_get_field(querydb[playerid], 6, buffer, 64); admData[playerid][dEndConY] = strval(buffer);
			db_get_field(querydb[playerid], 7, admData[playerid][dIPAdr], 128);
			db_get_field(querydb[playerid], 8, buffer, 64); admData[playerid][dMinlog] = strval(buffer);
			db_get_field(querydb[playerid], 9, buffer, 64); admData[playerid][dAdmin] = strval(buffer);
			db_get_field(querydb[playerid], 10, buffer, 64); admData[playerid][dAdmshad] = strval(buffer);
			db_get_field(querydb[playerid], 11, buffer, 64); admData[playerid][dAdmlive] = strval(buffer);
			db_get_field(querydb[playerid], 12, buffer, 64); admData[playerid][dAdmscancom] = strval(buffer);
			db_get_field(querydb[playerid], 13, buffer, 64); admData[playerid][dReg] = strval(buffer);
			db_get_field(querydb[playerid], 14, buffer, 64); admData[playerid][dPrison] = strval(buffer);
			db_get_field(querydb[playerid], 15, buffer, 64); admData[playerid][dPrisonsec] = strval(buffer);
			db_get_field(querydb[playerid], 16, buffer, 64); admData[playerid][dMuted] = strval(buffer);
			db_get_field(querydb[playerid], 17, buffer, 64); admData[playerid][dMutedsec] = strval(buffer);
			db_get_field(querydb[playerid], 18, buffer, 64); admData[playerid][dMoney] = strval(buffer);
			db_get_field(querydb[playerid], 19, buffer, 64); admData[playerid][dKills] = strval(buffer);
			db_get_field(querydb[playerid], 20, buffer, 64); admData[playerid][dDeaths] = strval(buffer);
			db_get_field(querydb[playerid], 21, buffer, 64); admData[playerid][dPolice] = strval(buffer);
			db_get_field(querydb[playerid], 22, buffer, 64); admData[playerid][dDeport] = strval(buffer);
			db_get_field(querydb[playerid], 23, buffer, 64); admData[playerid][dRecPM] = strval(buffer);
			db_get_field(querydb[playerid], 24, buffer, 64); admData[playerid][dWanted] = strval(buffer);
			db_get_field(querydb[playerid], 25, buffer, 64); admData[playerid][dLock] = strval(buffer);
			db_get_field(querydb[playerid], 26, buffer, 64); admData[playerid][dGang] = strval(buffer);
			db_get_field(querydb[playerid], 27, buffer, 64); admData[playerid][dGangLvl] = strval(buffer);
			db_get_field(querydb[playerid], 28, admData[playerid][dPass_data1], 64);
			db_get_field(querydb[playerid], 29, admData[playerid][dPass_inout1], 64);
			db_get_field(querydb[playerid], 30, admData[playerid][dPass_ver1], 32);
			db_get_field(querydb[playerid], 31, buffer, 64); admData[playerid][dPass_count1] = strval(buffer);
			db_get_field(querydb[playerid], 32, admData[playerid][dPass_data2], 64);
			db_get_field(querydb[playerid], 33, admData[playerid][dPass_inout2], 64);
			db_get_field(querydb[playerid], 34, admData[playerid][dPass_ver2], 32);
			db_get_field(querydb[playerid], 35, buffer, 64); admData[playerid][dPass_count2] = strval(buffer);
			db_get_field(querydb[playerid], 36, admData[playerid][dPass_data3], 64);
			db_get_field(querydb[playerid], 37, admData[playerid][dPass_inout3], 64);
			db_get_field(querydb[playerid], 38, admData[playerid][dPass_ver3], 32);
			db_get_field(querydb[playerid], 39, buffer, 64); admData[playerid][dPass_count3] = strval(buffer);
			db_get_field(querydb[playerid], 40, admData[playerid][dPass_data4], 64);
			db_get_field(querydb[playerid], 41, admData[playerid][dPass_inout4], 64);
			db_get_field(querydb[playerid], 42, admData[playerid][dPass_ver4], 32);
			db_get_field(querydb[playerid], 43, buffer, 64); admData[playerid][dPass_count4] = strval(buffer);
			db_get_field(querydb[playerid], 44, buffer, 64); admData[playerid][dPassMode] = strval(buffer);
			db_get_field(querydb[playerid], 45, buffer, 64); admData[playerid][dPassDel] = strval(buffer);
			db_get_field(querydb[playerid], 46, buffer, 64); admData[playerid][dPassLock] = strval(buffer);
			db_get_field(querydb[playerid], 47, buffer, 64); admData[playerid][dPassError] = strval(buffer);
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
		}
	}
#endif
	if(admData[playerid][dPassMode] != MOD4DINS)//если установлен новый режим паспортов, то:
	{//очистка всех паспортов
		strmid(admData[playerid][dPass_data1], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_inout1], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_ver1], "---", 0, 3, 32);
		admData[playerid][dPass_count1] = 0;
		strmid(admData[playerid][dPass_data2], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_inout2], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_ver2], "---", 0, 3, 32);
		admData[playerid][dPass_count2] = 0;
		strmid(admData[playerid][dPass_data3], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_inout3], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_ver3], "---", 0, 3, 32);
		admData[playerid][dPass_count3] = 0;
		strmid(admData[playerid][dPass_data4], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_inout4], "---", 0, 3, 64);
		strmid(admData[playerid][dPass_ver4], "---", 0, 3, 32);
		admData[playerid][dPass_count4] = 0;
		admData[playerid][dPassMode] = MOD4DINS;
		admData[playerid][dPassDel] = 0;
		admData[playerid][dPassLock] = 0;
		admData[playerid][dPassError] = 0;
	}
	if(admData[playerid][dAdmin] != 0)//если админка была изменена в аккаунте или в БД, то:
	{
		AdmUpdate(dAccName[playerid], admData[playerid][dAdmin], 4);
	}
	return 1;//аккаунт существует
}

forward AccDataSaveFo(playerid);
public AccDataSaveFo(playerid)
{
	new string[256];
	format(string, sizeof(string), "players/%s.ini", dAccName[playerid]);

	new File: hFile = fopen(string, io_write);
	if (hFile)
	{
		new var[128];
		format(var, 128, "Key=%s\n",admData[playerid][dKey]);fwrite(hFile, var);
		format(var, 128, "TDReg=%s\n",admData[playerid][dTDReg]);fwrite(hFile, var);
		format(var, 128, "DEndConD=%d\n",admData[playerid][dEndConD]);fwrite(hFile, var);
		format(var, 128, "DEndConM=%d\n",admData[playerid][dEndConM]);fwrite(hFile, var);
		format(var, 128, "DEndConY=%d\n",admData[playerid][dEndConY]);fwrite(hFile, var);
		format(var, 128, "IPAdr=%s\n",admData[playerid][dIPAdr]);fwrite(hFile, var);
		format(var, 128, "MinLog=%d\n",admData[playerid][dMinlog]);fwrite(hFile, var);
		format(var, 128, "AdminLevel=%d\n",admData[playerid][dAdmin]);fwrite(hFile, var);
		format(var, 128, "AdminShadow=%d\n",admData[playerid][dAdmshad]);fwrite(hFile, var);
		format(var, 128, "AdminLive=%d\n",admData[playerid][dAdmlive]);fwrite(hFile, var);
		format(var, 128, "AdminScanCom=%d\n",admData[playerid][dAdmscancom]);fwrite(hFile, var);
		format(var, 128, "Registered=%d\n",admData[playerid][dReg]);fwrite(hFile, var);
		format(var, 128, "Prison=%d\n",admData[playerid][dPrison]);fwrite(hFile, var);
		format(var, 128, "Prisonsec=%d\n",admData[playerid][dPrisonsec]);fwrite(hFile, var);
		format(var, 128, "Muted=%d\n",admData[playerid][dMuted]);fwrite(hFile, var);
		format(var, 128, "Mutedsec=%d\n",admData[playerid][dMutedsec]);fwrite(hFile, var);
		format(var, 128, "Money=%d\n",admData[playerid][dMoney]);fwrite(hFile, var);
		format(var, 128, "Kills=%d\n",admData[playerid][dKills]);fwrite(hFile, var);
		format(var, 128, "Deaths=%d\n",admData[playerid][dDeaths]);fwrite(hFile, var);
		format(var, 128, "Police=%d\n",admData[playerid][dPolice]);fwrite(hFile, var);
		format(var, 128, "Deport=%d\n",admData[playerid][dDeport]);fwrite(hFile, var);
		format(var, 128, "RecPM=%d\n",admData[playerid][dRecPM]);fwrite(hFile, var);
		format(var, 128, "Wanted=%d\n",admData[playerid][dWanted]);fwrite(hFile, var);
		format(var, 128, "Lock=%d\n",admData[playerid][dLock]);fwrite(hFile, var);
		format(var, 128, "Gang=%d\n",admData[playerid][dGang]);fwrite(hFile, var);
		format(var, 128, "GangLvl=%d\n",admData[playerid][dGangLvl]);fwrite(hFile, var);
		format(var, 128, "Pass_data1=%s\n",admData[playerid][dPass_data1]);fwrite(hFile, var);
		format(var, 128, "Pass_inout1=%s\n",admData[playerid][dPass_inout1]);fwrite(hFile, var);
		format(var, 128, "Pass_ver1=%s\n",admData[playerid][dPass_ver1]);fwrite(hFile, var);
		format(var, 128, "Pass_count1=%d\n",admData[playerid][dPass_count1]);fwrite(hFile, var);
		format(var, 128, "Pass_data2=%s\n",admData[playerid][dPass_data2]);fwrite(hFile, var);
		format(var, 128, "Pass_inout2=%s\n",admData[playerid][dPass_inout2]);fwrite(hFile, var);
		format(var, 128, "Pass_ver2=%s\n",admData[playerid][dPass_ver2]);fwrite(hFile, var);
		format(var, 128, "Pass_count2=%d\n",admData[playerid][dPass_count2]);fwrite(hFile, var);
		format(var, 128, "Pass_data3=%s\n",admData[playerid][dPass_data3]);fwrite(hFile, var);
		format(var, 128, "Pass_inout3=%s\n",admData[playerid][dPass_inout3]);fwrite(hFile, var);
		format(var, 128, "Pass_ver3=%s\n",admData[playerid][dPass_ver3]);fwrite(hFile, var);
		format(var, 128, "Pass_count3=%d\n",admData[playerid][dPass_count3]);fwrite(hFile, var);
		format(var, 128, "Pass_data4=%s\n",admData[playerid][dPass_data4]);fwrite(hFile, var);
		format(var, 128, "Pass_inout4=%s\n",admData[playerid][dPass_inout4]);fwrite(hFile, var);
		format(var, 128, "Pass_ver4=%s\n",admData[playerid][dPass_ver4]);fwrite(hFile, var);
		format(var, 128, "Pass_count4=%d\n",admData[playerid][dPass_count4]);fwrite(hFile, var);
		format(var, 128, "PassMode=%d\n",admData[playerid][dPassMode]);fwrite(hFile, var);
		format(var, 128, "PassDel=%d\n",admData[playerid][dPassDel]);fwrite(hFile, var);
		format(var, 128, "PassLock=%d\n",admData[playerid][dPassLock]);fwrite(hFile, var);
		format(var, 128, "PassError=%d\n",admData[playerid][dPassError]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

forward FnIPCon(ipgl[], ripd[4]);//конвертор + контроль IP-адреса на ошибки,
public FnIPCon(ipgl[], ripd[4])//и на посторонние символы
{
	if(strlen(ipgl) < 7 || strlen(ipgl) > 15)//если длина IP-адреса за пределами, то:
	{
		return 0;//завершаем функцию с указанием ошибки
	}
	new locip[32];//выходная строка
	strdel(locip, 0, 32);//обнуляем выходную строку
	new ind1 = 0;//обнуляем индекс входной строки
	new ind2 = 0;//обнуляем индекс выходной строки
	new count1 = 0;//обнуляем счётчик выходных строк
	new count2 = 0;//обнуляем счётчик символов "точка"
	new erind = 0;//обнуляем индекс ошибки
	ripd[0] = -1;//задаём группам IP-адреса несуществующие значения
	ripd[1] = -1;
	ripd[2] = -1;
	ripd[3] = -1;
	while(ind1 < 128)
	{
		if(ipgl[ind1] == 0)//если найден конец входной стороки, то:
		{
			break;//завершаем цикл
		}
		if(ipgl[ind1] == '.')//если найден символ "точка", то:
		{
			locip[ind2] = 0;//делаем отметку конца выходной строки
			ripd[count1] = strval(locip);//преобразование строки символов в число
			ind2 = 0;//обнуляем индекс выходной строки
			count1++;//счётчик выходных строк + 1
			count2++;//счётчик символов "точка" + 1
		}
		if(ipgl[ind1] >= 48 && ipgl[ind1] <= 57)//если найдена цифра от 0 до 9, то:
		{
			locip[ind2] = ipgl[ind1];//копирование цифры в выходную строку
			ind2++;//индекс выходной строки + 1
		}
		if(ipgl[ind1] < 46 || ipgl[ind1] == 47 || ipgl[ind1] > 57)
		{//если найден запрещённый символ, то:
			erind = 1;//устанавливаем индекс ошибки
			break;//завершаем цикл
		}
		ind1++;//индекс входной строки + 1
	}
	locip[ind2] = 0;//делаем отметку конца выходной строки
	ripd[count1] = strval(locip);//преобразование строки символов в число (для группы-4 IP-адреса)
	if(erind == 1 || ripd[0] < 0 || ripd[0] > 255 || ripd[1] < 0 || ripd[1] > 255 ||
	ripd[2] < 0 || ripd[2] > 255 || ripd[3] < 0 || ripd[3] > 255 || count2 != 3)
	{//если установлен индекс ошибки, ИЛИ выходные данные за пределами, ИЛИ число символов "точка" НЕ равно 3, то:
		return 0;//завершаем функцию с указанием ошибки
	}
	return 1;//успешное завершение функции
}

forward Maskgpci(locdata[64]);
public Maskgpci(locdata[64])
{
	new datad1[64];
	format(datad1, sizeof(datad1), "62A74216E3815F419B65D170C0D790B71E615A93");
	for(new i = 0; i < 40; i++)
	{
		if(datad1[i] >= 48 && datad1[i] <= 57) { datad1[i] = datad1[i] - 48; }
		if(datad1[i] >= 65 && datad1[i] <= 70) { datad1[i] = datad1[i] - 55; }
		if(locdata[i] >= 48 && locdata[i] <= 57) { locdata[i] = locdata[i] - 48; }
		if(locdata[i] >= 65 && locdata[i] <= 70) { locdata[i] = locdata[i] - 55; }
		locdata[i] = locdata[i] + datad1[i];
		if(locdata[i] > 15) { locdata[i] = locdata[i] - 16; }
		if(locdata[i] >= 0 && locdata[i] <= 9) { locdata[i] = locdata[i] + 48; }
		if(locdata[i] >= 10 && locdata[i] <= 15) { locdata[i] = locdata[i] + 55; }
	}
	return 1;
}

stock FnGetClVers(playerid)//определение и контроль версии САМП-клиента
{//на посторонние символы
	new locdata[32], locdata22[32];
	GetPlayerVersion(playerid, locdata, sizeof(locdata));
	if(strlen(locdata) >= 1 && strlen(locdata) <= 15)//если в версии САМП-клиента от 1 до 15 символов, то:
	{
		format(locdata22, sizeof(locdata22), "[nocheck]");
#if (MOD11INS == 1)
		if(strcmp(locdata, "0.3e", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3e]"); }
#endif
#if (MOD11INS == 2)
		if(strcmp(locdata, "0.3x-R1-2", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3x-R1-2]"); }
#endif
#if (MOD11INS == 3)
		if(strcmp(locdata, "0.3z", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3z]"); }
		if(strcmp(locdata, "0.3z-R2", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3z-R2]"); }
#endif
#if (MOD11INS == 4)
		if(strcmp(locdata, "0.3.7", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3.7]"); }
		if(strcmp(locdata, "0.3.7-R2", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3.7-R2]"); }
		if(strcmp(locdata, "0.3.7-R3", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3.7-R3]"); }
		if(strcmp(locdata, "0.3.DL-R1", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3.DL-R1]"); }
		if(strcmp(locdata, "0.3.7-R4", false) == 0) { format(locdata22, sizeof(locdata22), "[0.3.7-R4]"); }
#endif
		switch(playconpass[playerid])
		{
		    case 0, 1:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data1], "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)
				{//если обнаружена мобильная версия на базе Андроид, то:
					format(locdata22, sizeof(locdata22), "%s [MOB]", locdata22);
				}
				else//иначе, если НЕ обнаружена мобильная версия на базе Андроид, то:
				{
					format(locdata22, sizeof(locdata22), "%s [PC]", locdata22);
				}
			}
		    case 2:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data2], "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)
				{//если обнаружена мобильная версия на базе Андроид, то:
					format(locdata22, sizeof(locdata22), "%s [MOB]", locdata22);
				}
				else//иначе, если НЕ обнаружена мобильная версия на базе Андроид, то:
				{
					format(locdata22, sizeof(locdata22), "%s [PC]", locdata22);
				}
			}
		    case 3:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data3], "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)
				{//если обнаружена мобильная версия на базе Андроид, то:
					format(locdata22, sizeof(locdata22), "%s [MOB]", locdata22);
				}
				else//иначе, если НЕ обнаружена мобильная версия на базе Андроид, то:
				{
					format(locdata22, sizeof(locdata22), "%s [PC]", locdata22);
				}
			}
		    case 4:
			{
				if(strcmp(PlayerInfo[playerid][pPass_data4], "4FE72F14630A1B855BE3BAC8CF131CFBFCEF3323", false) == 0)
				{//если обнаружена мобильная версия на базе Андроид, то:
					format(locdata22, sizeof(locdata22), "%s [MOB]", locdata22);
				}
				else//иначе, если НЕ обнаружена мобильная версия на базе Андроид, то:
				{
					format(locdata22, sizeof(locdata22), "%s [PC]", locdata22);
				}
			}
		}
	}
	else//иначе, если в версии САМП-клиента меньше 1 или больше 15 символов, то:
	{
		format(locdata22, sizeof(locdata22), "[nocheck] [nocheck]");
	}
	return locdata22;
}

#if (MOD4DINS >= 1)
forward FnPrnPass(reg, playid, playtrg);
public FnPrnPass(reg, playid, playtrg)//печать паспортов
{
//reg = 1 - печать для собственной статистики он-лайн игрока [pPass_ver1]
//reg = 2 - печать для собственной статистики он-лайн админа [pPass_ver1][pPass_inout1][pPass_count1]
//reg = 3 - печать для админа, данные статистики он-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
//reg = 4 - печать для админа, данные статистики он-лайн админа [pPass_ver1]
//reg = 5 - печать для админа /cvpass , данные от он-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
//reg = 6 - печать для админа /cvpass , данные от он-лайн админа [pPass_ver1]
//reg = 7 - печать для админа /cvpass , данные от офф-лайн игрока [pPass_ver1][pPass_inout1][pPass_count1]
//reg = 8 - печать для админа /cvpass , данные от офф-лайн админа [pPass_ver1]
	new string[256];
#endif
#if (MOD4DINS == 1)
	switch(reg)
	{
		case 1, 2:
		{
			if(playconpass[playid] == 1)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playid][pPass_ver1]);
					case 2: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data1], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver1]);
						case 2: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 3, 4, 5, 6:
		{
			if(playconpass[playtrg] == 1)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 4: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
					case 5: format(string, sizeof(string), " 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 6: format(string, sizeof(string), " 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data1], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 4: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
						case 5: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 6: format(string, sizeof(string), " 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 7, 8:
		{
			if(strcmp(admData[playid][dPass_data1], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver1], admData[playid][dPass_inout1], admData[playid][dPass_count1]);
					case 8: format(string, sizeof(string), " 1 : зарегистрирован, %s", admData[playid][dPass_ver1]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
		}
	}
#endif
#if (MOD4DINS == 2)
	switch(reg)
	{
		case 1, 2:
		{
			if(playconpass[playid] == 1)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playid][pPass_ver1]);
					case 2: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data1], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver1]);
						case 2: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playid] == 2)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 2 : используется, %s", PlayerInfo[playid][pPass_ver2]);
					case 2: format(string, sizeof(string), " Паспорт 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver2], PlayerInfo[playid][pPass_inout2], PlayerInfo[playid][pPass_count2]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data2], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 2 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver2]);
						case 2: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver2], PlayerInfo[playid][pPass_inout2], PlayerInfo[playid][pPass_count2]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 3, 4, 5, 6:
		{
			if(playconpass[playtrg] == 1)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 4: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
					case 5: format(string, sizeof(string), " 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 6: format(string, sizeof(string), " 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data1], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 4: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
						case 5: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 6: format(string, sizeof(string), " 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playtrg] == 2)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
					case 4: format(string, sizeof(string), " Паспорт 2 : используется, %s", PlayerInfo[playtrg][pPass_ver2]);
					case 5: format(string, sizeof(string), " 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
					case 6: format(string, sizeof(string), " 2 : используется, %s", PlayerInfo[playtrg][pPass_ver2]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data2], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 2 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 2 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
						case 4: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver2]);
						case 5: format(string, sizeof(string), " 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
						case 6: format(string, sizeof(string), " 2 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver2]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 7, 8:
		{
			if(strcmp(admData[playid][dPass_data1], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver1], admData[playid][dPass_inout1], admData[playid][dPass_count1]);
					case 8: format(string, sizeof(string), " 1 : зарегистрирован, %s", admData[playid][dPass_ver1]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
			if(strcmp(admData[playid][dPass_data2], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 2 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 2 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver2], admData[playid][dPass_inout2], admData[playid][dPass_count2]);
					case 8: format(string, sizeof(string), " 2 : зарегистрирован, %s", admData[playid][dPass_ver2]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
		}
	}
#endif
#if (MOD4DINS == 3)
	switch(reg)
	{
		case 1, 2:
		{
			if(playconpass[playid] == 1)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playid][pPass_ver1]);
					case 2: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data1], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver1]);
						case 2: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playid] == 2)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 2 : используется, %s", PlayerInfo[playid][pPass_ver2]);
					case 2: format(string, sizeof(string), " Паспорт 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver2], PlayerInfo[playid][pPass_inout2], PlayerInfo[playid][pPass_count2]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data2], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 2 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver2]);
						case 2: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver2], PlayerInfo[playid][pPass_inout2], PlayerInfo[playid][pPass_count2]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playid] == 3)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 3 : используется, %s", PlayerInfo[playid][pPass_ver3]);
					case 2: format(string, sizeof(string), " Паспорт 3 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver3], PlayerInfo[playid][pPass_inout3], PlayerInfo[playid][pPass_count3]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data3], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 3 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver3]);
						case 2: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver3], PlayerInfo[playid][pPass_inout3], PlayerInfo[playid][pPass_count3]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 3, 4, 5, 6:
		{
			if(playconpass[playtrg] == 1)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 4: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
					case 5: format(string, sizeof(string), " 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 6: format(string, sizeof(string), " 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data1], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 4: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
						case 5: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 6: format(string, sizeof(string), " 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playtrg] == 2)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
					case 4: format(string, sizeof(string), " Паспорт 2 : используется, %s", PlayerInfo[playtrg][pPass_ver2]);
					case 5: format(string, sizeof(string), " 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
					case 6: format(string, sizeof(string), " 2 : используется, %s", PlayerInfo[playtrg][pPass_ver2]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data2], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 2 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 2 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
						case 4: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver2]);
						case 5: format(string, sizeof(string), " 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
						case 6: format(string, sizeof(string), " 2 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver2]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playtrg] == 3)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 3 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
					case 4: format(string, sizeof(string), " Паспорт 3 : используется, %s", PlayerInfo[playtrg][pPass_ver3]);
					case 5: format(string, sizeof(string), " 3 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
					case 6: format(string, sizeof(string), " 3 : используется, %s", PlayerInfo[playtrg][pPass_ver3]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data3], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 3 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 3 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
						case 4: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver3]);
						case 5: format(string, sizeof(string), " 3 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
						case 6: format(string, sizeof(string), " 3 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver3]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 7, 8:
		{
			if(strcmp(admData[playid][dPass_data1], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver1], admData[playid][dPass_inout1], admData[playid][dPass_count1]);
					case 8: format(string, sizeof(string), " 1 : зарегистрирован, %s", admData[playid][dPass_ver1]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
			if(strcmp(admData[playid][dPass_data2], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 2 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 2 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver2], admData[playid][dPass_inout2], admData[playid][dPass_count2]);
					case 8: format(string, sizeof(string), " 2 : зарегистрирован, %s", admData[playid][dPass_ver2]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
			if(strcmp(admData[playid][dPass_data3], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 3 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 3 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver3], admData[playid][dPass_inout3], admData[playid][dPass_count3]);
					case 8: format(string, sizeof(string), " 3 : зарегистрирован, %s", admData[playid][dPass_ver3]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
		}
	}
#endif
#if (MOD4DINS == 4)
	switch(reg)
	{
		case 1, 2:
		{
			if(playconpass[playid] == 1)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playid][pPass_ver1]);
					case 2: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data1], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver1]);
						case 2: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver1], PlayerInfo[playid][pPass_inout1], PlayerInfo[playid][pPass_count1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playid] == 2)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 2 : используется, %s", PlayerInfo[playid][pPass_ver2]);
					case 2: format(string, sizeof(string), " Паспорт 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver2], PlayerInfo[playid][pPass_inout2], PlayerInfo[playid][pPass_count2]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data2], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 2 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver2]);
						case 2: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver2], PlayerInfo[playid][pPass_inout2], PlayerInfo[playid][pPass_count2]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playid] == 3)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 3 : используется, %s", PlayerInfo[playid][pPass_ver3]);
					case 2: format(string, sizeof(string), " Паспорт 3 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver3], PlayerInfo[playid][pPass_inout3], PlayerInfo[playid][pPass_count3]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data3], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 3 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver3]);
						case 2: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver3], PlayerInfo[playid][pPass_inout3], PlayerInfo[playid][pPass_count3]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playid] == 4)
			{
				switch(reg)
				{
					case 1: format(string, sizeof(string), " Паспорт 4 : используется, %s", PlayerInfo[playid][pPass_ver4]);
					case 2: format(string, sizeof(string), " Паспорт 4 : используется, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver4], PlayerInfo[playid][pPass_inout4], PlayerInfo[playid][pPass_count4]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playid][pPass_data4], "---", false) == 0)
				{
					SendClientMessage(playid, COLOR_GRAD1, " Паспорт 4 : пустой");
				}
				else
				{
					switch(reg)
					{
						case 1: format(string, sizeof(string), " Паспорт 4 : зарегистрирован, %s", PlayerInfo[playid][pPass_ver4]);
						case 2: format(string, sizeof(string), " Паспорт 4 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playid][pPass_ver4], PlayerInfo[playid][pPass_inout4], PlayerInfo[playid][pPass_count4]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 3, 4, 5, 6:
		{
			if(playconpass[playtrg] == 1)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 4: format(string, sizeof(string), " Паспорт 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
					case 5: format(string, sizeof(string), " 1 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
					case 6: format(string, sizeof(string), " 1 : используется, %s", PlayerInfo[playtrg][pPass_ver1]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data1], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 1 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 4: format(string, sizeof(string), " Паспорт 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
						case 5: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver1], PlayerInfo[playtrg][pPass_inout1], PlayerInfo[playtrg][pPass_count1]);
						case 6: format(string, sizeof(string), " 1 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver1]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playtrg] == 2)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
					case 4: format(string, sizeof(string), " Паспорт 2 : используется, %s", PlayerInfo[playtrg][pPass_ver2]);
					case 5: format(string, sizeof(string), " 2 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
					case 6: format(string, sizeof(string), " 2 : используется, %s", PlayerInfo[playtrg][pPass_ver2]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data2], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 2 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 2 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
						case 4: format(string, sizeof(string), " Паспорт 2 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver2]);
						case 5: format(string, sizeof(string), " 2 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver2], PlayerInfo[playtrg][pPass_inout2], PlayerInfo[playtrg][pPass_count2]);
						case 6: format(string, sizeof(string), " 2 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver2]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playtrg] == 3)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 3 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
					case 4: format(string, sizeof(string), " Паспорт 3 : используется, %s", PlayerInfo[playtrg][pPass_ver3]);
					case 5: format(string, sizeof(string), " 3 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
					case 6: format(string, sizeof(string), " 3 : используется, %s", PlayerInfo[playtrg][pPass_ver3]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data3], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 3 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 3 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
						case 4: format(string, sizeof(string), " Паспорт 3 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver3]);
						case 5: format(string, sizeof(string), " 3 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver3], PlayerInfo[playtrg][pPass_inout3], PlayerInfo[playtrg][pPass_count3]);
						case 6: format(string, sizeof(string), " 3 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver3]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
			if(playconpass[playtrg] == 4)
			{
				switch(reg)
				{
					case 3: format(string, sizeof(string), " Паспорт 4 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver4], PlayerInfo[playtrg][pPass_inout4], PlayerInfo[playtrg][pPass_count4]);
					case 4: format(string, sizeof(string), " Паспорт 4 : используется, %s", PlayerInfo[playtrg][pPass_ver4]);
					case 5: format(string, sizeof(string), " 4 : используется, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver4], PlayerInfo[playtrg][pPass_inout4], PlayerInfo[playtrg][pPass_count4]);
					case 6: format(string, sizeof(string), " 4 : используется, %s", PlayerInfo[playtrg][pPass_ver4]);
				}
				SendClientMessage(playid, 0xCF4040FF, string);
			}
			else
			{
				if(strcmp(PlayerInfo[playtrg][pPass_data4], "---", false) == 0)
				{
					switch(reg)
					{
						case 3, 4:
						{
							SendClientMessage(playid, COLOR_GRAD1, " Паспорт 4 : пустой");
						}
						case 5, 6:
						{
							SendClientMessage(playid, COLOR_GRAD1, " 4 : пустой");
						}
					}
				}
				else
				{
					switch(reg)
					{
						case 3: format(string, sizeof(string), " Паспорт 4 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver4], PlayerInfo[playtrg][pPass_inout4], PlayerInfo[playtrg][pPass_count4]);
						case 4: format(string, sizeof(string), " Паспорт 4 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver4]);
						case 5: format(string, sizeof(string), " 4 : зарегистрирован, %s %s , коннектов: [%d]", PlayerInfo[playtrg][pPass_ver4], PlayerInfo[playtrg][pPass_inout4], PlayerInfo[playtrg][pPass_count4]);
						case 6: format(string, sizeof(string), " 4 : зарегистрирован, %s", PlayerInfo[playtrg][pPass_ver4]);
					}
					SendClientMessage(playid, 0x40CF40FF, string);
				}
			}
		}
		case 7, 8:
		{
			if(strcmp(admData[playid][dPass_data1], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 1 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 1 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver1], admData[playid][dPass_inout1], admData[playid][dPass_count1]);
					case 8: format(string, sizeof(string), " 1 : зарегистрирован, %s", admData[playid][dPass_ver1]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
			if(strcmp(admData[playid][dPass_data2], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 2 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 2 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver2], admData[playid][dPass_inout2], admData[playid][dPass_count2]);
					case 8: format(string, sizeof(string), " 2 : зарегистрирован, %s", admData[playid][dPass_ver2]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
			if(strcmp(admData[playid][dPass_data3], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 3 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 3 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver3], admData[playid][dPass_inout3], admData[playid][dPass_count3]);
					case 8: format(string, sizeof(string), " 3 : зарегистрирован, %s", admData[playid][dPass_ver3]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
			if(strcmp(admData[playid][dPass_data4], "---", false) == 0)
			{
				SendClientMessage(playid, COLOR_GRAD1, " 4 : пустой");
			}
			else
			{
				switch(reg)
				{
					case 7: format(string, sizeof(string), " 4 : зарегистрирован, %s %s , коннектов: [%d]", admData[playid][dPass_ver4], admData[playid][dPass_inout4], admData[playid][dPass_count4]);
					case 8: format(string, sizeof(string), " 4 : зарегистрирован, %s", admData[playid][dPass_ver4]);
				}
				SendClientMessage(playid, 0x40CF40FF, string);
			}
		}
	}
#endif
#if (MOD4DINS >= 1)
    return 1;
}
#endif

forward FnConAdmScrNet(admname[]);
public FnConAdmScrNet(admname[])//проверка наличия ника админа в per-файле
{
	new condata1 = 0;
	new condata2 = 0;
	while(condata1 < 20)
	{
		if(strcmp(admname, scrnetper[condata1], false) == 0)//если ник админа найден, то:
		{
			condata2 = 1;
			break;//завершаем цикл
		}
		condata1++;
	}
	if(condata2 == 1)//если ник админа найден, то:
	{
		return condata1;//возвращаем номер слота (от 0 до 19)
	}
	else//иначе, если ник админа НЕ найден, то:
	{
		return -1;//возвращаем -1
	}
}

forward ScrNetPerLoad();
public ScrNetPerLoad()//чтение per-файла
{
    new file, f[128], ssss[64];
	format(f, sizeof(f), "data/scrnet1/_scrnetper.ini");
	if(!fexist(f))//если файла не существует, то:
	{//создаём файл
		file = ini_createFile(f);
		if(file >= 0)
		{
			for(new i = 0; i < 20; i++)
			{
				format(ssss, 64, "Name%03d", i);
			    ini_setString(file, ssss, "");//записываем в файл пустую строку (за место ника)
			}
			ini_closeFile(file);
		}
	}
	file = ini_openFile(f);//читаем файл
	if(file >= 0)
	{
		for(new i = 0; i < 20; i++)
		{
			strdel(scrnetper[i], 0, 64);
			format(ssss, 64, "Name%03d", i);
		    ini_getString(file, ssss, scrnetper[i]);
			if(strlen(scrnetper[i]) == 0)//если прочитана пустая строка (за место ника), то:
			{
				strcat(scrnetper[i], "*** INV_PL_ID");//записываем в слот несуществующий ник
			}
			else//иначе, если прочитана НЕ пустая строка, то:
			{
				if(strlen(scrnetper[i]) > 25 || InpNameControl(scrnetper[i]) == 0)//если ник содержит ошибки, то:
				{
					strdel(scrnetper[i], 0, 64);//очищаем слот
					ini_setString(file, ssss, scrnetper[i]);//перезаписываем в файл - слот, содержащий ошибки
					strcat(scrnetper[i], "*** INV_PL_ID");//записываем в слот несуществующий ник
				}
			}
		}
		ini_closeFile(file);
	}
	return 1;
}

forward ScrNetPerSave(slotname);
public ScrNetPerSave(slotname)//запись ОДНОГО слота - для per-файла
{
    new file, f[128], ssss[64], str22[64];
	strdel(str22, 0, 64);//создаём пустую строку с ником
	if(strcmp(scrnetper[slotname], "*** INV_PL_ID", false) != 0)
	{//если в слоте записан существующий ник, то:
		strcat(str22, scrnetper[slotname]);//запишем ник в файл
	}
    format(f, sizeof(f), "data/scrnet1/_scrnetper.ini");
	file = ini_openFile(f);//записываем в файл ОДИН слот с ником
	if(file >= 0)
	{
		format(ssss, 64, "Name%03d", slotname);
		ini_setString(file, ssss, str22);
		ini_closeFile(file);
	}
	return 1;
}

forward ScrNet1LoadMark();
public ScrNet1LoadMark()//чтение указателя на текущую БД сетевого экрана 1
{
    new file, f[128], locmark;
	format(f, sizeof(f), "data/scrnet1/_scrnet1mark.ini");
	if(!fexist(f))//если файла не существует, то:
	{
		file = ini_createFile(f);//создаём файл
		if(file >= 0)
		{
			ini_setInteger(file, "Mark", 1);//записываем в файл - указатель на БД: _scrnet11.db
			ini_closeFile(file);
		}
	}
	file = ini_openFile(f);//читаем файл
	if(file >= 0)
	{
		ini_getInteger(file, "Mark", locmark);//читаем указатель - на текущую БД сетевого экрана 1
		ini_closeFile(file);
	}
	if(locmark < 1 || locmark > 2)//если в файле-указателе - неверные данные, то:
	{
		fremove(f);//удаляем файл с неверными данными
		locmark = 1;
		file = ini_createFile(f);//создаём файл
		if(file >= 0)
		{
			ini_setInteger(file, "Mark", locmark);//записываем в файл - указатель на БД: _scrnet11.db
			ini_closeFile(file);
		}
	}
	scrnet1mark = locmark;//копируем данные из файла-указателя в глобальную переменную
	return 1;
}

forward ScrNet1Save(playid, reg, slotnum);
public ScrNet1Save(playid, reg, slotnum)//запись сетевого экрана 1 в БД
{
	new strdln[1000], locname[64];
	if(playid != (MAX_PLAYERS - 1))
	{
		format(locname, sizeof(locname), "%s", RealName[playid]);
	}
	else
	{
		format(locname, sizeof(locname), "**** remote");
	}
	if(reg == 1 || reg == 2)
	{
		new locdata[2];
		locdata[0] = (scrnet1b[0][playid] * 65536) + (scrnet1b[1][playid] * 256) + scrnet1b[2][playid];
		locdata[1] = (scrnet1e[0][playid] * 65536) + (scrnet1e[1][playid] * 256) + scrnet1e[2][playid];
		if(reg == 1)//режим добавления новой строки
		{
			format(strdln, sizeof(strdln), "INSERT INTO _scrnet1 (IDCopy,NumSt,Active,SN1b1,SN1b2,SN1b3,SN1b4,");//создаём запрос БД
			format(strdln, sizeof(strdln), "%sSN1e1,SN1e2,SN1e3,SN1e4,SN1b123,SN1e123,NameAdm) VALUES (1,%d,1,", strdln, slotnum);
			format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, scrnet1b[0][playid], scrnet1b[1][playid], scrnet1b[2][playid], scrnet1b[3][playid]);
			format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, scrnet1e[0][playid], scrnet1e[1][playid], scrnet1e[2][playid], scrnet1e[3][playid]);
			format(strdln, sizeof(strdln), "%s%d,%d,'%s')", strdln, locdata[0], locdata[1], locname);
		}
		if(reg == 2)//режим замены старой строки новыми данными
		{
			format(strdln, sizeof(strdln), "UPDATE _scrnet1 SET Active = 1,");//создаём запрос БД
			format(strdln, sizeof(strdln), "%sSN1b1 = %d,SN1b2 = %d,SN1b3 = %d,SN1b4 = %d,", strdln, scrnet1b[0][playid], scrnet1b[1][playid], scrnet1b[2][playid], scrnet1b[3][playid]);
			format(strdln, sizeof(strdln), "%sSN1e1 = %d,SN1e2 = %d,SN1e3 = %d,SN1e4 = %d,", strdln, scrnet1e[0][playid], scrnet1e[1][playid], scrnet1e[2][playid], scrnet1e[3][playid]);
			format(strdln, sizeof(strdln), "%sSN1b123 = %d,SN1e123 = %d,", strdln, locdata[0], locdata[1]);
			format(strdln, sizeof(strdln), "%sNameAdm = '%s' WHERE (NumSt = %d)", strdln, locname, slotnum);
		}
	}
	if(reg == 3)//режим удаления записи из строки
	{
		format(strdln, sizeof(strdln), "UPDATE _scrnet1 SET Active = 0,");//создаём запрос БД
		format(strdln, sizeof(strdln), "%sNameAdm = '%s' WHERE (NumSt = %d)", strdln, locname, slotnum);
	}
	db_query(scrnet1db, strdln);//отправляем запрос БД сетевого экрана 1
	return 1;
}

forward ScrNet1LoadNamePass(playid, filenum);
public ScrNet1LoadNamePass(playid, filenum)//чтение np-файла - для сетевого экрана 1
{
    new file, f[128], ssss[64], locdata1, locdata2;
	format(f, sizeof(f), "data/scrnet1/np1%05d.ini", filenum);
	if(!fexist(f))//если файла не существует, то:
	{
		return 0;//возвращаем 0 (файла не существует)
	}
	file = ini_openFile(f);//читаем файл
	if(file >= 0)
	{
		for(new i = 0; i < 20; i++)
		{
			strdel(scrnetnamegl[playid][i], 0, 64);
			format(ssss, 64, "Name1%02d", i);
		    ini_getString(file, ssss, scrnetnamegl[playid][i]);
			if(strlen(scrnetnamegl[playid][i]) == 0)//если прочитана пустая строка (за место ника), то:
			{
				strcat(scrnetnamegl[playid][i], "*** INV_PL_ID");//записываем в слот несуществующий ник
			}
			else//иначе, если прочитана НЕ пустая строка, то:
			{
				if(strlen(scrnetnamegl[playid][i]) > 25 || InpNameControl(scrnetnamegl[playid][i]) == 0)//если ник содержит ошибки, то:
				{
					strdel(scrnetnamegl[playid][i], 0, 64);//очищаем слот
					ini_setString(file, ssss, scrnetnamegl[playid][i]);//перезаписываем в файл - слот, содержащий ошибки
					strcat(scrnetnamegl[playid][i], "*** INV_PL_ID");//записываем в слот несуществующий ник
				}
			}
			strdel(scrnetpassgl[playid][i], 0, 64);
			format(ssss, 64, "Pass1%02d", i);
		    ini_getString(file, ssss, scrnetpassgl[playid][i]);
			if(strlen(scrnetpassgl[playid][i]) == 0)//если прочитана пустая строка (за место паспорта), то:
			{
				strcat(scrnetpassgl[playid][i], "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
			}
			else//иначе, если прочитана НЕ пустая строка, то:
			{
				if(FngpciControl(scrnetpassgl[playid][i]) == 0)//если паспорт содержит ошибки, то:
				{
					strdel(scrnetpassgl[playid][i], 0, 64);//очищаем слот
					ini_setString(file, ssss, scrnetpassgl[playid][i]);//перезаписываем в файл - слот, содержащий ошибки
					strcat(scrnetpassgl[playid][i], "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
				}
			}
			if(scrnetnamegl[playid][i][0] == 42 && scrnetpassgl[playid][i][0] != 42)
			{//если нет ника, но есть паспорт, то:
				strdel(scrnetpassgl[playid][i], 0, 64);//очищаем слот
				ini_setString(file, ssss, scrnetpassgl[playid][i]);//перезаписываем в файл - слот, содержащий ошибки
				strcat(scrnetpassgl[playid][i], "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
			}
		}
		ini_closeFile(file);
	}
	locdata1 = 0;
	locdata2 = 0;
	while(locdata1 < 20)
	{
		if(strcmp(scrnetnamegl[playid][locdata1], "*** INV_PL_ID", false) != 0 ||
		strcmp(scrnetpassgl[playid][locdata1], "*** INV_PASS_ID", false) != 0)
		{
			locdata2 = 1;
			break;
		}
		locdata1++;
	}
	if(locdata2 == 0)//если в np-файле нет ни одного занятого слота, то:
	{
		if(fexist(f))//если np-файл существует, то:
		{
			fremove(f);//удаляем np-файл
			return 0;//возвращаем 0 (файла не существует)
		}
	}
	return 1;//возвращаем 1 (файл существует)
}

forward ScrNet1SaveNamePass(playid, filenum, slotnum);
public ScrNet1SaveNamePass(playid, filenum, slotnum)//запись в ОДИН np-файл ОДНОГО слота - для сетевого экрана 1
{
    new file, f[128], ssss[64], str22[64], str33[64], locdata1, locdata2;
    format(f, sizeof(f), "data/scrnet1/np1%05d.ini", filenum);
	locdata1 = 0;
	locdata2 = 0;
	while(locdata1 < 20)
	{
		if(strcmp(scrnetnamegl[playid][locdata1], "*** INV_PL_ID", false) != 0 ||
		strcmp(scrnetpassgl[playid][locdata1], "*** INV_PASS_ID", false) != 0)
		{
			locdata2 = 1;
			break;
		}
		locdata1++;
	}
	if(locdata2 == 0)//если в np-файле нет ни одного занятого слота, то:
	{
		if(fexist(f))//если np-файл существует, то:
		{
			fremove(f);//удаляем np-файл
		}
	}
	else//если в np-файле есть хотя бы один занятый слот, то:
	{
		if(!fexist(f))//если np-файла не существует, то:
		{
			file = ini_createFile(f);//создаём файл, и записываем в файл ВСЕ слоты
			if(file >= 0)
			{
				for(new i = 0; i < 20; i++)
				{
					strdel(str22, 0, 64);//создаём пустую строку с ником
					strdel(str33, 0, 64);//создаём пустую строку с паспортом
					if(strcmp(scrnetnamegl[playid][i], "*** INV_PL_ID", false) != 0)
					{//если в слоте записан существующий ник, то:
						strcat(str22, scrnetnamegl[playid][i]);//запишем ник в файл
					}
					if(strcmp(scrnetpassgl[playid][i], "*** INV_PASS_ID", false) != 0)
					{//если в слоте записан существующий паспорт, то:
						strcat(str33, scrnetpassgl[playid][i]);//запишем паспорт в файл
					}
					format(ssss, 64, "Name1%02d", i);
				    ini_setString(file, ssss, str22);
					format(ssss, 64, "Pass1%02d", i);
				    ini_setString(file, ssss, str33);
				}
				ini_closeFile(file);
			}
		}
		else//иначе, если np-файл существует, то:
		{
			file = ini_openFile(f);//записываем в файл ОДИН слот
			if(file >= 0)
			{
				strdel(str22, 0, 64);//создаём пустую строку с ником
				strdel(str33, 0, 64);//создаём пустую строку с паспортом
				if(strcmp(scrnetnamegl[playid][slotnum], "*** INV_PL_ID", false) != 0)
				{//если в слоте записан существующий ник, то:
					strcat(str22, scrnetnamegl[playid][slotnum]);//запишем ник в файл
				}
				if(strcmp(scrnetpassgl[playid][slotnum], "*** INV_PASS_ID", false) != 0)
				{//если в слоте записан существующий паспорт, то:
					strcat(str33, scrnetpassgl[playid][slotnum]);//запишем паспорт в файл
				}
				format(ssss, 64, "Name1%02d", slotnum);
				ini_setString(file, ssss, str22);
				format(ssss, 64, "Pass1%02d", slotnum);
				ini_setString(file, ssss, str33);
				ini_closeFile(file);
			}
		}
	}
	return 1;
}

forward ScrNet2Load();
public ScrNet2Load()//чтение ВСЕГО сетевого экрана 2
{
    new file, f[128], ssss[64], strload[128];
    format(f, sizeof(f), "data/scrnet2/_scrnet2.ini");
	if(!fexist(f))//если файла не существует, то:
	{//создаём файл
		file = ini_createFile(f);
		if(file >= 0)
		{
			for(new i = 0; i < 200; i++)
			{
				format(ssss, 64, "ScrNet2%03d", i);
			    ini_setString(file, ssss, "");//записываем в файл пустую строку (за место IP-адресов)
			}
			ini_closeFile(file);
		}
	}
	file = ini_openFile(f);//читаем файл
	if(file >= 0)
	{
		for(new i = 0; i < 200; i++)
		{
			strdel(strload, 0, 128);
			format(ssss, 64, "ScrNet2%03d", i);
		    ini_getString(file, ssss, strload);
			if(ScrNetCC(0, strload, 2, i) == 0)
			{//если IP-адреса содержат ошибки, или посторонние символы, то:
				for(new j = 0; j < 4; j++)
				{//записываем в слот несуществующие IP-адреса (256.256.256.256 - -1.-1.-1.-1)
					scrnet2b[j][i] = 256;
					scrnet2e[j][i] = -1;
				}
				scrnet2b123[i] = -1;
				scrnet2e123[i] = -1;
				strdel(strload, 0, 128);//перезаписываем в файл - слот, содержащий ошибки
				ini_setString(file, ssss, strload);
			}
		}
		ini_closeFile(file);
	}
	return 1;
}

forward ScrNet2Save(slotnum);
public ScrNet2Save(slotnum)//запись ОДНОГО слота - для сетевого экрана 2
{
    new file, f[128], ssss[64], str22[128];
	strdel(str22, 0, 128);//создаём пустую строку (для записи в файл)
	if(scrnet2b[0][slotnum] != 256)//если в слоте записаны существующие IP-адреса, то:
	{
		format(str22, 128, "%d.%d.%d.%d - %d.%d.%d.%d", scrnet2b[0][slotnum], scrnet2b[1][slotnum], scrnet2b[2][slotnum], scrnet2b[3][slotnum],
		scrnet2e[0][slotnum], scrnet2e[1][slotnum], scrnet2e[2][slotnum], scrnet2e[3][slotnum]);//запишем в файл IP-адреса
	}
    format(f, sizeof(f), "data/scrnet2/_scrnet2.ini");
	file = ini_openFile(f);//записываем в файл ОДИН слот для сетевого экрана 2
	if(file >= 0)
	{
		format(ssss, 64, "ScrNet2%03d", slotnum);
	    ini_setString(file, ssss, str22);
		ini_closeFile(file);
	}
	return 1;
}

forward ScrNet2LoadNamePass(playid, filenum);
public ScrNet2LoadNamePass(playid, filenum)//чтение np-файла - для сетевого экрана 2
{
    new file, f[128], ssss[64], locdata1, locdata2;
	format(f, sizeof(f), "data/scrnet2/np2%03d.ini", filenum);
	if(!fexist(f))//если файла не существует, то:
	{
		return 0;//возвращаем 0 (файла не существует)
	}
	file = ini_openFile(f);//читаем файл
	if(file >= 0)
	{
		for(new i = 0; i < 20; i++)
		{
			strdel(scrnetnamegl[playid][i], 0, 64);
			format(ssss, 64, "Name2%02d", i);
		    ini_getString(file, ssss, scrnetnamegl[playid][i]);
			if(strlen(scrnetnamegl[playid][i]) == 0)//если прочитана пустая строка (за место ника), то:
			{
				strcat(scrnetnamegl[playid][i], "*** INV_PL_ID");//записываем в слот несуществующий ник
			}
			else//иначе, если прочитана НЕ пустая строка, то:
			{
				if(strlen(scrnetnamegl[playid][i]) > 25 || InpNameControl(scrnetnamegl[playid][i]) == 0)//если ник содержит ошибки, то:
				{
					strdel(scrnetnamegl[playid][i], 0, 64);//очищаем слот
					ini_setString(file, ssss, scrnetnamegl[playid][i]);//перезаписываем в файл - слот, содержащий ошибки
					strcat(scrnetnamegl[playid][i], "*** INV_PL_ID");//записываем в слот несуществующий ник
				}
			}
			strdel(scrnetpassgl[playid][i], 0, 64);
			format(ssss, 64, "Pass2%02d", i);
		    ini_getString(file, ssss, scrnetpassgl[playid][i]);
			if(strlen(scrnetpassgl[playid][i]) == 0)//если прочитана пустая строка (за место паспорта), то:
			{
				strcat(scrnetpassgl[playid][i], "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
			}
			else//иначе, если прочитана НЕ пустая строка, то:
			{
				if(FngpciControl(scrnetpassgl[playid][i]) == 0)//если паспорт содержит ошибки, то:
				{
					strdel(scrnetpassgl[playid][i], 0, 64);//очищаем слот
					ini_setString(file, ssss, scrnetpassgl[playid][i]);//перезаписываем в файл - слот, содержащий ошибки
					strcat(scrnetpassgl[playid][i], "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
				}
			}
			if(scrnetnamegl[playid][i][0] == 42 && scrnetpassgl[playid][i][0] != 42)
			{//если нет ника, но есть паспорт, то:
				strdel(scrnetpassgl[playid][i], 0, 64);//очищаем слот
				ini_setString(file, ssss, scrnetpassgl[playid][i]);//перезаписываем в файл - слот, содержащий ошибки
				strcat(scrnetpassgl[playid][i], "*** INV_PASS_ID");//записываем в слот несуществующий паспорт
			}
		}
		ini_closeFile(file);
	}
	locdata1 = 0;
	locdata2 = 0;
	while(locdata1 < 20)
	{
		if(strcmp(scrnetnamegl[playid][locdata1], "*** INV_PL_ID", false) != 0 ||
		strcmp(scrnetpassgl[playid][locdata1], "*** INV_PASS_ID", false) != 0)
		{
			locdata2 = 1;
			break;
		}
		locdata1++;
	}
	if(locdata2 == 0)//если в np-файле нет ни одного занятого слота, то:
	{
		if(fexist(f))//если np-файл существует, то:
		{
			fremove(f);//удаляем np-файл
			return 0;//возвращаем 0 (файла не существует)
		}
	}
	return 1;//возвращаем 1 (файл существует)
}

forward ScrNet2SaveNamePass(playid, filenum, slotnum);
public ScrNet2SaveNamePass(playid, filenum, slotnum)//запись в ОДИН np-файл ОДНОГО слота - для сетевого экрана 2
{
    new file, f[128], ssss[64], str22[64], str33[64], locdata1, locdata2;
    format(f, sizeof(f), "data/scrnet2/np2%03d.ini", filenum);
	locdata1 = 0;
	locdata2 = 0;
	while(locdata1 < 20)
	{
		if(strcmp(scrnetnamegl[playid][locdata1], "*** INV_PL_ID", false) != 0 ||
		strcmp(scrnetpassgl[playid][locdata1], "*** INV_PASS_ID", false) != 0)
		{
			locdata2 = 1;
			break;
		}
		locdata1++;
	}
	if(locdata2 == 0)//если в np-файле нет ни одного занятого слота, то:
	{
		if(fexist(f))//если np-файл существует, то:
		{
			fremove(f);//удаляем np-файл
		}
	}
	else//если в np-файле есть хотя бы один занятый слот, то:
	{
		if(!fexist(f))//если np-файла не существует, то:
		{
			file = ini_createFile(f);//создаём файл, и записываем в файл ВСЕ слоты
			if(file >= 0)
			{
				for(new i = 0; i < 20; i++)
				{
					strdel(str22, 0, 64);//создаём пустую строку с ником
					strdel(str33, 0, 64);//создаём пустую строку с паспортом
					if(strcmp(scrnetnamegl[playid][i], "*** INV_PL_ID", false) != 0)
					{//если в слоте записан существующий ник, то:
						strcat(str22, scrnetnamegl[playid][i]);//запишем ник в файл
					}
					if(strcmp(scrnetpassgl[playid][i], "*** INV_PASS_ID", false) != 0)
					{//если в слоте записан существующий паспорт, то:
						strcat(str33, scrnetpassgl[playid][i]);//запишем паспорт в файл
					}
					format(ssss, 64, "Name2%02d", i);
				    ini_setString(file, ssss, str22);
					format(ssss, 64, "Pass2%02d", i);
				    ini_setString(file, ssss, str33);
				}
				ini_closeFile(file);
			}
		}
		else//иначе, если np-файл существует, то:
		{
			file = ini_openFile(f);//записываем в файл ОДИН слот
			if(file >= 0)
			{
				strdel(str22, 0, 64);//создаём пустую строку с ником
				strdel(str33, 0, 64);//создаём пустую строку с паспортом
				if(strcmp(scrnetnamegl[playid][slotnum], "*** INV_PL_ID", false) != 0)
				{//если в слоте записан существующий ник, то:
					strcat(str22, scrnetnamegl[playid][slotnum]);//запишем ник в файл
				}
				if(strcmp(scrnetpassgl[playid][slotnum], "*** INV_PASS_ID", false) != 0)
				{//если в слоте записан существующий паспорт, то:
					strcat(str33, scrnetpassgl[playid][slotnum]);//запишем паспорт в файл
				}
				format(ssss, 64, "Name2%02d", slotnum);
				ini_setString(file, ssss, str22);
				format(ssss, 64, "Pass2%02d", slotnum);
				ini_setString(file, ssss, str33);
				ini_closeFile(file);
			}
		}
	}
	return 1;
}

forward ScrNetCC(playid, scrnetgl[], scrnum, slotnum);//конвертор + контроль IP-адресов на ошибки,
public ScrNetCC(playid, scrnetgl[], scrnum, slotnum)//и на посторонние символы - для сетевых экранов 1 и 2
{//scrnum=1 - сетевой экран 1 (база данных), scrnum=2 - сетевой экран 2 (200 слотов)
	if(strlen(scrnetgl) == 0)//если входная строка пустая, то:
	{
		for(new i = 0; i < 4; i++)
		{
			if(scrnum == 1)//запись в слот сетевого экрана 1
			{//несуществующих IP-адресов (256.256.256.256 - -1.-1.-1.-1)
				scrnet1b[i][playid] = 256;
				scrnet1e[i][playid] = -1;
			}
			if(scrnum == 2)//запись в слот сетевого экрана 2
			{//несуществующих IP-адресов (256.256.256.256 - -1.-1.-1.-1)
				scrnet2b[i][slotnum] = 256;
				scrnet2e[i][slotnum] = -1;
			}
		}
		if(scrnum == 2)//запись в слот сетевого экрана 2 данных для поиска
		{
			scrnet2b123[slotnum] = -1;
			scrnet2e123[slotnum] = -1;
		}
		return 1;//успешное завершение функции
	}
	if(strfind(scrnetgl, " - ", false) == -1)//если во входной строке НЕ найдено
	{//последовательности символов " - ", то:
		return 0;//завершаем функцию с указанием ошибки
	}
	new ind1 = 0;//индекс входной строки
	new locstr[8][8];//объявляем 8-м выходных строк
	for(new i = 0; i < 8; i++)
	{
		strdel(locstr[i], 0, 8);//обнуляем 8-м выходных строк
	}
	new ind2 = 0;//индекс выходной строки
	new count2 = 0;//счётчик выходных строк
	new count3 = 0;//счётчик символов "точка"
	new count4 = 0;//счётчик символов "-"
	new count5 = 0;//счётчик символов "пробел"
	new mrk1;//маркер ошибки
	while(ind1 < 128)
	{
		mrk1 = 1;//устанавливаем маркер ошибки
		if(scrnetgl[ind1] == 0)//если найден конец входной стороки, то:
		{
			mrk1 = 0;//обнуляем маркер ошибки
			break;//завершаем цикл
		}
		if(scrnetgl[ind1] == '.')//если найден символ "точка", то:
		{
			ind2 = 0;//обнуляем индекс выходной строки
			count2++;//счётчик выходных строк + 1
			count3++;//счётчик символов "точка" + 1
			mrk1 = 0;//обнуляем маркер ошибки
		}
		if(scrnetgl[ind1] >= 48 && scrnetgl[ind1] <= 57)//если найдена цифра от 0 до 9, то:
		{
			locstr[count2][ind2] = scrnetgl[ind1];//копирование цифры в выходную строку
			ind2++;//индекс выходной строки + 1
			mrk1 = 0;//обнуляем маркер ошибки
		}
		if(scrnetgl[ind1] == '-')//если найден символ "-", то:
		{
			if(count2 != 3 || count3 != 3 || count4 != 0 || count5 != 1)
			{//если найдена ошибка в счётчиках, то:
				mrk1 = 1;//устанавливаем маркер ошибки
				break;//завершаем цикл
			}
			ind2 = 0;//обнуляем индекс выходной строки
			count2++;//счётчик выходных строк + 1
			count4++;//счётчик символов "-" + 1
			mrk1 = 0;//обнуляем маркер ошибки
		}
		if(scrnetgl[ind1] == ' ')//если найден символ "пробел", то:
		{
			count5++;//счётчик символов "пробел" + 1
			mrk1 = 0;//обнуляем маркер ошибки
		}
		if(mrk1 == 1) { break; }//если маркер ошибки установлен, то: завершаем цикл
		ind1++;//индекс входной строки + 1
	}
	if(mrk1 == 1)//если маркер ошибки установлен, то:
	{
		return 0;//завершаем функцию с указанием ошибки
	}
	if(count2 != 7 || count3 != 6 || count4 != 1 || count5 != 2)
	{//если найдена ошибка в счётчиках, то:
		return 0;//завершаем функцию с указанием ошибки
	}
	new datalocb[4], dataloce[4];
	ind1 = 0;//устанавливаем переменную цикла
	mrk1 = 0;//обнуляем маркер ошибки
	while(ind1 < 4)
	{
		datalocb[ind1] = strval(locstr[ind1]);//копируем IP-адреса в локальные переменные
		dataloce[ind1] = strval(locstr[ind1+4]);
		if(datalocb[ind1] < 0 || datalocb[ind1] > 255 || dataloce[ind1] < 0 || dataloce[ind1] > 255)
		{//если запись меньше 0 или больше 255, то:
			mrk1 = 1;//устанавливаем маркер ошибки
			break;//завершаем цикл
		}
		ind1++;//переменная цикла + 1
	}
	if(mrk1 == 1)//если маркер ошибки установлен, то:
	{
		return 0;//завершаем функцию с указанием ошибки
	}
/*
//---------- проверка на предмет того, что IP-1 меньше IP-2 (начало) -----------
	if(datalocb[0] > dataloce[0])//если в группе-1 - IP-1 больше IP-2, то:
	{
		return 0;//завершаем функцию с указанием ошибки
	}
	else//иначе, если в группе-1 - IP-1 меньше или равен IP-2, то:
	{
		if((dataloce[0] - datalocb[0]) > 50)//если в группе-1 - разница между IP-1 и IP-2 больше 50, то:
		{
			return 0;//завершаем функцию с указанием ошибки
		}
		if(datalocb[0] == dataloce[0])//если в группе-1 - IP-1 равен IP-2, то:
		{
			if(datalocb[1] > dataloce[1])//если в группе-2 - IP-1 больше IP-2, то:
			{
				return 0;//завершаем функцию с указанием ошибки
			}
			else//иначе, если в группе-2 - IP-1 меньше или равен IP-2, то:
			{
				if(datalocb[1] == dataloce[1])//если в группе-2 - IP-1 равен IP-2, то:
				{
					if(datalocb[2] > dataloce[2])//если в группе-3 - IP-1 больше IP-2, то:
					{
						return 0;//завершаем функцию с указанием ошибки
					}
					else//иначе, если в группе-3 - IP-1 меньше или равен IP-2, то:
					{
						if(datalocb[2] == dataloce[2])//если в группе-3 - IP-1 равен IP-2, то:
						{
							if(datalocb[3] > dataloce[3])//если в группе-4 - IP-1 больше IP-2, то:
							{
								return 0;//завершаем функцию с указанием ошибки
							}
							else//иначе, если в группе-4 - IP-1 меньше или равен IP-2, то:
							{
								if(datalocb[3] == dataloce[3])//если в группе-4 - IP-1 равен IP-2, то:
								{
									return 0;//завершаем функцию с указанием ошибки
								}
							}
						}
					}
				}
			}
		}
	}
//---------- проверка на предмет того, что IP-1 меньше IP-2 (конец) ------------
*/
//----- проверка на предмет того, что IP-1 меньше или равен IP-2 (начало) ------
	if(datalocb[0] > dataloce[0])//если в группе-1 - IP-1 больше IP-2, то:
	{
		return 0;//завершаем функцию с указанием ошибки
	}
	else//иначе, если в группе-1 - IP-1 меньше или равен IP-2, то:
	{
		if((dataloce[0] - datalocb[0]) > 50)//если в группе-1 - разница между IP-1 и IP-2 больше 50, то:
		{
			return 0;//завершаем функцию с указанием ошибки
		}
		if(datalocb[0] == dataloce[0])//если в группе-1 - IP-1 равен IP-2, то:
		{
			if(datalocb[1] > dataloce[1])//если в группе-2 - IP-1 больше IP-2, то:
			{
				return 0;//завершаем функцию с указанием ошибки
			}
			else//иначе, если в группе-2 - IP-1 меньше или равен IP-2, то:
			{
				if(datalocb[1] == dataloce[1])//если в группе-2 - IP-1 равен IP-2, то:
				{
					if(datalocb[2] > dataloce[2])//если в группе-3 - IP-1 больше IP-2, то:
					{
						return 0;//завершаем функцию с указанием ошибки
					}
					else//иначе, если в группе-3 - IP-1 меньше или равен IP-2, то:
					{
						if(datalocb[2] == dataloce[2])//если в группе-3 - IP-1 равен IP-2, то:
						{
							if(datalocb[3] > dataloce[3])//если в группе-4 - IP-1 больше IP-2, то:
							{
								return 0;//завершаем функцию с указанием ошибки
							}
						}
					}
				}
			}
		}
	}
//----- проверка на предмет того, что IP-1 меньше или равен IP-2 (конец) ------
	for(new i = 0; i < 4; i++)
	{
		if(scrnum == 1)//запись в слот сетевого экрана 1
		{//несуществующих IP-адресов (256.256.256.256 - -1.-1.-1.-1)
			scrnet1b[i][playid] = datalocb[i];
			scrnet1e[i][playid] = dataloce[i];
		}
		if(scrnum == 2)//запись в слот сетевого экрана 2
		{//несуществующих IP-адресов (256.256.256.256 - -1.-1.-1.-1)
			scrnet2b[i][slotnum] = datalocb[i];
			scrnet2e[i][slotnum] = dataloce[i];
		}
	}
	if(scrnum == 2)//запись в слот сетевого экрана 2 данных для поиска
	{
		scrnet2b123[slotnum] = (scrnet2b[0][slotnum] * 65536) + (scrnet2b[1][slotnum] * 256) + scrnet2b[2][slotnum];
		scrnet2e123[slotnum] = (scrnet2e[0][slotnum] * 65536) + (scrnet2e[1][slotnum] * 256) + scrnet2e[2][slotnum];
	}
	return 1;//успешное завершение функции
}

#if (MOD90INS == 1 && MOD91INS == 1)
forward CreateDB();
public CreateDB()
{
	playerdb = db_open("players/players.db");//подключаем базу данных аккаунтов игроков к серверу
	new strdln[3000];
	format(strdln, sizeof(strdln), "CREATE TABLE Players(IDCopy INTEGER,Name VARCHAR(32),Key VARCHAR(32),TDReg VARCHAR(32),DEndConD INTEGER,");//создаём запрос БД
	format(strdln, sizeof(strdln), "%sDEndConM INTEGER,DEndConY INTEGER,IPAdr VARCHAR(32),MinLog INTEGER,AdminLevel INTEGER,AdminShadow INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sAdminLive INTEGER,AdminScanCom INTEGER,Registered INTEGER,Prison INTEGER,Prisonsec INTEGER,Muted INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sMutedsec INTEGER,Money INTEGER,Kills INTEGER,Deaths INTEGER,Police INTEGER,Deport INTEGER,RecPM INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sWanted INTEGER,Lock INTEGER,Gang INTEGER,GangLvl INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sPass_data1 VARCHAR(64),Pass_inout1 VARCHAR(64),Pass_ver1 VARCHAR(32),Pass_count1 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sPass_data2 VARCHAR(64),Pass_inout2 VARCHAR(64),Pass_ver2 VARCHAR(32),Pass_count2 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sPass_data3 VARCHAR(64),Pass_inout3 VARCHAR(64),Pass_ver3 VARCHAR(32),Pass_count3 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sPass_data4 VARCHAR(64),Pass_inout4 VARCHAR(64),Pass_ver4 VARCHAR(32),Pass_count4 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sPassMode INTEGER,PassDel INTEGER,PassLock INTEGER,PassError INTEGER)", strdln);
	db_query(playerdb, strdln);//отправляем запрос на создание новой (пустой) БД
	print(" ");
	print(" * Новая (пустая) база данных аккаунтов игроков успешно создана !");
	print(" * Теперь сервер можно выключить (закрыть), и перевести его в");
	print(" * нормальный режим работы (MOD91INS 0) !");
	print(" ");
	db_close(playerdb);//отключаем базу данных аккаунтов игроков от сервера
	return 1;
}
#endif

forward FCislit(cislo);
public FCislit(cislo)
{
	new para, para22, string[256], string22[4], string33[4];
	strdel(string22, 0, 4);
	strdel(string33, 0, 4);
	format(string, sizeof(string), "%d", cislo);
	para22 = strlen(string);
	if(para22 == 1)
	{
		strmid(string22, string, para22-1, para22, sizeof(string22));
	}
	else
	{
    	strmid(string22, string, para22-1, para22, sizeof(string22));
    	strmid(string33, string, para22-2, para22-1, sizeof(string33));
	}
	para22 = strval(string33);
	if(para22 > 1) { para22 = 0; }
	para22 = para22 * 10 + strval(string22);
	switch(para22)
	{
		case 0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19: para = 0;
		case 1: para = 1;
		case 2,3,4: para = 2;
	}
	return para;
}

forward Fmadmins(rej, plname[], plmoney, &twenlim, &restlim);
public Fmadmins(rej, plname[], plmoney, &twenlim, &restlim)
{
	new file, f1[256];
	format(f1, sizeof(f1), "madmins/%s.ini", plname);
	if(rej == 0)
	{
		if(fexist(f1))
		{
			fremove(f1);
		}
		return 1;
	}
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	new para1;
	para1 = ((timecor[2] - 2000) * 366) + (timecor[3] * 31) + timecor[4];
	if(!fexist(f1))
	{
		file = ini_createFile(f1);
		if(file >= 0)
		{
			ini_setInteger(file, "DataDay", para1);
			ini_setInteger(file, "TwenLim", 0);
			ini_setInteger(file, "RestLim", 0);
			ini_closeFile(file);
		}
	}
	if(rej == 1)
	{
		file = ini_openFile(f1);
		if(file >= 0)
		{
			restlim = twenlim;
			ini_setInteger(file, "DataDay", para1);
			ini_setInteger(file, "TwenLim", twenlim);
			ini_setInteger(file, "RestLim", restlim);
			ini_closeFile(file);
		}
		return 1;
	}
	new data1, data2;
	file = ini_openFile(f1);
	if(file >= 0)
	{
		ini_getInteger(file, "DataDay", data1);
		ini_getInteger(file, "TwenLim", twenlim);
		ini_getInteger(file, "RestLim", restlim);
		if(data1 != para1)
		{
			data1 = para1;
			restlim = twenlim;
			ini_setInteger(file, "DataDay", data1);
			ini_setInteger(file, "RestLim", restlim);
		}
		if(twenlim == 0)
		{
			data2 = 1;
		}
		else
		{
			data1 = restlim - plmoney;
			if(data1 < 0)
			{
				data2 = 0;
			}
			else
			{
				data2 = 1;
				restlim = data1;
				ini_setInteger(file, "RestLim", restlim);
			}
		}
		ini_closeFile(file);
	}
	return data2;
}

forward SpectateStop(playerid);
public SpectateStop(playerid)//отключение наблюдения (если за игроком наблюдает полицейский)
{
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			if(admper1[i] == playerid && PlayerInfo[i][pAdmin] == 0 &&//если за игроком наблюдает полицейский,
			GetPVarInt(i, "TotPr") == 0)//и у полицейского нет защитного тотема, то:
			{
				TogglePlayerSpectating(i, 0);//запретить наблюдение для полицейского
				admper6[i] = 0;//обнуляем отметку о переключении наблюдения
			}
		}
	}
	return 1;
}

public object()
{
//закраваем оружейные магазины (начало)
ObjGam[0] = CreateObject(5259, 296.54, -37.53, 999.62,   0.00, 0.00, 0.00);
ObjGam[1] = CreateObject(5259, 296.50, -37.52, 997.31,   -180.00, 0.00, 0.00);
ObjGam[2] = CreateObject(5259, 291.23, -110.02, 999.58,   0.00, 0.00, 0.00);
ObjGam[3] = CreateObject(5259, 291.21, -110.02, 997.36,   -180.00, 0.00, 0.00);
ObjGam[4] = CreateObject(5259, 296.18, -80.91, 1000.19,   0.00, 0.00, 0.00);
ObjGam[5] = CreateObject(5259, 296.18, -80.88, 997.85,   -180.00, 0.00, 0.00);
ObjGam[6] = CreateObject(5259, 311.46, -167.55, 998.23,   0.00, 0.00, 0.00);
ObjGam[7] = CreateObject(5259, 311.44, -167.55, 996.01,   -180.00, 0.00, 0.00);
ObjGam[8] = CreateObject(5259, 308.49, -141.54, 997.33,   0.00, 0.00, 0.00);
ObjGam[9] = CreateObject(5259, 308.47, -141.55, 995.15,   -180.00, 0.00, 0.00);
ObjGam[10] = CreateObject(5259, 315.58, -132.53, 997.33,   0.00, 0.00, 0.00);
ObjGam[11] = CreateObject(5259, 315.57, -132.51, 995.04,   -180.00, 0.00, 0.00);
ObjGam[12] = CreateObject(5259, 315.24, -139.16, 1008.29,   -180.00, 0.00, 0.00);
ObjGam[13] = CreateObject(5259, 315.21, -139.23, 1010.54,   0.00, 0.00, 0.00);
//закраваем оружейные магазины (конец)

//трасса 1 (начало)
LineObj1[0] = CreateDynamicObject(16092, 2835.44, -1657.23, 9.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj1[1] = CreateDynamicObject(1262, 2836.30, -1660.23, 17.15,   0.00, 0.00, 269.36, -1, -1, -1, 300);
LineObj1[2] = CreateDynamicObject(1262, 2836.31, -1657.30, 17.15,   0.00, 0.00, 269.36, -1, -1, -1, 300);
LineObj1[3] = CreateDynamicObject(1262, 2836.29, -1654.31, 17.15,   0.00, 0.00, 269.36, -1, -1, -1, 300);
LineObj1[4] = CreateDynamicObject(979, 2823.33, -1650.61, 10.46,   0.00, 0.00, 196.58, -1, -1, -1, 300);
LineObj1[5] = CreateDynamicObject(979, 2740.17, -1648.85, 12.79,   0.00, 0.00, 187.50, -1, -1, -1, 300);
LineObj1[6] = CreateDynamicObject(979, 2730.98, -1650.00, 12.79,   0.00, 0.00, 186.61, -1, -1, -1, 300);
LineObj1[7] = CreateDynamicObject(979, 2721.73, -1651.11, 12.79,   0.00, 0.00, 186.74, -1, -1, -1, 300);
LineObj1[8] = CreateDynamicObject(979, 2635.18, -1661.60, 10.59,   0.00, 0.00, 254.96, -1, -1, -1, 300);
LineObj1[9] = CreateDynamicObject(979, 2648.33, -1650.41, 10.53,   0.00, 0.00, 191.68, -1, -1, -1, 300);
LineObj1[10] = CreateDynamicObject(979, 2640.04, -1654.23, 10.53,   0.00, 0.00, 217.69, -1, -1, -1, 300);
LineObj1[11] = CreateDynamicObject(978, 2648.32, -1737.32, 10.60,   0.00, 0.00, 31.55, -1, -1, -1, 300);
LineObj1[12] = CreateDynamicObject(978, 2639.80, -1740.47, 10.60,   0.00, 0.00, 9.52, -1, -1, -1, 300);
LineObj1[13] = CreateDynamicObject(978, 2527.49, -1739.47, 13.08,   0.00, 0.00, 341.45, -1, -1, -1, 300);
LineObj1[14] = CreateDynamicObject(979, 2431.01, -1724.72, 13.41,   0.00, 0.00, 197.71, -1, -1, -1, 300);
LineObj1[15] = CreateDynamicObject(978, 2413.74, -1739.72, 13.07,   0.00, 0.00, 341.46, -1, -1, -1, 300);
LineObj1[16] = CreateDynamicObject(979, 2342.74, -1725.10, 13.41,   0.00, 0.00, 200.35, -1, -1, -1, 300);
LineObj1[17] = CreateDynamicObject(978, 2313.70, -1740.14, 13.09,   0.00, 0.00, 343.65, -1, -1, -1, 300);
LineObj1[18] = CreateDynamicObject(979, 2217.92, -1724.51, 13.19,   0.00, 0.00, 210.19, -1, -1, -1, 300);
LineObj1[19] = CreateDynamicObject(979, 2212.31, -1731.37, 13.19,   0.00, 0.00, 250.60, -1, -1, -1, 300);
LineObj1[20] = CreateDynamicObject(979, 2210.78, -1740.52, 13.19,   0.00, 0.00, 269.91, -1, -1, -1, 300);
LineObj1[21] = CreateDynamicObject(979, 2211.37, -1894.33, 13.19,   0.00, 0.00, 292.25, -1, -1, -1, 300);
LineObj1[22] = CreateDynamicObject(978, 2225.35, -1894.73, 13.18,   0.00, 0.00, 71.52, -1, -1, -1, 300);
LineObj1[23] = CreateDynamicObject(978, 2221.17, -1972.03, 13.12,   0.00, 0.00, 67.79, -1, -1, -1, 300);
LineObj1[24] = CreateDynamicObject(978, 2289.06, -2073.82, 13.15,   0.00, 0.00, 129.90, -1, -1, -1, 300);
LineObj1[25] = CreateDynamicObject(978, 2291.81, -2081.95, 13.15,   0.00, 0.00, 87.13, -1, -1, -1, 300);
LineObj1[26] = CreateDynamicObject(978, 2288.21, -2089.73, 13.15,   0.00, 0.00, 43.88, -1, -1, -1, 300);
LineObj1[27] = CreateDynamicObject(978, 2267.33, -2108.72, 13.32,   0.00, 0.00, 32.75, -1, -1, -1, 300);
LineObj1[28] = CreateDynamicObject(979, 2255.69, -2097.16, 13.33,   0.00, 0.00, 244.26, -1, -1, -1, 300);
LineObj1[29] = CreateDynamicObject(978, 2204.08, -2169.74, 13.21,   0.00, 0.00, 29.10, -1, -1, -1, 300);
LineObj1[30] = CreateDynamicObject(979, 2194.43, -2160.27, 13.12,   0.00, 0.00, 242.30, -1, -1, -1, 300);
LineObj1[31] = CreateDynamicObject(978, 2140.19, -2227.21, 13.25,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj1[32] = CreateDynamicObject(978, 2148.92, -2224.95, 13.25,   0.00, 0.00, 29.03, -1, -1, -1, 300);
LineObj1[33] = CreateDynamicObject(978, 2132.67, -2223.65, 13.25,   0.00, 0.00, 309.95, -1, -1, -1, 300);
LineObj1[34] = CreateDynamicObject(978, 1963.46, -2173.74, 13.08,   0.00, 0.00, 341.65, -1, -1, -1, 300);
LineObj1[35] = CreateDynamicObject(978, 1956.02, -2168.75, 13.08,   0.00, 0.00, 310.37, -1, -1, -1, 300);
LineObj1[36] = CreateDynamicObject(978, 1953.24, -2160.52, 13.08,   0.00, 0.00, 267.15, -1, -1, -1, 300);
LineObj1[37] = CreateDynamicObject(979, 1968.51, -2110.19, 13.08,   0.00, 0.00, 107.99, -1, -1, -1, 300);
LineObj1[38] = CreateDynamicObject(979, 1968.82, -2060.70, 13.08,   0.00, 0.00, 106.98, -1, -1, -1, 300);
LineObj1[39] = CreateDynamicObject(978, 1954.40, -2052.61, 13.12,   0.00, 0.00, 253.21, -1, -1, -1, 300);
LineObj1[40] = CreateDynamicObject(979, 1969.29, -1956.69, 13.28,   0.00, 0.00, 105.84, -1, -1, -1, 300);
LineObj1[41] = CreateDynamicObject(978, 1954.02, -1955.91, 13.26,   0.00, 0.00, 257.96, -1, -1, -1, 300);
LineObj1[42] = CreateDynamicObject(978, 1954.03, -1933.10, 13.18,   0.00, 0.00, 257.02, -1, -1, -1, 300);
LineObj1[43] = CreateDynamicObject(979, 1968.88, -1932.71, 12.98,   0.00, 0.00, 103.62, -1, -1, -1, 300);
LineObj1[44] = CreateDynamicObject(978, 1953.89, -1787.06, 12.96,   0.00, 0.00, 245.72, -1, -1, -1, 300);
LineObj1[45] = CreateDynamicObject(979, 1969.83, -1812.39, 13.05,   0.00, 0.00, 108.81, -1, -1, -1, 300);
LineObj1[46] = CreateDynamicObject(979, 1967.76, -1751.78, 13.08,   0.00, 0.00, 125.37, -1, -1, -1, 300);
LineObj1[47] = CreateDynamicObject(979, 1960.78, -1746.48, 13.08,   0.00, 0.00, 160.23, -1, -1, -1, 300);
LineObj1[48] = CreateDynamicObject(978, 1943.51, -1759.92, 13.18,   0.00, 0.00, 348.05, -1, -1, -1, 300);
LineObj1[49] = CreateDynamicObject(978, 1936.50, -1755.00, 13.18,   0.00, 0.00, 301.72, -1, -1, -1, 300);
LineObj1[50] = CreateDynamicObject(978, 1934.32, -1746.40, 13.18,   0.00, 0.00, 266.33, -1, -1, -1, 300);
LineObj1[51] = CreateDynamicObject(979, 1937.54, -1605.19, 13.27,   0.00, 0.00, 169.55, -1, -1, -1, 300);
LineObj1[52] = CreateDynamicObject(978, 1824.84, -1619.86, 13.08,   0.00, 0.00, 353.04, -1, -1, -1, 300);
LineObj1[53] = CreateDynamicObject(978, 1817.04, -1615.92, 13.08,   0.00, 0.00, 313.52, -1, -1, -1, 300);
LineObj1[54] = CreateDynamicObject(978, 1813.98, -1607.80, 13.08,   0.00, 0.00, 268.40, -1, -1, -1, 300);
LineObj1[55] = CreateDynamicObject(979, 1832.10, -1577.99, 13.27,   0.00, 0.00, 89.41, -1, -1, -1, 300);
LineObj1[56] = CreateDynamicObject(979, 1832.46, -1568.84, 13.27,   0.00, 0.00, 86.07, -1, -1, -1, 300);
LineObj1[57] = CreateDynamicObject(979, 1833.59, -1559.74, 13.27,   0.00, 0.00, 79.88, -1, -1, -1, 300);
LineObj1[58] = CreateDynamicObject(978, 1839.82, -1461.70, 13.07,   0.00, 0.00, 258.29, -1, -1, -1, 300);
LineObj1[59] = CreateDynamicObject(979, 1858.54, -1464.20, 13.18,   0.00, 0.00, 106.62, -1, -1, -1, 300);
LineObj1[60] = CreateDynamicObject(979, 1858.94, -1341.01, 13.07,   0.00, 0.00, 109.23, -1, -1, -1, 300);
LineObj1[61] = CreateDynamicObject(979, 1858.78, -1260.86, 13.06,   0.00, 0.00, 105.20, -1, -1, -1, 300);
LineObj1[62] = CreateDynamicObject(978, 1839.73, -1261.31, 13.21,   0.00, 0.00, 255.05, -1, -1, -1, 300);
LineObj1[63] = CreateDynamicObject(978, 1840.29, -1186.67, 23.34,   0.00, 0.00, 261.59, -1, -1, -1, 300);
LineObj1[64] = CreateDynamicObject(978, 1843.84, -1178.44, 23.34,   0.00, 0.00, 231.75, -1, -1, -1, 300);
LineObj1[65] = CreateDynamicObject(978, 1851.33, -1173.89, 23.34,   0.00, 0.00, 190.71, -1, -1, -1, 300);
LineObj1[66] = CreateDynamicObject(979, 1874.13, -1135.96, 23.43,   0.00, 0.00, 108.95, -1, -1, -1, 300);
LineObj1[67] = CreateDynamicObject(978, 1983.85, -1045.88, 24.13,   0.00, 0.00, 139.77, -1, -1, -1, 300);
LineObj1[68] = CreateDynamicObject(979, 1979.98, -1060.34, 24.06,   0.00, 0.00, 4.27, -1, -1, -1, 300);
LineObj1[69] = CreateDynamicObject(979, 2068.95, -1097.47, 24.61,   0.00, 0.00, 352.51, -1, -1, -1, 300);
LineObj1[70] = CreateDynamicObject(979, 2175.65, -1126.70, 24.83,   0.00, 0.00, 11.84, -1, -1, -1, 300);
LineObj1[71] = CreateDynamicObject(978, 2192.39, -1116.30, 24.49,   0.00, 0.00, 157.89, -1, -1, -1, 300);
LineObj1[72] = CreateDynamicObject(978, 2200.96, -1119.81, 25.01,   0.00, 0.00, 157.89, -1, -1, -1, 300);
LineObj1[73] = CreateDynamicObject(978, 2209.56, -1123.31, 25.21,   0.00, 0.00, 157.89, -1, -1, -1, 300);
LineObj1[74] = CreateDynamicObject(979, 2218.60, -1140.44, 25.44,   0.00, 0.00, 1.96, -1, -1, -1, 300);
LineObj1[75] = CreateDynamicObject(978, 2218.00, -1126.76, 25.31,   0.00, 0.00, 157.89, -1, -1, -1, 300);
LineObj1[76] = CreateDynamicObject(979, 2270.95, -1154.09, 26.55,   0.00, 0.00, 3.14, -1, -1, -1, 300);
LineObj1[77] = CreateDynamicObject(979, 2303.51, -1158.66, 26.40,   0.00, 0.00, 6.97, -1, -1, -1, 300);
LineObj1[78] = CreateDynamicObject(978, 2323.76, -1146.46, 26.58,   0.00, 0.00, 156.02, -1, -1, -1, 300);
LineObj1[79] = CreateDynamicObject(979, 2369.98, -1160.04, 27.22,   0.00, 0.00, 8.05, -1, -1, -1, 300);
LineObj1[80] = CreateDynamicObject(979, 2361.12, -1162.24, 27.22,   0.00, 0.00, 19.68, -1, -1, -1, 300);
LineObj1[81] = CreateDynamicObject(978, 2862.98, -1128.34, 10.59,   0.00, 0.00, 171.76, -1, -1, -1, 300);
LineObj1[82] = CreateDynamicObject(978, 2871.13, -1132.05, 10.59,   0.00, 0.00, 139.42, -1, -1, -1, 300);
LineObj1[83] = CreateDynamicObject(978, 2878.08, -1138.02, 10.59,   0.00, 0.00, 139.42, -1, -1, -1, 300);
LineObj1[84] = CreateDynamicObject(978, 2879.43, -1662.23, 10.59,   0.00, 0.00, 40.25, -1, -1, -1, 300);
LineObj1[85] = CreateDynamicObject(978, 2871.59, -1667.10, 10.59,   0.00, 0.00, 23.66, -1, -1, -1, 300);
LineObj1[86] = CreateDynamicObject(978, 2862.66, -1669.59, 10.59,   0.00, 0.00, 7.50, -1, -1, -1, 300);
LineObj1[87] = CreateDynamicObject(978, 2853.43, -1669.38, 10.59,   0.00, 0.00, 349.68, -1, -1, -1, 300);
//трасса 1 (конец)

//трасса 2 (начало)
LineObj2[0] = CreateDynamicObject(16092, 494.77, -307.58, 39.26,   0.00, 0.00, 76.04, -1, -1, -1, 300);
LineObj2[1] = CreateDynamicObject(1262, 495.09, -306.60, 46.72,   0.00, 0.00, 347.94, -1, -1, -1, 300);
LineObj2[2] = CreateDynamicObject(1262, 492.06, -305.94, 46.72,   0.00, 0.00, 347.94, -1, -1, -1, 300);
LineObj2[3] = CreateDynamicObject(1262, 498.06, -307.40, 46.72,   0.00, 0.00, 347.94, -1, -1, -1, 300);
LineObj2[4] = CreateDynamicObject(978, 475.69, -410.62, 28.20,   0.00, 0.00, 61.01, -1, -1, -1, 300);
LineObj2[5] = CreateDynamicObject(979, 461.76, -407.31, 28.07,   0.00, 0.00, 267.86, -1, -1, -1, 300);
LineObj2[6] = CreateDynamicObject(978, 428.41, -588.99, 37.06,   0.00, 0.00, 46.05, -1, -1, -1, 300);
LineObj2[7] = CreateDynamicObject(978, 420.88, -594.13, 36.60,   0.00, 0.00, 21.49, -1, -1, -1, 300);
LineObj2[8] = CreateDynamicObject(978, 412.24, -594.03, 36.14,   0.00, 0.00, 336.79, -1, -1, -1, 300);
LineObj2[9] = CreateDynamicObject(978, 34.37, -658.49, 3.21,   0.00, 0.00, 332.07, -1, -1, -1, 300);
LineObj2[10] = CreateDynamicObject(978, 28.13, -652.15, 3.21,   0.00, 0.00, 296.75, -1, -1, -1, 300);
LineObj2[11] = CreateDynamicObject(978, 27.32, -643.47, 3.21,   0.00, 0.00, 253.78, -1, -1, -1, 300);
LineObj2[12] = CreateDynamicObject(978, -256.69, -271.16, 1.17,   0.00, 0.00, 295.17, -1, -1, -1, 300);
LineObj2[13] = CreateDynamicObject(979, -299.64, -149.71, 0.86,   0.00, 0.00, 124.75, -1, -1, -1, 300);
LineObj2[14] = CreateDynamicObject(979, -298.59, -71.51, 1.25,   0.00, 0.00, 99.61, -1, -1, -1, 300);
LineObj2[15] = CreateDynamicObject(979, -236.61, 133.86, 1.83,   0.00, 0.00, 85.63, -1, -1, -1, 300);
LineObj2[16] = CreateDynamicObject(979, -207.01, 206.24, 11.12,   0.00, 0.00, 79.51, -1, -1, -1, 300);
LineObj2[17] = CreateDynamicObject(978, -225.80, 206.35, 10.73,   0.00, 0.00, 230.96, -1, -1, -1, 300);
LineObj2[18] = CreateDynamicObject(978, -206.32, 245.29, 11.83,   0.00, 0.00, 213.66, -1, -1, -1, 300);
LineObj2[19] = CreateDynamicObject(978, -212.95, 238.97, 11.83,   0.00, 0.00, 233.07, -1, -1, -1, 300);
LineObj2[20] = CreateDynamicObject(978, -197.85, 247.03, 11.83,   0.00, 0.00, 169.92, -1, -1, -1, 300);
LineObj2[21] = CreateDynamicObject(979, -26.40, 166.45, 2.23,   0.00, 0.00, 349.28, -1, -1, -1, 300);
LineObj2[22] = CreateDynamicObject(979, 231.82, 41.21, 2.11,   0.00, 0.00, 9.58, -1, -1, -1, 300);
LineObj2[23] = CreateDynamicObject(979, 325.15, 74.36, 3.13,   0.00, 0.00, 40.56, -1, -1, -1, 300);
LineObj2[24] = CreateDynamicObject(979, 511.41, 224.17, 13.28,   0.00, 0.00, 55.41, -1, -1, -1, 300);
LineObj2[25] = CreateDynamicObject(978, 620.00, 317.28, 19.50,   0.00, 0.00, 170.85, -1, -1, -1, 300);
LineObj2[26] = CreateDynamicObject(978, 754.38, 331.24, 19.83,   0.00, 0.00, 180.59, -1, -1, -1, 300);
LineObj2[27] = CreateDynamicObject(979, 754.13, 316.28, 19.91,   0.00, 0.00, 25.14, -1, -1, -1, 300);
LineObj2[28] = CreateDynamicObject(979, 769.04, 319.09, 19.91,   0.00, 0.00, 21.94, -1, -1, -1, 300);
LineObj2[29] = CreateDynamicObject(979, 1029.28, 473.46, 19.78,   0.00, 0.00, 85.57, -1, -1, -1, 300);
LineObj2[30] = CreateDynamicObject(978, 1350.50, 466.03, 19.85,   0.00, 0.00, 143.17, -1, -1, -1, 300);
LineObj2[31] = CreateDynamicObject(978, 1380.39, 436.61, 19.66,   0.00, 0.00, 62.74, -1, -1, -1, 300);
LineObj2[32] = CreateDynamicObject(978, 1381.73, 445.35, 19.66,   0.00, 0.00, 100.59, -1, -1, -1, 300);
LineObj2[33] = CreateDynamicObject(978, 1377.34, 453.02, 19.66,   0.00, 0.00, 139.43, -1, -1, -1, 300);
LineObj2[34] = CreateDynamicObject(979, 1331.53, 361.91, 19.20,   0.00, 0.00, 263.33, -1, -1, -1, 300);
LineObj2[35] = CreateDynamicObject(979, 1311.30, 316.35, 19.10,   0.00, 0.00, 264.38, -1, -1, -1, 300);
LineObj2[36] = CreateDynamicObject(978, 1324.59, 310.78, 19.25,   0.00, 0.00, 47.65, -1, -1, -1, 300);
LineObj2[37] = CreateDynamicObject(978, 1296.31, 246.40, 19.14,   0.00, 0.00, 46.53, -1, -1, -1, 300);
LineObj2[38] = CreateDynamicObject(979, 1282.91, 252.33, 19.10,   0.00, 0.00, 265.80, -1, -1, -1, 300);
LineObj2[39] = CreateDynamicObject(979, 1254.35, 188.20, 19.11,   0.00, 0.00, 267.57, -1, -1, -1, 300);
LineObj2[40] = CreateDynamicObject(978, 1267.79, 182.88, 19.30,   0.00, 0.00, 47.07, -1, -1, -1, 300);
LineObj2[41] = CreateDynamicObject(979, 1231.08, 105.40, 20.70,   0.00, 0.00, 277.61, -1, -1, -1, 300);
LineObj2[42] = CreateDynamicObject(979, 1230.19, 75.26, 22.03,   0.00, 0.00, 277.61, -1, -1, -1, 300);
LineObj2[43] = CreateDynamicObject(978, 1301.92, -85.60, 36.26,   0.00, 0.00, 40.76, -1, -1, -1, 300);
LineObj2[44] = CreateDynamicObject(978, 1305.67, -77.85, 36.26,   0.00, 0.00, 87.51, -1, -1, -1, 300);
LineObj2[45] = CreateDynamicObject(978, 1303.61, -69.08, 36.26,   0.00, 0.00, 118.41, -1, -1, -1, 300);
LineObj2[46] = CreateDynamicObject(978, 1242.97, -134.60, 38.75,   0.00, 0.00, 21.21, -1, -1, -1, 300);
LineObj2[47] = CreateDynamicObject(979, 1233.21, -122.87, 38.77,   0.00, 0.00, 227.92, -1, -1, -1, 300);
LineObj2[48] = CreateDynamicObject(978, 1183.07, -172.08, 40.29,   0.00, 0.00, 8.42, -1, -1, -1, 300);
LineObj2[49] = CreateDynamicObject(979, 530.89, -134.12, 37.55,   0.00, 0.00, 184.21, -1, -1, -1, 300);
LineObj2[50] = CreateDynamicObject(979, 522.92, -137.82, 37.55,   0.00, 0.00, 225.61, -1, -1, -1, 300);
LineObj2[51] = CreateDynamicObject(979, 518.88, -145.76, 37.55,   0.00, 0.00, 260.07, -1, -1, -1, 300);
LineObj2[52] = CreateDynamicObject(979, 752.47, -156.06, 18.51,   0.00, 0.00, 183.58, -1, -1, -1, 300);
LineObj2[53] = CreateDynamicObject(978, 737.81, -168.84, 19.43,   0.00, 0.00, 344.08, -1, -1, -1, 300);
//трасса 2 (конец)

//трасса 3 (начало)
LineObj3[0] = CreateDynamicObject(16092, -2421.08, -11.79, 34.67,   0.00, 0.00, 271.14, -1, -1, -1, 300);
LineObj3[1] = CreateDynamicObject(1262, -2421.01, -10.80, 42.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj3[2] = CreateDynamicObject(1262, -2417.99, -10.84, 42.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj3[3] = CreateDynamicObject(1262, -2424.07, -10.95, 42.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj3[4] = CreateDynamicObject(978, -2414.12, -69.62, 35.05,   0.00, 0.00, 68.19, -1, -1, -1, 300);
LineObj3[5] = CreateDynamicObject(979, -2428.36, -69.73, 34.98,   0.00, 0.00, 291.96, -1, -1, -1, 300);
LineObj3[6] = CreateDynamicObject(979, -2501.12, -203.59, 25.16,   0.00, 0.00, 198.43, -1, -1, -1, 300);
LineObj3[7] = CreateDynamicObject(979, -2603.68, -203.19, 3.90,   0.00, 0.00, 199.44, -1, -1, -1, 300);
LineObj3[8] = CreateDynamicObject(979, -2655.14, -203.29, 3.95,   0.00, 0.00, 200.73, -1, -1, -1, 300);
LineObj3[9] = CreateDynamicObject(978, -2655.00, -217.27, 3.93,   0.00, 0.00, 341.23, -1, -1, -1, 300);
LineObj3[10] = CreateDynamicObject(979, -2706.01, -203.48, 3.88,   0.00, 0.00, 196.91, -1, -1, -1, 300);
LineObj3[11] = CreateDynamicObject(979, -2758.22, -203.52, 6.73,   0.00, 0.00, 196.13, -1, -1, -1, 300);
LineObj3[12] = CreateDynamicObject(978, -2803.06, -218.78, 6.83,   0.00, 0.00, 350.77, -1, -1, -1, 300);
LineObj3[13] = CreateDynamicObject(978, -2811.27, -215.07, 6.83,   0.00, 0.00, 320.25, -1, -1, -1, 300);
LineObj3[14] = CreateDynamicObject(978, -2814.64, -207.43, 6.83,   0.00, 0.00, 267.24, -1, -1, -1, 300);
LineObj3[15] = CreateDynamicObject(979, -2801.83, -70.45, 6.73,   0.00, 0.00, 112.02, -1, -1, -1, 300);
LineObj3[16] = CreateDynamicObject(979, -2801.80, -6.27, 6.83,   0.00, 0.00, 117.34, -1, -1, -1, 300);
LineObj3[17] = CreateDynamicObject(979, -2801.64, 39.50, 6.74,   0.00, 0.00, 115.95, -1, -1, -1, 300);
LineObj3[18] = CreateDynamicObject(979, -2801.82, 157.63, 6.74,   0.00, 0.00, 114.09, -1, -1, -1, 300);
LineObj3[19] = CreateDynamicObject(978, -2815.48, 282.21, 6.88,   0.00, 0.00, 253.22, -1, -1, -1, 300);
LineObj3[20] = CreateDynamicObject(978, -2810.66, 289.76, 6.88,   0.00, 0.00, 221.78, -1, -1, -1, 300);
LineObj3[21] = CreateDynamicObject(978, -2802.54, 292.90, 6.88,   0.00, 0.00, 180.33, -1, -1, -1, 300);
LineObj3[22] = CreateDynamicObject(978, -2706.42, 295.33, 3.83,   0.00, 0.00, 162.98, -1, -1, -1, 300);
LineObj3[23] = CreateDynamicObject(979, -2706.97, 281.25, 4.03,   0.00, 0.00, 20.49, -1, -1, -1, 300);
LineObj3[24] = CreateDynamicObject(979, -2666.05, 281.14, 3.95,   0.00, 0.00, 22.87, -1, -1, -1, 300);
LineObj3[25] = CreateDynamicObject(979, -2646.58, 281.10, 3.95,   0.00, 0.00, 23.12, -1, -1, -1, 300);
LineObj3[26] = CreateDynamicObject(979, -2599.48, 348.48, 3.87,   0.00, 0.00, 114.72, -1, -1, -1, 300);
LineObj3[27] = CreateDynamicObject(978, -2613.86, 328.00, 3.88,   0.00, 0.00, 242.26, -1, -1, -1, 300);
LineObj3[28] = CreateDynamicObject(979, -2599.32, 384.99, 8.47,   0.00, -9.00, 118.00, -1, -1, -1, 300);
LineObj3[29] = CreateDynamicObject(978, -2613.90, 468.25, 14.17,   0.00, 0.00, 251.45, -1, -1, -1, 300);
LineObj3[30] = CreateDynamicObject(979, -2599.51, 468.07, 14.15,   0.00, 0.00, 111.96, -1, -1, -1, 300);
LineObj3[31] = CreateDynamicObject(978, -2599.28, 573.41, 14.21,   0.00, 0.00, 180.68, -1, -1, -1, 300);
LineObj3[32] = CreateDynamicObject(978, -2607.77, 570.66, 14.21,   0.00, 0.00, 215.28, -1, -1, -1, 300);
LineObj3[33] = CreateDynamicObject(978, -2613.33, 563.63, 14.21,   0.00, 0.00, 247.83, -1, -1, -1, 300);
LineObj3[34] = CreateDynamicObject(978, -2566.64, 575.62, 14.15,   0.00, 0.00, 158.51, -1, -1, -1, 300);
LineObj3[35] = CreateDynamicObject(978, -2526.90, 575.76, 14.15,   0.00, 0.00, 156.16, -1, -1, -1, 300);
LineObj3[36] = CreateDynamicObject(979, -2526.76, 556.07, 14.15,   0.00, 0.00, 24.08, -1, -1, -1, 300);
LineObj3[37] = CreateDynamicObject(979, -2386.91, 555.96, 24.43,   0.00, 0.00, 24.03, -1, -1, -1, 300);
LineObj3[38] = CreateDynamicObject(978, -2387.21, 575.58, 24.43,   0.00, 0.00, 161.28, -1, -1, -1, 300);
LineObj3[39] = CreateDynamicObject(978, -2269.61, 575.49, 34.71,   0.00, 0.00, 158.34, -1, -1, -1, 300);
LineObj3[40] = CreateDynamicObject(979, -2265.55, 556.11, 34.80,   0.00, 0.00, 26.96, -1, -1, -1, 300);
LineObj3[41] = CreateDynamicObject(978, -2261.06, 575.73, 34.71,   0.00, 0.00, 158.34, -1, -1, -1, 300);
LineObj3[42] = CreateDynamicObject(978, -2251.69, 575.65, 34.71,   0.00, 0.00, 158.34, -1, -1, -1, 300);
LineObj3[43] = CreateDynamicObject(979, -2256.73, 556.16, 34.80,   0.00, 0.00, 26.96, -1, -1, -1, 300);
LineObj3[44] = CreateDynamicObject(978, -2221.18, 558.44, 34.71,   0.00, 0.00, 84.73, -1, -1, -1, 300);
LineObj3[45] = CreateDynamicObject(978, -2222.69, 567.31, 34.71,   0.00, 0.00, 114.54, -1, -1, -1, 300);
LineObj3[46] = CreateDynamicObject(978, -2228.89, 573.47, 34.71,   0.00, 0.00, 155.92, -1, -1, -1, 300);
LineObj3[47] = CreateDynamicObject(978, -2219.01, 508.16, 34.61,   0.00, 0.00, 63.08, -1, -1, -1, 300);
LineObj3[48] = CreateDynamicObject(979, -2234.06, 508.71, 34.63,   0.00, 0.00, 291.71, -1, -1, -1, 300);
LineObj3[49] = CreateDynamicObject(978, -2287.81, 390.91, 34.43,   0.00, 0.00, 319.05, -1, -1, -1, 300);
LineObj3[50] = CreateDynamicObject(978, -2279.60, 387.65, 34.43,   0.00, 0.00, 357.63, -1, -1, -1, 300);
LineObj3[51] = CreateDynamicObject(978, -2270.90, 389.57, 34.43,   0.00, 0.00, 27.50, -1, -1, -1, 300);
LineObj3[52] = CreateDynamicObject(979, -2318.85, 417.08, 34.82,   0.00, 0.00, 225.36, -1, -1, -1, 300);
LineObj3[53] = CreateDynamicObject(979, -2310.97, 421.34, 34.82,   0.00, 0.00, 191.94, -1, -1, -1, 300);
LineObj3[54] = CreateDynamicObject(979, -2302.17, 420.31, 34.82,   0.00, 0.00, 154.99, -1, -1, -1, 300);
LineObj3[55] = CreateDynamicObject(979, -2362.75, 375.43, 34.69,   0.00, 0.00, 247.64, -1, -1, -1, 300);
LineObj3[56] = CreateDynamicObject(979, -2387.65, 348.57, 34.69,   0.00, 0.00, 257.66, -1, -1, -1, 300);
LineObj3[57] = CreateDynamicObject(979, -2416.36, 298.36, 34.69,   0.00, 0.00, 271.08, -1, -1, -1, 300);
LineObj3[58] = CreateDynamicObject(979, -2425.84, 179.54, 34.71,   0.00, 0.00, 286.19, -1, -1, -1, 300);
LineObj3[59] = CreateDynamicObject(979, -2428.32, 136.97, 34.71,   0.00, 0.00, 292.34, -1, -1, -1, 300);
LineObj3[60] = CreateDynamicObject(979, -2428.27, 79.39, 34.71,   0.00, 0.00, 293.47, -1, -1, -1, 300);
LineObj3[61] = CreateDynamicObject(979, -2428.32, 39.46, 34.71,   0.00, 0.00, 293.51, -1, -1, -1, 300);
//трасса 3 (конец)

//трасса 4 (начало)
LineObj4[0] = CreateDynamicObject(16092, -1403.67, 2290.17, 54.40,   0.00, 0.00, 295.21, -1, -1, -1, 300);
LineObj4[1] = CreateDynamicObject(1262, -1404.00, 2291.06, 61.84,   0.00, 0.00, 24.84, -1, -1, -1, 300);
LineObj4[2] = CreateDynamicObject(1262, -1401.29, 2292.32, 61.84,   0.00, 0.00, 24.84, -1, -1, -1, 300);
LineObj4[3] = CreateDynamicObject(1262, -1406.74, 2289.74, 61.84,   0.00, 0.00, 24.84, -1, -1, -1, 300);
LineObj4[4] = CreateDynamicObject(978, -1360.53, 2172.21, 48.32,   0.00, 0.00, 21.36, -1, -1, -1, 300);
LineObj4[5] = CreateDynamicObject(978, -1352.65, 2176.88, 48.62,   0.00, 0.00, 39.59, -1, -1, -1, 300);
LineObj4[6] = CreateDynamicObject(978, -1348.24, 2184.43, 49.03,   0.00, 0.00, 79.86, -1, -1, -1, 300);
LineObj4[7] = CreateDynamicObject(978, -1488.85, 2112.11, 45.48,   0.00, 0.00, 291.38, -1, -1, -1, 300);
LineObj4[8] = CreateDynamicObject(978, -1482.76, 2106.31, 45.48,   0.00, 0.00, 341.38, -1, -1, -1, 300);
LineObj4[9] = CreateDynamicObject(978, -1473.83, 2105.89, 45.60,   0.00, 0.00, 13.09, -1, -1, -1, 300);
LineObj4[10] = CreateDynamicObject(979, -1530.23, 2367.74, 46.22,   0.00, 0.00, 151.93, -1, -1, -1, 300);
LineObj4[11] = CreateDynamicObject(979, -1524.60, 2361.20, 46.72,   0.00, 0.00, 110.82, -1, -1, -1, 300);
LineObj4[12] = CreateDynamicObject(979, -1538.64, 2368.86, 45.71,   0.00, 0.00, 194.92, -1, -1, -1, 300);
LineObj4[13] = CreateDynamicObject(979, -1635.95, 2382.55, 48.92,   0.00, 12.00, 223.78, -1, -1, -1, 300);
LineObj4[14] = CreateDynamicObject(979, -1628.77, 2388.09, 50.55,   0.00, 9.00, 211.96, -1, -1, -1, 300);
LineObj4[15] = CreateDynamicObject(979, -1611.41, 2388.58, 51.98,   0.00, 0.00, 154.59, -1, -1, -1, 300);
LineObj4[16] = CreateDynamicObject(979, -1620.20, 2390.50, 51.68,   0.00, 3.00, 181.00, -1, -1, -1, 300);
LineObj4[17] = CreateDynamicObject(979, -1684.92, 2334.25, 31.71,   0.00, 9.00, 255.04, -1, -1, -1, 300);
LineObj4[18] = CreateDynamicObject(978, -1816.25, 2128.67, 7.57,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj4[19] = CreateDynamicObject(978, -1825.23, 2130.28, 7.57,   0.00, 0.00, 340.36, -1, -1, -1, 300);
LineObj4[20] = CreateDynamicObject(978, -1831.45, 2136.07, 7.47,   0.00, 0.00, 294.00, -1, -1, -1, 300);
LineObj4[21] = CreateDynamicObject(978, -2001.18, 2276.40, 18.10,   0.00, 0.00, 247.40, -1, -1, -1, 300);
LineObj4[22] = CreateDynamicObject(978, -1816.57, 2685.47, 55.21,   0.00, 4.00, 209.85, -1, -1, -1, 300);
LineObj4[23] = CreateDynamicObject(979, -1767.45, 2707.07, 59.09,   0.00, 0.00, 53.80, -1, -1, -1, 300);
LineObj4[24] = CreateDynamicObject(979, -1634.58, 2715.81, 57.36,   0.00, 0.00, 27.92, -1, -1, -1, 300);
LineObj4[25] = CreateDynamicObject(978, -1339.70, 2635.68, 50.55,   0.00, 0.00, 78.47, -1, -1, -1, 300);
LineObj4[26] = CreateDynamicObject(978, -1341.16, 2653.71, 50.75,   0.00, 0.00, 107.72, -1, -1, -1, 300);
LineObj4[27] = CreateDynamicObject(978, -1339.25, 2644.76, 50.24,   0.00, 0.00, 96.43, -1, -1, -1, 300);
LineObj4[28] = CreateDynamicObject(978, -1344.32, 2628.22, 51.25,   0.00, 4.00, 39.55, -1, -1, -1, 300);
LineObj4[29] = CreateDynamicObject(979, -1386.67, 2601.23, 54.99,   0.00, -5.00, 258.81, -1, -1, -1, 300);
LineObj4[30] = CreateDynamicObject(979, -1442.20, 2367.98, 52.75,   0.00, 0.00, 307.28, -1, -1, -1, 300);
//трасса 4 (конец)

//трасса 5 (начало)
LineObj5[0] = CreateDynamicObject(16092, 2708.59, 1773.22, 6.03,   0.00, 0.00, 268.86, -1, -1, -1, 300);
LineObj5[1] = CreateDynamicObject(1262, 2708.49, 1772.32, 13.52,   0.00, 0.00, 179.83, -1, -1, -1, 300);
LineObj5[2] = CreateDynamicObject(1262, 2705.55, 1772.35, 13.52,   0.00, 0.00, 179.83, -1, -1, -1, 300);
LineObj5[3] = CreateDynamicObject(1262, 2711.56, 1772.25, 13.52,   0.00, 0.00, 179.83, -1, -1, -1, 300);
LineObj5[4] = CreateDynamicObject(979, 2717.29, 1894.15, 6.41,   0.00, 0.00, 113.82, -1, -1, -1, 300);
LineObj5[5] = CreateDynamicObject(979, 2717.30, 1913.23, 6.41,   0.00, 0.00, 113.82, -1, -1, -1, 300);
LineObj5[6] = CreateDynamicObject(979, 2698.83, 2007.06, 6.47,   0.00, 0.00, 128.51, -1, -1, -1, 300);
LineObj5[7] = CreateDynamicObject(979, 2704.51, 1999.91, 6.47,   0.00, 0.00, 128.51, -1, -1, -1, 300);
LineObj5[8] = CreateDynamicObject(979, 2710.29, 1992.66, 6.47,   0.00, 0.00, 128.51, -1, -1, -1, 300);
LineObj5[9] = CreateDynamicObject(979, 2715.01, 1984.79, 6.47,   0.00, 0.00, 113.44, -1, -1, -1, 300);
LineObj5[10] = CreateDynamicObject(979, 2642.83, 2116.34, 10.52,   0.00, 0.00, 127.35, -1, -1, -1, 300);
LineObj5[11] = CreateDynamicObject(979, 2635.33, 2120.28, 10.52,   0.00, 0.00, 177.58, -1, -1, -1, 300);
LineObj5[12] = CreateDynamicObject(979, 2626.09, 2120.55, 10.52,   0.00, 0.00, 179.57, -1, -1, -1, 300);
LineObj5[13] = CreateDynamicObject(979, 2647.53, 2108.43, 10.52,   0.00, 0.00, 114.06, -1, -1, -1, 300);
LineObj5[14] = CreateDynamicObject(979, 2651.10, 2099.93, 10.52,   0.00, 0.00, 111.70, -1, -1, -1, 300);
LineObj5[15] = CreateDynamicObject(978, 2533.96, 2105.23, 10.53,   0.00, 0.00, 348.27, -1, -1, -1, 300);
LineObj5[16] = CreateDynamicObject(978, 2525.82, 2109.10, 10.53,   0.00, 0.00, 320.69, -1, -1, -1, 300);
LineObj5[17] = CreateDynamicObject(978, 2522.17, 2116.69, 10.53,   0.00, 0.00, 269.90, -1, -1, -1, 300);
LineObj5[18] = CreateDynamicObject(978, 2520.40, 2137.04, 10.37,   0.00, 0.00, 245.15, -1, -1, -1, 300);
LineObj5[19] = CreateDynamicObject(978, 2519.99, 2149.25, 10.37,   0.00, 0.00, 245.15, -1, -1, -1, 300);
LineObj5[20] = CreateDynamicObject(978, 2520.41, 2232.62, 10.50,   0.00, 0.00, 252.85, -1, -1, -1, 300);
LineObj5[21] = CreateDynamicObject(979, 2534.42, 2232.64, 10.53,   0.00, 0.00, 108.32, -1, -1, -1, 300);
LineObj5[22] = CreateDynamicObject(979, 2530.54, 2415.70, 10.60,   0.00, 0.00, 139.81, -1, -1, -1, 300);
LineObj5[23] = CreateDynamicObject(979, 2522.31, 2418.94, 10.60,   0.00, 0.00, 177.83, -1, -1, -1, 300);
LineObj5[24] = CreateDynamicObject(979, 2535.36, 2408.27, 10.60,   0.00, 0.00, 105.97, -1, -1, -1, 300);
LineObj5[25] = CreateDynamicObject(978, 2426.74, 2406.06, 10.46,   0.00, 0.00, 339.36, -1, -1, -1, 300);
LineObj5[26] = CreateDynamicObject(979, 2367.13, 2420.44, 10.47,   0.00, 0.00, 198.94, -1, -1, -1, 300);
LineObj5[27] = CreateDynamicObject(978, 2286.99, 2405.99, 10.37,   0.00, 0.00, 340.20, -1, -1, -1, 300);
LineObj5[28] = CreateDynamicObject(979, 2225.56, 2416.82, 10.50,   0.00, 0.00, 216.66, -1, -1, -1, 300);
LineObj5[29] = CreateDynamicObject(979, 2233.86, 2420.48, 10.50,   0.00, 0.00, 190.92, -1, -1, -1, 300);
LineObj5[30] = CreateDynamicObject(979, 2221.73, 2409.37, 10.50,   0.00, 0.00, 268.95, -1, -1, -1, 300);
LineObj5[31] = CreateDynamicObject(978, 2225.94, 2364.55, 10.47,   0.00, 0.00, 44.57, -1, -1, -1, 300);
LineObj5[32] = CreateDynamicObject(979, 2194.23, 2344.01, 10.26,   0.00, 0.00, 254.95, -1, -1, -1, 300);
LineObj5[33] = CreateDynamicObject(978, 2169.97, 2283.67, 10.27,   0.00, 0.00, 44.13, -1, -1, -1, 300);
LineObj5[34] = CreateDynamicObject(979, 2150.48, 2280.06, 10.42,   0.00, 0.00, 264.56, -1, -1, -1, 300);
LineObj5[35] = CreateDynamicObject(979, 2137.66, 2152.76, 10.37,   0.00, 0.00, 291.14, -1, -1, -1, 300);
LineObj5[36] = CreateDynamicObject(978, 2159.62, 2149.39, 10.37,   0.00, 0.00, 71.25, -1, -1, -1, 300);
LineObj5[37] = CreateDynamicObject(978, 2159.83, 2136.41, 10.37,   0.00, 0.00, 71.25, -1, -1, -1, 300);
LineObj5[38] = CreateDynamicObject(979, 2137.55, 2136.72, 10.37,   0.00, 0.00, 291.14, -1, -1, -1, 300);
LineObj5[39] = CreateDynamicObject(978, 2159.79, 2022.24, 10.37,   0.00, 0.00, 71.58, -1, -1, -1, 300);
LineObj5[40] = CreateDynamicObject(978, 2160.01, 1893.45, 10.35,   0.00, 0.00, 70.66, -1, -1, -1, 300);
LineObj5[41] = CreateDynamicObject(978, 2115.02, 1773.32, 10.37,   0.00, 0.00, 45.78, -1, -1, -1, 300);
LineObj5[42] = CreateDynamicObject(978, 2088.98, 1721.15, 10.37,   0.00, 0.00, 45.78, -1, -1, -1, 300);
LineObj5[43] = CreateDynamicObject(979, 2092.83, 1774.00, 10.28,   0.00, 0.00, 267.29, -1, -1, -1, 300);
LineObj5[44] = CreateDynamicObject(979, 2062.88, 1714.34, 10.47,   0.00, 0.00, 268.94, -1, -1, -1, 300);
LineObj5[45] = CreateDynamicObject(979, 2057.47, 1646.01, 10.36,   0.00, 0.00, 290.90, -1, -1, -1, 300);
LineObj5[46] = CreateDynamicObject(978, 2080.56, 1644.63, 10.46,   0.00, 0.00, 66.19, -1, -1, -1, 300);
LineObj5[47] = CreateDynamicObject(978, 2080.00, 1533.08, 10.26,   0.00, 0.00, 69.17, -1, -1, -1, 300);
LineObj5[48] = CreateDynamicObject(979, 2057.57, 1534.09, 10.36,   0.00, 0.00, 293.35, -1, -1, -1, 300);
LineObj5[49] = CreateDynamicObject(979, 2057.53, 1453.05, 10.28,   0.00, 0.00, 293.64, -1, -1, -1, 300);
LineObj5[50] = CreateDynamicObject(978, 2079.80, 1433.05, 10.35,   0.00, 0.00, 70.36, -1, -1, -1, 300);
LineObj5[51] = CreateDynamicObject(978, 2079.96, 1372.88, 10.35,   0.00, 0.00, 68.85, -1, -1, -1, 300);
LineObj5[52] = CreateDynamicObject(979, 2057.31, 1373.59, 10.36,   0.00, 0.00, 293.16, -1, -1, -1, 300);
LineObj5[53] = CreateDynamicObject(979, 2057.73, 1273.80, 10.26,   0.00, 0.00, 292.23, -1, -1, -1, 300);
LineObj5[54] = CreateDynamicObject(979, 2057.73, 1193.69, 10.37,   0.00, 0.00, 292.27, -1, -1, -1, 300);
LineObj5[55] = CreateDynamicObject(978, 2080.19, 1193.32, 10.38,   0.00, 0.00, 67.55, -1, -1, -1, 300);
LineObj5[56] = CreateDynamicObject(978, 2079.86, 1033.23, 10.47,   0.00, 0.00, 67.62, -1, -1, -1, 300);
LineObj5[57] = CreateDynamicObject(978, 2079.97, 973.52, 10.47,   0.00, 0.00, 67.62, -1, -1, -1, 300);
LineObj5[58] = CreateDynamicObject(979, 2057.77, 972.90, 10.16,   0.00, 0.00, 293.87, -1, -1, -1, 300);
LineObj5[59] = CreateDynamicObject(979, 2078.56, 844.39, 6.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
LineObj5[60] = CreateDynamicObject(979, 2069.67, 846.35, 6.41,   0.00, 0.00, 335.26, -1, -1, -1, 300);
LineObj5[61] = CreateDynamicObject(979, 2062.03, 851.44, 6.41,   0.00, 0.00, 317.52, -1, -1, -1, 300);
LineObj5[62] = CreateDynamicObject(979, 2058.35, 859.22, 6.41,   0.00, 0.00, 273.92, -1, -1, -1, 300);
LineObj5[63] = CreateDynamicObject(979, 2168.78, 842.90, 6.27,   0.00, 0.00, 24.35, -1, -1, -1, 300);
LineObj5[64] = CreateDynamicObject(978, 2146.52, 861.99, 6.35,   0.00, 0.00, 156.45, -1, -1, -1, 300);
LineObj5[65] = CreateDynamicObject(978, 2163.58, 861.99, 6.35,   0.00, 0.00, 156.45, -1, -1, -1, 300);
LineObj5[66] = CreateDynamicObject(979, 2185.17, 842.96, 6.27,   0.00, 0.00, 24.35, -1, -1, -1, 300);
LineObj5[67] = CreateDynamicObject(978, 2395.40, 862.21, 6.32,   0.00, 0.00, 149.52, -1, -1, -1, 300);
LineObj5[68] = CreateDynamicObject(978, 2417.13, 862.01, 6.32,   0.00, 0.00, 149.52, -1, -1, -1, 300);
LineObj5[69] = CreateDynamicObject(979, 2428.87, 842.76, 6.30,   0.00, 0.00, 25.71, -1, -1, -1, 300);
LineObj5[70] = CreateDynamicObject(979, 2445.13, 842.83, 6.30,   0.00, 0.00, 25.71, -1, -1, -1, 300);
LineObj5[71] = CreateDynamicObject(979, 2641.51, 931.30, 6.29,   0.00, 0.00, 73.03, -1, -1, -1, 300);
LineObj5[72] = CreateDynamicObject(979, 2652.94, 944.03, 6.29,   0.00, 0.00, 73.03, -1, -1, -1, 300);
LineObj5[73] = CreateDynamicObject(979, 2663.31, 957.11, 6.29,   0.00, 0.00, 73.03, -1, -1, -1, 300);
LineObj5[74] = CreateDynamicObject(979, 2718.02, 1234.94, 6.30,   0.00, 0.00, 115.15, -1, -1, -1, 300);
LineObj5[75] = CreateDynamicObject(979, 2718.31, 1335.31, 6.39,   0.00, 0.00, 115.10, -1, -1, -1, 300);
LineObj5[76] = CreateDynamicObject(979, 2718.21, 1351.45, 6.39,   0.00, 0.00, 115.10, -1, -1, -1, 300);
LineObj5[77] = CreateDynamicObject(979, 2717.79, 1250.57, 6.30,   0.00, 0.00, 115.15, -1, -1, -1, 300);
LineObj5[78] = CreateDynamicObject(978, 2698.77, 1330.69, 6.33,   0.00, 0.00, 249.82, -1, -1, -1, 300);
LineObj5[79] = CreateDynamicObject(978, 2698.67, 1351.64, 6.33,   0.00, 0.00, 249.82, -1, -1, -1, 300);
LineObj5[80] = CreateDynamicObject(978, 2699.16, 1580.05, 6.44,   0.00, 0.00, 245.47, -1, -1, -1, 300);
LineObj5[81] = CreateDynamicObject(978, 2699.57, 1603.06, 6.44,   0.00, 0.00, 245.47, -1, -1, -1, 300);
LineObj5[82] = CreateDynamicObject(979, 2717.11, 1613.67, 6.39,   0.00, 0.00, 115.79, -1, -1, -1, 300);
LineObj5[83] = CreateDynamicObject(979, 2717.38, 1630.53, 6.39,   0.00, 0.00, 115.79, -1, -1, -1, 300);
//трасса 5 (конец)

//зимний остров (начало)
ObjGam[14] = CreateObject(4847, -2948.35, 5829.23, 0.81,   0.00, -0.06, 0.00);

CreateDynamicObject(3992, -2768.91, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4158, -2914.94, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4160, -2837.84, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3993, -2804.54, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4207, -2920.65, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4012, -2747.07, 5978.47, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3983, -2801.98, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4027, -2741.40, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3987, -2802.41, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4033, -2802.59, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3984, -2741.40, 6113.40, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3989, -2878.47, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3975, -2946.01, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4029, -2894.91, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4122, -2895.01, 5948.50, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4209, -2954.52, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3997, -3045.04, 5958.50, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4165, -3054.93, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4163, -3055.15, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4150, -2992.42, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4148, -3097.44, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4186, -3044.92, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3985, -3044.89, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4030, -2988.19, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3981, -3064.24, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(967, -2979.80, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8171, -2940.34, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2883.46, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2883.46, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2892.32, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2892.31, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2728.76, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2728.75, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2735.89, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2735.89, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2743.03, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2743.00, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2750.19, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2750.20, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2757.33, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2757.33, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2764.47, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2788.47, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(969, -2825.42, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 300);
CreateDynamicObject(969, -2825.51, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 300);
CreateDynamicObject(969, -2825.53, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 300);
CreateDynamicObject(982, -2805.76, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8059, -2808.06, 6102.30, 13.35,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -2789.75, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2764.47, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2788.46, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2788.48, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2788.49, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, -2788.50, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8069, -2972.37, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8069, -2972.36, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2845.79, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, -2845.79, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, -2845.67, 5982.70, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, -2845.67, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, -3114.07, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
CreateDynamicObject(987, -3115.27, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
//CreateDynamicObject(4847, -2948.35, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2772.51, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2772.34, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2772.22, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2772.03, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, -2771.95, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, -2771.88, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, -2783.82, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2795.71, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2807.64, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2819.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2831.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2843.41, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2855.35, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2867.29, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2849.70, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2839.86, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 300);
CreateDynamicObject(987, -2832.02, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2827.00, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 300);
CreateDynamicObject(987, -2824.96, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 300);
CreateDynamicObject(987, -2824.89, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, -2824.84, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, -2812.96, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 300);
CreateDynamicObject(16192, -2621.64, 5963.40, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -2621.68, 6007.07, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -2621.94, 6050.62, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -2622.39, 6099.31, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -2623.14, 6141.03, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(987, -2801.10, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 300);
CreateDynamicObject(987, -2789.63, 5934.80, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2778.18, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2766.71, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2755.25, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2743.78, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2732.20, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 300);
CreateDynamicObject(987, -2720.25, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, -2708.32, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, -2716.53, 6137.52, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2728.46, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2740.19, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 300);
CreateDynamicObject(987, -2751.81, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2763.28, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2774.76, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2786.22, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2797.73, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2809.51, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2821.37, 6157.70, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2833.05, 6157.90, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2845.02, 6157.90, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2856.96, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -2868.86, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -2911.29, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -2954.52, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3005.05, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3048.50, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3091.84, 6253.39, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(987, -3086.71, 6158.11, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.61, 6158.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.68, 6146.23, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.66, 6134.28, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.65, 6122.33, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.66, 6110.40, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.64, 6098.48, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.63, 6086.54, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.63, 6074.61, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.63, 6062.68, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.61, 6050.73, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.59, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3104.60, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3116.50, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3124.96, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3124.99, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3124.97, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -3214.36, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3214.42, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3215.48, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3214.28, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3216.11, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -3312.75, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -3314.83, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -3312.52, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -3165.25, 6364.00, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -3062.38, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -2974.50, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -2504.12, 6204.87, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -2509.12, 6111.73, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -2502.05, 6026.13, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.46, 5838.30, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.31, 5838.30, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.15, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.56, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.40, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.24, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.06, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.64, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.48, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.31, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.15, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2797.99, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.57, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.41, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.25, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.09, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.50, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.33, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, -2798.16, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -3098.65, 6158.14, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2734.64, 6111.18, 11.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2728.83, 6050.88, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2728.46, 6008.37, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2800.01, 6056.96, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2867.50, 6123.46, 10.50,   0.00, 0.00, 91.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2866.83, 6076.44, 10.50,   0.00, 0.00, 91.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2945.53, 6080.04, 10.50,   0.00, 0.00, 91.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2944.73, 6108.30, 10.50,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2746.36, 5977.95, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2774.73, 5997.62, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2803.61, 5996.00, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2872.36, 5935.82, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2915.66, 5936.17, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2883.69, 5939.30, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2918.46, 5947.73, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2985.04, 5988.53, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3027.56, 5988.70, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3069.77, 5989.10, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3098.22, 5990.27, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3101.19, 5953.82, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3058.30, 5953.95, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3017.27, 5951.81, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -2985.83, 5950.35, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3049.19, 6096.77, 11.04,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(3915, -3052.45, 6071.68, 11.04,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2816.86, 5967.91, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2816.35, 5972.72, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2816.45, 5978.15, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2816.38, 5983.20, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2816.70, 5988.12, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2791.48, 6056.64, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2814.45, 6052.74, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2791.23, 6061.39, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2814.09, 6057.24, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3050.16, 6095.17, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3045.07, 6120.44, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3023.44, 6139.56, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3066.34, 6140.03, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3027.99, 6071.95, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3027.62, 6055.82, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3064.69, 6055.56, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3064.56, 6073.09, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2746.67, 6083.99, 14.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2762.49, 6109.15, 13.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2716.47, 6135.08, 12.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2872.16, 5904.69, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2883.00, 5904.22, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2899.16, 5905.02, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2923.26, 5905.56, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2926.48, 5905.19, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2968.99, 5903.24, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2979.66, 5903.28, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2992.35, 5903.34, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3005.31, 5903.39, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -3017.32, 5903.53, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2948.46, 6059.70, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2941.14, 6091.96, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2945.43, 6092.21, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(818, -2949.87, 6092.12, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -3079.29, 5917.76, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2994.46, 5917.15, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2992.87, 5960.30, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -3079.03, 5965.79, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -3050.51, 6051.04, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -3063.77, 6118.50, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2955.70, 6059.69, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2954.51, 6109.31, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2869.29, 6060.62, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2867.75, 6108.16, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2802.85, 6052.74, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2740.09, 6052.85, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2742.54, 6109.39, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2932.70, 5914.61, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2865.06, 5910.98, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2898.13, 5962.53, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2739.26, 5992.35, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2778.86, 5990.66, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -2813.16, 5994.40, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, -2798.32, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, -2818.32, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, -2838.32, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, -3044.46, 6145.34, 12.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//зимний остров (конец)

//VIP-остров 1, и DM остров (начало)
ObjGam[15] = CreateObject(4847, 9051.65, 5829.23, 0.81,   0.00, -0.06, 0.00);
ObjGam[16] = CreateObject(4847, 51.65, 5829.23, 0.81,   0.00, -0.06, 0.00);
ObjGam[17] = CreateObject(5004, 429.20, 6110.18, 9.73,   0.00, 0.04, 0.00);

CreateDynamicObject(3992, 9231.09, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4158, 9085.06, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4160, 9162.16, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3993, 9195.46, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4207, 9079.35, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4012, 9252.93, 5978.47, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3983, 9198.02, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4027, 9258.60, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3987, 9197.59, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4033, 9197.41, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3984, 9258.60, 6113.40, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3989, 9121.53, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3975, 9053.99, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4029, 9105.09, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4122, 9104.99, 5948.50, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4209, 9045.48, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3997, 8954.88, 5958.47, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4165, 8945.07, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4163, 8944.85, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4150, 9007.58, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4148, 8902.56, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4186, 8955.08, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3985, 8955.11, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4030, 9011.81, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3981, 8935.76, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(967, 9020.20, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 9059.59, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9116.54, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9116.54, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9107.68, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9107.69, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9271.24, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9271.25, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9264.11, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9264.11, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9256.97, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9257.00, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9249.81, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9249.80, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9242.67, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9242.67, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9235.53, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9211.53, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(969, 9174.58, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 300);
CreateDynamicObject(969, 9174.49, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 300);
CreateDynamicObject(969, 9174.47, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 300);
CreateDynamicObject(982, 9194.24, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8059, 9191.94, 6102.30, 13.35,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 9210.25, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9235.53, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9211.54, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9211.52, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9211.51, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 9211.50, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8069, 9027.63, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8069, 9027.64, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9154.21, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 9154.21, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 9154.33, 5982.70, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 9154.33, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 8885.93, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
CreateDynamicObject(987, 8884.73, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
//CreateDynamicObject(4847, 9051.65, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9227.49, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9227.66, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9227.78, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9227.97, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 9228.05, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 9228.12, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 9216.18, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9204.29, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9192.36, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9180.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9168.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9156.59, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9144.65, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9132.71, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9150.30, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9160.14, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 300);
CreateDynamicObject(987, 9167.98, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9173.00, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 300);
CreateDynamicObject(987, 9175.04, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 300);
CreateDynamicObject(987, 9175.11, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, 9175.16, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, 9187.04, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 300);
CreateDynamicObject(16192, 9378.36, 5963.40, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 9378.32, 6007.07, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 9378.06, 6050.62, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 9377.61, 6099.31, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 9376.86, 6141.03, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(987, 9198.90, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 300);
CreateDynamicObject(987, 9210.37, 5934.80, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9221.82, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9233.29, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9244.75, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9256.22, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9267.80, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 300);
CreateDynamicObject(987, 9279.75, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, 9291.68, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, 9283.47, 6137.52, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9271.54, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9259.81, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 300);
CreateDynamicObject(987, 9248.19, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9236.72, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9225.24, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9213.78, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9202.27, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9190.49, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9178.63, 6157.70, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9166.95, 6157.90, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9154.98, 6157.90, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9143.04, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 9131.14, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 9088.71, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 9045.48, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8994.95, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8951.50, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8908.14, 6253.40, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(987, 8882.16, 6165.24, 9.95,   0.00, 0.00, -40.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8903.23, 6157.57, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8915.12, 6157.53, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8859.68, 6057.73, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8871.59, 6057.72, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8883.54, 6057.74, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8895.48, 6057.73, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8895.41, 6045.81, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8895.41, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8895.40, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8883.50, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8875.04, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8875.01, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8875.03, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8785.64, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8785.58, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8784.52, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8785.72, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8783.89, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8687.25, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8685.17, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8687.48, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8834.75, 6364.00, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8937.62, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 9025.50, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 9495.88, 6204.87, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 9490.88, 6111.73, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 9497.95, 6026.13, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.54, 5838.30, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.69, 5838.30, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.85, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.44, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.60, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.76, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.94, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.36, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.52, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.69, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.85, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9202.01, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.43, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.59, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.75, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.91, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.50, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.67, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 9201.84, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 9201.68, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 9181.68, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 9161.68, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18450, 8615.86, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 8457.70, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 8255.87, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 8095.88, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 7897.72, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 7695.90, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 7535.90, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 7337.73, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 7135.91, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 6975.91, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 6777.75, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 6575.93, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 6415.93, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 6217.76, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 6015.94, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 5855.95, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 5657.78, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 5455.96, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 5295.96, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 5097.80, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 4895.97, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 4735.98, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 4537.81, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 4335.99, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 4175.99, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 3977.83, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 3776.01, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 3616.01, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 3417.84, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 3216.02, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 3056.02, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 2857.86, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 2656.04, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 2496.04, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 2297.88, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 2096.06, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 1936.06, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 1737.90, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 1536.08, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 1376.08, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 1177.92, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16430, 976.10, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16357, 816.10, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16358, 617.94, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3992, 231.09, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4158, 85.06, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4160, 162.16, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3993, 195.46, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4207, 79.35, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4012, 252.93, 5978.47, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3983, 198.02, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4027, 258.60, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3987, 197.59, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4033, 197.41, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3984, 258.60, 6113.40, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3989, 121.53, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3975, 53.99, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4029, 105.09, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4122, 104.99, 5948.50, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4209, 45.48, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3997, -45.04, 5958.50, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4165, -54.93, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4163, -55.15, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4150, 7.58, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4148, -97.44, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4186, -44.92, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3985, -44.89, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4030, 11.81, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3981, -64.24, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(967, 20.20, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 59.66, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 116.54, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 116.54, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 107.68, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 107.69, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 271.24, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 271.25, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 264.11, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 264.11, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 256.97, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 257.00, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 249.81, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 249.80, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 242.67, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 242.67, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 235.53, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 211.53, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(969, 174.58, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 300);
CreateDynamicObject(969, 174.49, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 300);
CreateDynamicObject(969, 174.47, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 300);
CreateDynamicObject(982, 194.24, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8059, 191.94, 6102.30, 13.35,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 210.25, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 235.53, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 211.54, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 211.52, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 211.51, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 211.50, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8069, 27.63, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8069, 27.64, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 154.21, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 154.21, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 154.33, 5982.70, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 154.33, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, -114.07, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
CreateDynamicObject(987, -115.27, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
//CreateDynamicObject(4847, 51.65, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 227.49, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 227.66, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 227.78, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 227.97, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 228.05, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 228.12, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 216.18, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 204.29, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 192.36, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 180.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 168.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 156.59, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 144.65, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 132.71, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 150.30, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 300);
CreateDynamicObject(987, 160.14, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 300);
CreateDynamicObject(987, 167.98, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 300);
CreateDynamicObject(987, 173.00, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 300);
CreateDynamicObject(987, 175.04, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 300);
CreateDynamicObject(987, 175.11, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, 175.16, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, 187.04, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 300);
CreateDynamicObject(987, 198.90, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 300);
CreateDynamicObject(987, 210.37, 5934.80, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 221.82, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 233.29, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 244.75, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 256.22, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 267.80, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 300);
CreateDynamicObject(987, 279.75, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, 291.68, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, 274.71, 6137.86, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 271.54, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 259.81, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 300);
CreateDynamicObject(987, 248.19, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 300);
CreateDynamicObject(987, 236.72, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 300);
CreateDynamicObject(987, 225.24, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 213.78, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 202.27, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 190.49, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 300);
CreateDynamicObject(987, 178.63, 6157.70, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 300);
CreateDynamicObject(987, 166.95, 6157.90, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 300);
CreateDynamicObject(987, 154.98, 6157.90, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 143.04, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 131.14, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 88.71, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 45.48, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -5.05, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -48.50, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -91.84, 6253.39, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(987, -92.69, 6158.13, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.61, 6158.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.68, 6146.23, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.66, 6134.28, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.65, 6122.33, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.66, 6110.40, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.64, 6098.48, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.63, 6086.54, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.63, 6074.61, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.63, 6062.68, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.61, 6050.73, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.59, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -104.60, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -116.50, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -124.96, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -124.99, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -124.97, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -214.36, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -214.42, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -215.48, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -214.28, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -216.11, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, -312.75, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -314.83, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -312.52, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -165.25, 6364.00, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, -62.38, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 25.50, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
//CreateDynamicObject(5004, 429.20, 6110.18, 9.73,   0.00, 0.04, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 374.73, 5949.74, 20.68,   0.00, 0.00, -18.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 325.23, 5830.75, 20.68,   0.00, 0.00, 156.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 529.25, 6248.16, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 495.99, 6253.09, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 458.51, 6256.55, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 414.82, 6255.29, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 369.68, 6254.49, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 302.65, 6362.57, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 408.36, 6364.24, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 468.70, 6355.94, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(987, 283.59, 6038.43, 9.95,   0.00, 0.00, -76.00, -1, -1, -1, 300);
CreateDynamicObject(987, 298.82, 6052.81, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 310.75, 6052.82, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 322.68, 6052.83, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 396.77, 6052.69, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 408.71, 6052.70, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 420.65, 6052.71, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 432.60, 6052.71, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 444.54, 6052.73, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 456.46, 6052.76, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 468.24, 6052.82, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 480.04, 6050.95, 9.95,   0.00, 0.00, 171.00, -1, -1, -1, 300);
CreateDynamicObject(987, 491.99, 6050.96, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, 503.92, 6051.37, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 515.85, 6051.78, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 527.78, 6052.19, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 539.71, 6052.57, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 547.68, 6052.84, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 547.67, 6064.87, 9.95,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(987, 548.30, 6076.79, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 300);
CreateDynamicObject(987, 548.91, 6088.72, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 300);
CreateDynamicObject(987, 549.52, 6100.63, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 300);
CreateDynamicObject(987, 549.71, 6104.30, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 300);
CreateDynamicObject(987, 558.94, 6131.22, 9.95,   0.00, 0.00, 251.00, -1, -1, -1, 300);
CreateDynamicObject(987, 563.79, 6142.13, 9.95,   0.00, 0.00, 246.00, -1, -1, -1, 300);
CreateDynamicObject(987, 568.65, 6153.01, 9.95,   0.00, 0.00, 246.00, -1, -1, -1, 300);
CreateDynamicObject(987, 571.09, 6158.44, 9.95,   0.00, 0.00, 246.00, -1, -1, -1, 300);
CreateDynamicObject(987, 286.65, 6137.38, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 286.62, 6149.31, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 286.62, 6153.15, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 286.63, 6165.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 298.58, 6165.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 310.51, 6165.14, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 322.45, 6165.13, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 334.38, 6165.12, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 346.31, 6165.11, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 358.26, 6165.12, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 370.21, 6165.11, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.54, 5838.30, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.69, 5838.30, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.85, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.44, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.60, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.76, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.94, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.36, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.52, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.69, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.85, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 202.01, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.43, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.59, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.75, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.91, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.50, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.67, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 201.84, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(5004, 8752.08, 6112.13, 9.68,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8876.82, 6251.93, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8838.89, 6259.65, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8798.12, 6259.23, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8758.45, 6259.93, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 8753.29, 6363.30, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 8701.97, 6366.68, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8891.29, 6157.57, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8635.61, 6053.20, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8623.64, 6052.79, 9.95,   0.00, 0.00, 140.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8647.54, 6053.62, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8659.48, 6054.03, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8671.41, 6054.22, 9.95,   0.00, 0.00, 181.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8683.35, 6054.41, 9.95,   0.00, 0.00, 181.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8695.27, 6054.82, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8707.18, 6055.22, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8719.10, 6055.65, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8731.01, 6056.03, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8618.71, 6056.91, 9.95,   0.00, 0.00, 140.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8609.52, 6064.64, 9.95,   0.00, 0.00, 64.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8614.72, 6075.36, 9.95,   0.00, 0.00, 66.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8617.70, 6082.06, 9.95,   0.00, 0.00, 66.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8622.55, 6092.95, 9.95,   0.00, 0.00, 75.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8630.35, 6119.98, 9.95,   0.00, 0.00, 85.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8631.38, 6131.86, 9.95,   0.00, 0.00, 85.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8632.41, 6143.74, 9.95,   0.00, 0.00, 87.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8633.02, 6155.65, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8633.01, 6157.12, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8633.04, 6169.15, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8644.98, 6169.58, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8656.88, 6170.02, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8668.81, 6170.44, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8680.72, 6170.87, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8692.65, 6171.30, 9.95,   0.00, 0.00, -4.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8704.55, 6170.48, 9.95,   0.00, 0.00, -8.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8716.35, 6168.82, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8728.29, 6168.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8740.21, 6168.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8752.14, 6168.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 8764.06, 6168.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(5767, -245.69, 5937.75, 109.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(5767, -248.54, 5856.42, 109.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(5767, -250.36, 5775.47, 109.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8392, -153.33, 5971.25, 43.66,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8392, -151.40, 5848.80, 38.37,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8391, -18.37, 5966.36, 30.54,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8391, -67.68, 5965.53, 30.54,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(5767, -43.34, 6084.49, 57.64,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8421, 93.66, 5923.03, 35.01,   0.00, 0.00, 25.00, -1, -1, -1, 300);
CreateDynamicObject(5767, 220.63, 5990.25, 57.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8392, 57.88, 6098.65, 37.91,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8392, 131.81, 6099.39, 37.91,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(7584, 10.65, 6272.91, 110.85,   0.00, 0.00, 25.00, -1, -1, -1, 300);
CreateDynamicObject(7584, -83.37, 6295.74, 110.85,   0.00, 0.00, 84.00, -1, -1, -1, 300);
CreateDynamicObject(8390, 363.73, 6108.50, 29.32,   0.04, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8397, 192.90, 6101.55, 26.66,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 219.51, 6038.96, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 159.71, 6039.26, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 171.02, 6017.25, 13.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 50.38, 6019.70, 13.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 78.64, 6039.37, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(3516, -0.30, 6040.71, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 39.64, 5902.40, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 166.99, 5936.16, 13.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3516, 159.60, 5963.96, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 270.14, 6130.76, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 252.54, 6135.91, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 235.77, 6140.04, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 278.63, 6081.86, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 263.08, 6081.87, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 244.42, 6082.21, 13.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 208.08, 6059.63, 13.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 186.20, 6056.54, 13.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 267.65, 6018.12, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 237.57, 6038.94, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 201.46, 6018.25, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 137.27, 6038.73, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 104.13, 6017.96, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 56.12, 6038.66, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 13.27, 6018.27, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -33.04, 6039.47, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -81.69, 6022.92, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3516, -100.36, 6037.26, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 142.62, 5900.41, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 106.32, 5878.87, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 56.98, 5899.05, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 19.53, 5878.89, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -30.41, 5898.62, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, -82.78, 5878.74, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 244.29, 6062.54, 12.66,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 259.60, 6062.78, 12.66,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 275.98, 6062.79, 12.66,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 457.50, 6060.05, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 476.42, 6059.95, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 497.48, 6059.44, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 520.31, 6059.71, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 541.13, 6060.55, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 457.87, 6159.07, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 478.38, 6158.05, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 503.82, 6155.40, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 528.90, 6152.21, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1231, 558.10, 6149.59, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 439.58, 6095.78, 15.34,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 438.87, 6123.30, 15.34,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 552.35, 6112.14, 10.52,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 551.43, 6112.27, 18.00,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 551.41, 6109.29, 18.00,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 551.39, 6115.27, 18.00,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 8916.37, 5968.67, 18.01,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(3866, 9001.87, 5975.59, 17.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 8958.63, 5977.18, 18.01,   0.00, 0.00, -4.00, -1, -1, -1, 300);
CreateDynamicObject(3866, 9017.15, 5953.28, 17.33,   0.00, 0.00, -47.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 8983.54, 5953.74, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 8988.72, 5947.93, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 8995.52, 5947.65, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 9002.94, 5947.18, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 8999.68, 5940.49, 9.98,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 8992.63, 5940.48, 9.98,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(11447, 8974.47, 5945.66, 9.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11440, 8977.36, 5983.60, 9.42,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11445, 8977.90, 5970.59, 10.19,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11445, 8971.43, 5957.79, 10.19,   0.00, 0.00, 142.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 8994.67, 5957.22, 10.06,   0.00, 0.00, 91.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9026.99, 5980.87, 10.06,   0.00, 0.00, 91.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9000.15, 5996.64, 10.06,   0.00, 0.00, 18.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9016.43, 5994.72, 10.06,   0.00, 0.00, 18.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 8954.58, 6050.85, 10.08,   0.00, 0.00, 18.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 8955.64, 6069.64, 10.08,   0.00, 0.00, 18.00, -1, -1, -1, 300);
CreateDynamicObject(11443, 8935.79, 6087.48, 10.31,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11443, 8937.61, 6109.86, 10.31,   0.00, 0.00, -33.00, -1, -1, -1, 300);
CreateDynamicObject(11459, 8979.27, 6120.80, 10.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11459, 8974.06, 6114.04, 10.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11459, 8967.62, 6106.04, 10.09,   0.00, 0.00, -84.00, -1, -1, -1, 300);
CreateDynamicObject(3866, 9033.28, 6058.26, 17.33,   0.00, 0.00, -47.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9058.01, 6088.37, 18.01,   0.00, 0.00, -4.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9069.14, 6099.99, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9073.26, 6085.56, 9.95,   0.00, 0.00, 76.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9073.80, 6067.75, 9.95,   0.00, 0.00, 76.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9129.93, 6130.91, 18.02,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9129.15, 6109.42, 18.02,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9130.44, 6083.47, 18.02,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9128.88, 6065.44, 18.02,   0.00, 0.00, 105.00, -1, -1, -1, 300);
CreateDynamicObject(11457, 8898.37, 5959.80, 9.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11458, 8906.63, 5943.96, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9078.37, 5955.12, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11441, 9097.63, 5946.93, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11440, 9110.10, 5951.43, 9.30,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11447, 9129.00, 5949.92, 9.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9080.70, 5937.37, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9103.19, 5926.31, 9.93,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11443, 9118.03, 5933.35, 9.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11459, 9130.68, 5931.47, 9.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11458, 9084.83, 5920.94, 9.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11457, 9118.68, 5913.27, 9.34,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9267.18, 5990.23, 17.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3866, 9203.29, 6002.68, 17.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3866, 9221.96, 5986.51, 17.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3866, 9237.50, 5966.17, 17.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11440, 9234.18, 6006.80, 10.05,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9245.01, 6108.50, 18.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3887, 9263.69, 6097.18, 18.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11442, 9190.06, 6114.13, 16.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9199.19, 6104.82, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9194.74, 6102.79, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9199.53, 6096.83, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9195.56, 6094.74, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9199.91, 6088.63, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(11446, 9183.25, 6097.00, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9075.19, 5951.47, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9141.05, 5950.46, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9106.54, 5907.88, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9028.84, 5967.09, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 8959.02, 5945.91, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9188.55, 5970.32, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9197.40, 6054.48, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 8906.20, 6000.81, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9251.10, 5951.45, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1290, 9245.20, 6009.75, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 201.68, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 181.68, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 161.68, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//VIP-остров 1, и DM остров (конец)

//VIP-остров 2 (начало)
ObjGam[18] = CreateObject(4847, 12051.65, 5829.23, 0.81,   0.00, -0.06, 0.00);

CreateDynamicObject(3992, 12231.09, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4158, 12085.06, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4160, 12162.16, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3993, 12195.46, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4207, 12079.35, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4012, 12252.71, 5978.48, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3983, 12198.02, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4027, 12258.6, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3987, 12197.59, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4033, 12197.41, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3984, 12258.59, 6113.41, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3989, 12121.53, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3975, 12053.99, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4029, 12105.09, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4122, 12104.99, 5948.5, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4209, 12045.48, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3997, 11954.89, 5958.48, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4165, 11945.07, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4163, 11944.85, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4150, 12007.58, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4148, 11902.56, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4186, 11955.08, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3985, 11955.11, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4030, 12011.81, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3981, 11935.76, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(967, 12020.2, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 12059.66, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12116.54, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12116.54, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12107.68, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12107.69, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12271.24, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12271.25, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12264.11, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12264.11, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12256.97, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12257, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12249.81, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12249.8, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12242.67, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12242.67, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12235.53, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12211.53, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(969, 12174.58, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 300);
CreateDynamicObject(969, 12174.49, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 300);
CreateDynamicObject(969, 12174.47, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 300);
CreateDynamicObject(982, 12194.24, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8059, 12191.95, 6102.38, 13.36,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 12210.25, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12235.53, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12211.54, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12211.52, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12211.51, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(971, 12211.5, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8069, 12027.63, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8069, 12027.64, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12154.21, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 12154.21, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 12154.33, 5982.7, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 12154.33, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 300);
CreateDynamicObject(987, 11885.93, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
CreateDynamicObject(987, 11884.73, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 300);
//CreateDynamicObject(4847, 12051.65, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12227.49, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12227.66, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12227.78, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12227.97, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 12228.05, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 12228.12, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 300);
CreateDynamicObject(987, 12216.18, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12204.29, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12192.36, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12180.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12168.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12156.59, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12144.65, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12132.71, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12150.3, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12160.14, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 300);
CreateDynamicObject(987, 12167.98, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12173, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 300);
CreateDynamicObject(987, 12175.04, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 300);
CreateDynamicObject(987, 12175.11, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, 12175.16, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 300);
CreateDynamicObject(987, 12187.04, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 300);
CreateDynamicObject(16192, 12378.36, 5963.4, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 12378.32, 6007.07, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 12378.06, 6050.62, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 12377.61, 6099.31, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 12376.86, 6141.03, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 300);
CreateDynamicObject(987, 12198.9, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 300);
CreateDynamicObject(987, 12210.37, 5934.8, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12221.82, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12233.29, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12244.75, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12256.22, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12267.8, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 300);
CreateDynamicObject(987, 12279.75, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, 12291.68, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 300);
CreateDynamicObject(987, 12283.47, 6137.52, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12271.54, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12259.81, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 300);
CreateDynamicObject(987, 12248.19, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12236.72, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12225.24, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12213.78, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12202.27, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12190.49, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12178.63, 6157.7, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12166.95, 6157.9, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12154.98, 6157.9, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12143.04, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 12131.14, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 12088.71, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 12045.48, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11994.95, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11951.5, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11908.16, 6253.39, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 300);
CreateDynamicObject(987, 11913.29, 6158.11, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.39, 6158.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.32, 6146.23, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.34, 6134.28, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.35, 6122.33, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.34, 6110.4, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.36, 6098.48, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.37, 6086.54, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.37, 6074.61, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.37, 6062.68, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.39, 6050.73, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.41, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11895.4, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11883.5, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11875.04, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11875.01, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11875.03, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 11785.64, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11785.58, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11784.52, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11785.72, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11783.89, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 300);
CreateDynamicObject(16192, 11687.25, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 11685.17, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 11687.48, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 11834.75, 6364, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 11937.62, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 12025.5, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 12495.88, 6204.87, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 12490.88, 6111.73, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(16192, 12497.95, 6026.13, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.54, 5838.3, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.69, 5838.3, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.85, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.44, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.6, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.76, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.94, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.36, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.52, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.69, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.85, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12202.01, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.43, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.59, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.75, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.91, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.5, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.67, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3461, 12201.84, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, 11901.35, 6158.14, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(703, 12025.13, 6152.4, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(703, 12038.44, 6150.19, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(703, 12053.75, 6147.84, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(703, 12072.64, 6147.96, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12110.89, 6144.45, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12143.09, 6146.13, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12144.95, 6118.43, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12116.22, 6116.15, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12131.46, 6090.13, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12131.88, 6058.69, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12059.03, 6107.35, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12059.47, 6081.5, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, 12059.35, 6056.35, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 11936.41, 6061.59, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 11933.31, 6139.78, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 11977.74, 6140.69, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 11955.74, 6095.57, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 11973.36, 6063.77, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 12030.15, 6065.58, 9.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 12031.78, 6112.71, 9.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 12187.28, 6055.53, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 12209.71, 6060.23, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 12187.82, 6131, 16.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(706, 12208.41, 6131.12, 16.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12250.5, 6124.25, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12274.78, 6092.07, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12250.78, 6064.52, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12281.65, 6064.12, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12270.3, 6000.62, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12269.45, 5960.08, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12237.15, 5999.12, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12237.65, 5964.11, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12200.55, 6001.55, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(707, 12199.34, 5970, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(709, 12135.27, 5952.64, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(709, 12080.29, 5961.63, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(709, 12132.93, 5916.36, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(709, 12081.93, 5918.06, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 12029.98, 6001.59, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11995.25, 6014.15, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11920.16, 6013.88, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11880.64, 6001.56, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11881.71, 5945.24, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11894.25, 5929.61, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11931.26, 5929.25, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 11978.87, 5929.68, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 12020.11, 5929.16, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 12029.53, 5944.62, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 12012.35, 5943.98, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11989.28, 5944.51, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11965.95, 5944.71, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11944.78, 5944.85, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11919.37, 5944.2, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11894.31, 5943.07, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 12014.32, 5998.32, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11988.25, 5997.77, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11924.61, 5997.08, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11893.05, 5997.61, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11884.43, 5877.35, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11923.63, 5876.62, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11960.42, 5876.3, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 11996.99, 5876.48, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 12028.68, 5876.17, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 12063.91, 5876.22, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 12105.52, 5877.11, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(621, 12146.61, 5876.33, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(619, 11885.24, 5866.35, 9.23,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 11885.33, 5850.32, 6.32,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 11881.57, 5834.21, 1.94,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 11894.6, 5859.06, 8.71,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 11891.22, 5843.83, 3.65,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 11888.68, 5827.69, 0.71,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 12217.25, 5864.45, 8.95,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 12219.31, 5846.12, 5.18,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(619, 12218.18, 5829.12, 1.61,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12172.89, 6116.28, 11.19,   0.00, 0.00, -91.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12174.7, 6110.66, 11.19,   0.00, 0.00, -91.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12218.63, 6098.76, 11.33,   0.00, 0.00, 84.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12121.88, 5999.81, 3.19,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12056.86, 6011.86, 2.50,   0.00, 0.00, -11.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12137.31, 5979.23, 3.27,   0.00, 0.00, 164.00, -1, -1, -1, 300);
CreateDynamicObject(7916, 12091.58, 5990.37, 3.27,   0.00, 0.00, 156.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12258.14, 6105.03, 12.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12260.52, 6065.8, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12250.93, 5982.11, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12214.9, 5984.72, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12197.39, 6056.41, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12132.64, 6073.65, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12130.18, 6131.08, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12103.57, 5935.94, 12.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12028.89, 5988.71, 12.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(9833, 12028.93, 5952.11, 12.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12237.36, 6109.15, 11.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12268.34, 6119.75, 11.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12253.18, 6084.4, 11.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12282.95, 6135.09, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12268.77, 6047.59, 10.01,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12256.51, 6047.79, 10.01,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12242.81, 6047.82, 10.01,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12191.44, 6102.19, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12181.16, 6102.24, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12181.04, 6090.59, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12191.38, 6090.35, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12202.25, 6090.15, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12202.25, 6102.08, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12196.55, 6114.82, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12184.92, 6114.34, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12194.94, 5988.49, 10.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12216.75, 5966.57, 10.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12216.55, 5999.75, 10.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12135.62, 5934.37, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12108.97, 5917.27, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12079.76, 5938.9, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12110.03, 5957.04, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12142.29, 6101.74, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12131.24, 6101.96, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12121.09, 6102.03, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12059.69, 6069.42, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12059.54, 6095.36, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12063.89, 6136.81, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12053.19, 6136.8, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12075.35, 6136.62, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12021.62, 6103.05, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12030.03, 6133.12, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11951.35, 6126.88, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11962.19, 6120.84, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11951.23, 6115.28, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11954.39, 6047.42, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11954.57, 6062.5, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11954.62, 6079.05, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11900.15, 5960.11, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11900.45, 5981.25, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11916.7, 5970.84, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11928.31, 5960.62, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11929.74, 5981.9, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11942.77, 5971.6, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11955.28, 5981.92, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11955.27, 5961.21, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11967.71, 5971.8, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11978.3, 5961.15, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11978.81, 5982.01, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 11991.07, 5972.03, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12002.58, 5960.99, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12002.86, 5982.2, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3515, 12014.06, 5972.05, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12258.5, 6105.08, 11.31,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12260.91, 6065.79, 10.31,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12251.51, 5981.98, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12215.31, 5984.8, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12197.79, 6056.39, 10.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12130.7, 6131.01, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12029.27, 5988.78, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12029.47, 5952.05, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12104.04, 5935.98, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19124, 12133.17, 6073.63, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12278.71, 6038.55, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12278.4, 6018.31, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12264.88, 6038.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12265.46, 6018.32, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12250.52, 6038.55, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12251.02, 6018.34, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12236.19, 6018.23, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12219.25, 6018.37, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12235.37, 6038.77, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12198.22, 6018.26, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12175.29, 6018.19, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12215.76, 6038.92, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12198.26, 6038.64, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12175.42, 6038.62, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12154.89, 6038.65, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12139.85, 6038.62, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12123.87, 6038.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12101.19, 6038.52, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12078.1, 6038.57, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12061.13, 6038.74, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12040.84, 6038.66, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12015.48, 6038.65, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11993.8, 6039.6, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11975.96, 6039.68, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11962.93, 6039.64, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11947.5, 6039.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11934.15, 6039.59, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11916.37, 6039.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11895.2, 6037.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11875.59, 6037.15, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12154.9, 6018.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12136.41, 6018.31, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12119.83, 6018.3, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12104.03, 6018.31, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12085.7, 6015.32, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12054.83, 6019.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12034.9, 6018.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12018.32, 6018.33, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12003.11, 6018.28, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11986.42, 6018.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11970.5, 6018.3, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11951.23, 6018.25, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11926.52, 6018.27, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11904.52, 6018.28, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11876.32, 6018.3, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12130.64, 5898.65, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12108.24, 5898.74, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12129.21, 5878.73, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12104.43, 5878.64, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12079.87, 5878.66, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12083.04, 5898.71, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12055.41, 5898.69, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12051.16, 5878.19, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12015.3, 5878.12, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12034.91, 5898.66, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 12012.43, 5898.7, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11989.31, 5878.17, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11982.56, 5898.74, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11963.9, 5878.23, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11951.36, 5898.59, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11930.28, 5878.21, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11919.66, 5898.75, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11891.2, 5878.22, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19122, 11877.53, 5898.69, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12230.52, 6141.92, 11.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12219.54, 6116.33, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12230.31, 6100.74, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12219.7, 6080.28, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12230.53, 6073.14, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12230.4, 6052.73, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12219.76, 6044.15, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.39, 6155.51, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12159.72, 6131.74, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.46, 6118.68, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12159.72, 6100.71, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.37, 6084.48, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12159.68, 6073.03, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.51, 6052.38, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12159.69, 6040.71, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.48, 6015.86, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12159.72, 5995.97, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.49, 5975.79, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12159.73, 5961.37, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12170.43, 5936.9, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12158.96, 5914.96, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12175.17, 5939.59, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12175.23, 5958.1, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12190.99, 5939.29, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12193.19, 5958.1, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12211.75, 5953.53, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12208.31, 5935.93, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12224.49, 5931.31, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12229.13, 5948.99, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12246.76, 5944.33, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12244.11, 5925.66, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12262.14, 5920.81, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12266.26, 5939.05, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12286.19, 5938.13, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19126, 12286.31, 5919.38, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12099.44, 6155.9, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12088.26, 6131.46, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12099.66, 6114.26, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12079.41, 6098.18, 10.34,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12079.44, 6072.15, 10.34,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12108.38, 6086.47, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12108.72, 6063.95, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12079.41, 6047.71, 10.34,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12050.57, 6015.25, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12039.68, 5990.52, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12050.56, 5973.26, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12039.65, 5954.33, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12050.54, 5939.38, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12039.72, 5917, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12050.45, 5900.26, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11910.3, 6156.57, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11899.5, 6132.78, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11910.21, 6118.39, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11899.52, 6096.5, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11910.2, 6083.09, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11899.51, 6064.47, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11910.14, 6052.56, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12010.51, 6156.4, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11999.83, 6137.31, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12010.45, 6121.9, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11999.77, 6107.04, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12013.19, 6097.07, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11999.8, 6081.58, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12010.45, 6067.58, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11999.86, 6054.69, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12010.47, 6038.79, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 11899.47, 6038.44, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12146.17, 5978.24, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12128.24, 5982.54, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12130.72, 5996.16, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12148.73, 5991.88, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12099.51, 5989.27, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12114.11, 6001.51, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12081.99, 5993.66, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12059.63, 5999.68, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19125, 12092.46, 6005.05, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 12074.8, 6009.29, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12262.24, 6047.7, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12249.34, 6047.81, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12206.44, 5994.26, 10.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12205.09, 5978.1, 10.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12002.22, 5971.92, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11978.45, 5971.77, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11990.19, 5960.59, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11990.35, 5982, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11966.98, 5981.6, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11966.66, 5960.84, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11954.3, 5971.51, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11942.31, 5981.61, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11941.91, 5960.85, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11928.54, 5971.15, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11916.26, 5981.49, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11915.3, 5960.23, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11900.03, 5971.09, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11954.49, 6054.94, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11954.91, 6070.8, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11959.38, 6114.71, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11946.85, 6121.29, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11959.52, 6128.54, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 11955.44, 6121.61, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12028.4, 6096.13, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12028.71, 6109.92, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12025.08, 6133.02, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12058.38, 6136.77, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12069.74, 6136.71, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12059.66, 6062.83, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12059.63, 6075.18, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12059.66, 6089.06, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12059.47, 6101.55, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12125.98, 6101.99, 10.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12137.05, 6101.82, 10.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12186.09, 6096.49, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12197.55, 6096.37, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19123, 12191.32, 6110.28, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12135.94, 5938.1, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12135.3, 5930.72, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12114.04, 5956.42, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12106, 5957.71, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12079.78, 5943.12, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12080, 5935.11, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12105.28, 5917.45, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12112.79, 5917.08, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12240.38, 6107.57, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12234.23, 6107.16, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12237.35, 6112.56, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12253.26, 6090.38, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12248.29, 6081.26, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12258.54, 6081.61, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12268.26, 6116.29, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12271.18, 6121.49, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12265.29, 6121.51, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3525, 12279.82, 6133.07, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 12201.68, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 12181.68, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(14537, 12161.68, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//VIP-остров 2 (конец)

//дрифт островок (начало)
ObjGam[19] = CreateObject(8343, 6264.50977, -3313.54004, 10.63000,   0.00000, 0.00000, -133.21001);

CreateDynamicObject(8171, 6025.79004, -3725.76001, 10.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 6049.97998, -3620.54004, 10.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 6126.75000, -3583.53003, 10.64400,   0.00000, 0.00000, 163.28999, -1, -1, -1, 300);
CreateDynamicObject(8343, 6162.93018, -3593.77002, 10.63000,   0.00000, 0.00000, 163.28999, -1, -1, -1, 300);
CreateDynamicObject(8171, 6172.16992, -3520.12988, 10.68000,   0.00000, 0.00000, -18.91000, -1, -1, -1, 300);
CreateDynamicObject(8171, 6214.08984, -3516.34009, 10.64000,   0.00000, 0.00000, -18.91000, -1, -1, -1, 300);
CreateDynamicObject(8171, 6214.47998, -3396.88989, 10.67400,   0.00000, 0.00000, -18.91000, -1, -1, -1, 300);
CreateDynamicObject(8171, 6250.56982, -3409.61011, 10.63500,   0.00000, 0.00000, -18.91000, -1, -1, -1, 300);
//CreateDynamicObject(8343, 6264.50977, -3313.54004, 10.63000,   0.00000, 0.00000, -133.21001, -1, -1, -1, 300);
CreateDynamicObject(8343, 6240.49023, -3337.51001, 10.62800,   0.00000, 0.00000, -137.50999, -1, -1, -1, 300);
CreateDynamicObject(8343, 6227.29980, -3347.10010, 10.62200,   0.00000, 0.00000, -137.50999, -1, -1, -1, 300);
CreateDynamicObject(8343, 6188.49023, -3300.86011, 10.62800,   0.00000, 0.00000, -429.72000, -1, -1, -1, 300);
CreateDynamicObject(8343, 6220.72021, -3278.52002, 10.60400,   0.00000, 0.00000, -425.42001, -1, -1, -1, 300);
CreateDynamicObject(8343, 6218.14014, -3266.27002, 10.58000,   0.00000, 0.00000, -425.42001, -1, -1, -1, 300);
CreateDynamicObject(8343, 6192.77002, -3274.03003, 10.61000,   0.00000, 0.00000, -408.23001, -1, -1, -1, 300);
CreateDynamicObject(8343, 6114.91016, -3282.85010, 10.68000,   0.00000, 0.00000, -945.38000, -1, -1, -1, 300);
CreateDynamicObject(8343, 6040.39990, -3273.68994, 10.71000,   0.00000, 0.00000, -777.78998, -1, -1, -1, 300);
CreateDynamicObject(8343, 6002.62012, -3292.81006, 10.49000,   0.00000, 0.00000, -763.17999, -1, -1, -1, 300);
CreateDynamicObject(8171, 5948.37988, -3316.33008, 10.71000,   0.00000, 0.00000, -36.96000, -1, -1, -1, 300);
CreateDynamicObject(8343, 5921.60986, -3383.20996, 10.71400,   0.00000, 0.00000, -700.44000, -1, -1, -1, 300);
CreateDynamicObject(8343, 5896.52002, -3455.13989, 10.72000,   0.00000, 0.00000, -880.91998, -1, -1, -1, 300);
CreateDynamicObject(8343, 5842.72998, -3520.36011, 10.71400,   0.00000, 0.00000, -713.33002, -1, -1, -1, 300);
CreateDynamicObject(8171, 5823.08984, -3628.92993, 10.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 5841.72998, -3700.50000, 10.75000,   0.00000, 0.00000, -670.35999, -1, -1, -1, 300);
CreateDynamicObject(8171, 5906.10986, -3790.68994, 10.75000,   0.00000, 0.00000, 47.27000, -1, -1, -1, 300);
CreateDynamicObject(8343, 5959.06982, -3817.51001, 10.62000,   0.00000, 0.00000, -632.53998, -1, -1, -1, 300);
CreateDynamicObject(8343, 6002.29980, -3818.30005, 10.63000,   0.00000, 0.00000, -538.87000, -1, -1, -1, 300);
CreateDynamicObject(5004, 5952.66016, -3783.12988, 10.07000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 5952.66992, -3670.72998, 9.97000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 5952.74023, -3558.53003, 10.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 5952.95020, -3446.67993, 10.08000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 5953.04980, -3338.53003, 10.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 5953.75000, -3226.61011, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 6100.68018, -3344.53003, 10.02000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 6112.97021, -3452.96997, 9.98000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 6116.95020, -3542.33008, 9.96000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 6111.56982, -3658.67993, 9.87000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 6096.56006, -3741.80005, 9.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5004, 6104.49023, -3783.62988, 10.01000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(978, 6027.47998, -3588.86011, 11.49000,   0.00000, 0.00000, 223.45000, -1, -1, -1, 300);
CreateDynamicObject(978, 6034.47998, -3583.37988, 11.45000,   0.00000, 0.00000, 213.14000, -1, -1, -1, 300);
CreateDynamicObject(978, 6040.85986, -3579.18994, 11.47000,   0.00000, 0.00000, 213.14000, -1, -1, -1, 300);
CreateDynamicObject(978, 6046.06006, -3577.05005, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 6054.70996, -3574.39990, 11.45000,   0.00000, 0.00000, 194.23000, -1, -1, -1, 300);
CreateDynamicObject(978, 6063.04004, -3572.98999, 11.47000,   0.00000, 0.00000, 185.64000, -1, -1, -1, 300);
CreateDynamicObject(978, 6071.16992, -3572.66992, 11.49000,   0.00000, 0.00000, 178.75999, -1, -1, -1, 300);
CreateDynamicObject(978, 6080.02979, -3573.52002, 11.49000,   0.00000, 0.00000, 171.03000, -1, -1, -1, 300);
CreateDynamicObject(978, 6086.02002, -3574.50000, 11.49000,   0.00000, 0.00000, 171.03000, -1, -1, -1, 300);
CreateDynamicObject(978, 6093.52979, -3578.59009, 11.49000,   0.00000, 0.00000, 132.35001, -1, -1, -1, 300);
CreateDynamicObject(978, 6100.22021, -3583.70996, 11.49000,   0.00000, 0.00000, 152.98000, -1, -1, -1, 300);
CreateDynamicObject(978, 6108.20020, -3586.62988, 11.49000,   0.00000, 0.00000, 165.87000, -1, -1, -1, 300);
CreateDynamicObject(978, 6117.10986, -3587.43994, 11.49000,   0.00000, 0.00000, 183.06000, -1, -1, -1, 300);
CreateDynamicObject(978, 6125.08984, -3585.15991, 11.49000,   0.00000, 0.00000, 208.84000, -1, -1, -1, 300);
CreateDynamicObject(978, 6132.06982, -3579.81006, 11.49000,   0.00000, 0.00000, 226.03000, -1, -1, -1, 300);
CreateDynamicObject(978, 6136.37012, -3572.63989, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6138.95020, -3564.79004, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6141.49023, -3557.05005, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6144.14990, -3548.88989, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6161.45996, -3503.06006, 14.23000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6190.43994, -3417.34009, 14.23000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5001, 6185.87012, -3360.02002, 13.51000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5005, 5838.77002, -3619.76001, 13.75000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 300);
CreateDynamicObject(5005, 5807.45020, -3623.46997, 13.37000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 300);
CreateDynamicObject(5005, 5903.14990, -3766.83008, 13.93000,   0.00000, 0.00000, 137.50999, -1, -1, -1, 300);
CreateDynamicObject(5005, 5885.10010, -3791.87988, 13.93000,   0.00000, 0.00000, 137.50999, -1, -1, -1, 300);
CreateDynamicObject(5001, 5956.60010, -3827.01001, 13.40000,   0.00000, 0.00000, -42.97000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6040.60986, -3731.46997, 14.20000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6010.14990, -3731.18994, 13.86000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 300);
CreateDynamicObject(978, 6179.04980, -3296.29004, 11.47000,   0.00000, 0.00000, 189.08000, -1, -1, -1, 300);
CreateDynamicObject(978, 6170.64014, -3298.41992, 11.37000,   0.00000, 0.00000, 197.67000, -1, -1, -1, 300);
CreateDynamicObject(978, 6163.39990, -3300.84009, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 6155.56982, -3303.68994, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 6149.85010, -3305.78003, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 6141.25977, -3308.92993, 11.42000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 6133.54004, -3311.75000, 11.42000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 6126.29980, -3313.43994, 11.46000,   0.00000, 0.00000, 187.36000, -1, -1, -1, 300);
CreateDynamicObject(978, 6120.00977, -3314.47998, 11.42000,   0.00000, 0.00000, 187.36000, -1, -1, -1, 300);
CreateDynamicObject(978, 6111.50000, -3315.50000, 11.42000,   0.00000, 0.00000, 187.36000, -1, -1, -1, 300);
CreateDynamicObject(978, 6102.60986, -3315.30005, 11.42000,   0.00000, 0.00000, 169.31000, -1, -1, -1, 300);
CreateDynamicObject(978, 6094.14990, -3313.18994, 11.42000,   0.00000, 0.00000, 162.42999, -1, -1, -1, 300);
CreateDynamicObject(978, 6087.14990, -3310.68994, 11.42000,   0.00000, 0.00000, 159.00000, -1, -1, -1, 300);
CreateDynamicObject(978, 6079.66016, -3306.58008, 11.42000,   0.00000, 0.00000, 141.81000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6195.93994, -3509.42993, 14.19000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6223.56006, -3427.38989, 14.23000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6256.33984, -3441.30005, 14.19000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5005, 6230.04004, -3519.35010, 14.19000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 300);
CreateDynamicObject(5005, 5933.39990, -3311.22998, 14.06000,   0.00000, 0.00000, 52.43000, -1, -1, -1, 300);
CreateDynamicObject(978, 6283.83008, -3359.32007, 11.48000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6286.77002, -3350.60010, 11.48000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6289.16016, -3344.62012, 11.47000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6291.91016, -3336.39990, 11.47000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6294.54980, -3328.39990, 11.47000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 300);
CreateDynamicObject(978, 6296.95020, -3320.72998, 11.47000,   0.00000, 0.00000, 256.10999, -1, -1, -1, 300);
CreateDynamicObject(978, 6297.70020, -3312.57007, 11.47000,   0.00000, 0.00000, 275.01999, -1, -1, -1, 300);
CreateDynamicObject(978, 6296.70996, -3303.88989, 11.47000,   0.00000, 0.00000, 277.60001, -1, -1, -1, 300);
CreateDynamicObject(978, 6294.91992, -3296.27002, 11.47000,   0.00000, 0.00000, 287.91000, -1, -1, -1, 300);
CreateDynamicObject(978, 6291.70020, -3289.20996, 11.47000,   0.00000, 0.00000, 299.94000, -1, -1, -1, 300);
CreateDynamicObject(978, 6287.47998, -3282.86011, 11.47000,   0.00000, 0.00000, 309.39999, -1, -1, -1, 300);
CreateDynamicObject(978, 6282.16992, -3276.37988, 11.47000,   0.00000, 0.00000, 309.39999, -1, -1, -1, 300);
CreateDynamicObject(978, 6276.89990, -3270.63989, 11.47000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 300);
CreateDynamicObject(978, 6271.06982, -3264.81006, 11.47000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 300);
CreateDynamicObject(978, 6264.50977, -3258.14990, 11.47000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 300);
CreateDynamicObject(978, 6258.70996, -3252.32007, 11.42000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 300);
CreateDynamicObject(978, 6253.77002, -3247.18994, 11.42000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 300);
CreateDynamicObject(978, 6247.20020, -3241.46997, 11.42000,   0.00000, 0.00000, 323.14999, -1, -1, -1, 300);
CreateDynamicObject(978, 6240.43994, -3236.98999, 11.42000,   0.00000, 0.00000, 330.01999, -1, -1, -1, 300);
CreateDynamicObject(978, 6232.62012, -3233.52002, 11.42000,   0.00000, 0.00000, 342.06000, -1, -1, -1, 300);
CreateDynamicObject(978, 6224.81982, -3231.71997, 11.42000,   0.00000, 0.86000, 351.51001, -1, -1, -1, 300);
CreateDynamicObject(978, 6216.10010, -3230.87012, 11.42000,   0.00000, 0.86000, -3.33000, -1, -1, -1, 300);
CreateDynamicObject(978, 6208.89014, -3231.17993, 11.42000,   0.00000, 0.86000, 6.12000, -1, -1, -1, 300);
CreateDynamicObject(978, 6200.99023, -3232.40991, 11.42000,   0.00000, 0.86000, 10.42000, -1, -1, -1, 300);
CreateDynamicObject(978, 6192.79980, -3234.81006, 11.42000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 300);
CreateDynamicObject(978, 6184.72998, -3238.12988, 11.45000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 300);
CreateDynamicObject(978, 6176.12012, -3241.60010, 11.45000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 300);
CreateDynamicObject(978, 6167.85986, -3244.83008, 11.45000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 300);
CreateDynamicObject(978, 6160.16992, -3249.11011, 11.45000,   0.00000, 0.86000, 37.06000, -1, -1, -1, 300);
CreateDynamicObject(978, 6153.85986, -3254.13989, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 300);
CreateDynamicObject(978, 6148.31982, -3258.92993, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 300);
CreateDynamicObject(978, 6141.91016, -3264.41992, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 300);
CreateDynamicObject(978, 6135.74023, -3269.72998, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 300);
CreateDynamicObject(978, 6129.75977, -3274.88989, 11.42000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 300);
CreateDynamicObject(978, 6122.56982, -3279.61011, 11.42000,   0.00000, 0.86000, 25.89000, -1, -1, -1, 300);
CreateDynamicObject(978, 6114.89014, -3282.13989, 11.42000,   0.00000, 0.86000, 11.28000, -1, -1, -1, 300);
CreateDynamicObject(978, 6105.89014, -3282.26001, 11.42000,   0.00000, 0.86000, -11.07000, -1, -1, -1, 300);
CreateDynamicObject(978, 6098.18994, -3278.46997, 11.42000,   0.00000, 0.86000, -42.01000, -1, -1, -1, 300);
CreateDynamicObject(978, 6093.33008, -3272.70996, 11.42000,   0.00000, 0.86000, -58.34000, -1, -1, -1, 300);
CreateDynamicObject(978, 6089.37012, -3266.37012, 11.42000,   0.00000, 0.86000, -58.34000, -1, -1, -1, 300);
CreateDynamicObject(978, 6085.31982, -3259.84009, 11.42000,   0.00000, 0.86000, -58.34000, -1, -1, -1, 300);
CreateDynamicObject(978, 6079.83008, -3252.88989, 11.38000,   0.00000, 0.86000, -45.45000, -1, -1, -1, 300);
CreateDynamicObject(978, 6073.12988, -3247.56006, 11.38000,   0.00000, 0.86000, -30.84000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6139.18994, -3525.66992, 15.94000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6129.93994, -3553.83008, 15.92000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6148.47021, -3497.60010, 15.94000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6157.70996, -3469.58008, 15.94000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6166.89990, -3441.71997, 15.93000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6175.93018, -3414.42993, 15.98000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6185.22021, -3386.30005, 15.98000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(3452, 6194.41016, -3358.44995, 15.98000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 300);
CreateDynamicObject(6100, 6180.37012, -3318.14990, 34.77000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4113, 6122.52979, -3335.34009, 46.29000,   0.00000, 0.00000, 14.61000, -1, -1, -1, 300);
CreateDynamicObject(5408, 6008.04004, -3391.84009, 32.74000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6875, 6046.58984, -3308.35010, 2.67000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8131, 6005.25000, -3298.35010, 21.12000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8620, 5989.33984, -3306.70996, 33.54000,   0.00000, 0.00000, 40.39000, -1, -1, -1, 300);
CreateDynamicObject(16605, 5983.72021, -3323.50000, 10.77000,   0.00000, 0.00000, -173.61000, -1, -1, -1, 300);
CreateDynamicObject(18282, 6077.89014, -3319.16992, 10.77000,   0.00000, 0.00000, 154.70000, -1, -1, -1, 300);
CreateDynamicObject(3249, 6094.08984, -3326.37988, 10.26000,   0.00000, 0.00000, 165.00999, -1, -1, -1, 300);
CreateDynamicObject(3362, 6063.08984, -3306.55005, 10.56000,   0.00000, 0.00000, 51.57000, -1, -1, -1, 300);
CreateDynamicObject(978, 6073.68018, -3301.46997, 11.42000,   0.00000, 0.00000, 137.50999, -1, -1, -1, 300);
CreateDynamicObject(978, 6068.02979, -3295.76001, 11.42000,   0.00000, 0.00000, 130.63000, -1, -1, -1, 300);
CreateDynamicObject(4002, 6062.91016, -3721.35010, 20.96000,   0.00000, 0.00000, -88.52000, -1, -1, -1, 300);
CreateDynamicObject(4007, 6069.70020, -3656.12012, 39.83000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4019, 6133.43018, -3666.04004, 10.86000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(978, 6130.66016, -3629.39990, 11.40000,   0.00000, 0.00000, 167.59000, -1, -1, -1, 300);
CreateDynamicObject(978, 6122.35010, -3626.98999, 11.47000,   0.00000, 0.00000, 161.57001, -1, -1, -1, 300);
CreateDynamicObject(978, 6113.77002, -3625.47998, 11.36000,   0.00000, 0.00000, 177.89999, -1, -1, -1, 300);
CreateDynamicObject(978, 6105.43018, -3625.09009, 11.49000,   0.00000, 0.00000, 177.89999, -1, -1, -1, 300);
CreateDynamicObject(978, 6096.62012, -3623.72998, 11.49000,   0.00000, 0.00000, 164.14999, -1, -1, -1, 300);
CreateDynamicObject(978, 6089.00977, -3620.91992, 11.49000,   0.00000, 0.00000, 156.42000, -1, -1, -1, 300);
CreateDynamicObject(616, 6117.87988, -3633.00000, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6108.37988, -3630.98999, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6097.43994, -3630.37988, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(744, 6126.49023, -3580.33008, 9.96000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(744, 6121.31006, -3581.72998, 10.08000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(754, 6116.97021, -3582.87988, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(751, 6113.14014, -3584.30005, 10.23000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3508, 6107.47998, -3584.45996, 10.20000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1395, 6101.50977, -3575.17993, 42.73000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1394, 6108.14990, -3562.05005, 91.16000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3474, 6074.37012, -3560.82007, 17.15000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5126, 6054.72998, -3563.13989, 25.36000,   0.00000, 0.00000, -81.65000, -1, -1, -1, 300);
CreateDynamicObject(11400, 6059.16016, -3589.72998, 23.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1381, 6055.85986, -3586.88989, 19.35000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3255, 6067.77979, -3619.56006, 11.21000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4113, 6200.75000, -3630.12988, 46.23000,   0.00000, 0.00000, 52.43000, -1, -1, -1, 300);
CreateDynamicObject(4017, 6114.58008, -3785.95996, 20.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5968.97998, -3745.85010, 7.57000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4002, 5985.85986, -3779.67993, 32.69000,   0.00000, 0.00000, 88.52000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5970.06982, -3679.81006, 8.71000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5982.77002, -3605.89990, 9.96000,   0.00000, 0.00000, -15.47000, -1, -1, -1, 300);
CreateDynamicObject(4021, 6034.29980, -3572.30005, 16.81000,   0.00000, 0.00000, 22.35000, -1, -1, -1, 300);
CreateDynamicObject(978, 6066.47021, -3243.71997, 11.38000,   0.00000, 0.86000, -28.26000, -1, -1, -1, 300);
CreateDynamicObject(978, 6060.66992, -3240.92993, 11.38000,   0.00000, 0.86000, -23.96000, -1, -1, -1, 300);
CreateDynamicObject(978, 6053.89990, -3238.62012, 11.38000,   0.00000, 0.86000, -11.93000, -1, -1, -1, 300);
CreateDynamicObject(978, 6045.18018, -3237.87012, 11.48000,   0.00000, 0.86000, 2.68000, -1, -1, -1, 300);
CreateDynamicObject(978, 6036.27979, -3238.26001, 11.38000,   0.00000, 0.86000, 2.68000, -1, -1, -1, 300);
CreateDynamicObject(978, 6027.68018, -3238.62988, 11.38000,   0.00000, 0.86000, 2.68000, -1, -1, -1, 300);
CreateDynamicObject(978, 6019.56982, -3239.97998, 11.38000,   0.00000, 0.86000, 18.15000, -1, -1, -1, 300);
CreateDynamicObject(978, 6011.04004, -3243.38989, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 300);
CreateDynamicObject(978, 6003.08984, -3247.33008, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 300);
CreateDynamicObject(978, 5994.54004, -3251.62012, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 300);
CreateDynamicObject(978, 5987.20020, -3255.29004, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 300);
CreateDynamicObject(978, 5978.66016, -3259.61011, 11.30000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 300);
CreateDynamicObject(978, 5971.33984, -3263.31006, 11.35000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 300);
CreateDynamicObject(978, 6040.22021, -3814.38989, 11.23000,   0.00000, 0.86000, 77.45000, -1, -1, -1, 300);
CreateDynamicObject(978, 6037.74023, -3822.17993, 11.37000,   0.00000, 0.86000, 66.28000, -1, -1, -1, 300);
CreateDynamicObject(978, 6034.68018, -3829.15991, 11.37000,   0.00000, 0.86000, 66.28000, -1, -1, -1, 300);
CreateDynamicObject(978, 6030.50977, -3836.68994, 11.37000,   0.00000, 0.86000, 56.83000, -1, -1, -1, 300);
CreateDynamicObject(978, 6024.68994, -3843.40991, 11.37000,   0.00000, 0.86000, 42.22000, -1, -1, -1, 300);
CreateDynamicObject(978, 6017.64990, -3849.16992, 11.37000,   0.00000, 0.86000, 36.20000, -1, -1, -1, 300);
CreateDynamicObject(978, 5820.77002, -3732.63989, 11.21000,   0.00000, 0.86000, 130.74001, -1, -1, -1, 300);
CreateDynamicObject(978, 5815.50000, -3724.94995, 11.21000,   0.00000, 0.86000, 116.99000, -1, -1, -1, 300);
CreateDynamicObject(978, 5811.87012, -3716.84009, 11.21000,   0.00000, 0.86000, 109.25000, -1, -1, -1, 300);
CreateDynamicObject(978, 5809.56006, -3708.76001, 11.21000,   0.00000, 0.86000, 103.24000, -1, -1, -1, 300);
CreateDynamicObject(978, 5839.52979, -3702.25000, 11.21000,   0.00000, 0.86000, 100.66000, -1, -1, -1, 300);
CreateDynamicObject(978, 5842.37012, -3709.75000, 11.21000,   0.00000, 0.86000, 123.00000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5872.95020, -3581.12012, 10.98000,   0.00000, 0.00000, 1.72000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5875.72021, -3648.03003, 10.91000,   0.00000, 0.00000, 1.72000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5969.72021, -3396.05005, 7.92000,   0.00000, 0.00000, 1.72000, -1, -1, -1, 300);
CreateDynamicObject(4019, 5906.68018, -3720.97998, 10.31000,   0.00000, 0.00000, 48.99000, -1, -1, -1, 300);
CreateDynamicObject(616, 5841.20020, -3528.40991, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5869.49023, -3509.79004, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5408, 5949.37988, -3514.40991, 33.57000,   0.00000, 0.00000, -42.97000, -1, -1, -1, 300);
CreateDynamicObject(616, 5938.20020, -3450.78003, 10.31000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5935.60986, -3466.25000, 10.31000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5895.56006, -3506.51001, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5855.95020, -3511.08008, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5957.60010, -3335.04004, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5948.79980, -3346.83008, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5938.47021, -3360.23999, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5928.62012, -3375.11011, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5922.08008, -3392.17993, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5928.29980, -3412.87012, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5937.12988, -3435.64990, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5965.43994, -3818.94995, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5975.77002, -3824.60010, 10.35000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5988.66016, -3825.60010, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5999.79980, -3820.84009, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6007.54980, -3810.11011, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5846.91016, -3704.80005, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6100, 5872.72998, -3410.45996, 10.32000,   0.00000, 0.00000, -77.35000, -1, -1, -1, 300);
CreateDynamicObject(6100, 5877.16992, -3446.71997, 34.73000,   0.00000, 0.00000, -86.80000, -1, -1, -1, 300);
CreateDynamicObject(616, 5882.00977, -3509.10010, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5858.22998, -3468.36011, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5847.20020, -3472.64990, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5832.20996, -3479.17993, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5819.62012, -3489.36011, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5806.85010, -3536.34009, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5804.72998, -3527.17993, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5803.31982, -3517.44995, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5808.87012, -3503.88989, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5847.08984, -3517.46997, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6004.99023, -3288.26001, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5993.50977, -3295.33008, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5978.83008, -3307.55005, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5969.47998, -3318.58008, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6051.47998, -3278.45996, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6022.39014, -3278.23999, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6038.08984, -3274.20996, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6169.56006, -3632.13989, 10.63000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6203.60010, -3600.87012, 10.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6045.50000, -3797.30005, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6044.56982, -3811.90991, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6040.85010, -3825.62988, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6036.22021, -3835.30005, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6029.14014, -3844.38989, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 6020.29980, -3852.09009, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5921.60986, -3834.81006, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5899.87012, -3814.55005, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5888.10010, -3803.26001, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5876.12988, -3791.71997, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5866.24023, -3782.38989, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5854.60986, -3772.41992, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5842.68994, -3761.77002, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5822.60010, -3743.97998, 10.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5832.45996, -3752.57007, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5910.83008, -3824.94995, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(616, 5813.99023, -3735.12988, 10.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(621, 6252.41992, -3345.97998, 10.58000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(621, 6254.89990, -3339.29004, 10.54000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//дрифт островок (конец)

//дрифт трасса 2 (начало)
ObjGam[20] = CreateObject(8171, 5853.88, 903.35, 10.00,   0.00, 0.00, 0.00);

CreateDynamicObject(10018, 5854.15, 730.72, 15.52,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 5853.95, 727.87, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5829.93, 573.19, 10.01,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 5744.60, 520.83, 10.05,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5728.15, 480.76, 10.11,   0.00, 0.00, 90.08, -1, -1, -1, 300);
CreateDynamicObject(8171, 5845.58, 456.79, 10.09,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8354, 5885.32, 433.8, 6.58,   0.00, 353.04, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 6070.43, 456.68, 20.72,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8354, 5933.35, 433.8, 12.43,   0.00, 353.04, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6159.63, 484.88, 20.72,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8354, 6160.80, 601.09, 12.43,   0.00, 353.04, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8354, 6160.80, 649.16, 6.57,   0.00, 353.04, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 6183.66, 728.01, 9.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6159.50, 899.25, 9.22,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6119.26, 915.8199, 9.20,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6050.87, 851.4301, 9.19,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 5969.75, 871.49, 9.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//CreateDynamicObject(8171, 5853.88, 903.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5878.01, 1010.85, 9.96,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 5945.52, 1005.46, 9.13,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8354, 5990.38, 1056.56, 2.78,   0.00, 353.98, 180.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5944.02, 1079.12, -3.09,   0.00, 8.59, 77.03, -1, -1, -1, 300);
CreateDynamicObject(18226, 5979.50, 1043.21, 9.56,   0.00, 7.73, 17.19, -1, -1, -1, 300);
CreateDynamicObject(979, 5935.57, 1042.93, 9.95,   0.00, 0.00, 150.47, -1, -1, -1, 300);
CreateDynamicObject(979, 5926.98, 1047.22, 10.25,   0.00, 354.84, 156.56, -1, -1, -1, 300);
CreateDynamicObject(979, 5943.23, 1038.01, 9.97,   0.00, 0.00, 144.45, -1, -1, -1, 300);
CreateDynamicObject(979, 5950.71, 1032.19, 9.97,   0.00, 0.00, 139.22, -1, -1, -1, 300);
CreateDynamicObject(979, 5956.98, 1025.28, 9.97,   0.00, 0.00, 124.61, -1, -1, -1, 300);
CreateDynamicObject(979, 5918.08, 1050.45, 10.80,   0.00, 359.14, 162.58, -1, -1, -1, 300);
CreateDynamicObject(18226, 5911.22, 986.83, -2.94,   0.00, 7.73, 143.83, -1, -1, -1, 300);
CreateDynamicObject(978, 5918.31, 1020.56, 10.75,   0.00, 0.00, 332.50, -1, -1, -1, 300);
CreateDynamicObject(978, 5925.49, 1014.66, 10.22,   0.00, 5.16, 307.89, -1, -1, -1, 300);
CreateDynamicObject(978, 5928.97, 1006.27, 9.87,   0.00, 0.00, 277.58, -1, -1, -1, 300);
CreateDynamicObject(18226, 5891.06, 961.4301, -0.87,   0.00, 353.98, 322.97, -1, -1, -1, 300);
CreateDynamicObject(6356, 5889.18, 1000.39, 20.59,   0.00, 0.00, 148.91, -1, -1, -1, 300);
CreateDynamicObject(7461, 5905.84, 909.16, 10.72,   0.00, 0.00, 82.19, -1, -1, -1, 300);
CreateDynamicObject(7461, 5893.69, 903.64, 11.31,   0.00, 0.00, 263.05, -1, -1, -1, 300);
CreateDynamicObject(18228, 5906.53, 880.13, 11.44,   0.00, 0.00, 49.37, -1, -1, -1, 300);
CreateDynamicObject(18228, 5893.60, 844.99, 9.53,   0.00, 2.58, 222.27, -1, -1, -1, 300);
CreateDynamicObject(18271, 5915.94, 917.65, 31.21,   0.00, 0.00, 152.28, -1, -1, -1, 300);
CreateDynamicObject(18228, 5915.12, 840.03, 14.17,   0.00, 2.58, 76.02, -1, -1, -1, 300);
CreateDynamicObject(18271, 5889.30, 914.4, 32.82,   0.00, 0.00, 191.25, -1, -1, -1, 300);
CreateDynamicObject(978, 5909.43, 1023.84, 10.80,   0.00, 0.00, 345.39, -1, -1, -1, 300);
CreateDynamicObject(17071, 5900.88, 911.9399, 13.79,   0.00, 0.00, 7.18, -1, -1, -1, 300);
CreateDynamicObject(17071, 5884.71, 924.41, 12.83,   0.00, 0.00, 32.58, -1, -1, -1, 300);
CreateDynamicObject(978, 5899.72, 1025.59, 10.80,   0.00, 0.00, 353.98, -1, -1, -1, 300);
CreateDynamicObject(978, 5890.46, 1024.83, 10.80,   0.00, 0.00, 15.55, -1, -1, -1, 300);
CreateDynamicObject(978, 5881.81, 1021.01, 10.80,   0.00, 0.00, 32.81, -1, -1, -1, 300);
CreateDynamicObject(978, 5874.73, 1014.93, 10.80,   0.00, 0.00, 50.08, -1, -1, -1, 300);
CreateDynamicObject(978, 5870.04, 1006.81, 10.80,   0.00, 0.00, 69.92, -1, -1, -1, 300);
CreateDynamicObject(978, 5868.25, 997.59, 10.80,   0.00, 0.00, 88.05, -1, -1, -1, 300);
CreateDynamicObject(17071, 5917.21, 997.87, 14.70,   0.00, 0.00, 341.95, -1, -1, -1, 300);
CreateDynamicObject(18228, 5816.56, 858.98, 14.05,   0.00, 0.00, 48.52, -1, -1, -1, 300);
CreateDynamicObject(4814, 5815.44, 925.4399, 19.52,   0.00, 0.00, 127.19, -1, -1, -1, 300);
CreateDynamicObject(4814, 5831.90, 1040.65, 19.52,   0.00, 0.86, 90.78, -1, -1, -1, 300);
CreateDynamicObject(4814, 5904.19, 1090.31, 19.50,   0.00, 0.00, 65.86, -1, -1, -1, 300);
CreateDynamicObject(5186, 5750.60, 486.93, 9.98,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8038, 5768.40, 501.2, 30.10,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(5186, 5854.43, 516.03, 9.96,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(4814, 5916.87, 495.87, 15.14,   -15.57, 5.00, 36.50, -1, -1, -1, 300);
CreateDynamicObject(4814, 5804.57, 419.25, 20.19,   0.00, 0.00, 217.19, -1, -1, -1, 300);
CreateDynamicObject(4814, 5686.80, 442.7, 20.20,   0.00, 0.00, 180.86, -1, -1, -1, 300);
CreateDynamicObject(4814, 5662.24, 490.81, 21.12,   0.00, 0.00, 141.95, -1, -1, -1, 300);
CreateDynamicObject(4814, 5672.01, 536.81, 21.04,   0.00, 0.00, 106.56, -1, -1, -1, 300);
CreateDynamicObject(4814, 5681.09, 554.74, 21.07,   0.00, 0.00, 71.09, -1, -1, -1, 300);
CreateDynamicObject(4814, 5659.89, 582.68, 21.07,   0.00, 0.00, 37.34, -1, -1, -1, 300);
CreateDynamicObject(5186, 5805.95, 604.45, 9.96,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(18227, 5797.74, 608.07, 21.99,   347.97, 351.41, 95.78, -1, -1, -1, 300);
CreateDynamicObject(18228, 5809.39, 592.02, 12.10,   354.84, 358.28, 355.63, -1, -1, -1, 300);
CreateDynamicObject(17033, 5819.27, 574.97, 9.76,   0.00, 0.00, 178.20, -1, -1, -1, 300);
CreateDynamicObject(4814, 5931.19, 505.88, 21.10,   1.72, 358.28, 50.08, -1, -1, -1, 300);
CreateDynamicObject(18227, 5868.15, 521.27, 14.09,   347.97, 351.41, 62.03, -1, -1, -1, 300);
CreateDynamicObject(18228, 5849.78, 519.82, 10.89,   354.84, 358.28, 172.89, -1, -1, -1, 300);
CreateDynamicObject(17071, 5826.41, 520.58, 13.75,   0.00, 0.00, 129.69, -1, -1, -1, 300);
CreateDynamicObject(4814, 5983.52, 982.76, 20.13,   0.00, 0.00, 306.33, -1, -1, -1, 300);
CreateDynamicObject(979, 5961.24, 1016.93, 9.97,   0.00, 0.00, 109.14, -1, -1, -1, 300);
CreateDynamicObject(5186, 5982.11, 834.49, 9.09,   0.00, 0.00, 157.50, -1, -1, -1, 300);
CreateDynamicObject(18226, 6021.54, 862.6899, -2.71,   0.00, 0.00, 52.66, -1, -1, -1, 300);
CreateDynamicObject(5186, 5902.61, 555.96, 9.99,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(4814, 6039.32, 790.29, 20.13,   0.00, 0.00, 214.61, -1, -1, -1, 300);
CreateDynamicObject(18228, 5938.75, 807.13, 14.88,   0.00, 2.58, 104.46, -1, -1, -1, 300);
CreateDynamicObject(4814, 5957.47, 418.53, 17.80,   -8.94, 13.22, 219.69, -1, -1, -1, 300);
CreateDynamicObject(4814, 6112.60, 418.77, 29.50,   0.00, 0.00, 217.19, -1, -1, -1, 300);
CreateDynamicObject(5186, 6060.61, 486.09, 20.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6009.55, 381.6, 4.64,   0.00, 0.00, 339.22, -1, -1, -1, 300);
CreateDynamicObject(18226, 5920.69, 386.66, -3.16,   0.00, 0.00, 5.23, -1, -1, -1, 300);
CreateDynamicObject(18226, 6072.81, 506.58, 12.26,   0.00, 0.00, 87.19, -1, -1, -1, 300);
CreateDynamicObject(18228, 6113.01, 493.81, 23.81,   0.00, 0.00, 318.44, -1, -1, -1, 300);
CreateDynamicObject(18228, 6141.66, 505.44, 23.98,   0.00, 0.00, 359.92, -1, -1, -1, 300);
CreateDynamicObject(4814, 6191.12, 439.71, 29.44,   0.00, 0.00, 247.50, -1, -1, -1, 300);
CreateDynamicObject(4814, 6216.54, 483.47, 29.41,   0.00, 0.00, 293.36, -1, -1, -1, 300);
CreateDynamicObject(4814, 6220.96, 596.48, 20.68,   351.87, 358.25, 306.75, -1, -1, -1, 300);
CreateDynamicObject(18226, 6260.52, 521.15, 6.91,   0.00, 0.00, 58.67, -1, -1, -1, 300);
CreateDynamicObject(17034, 5881.18, 551.82, 6.41,   0.00, 0.00, 86.48, -1, -1, -1, 300);
CreateDynamicObject(17034, 5891.43, 590.24, 5.66,   0.00, 0.00, 112.27, -1, -1, -1, 300);
CreateDynamicObject(4814, 6221.37, 741.9, 20.11,   0.00, 0.00, 306.33, -1, -1, -1, 300);
CreateDynamicObject(18226, 6258.95, 628.19, -4.08,   0.00, 1.72, 59.77, -1, -1, -1, 300);
CreateDynamicObject(4814, 6145.30, 598.46, 22.16,   1.78, 6.93, 127.35, -1, -1, -1, 300);
CreateDynamicObject(18228, 6146.29, 522.54, 24.40,   0.00, 0.00, 50.00, -1, -1, -1, 300);
CreateDynamicObject(4814, 6146.08, 720.86, 19.81,   0.00, 0.00, 128.05, -1, -1, -1, 300);
CreateDynamicObject(18226, 6110.25, 624.99, -5.59,   0.00, 1.72, 262.34, -1, -1, -1, 300);
CreateDynamicObject(4814, 6221.44, 887.51, 20.24,   0.00, 0.00, 308.05, -1, -1, -1, 300);
CreateDynamicObject(4814, 6195.09, 960.98, 20.24,   0.00, 0.00, 340.94, -1, -1, -1, 300);
CreateDynamicObject(4814, 6163.59, 976.85, 20.24,   0.00, 0.00, 10.39, -1, -1, -1, 300);
CreateDynamicObject(4814, 6124.23, 978.01, 20.24,   0.00, 0.00, 46.80, -1, -1, -1, 300);
CreateDynamicObject(4814, 6078.04, 951.27, 20.21,   0.00, 0.00, 84.92, -1, -1, -1, 300);
CreateDynamicObject(4814, 6145.56, 792.02, 19.86,   0.00, 0.00, 128.05, -1, -1, -1, 300);
CreateDynamicObject(5186, 6142.13, 882.12, 9.17,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(5186, 6115.09, 517.9, 20.70,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(17025, 6117.22, 499.9, 43.72,   23.20, 22.35, 335.70, -1, -1, -1, 300);
CreateDynamicObject(733, 6151.43, 481.43, 20.38,   0.00, 0.00, 70.86, -1, -1, -1, 300);
CreateDynamicObject(733, 6076.67, 478.24, 20.63,   0.00, 0.00, 153.37, -1, -1, -1, 300);
CreateDynamicObject(726, 5837.45, 477.44, 9.96,   0.00, 0.00, 57.03, -1, -1, -1, 300);
CreateDynamicObject(726, 5821.03, 486.22, 9.96,   0.00, 0.00, 57.03, -1, -1, -1, 300);
CreateDynamicObject(726, 5810.13, 520.62, 9.96,   0.00, 0.00, 57.03, -1, -1, -1, 300);
CreateDynamicObject(725, 5890.06, 548.95, 8.39,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(723, 5906.42, 569.64, 22.02,   0.00, 0.00, 281.25, -1, -1, -1, 300);
CreateDynamicObject(722, 5882.71, 593.28, 9.38,   0.00, 0.00, 7.89, -1, -1, -1, 300);
CreateDynamicObject(721, 5836.52, 494.73, 8.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(731, 5811.68, 494.67, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(726, 5831.14, 600.02, 9.94,   0.00, 0.00, 57.03, -1, -1, -1, 300);
CreateDynamicObject(731, 5876.16, 849.52, 9.56,   338.51, 0.86, 312.73, -1, -1, -1, 300);
CreateDynamicObject(725, 5863.74, 504.14, 9.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(733, 5987.21, 849.7, 9.08,   0.00, 0.00, 320.39, -1, -1, -1, 300);
CreateDynamicObject(733, 5974.21, 854.5699, 8.88,   0.00, 0.00, 220.63, -1, -1, -1, 300);
CreateDynamicObject(5186, 6068.38, 865.8101, 9.17,   0.00, 0.00, 357.65, -1, -1, -1, 300);
CreateDynamicObject(18226, 6050.79, 892.49, 8.87,   0.00, 0.00, 102.89, -1, -1, -1, 300);
CreateDynamicObject(730, 6070.12, 868, 9.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(729, 6058.26, 859.3101, 9.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(730, 6056.19, 851.15, 9.13,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(732, 6065.08, 863.59, 9.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(732, 6063.77, 853.75, 9.12,   0.00, 0.00, 67.50, -1, -1, -1, 300);
CreateDynamicObject(729, 6070.21, 858.79, 9.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6104.11, 805.61, 3.20,   0.00, 0.00, 292.58, -1, -1, -1, 300);
CreateDynamicObject(18226, 6129.08, 865.6801, -3.40,   0.00, 0.00, 318.59, -1, -1, -1, 300);
CreateDynamicObject(18226, 6131.31, 865.88, -10.84,   0.00, 24.06, 312.58, -1, -1, -1, 300);
CreateDynamicObject(729, 6119.84, 901.49, 9.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(730, 6125.51, 918.3199, 9.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(730, 6126.54, 909.9301, 9.19,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(732, 6117.86, 906.84, 9.18,   0.00, 0.00, 67.50, -1, -1, -1, 300);
CreateDynamicObject(729, 6120.31, 912.9301, 9.18,   0.00, 0.00, 66.18, -1, -1, -1, 300);
CreateDynamicObject(1215, 5854.00, 813.68, 10.80,   0.00, 0.00, 0.86, -1, -1, -1, 300);
CreateDynamicObject(1215, 5853.89, 654.9, 10.71,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1215, 5854.02, 673.7, 10.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1215, 5854.01, 734.83, 10.82,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1215, 5854.01, 753.7, 10.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1215, 5854.04, 794.84, 10.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5845.06, 833.34, 10.33,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5862.87, 833.3199, 10.33,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5845.13, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5842.11, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5848.12, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5862.92, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5859.92, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5865.90, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//дрифт трасса 2 (конец)

//дрифт трасса 3 (начало)
ObjGam[21] = CreateObject(8354, 5813.91, 2910.57, 10.03,   0.00, 0.00, 180.00);

CreateDynamicObject(8357, 5853.95, 2727.87, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5829.93, 2573.19, 10.01,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 5663.26, 2520.90, 10.01,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5646.67, 2480.85, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 6200.59, 2431.38, 18.46,   7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 6377.42, 3241.13, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6353.24, 3550.69, 10.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6313.16, 3567.22, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 5853.88, 2903.35, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5877.95, 3233.58, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//CreateDynamicObject(8354, 5813.91, 2910.57, 10.03,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(4814, 5777.48, 2886.68, 19.52,   0.00, 0.00, 127.19, -1, -1, -1, 300);
CreateDynamicObject(8038, 5883.88, 2880.85, 30.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5869.62, 2826.57, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5838.33, 2826.57, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5846.35, 2825.86, 17.80,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5861.49, 2825.86, 17.80,   0.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5866.06, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5861.56, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5857.05, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5850.91, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5846.42, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 5841.91, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5861.49, 2824.62, 17.80,   0.00, -90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(16092, 5846.35, 2824.62, 17.80,   0.00, -90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5834.38, 2820.99, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 5834.36, 2834.00, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5821.34, 2834.04, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5795.75, 2834.04, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 5853.85, 3078.91, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 5834.52, 2980.40, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5821.48, 2980.39, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5795.91, 2980.39, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5834.55, 2993.40, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5834.21, 3069.12, 12.75,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5834.03, 2745.18, 12.75,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5873.27, 2984.28, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5873.26, 3110.13, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5873.97, 2784.57, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 5609.19, 2344.15, 10.01,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5592.56, 2303.95, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5825.41, 2432.68, 10.02,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 5808.86, 2392.55, 10.01,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 5897.46, 2256.01, 10.02,   0.00, 0.00, 270.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 5990.64, 2212.77, 10.05,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6144.81, 2134.40, 10.02,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 6200.61, 2256.34, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6181.42, 2157.76, 10.03,   0.00, 0.00, 235.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 6200.57, 2606.42, 26.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6224.66, 2761.10, 26.89,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6264.95, 2744.38, 26.87,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6353.44, 2598.12, 26.89,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6313.33, 2614.69, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 6377.54, 2715.03, 18.46,   7.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 6377.45, 2890.06, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 6377.44, 3065.62, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 6377.40, 3416.71, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6224.80, 3516.38, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6265.04, 3499.97, 10.02,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8344, 6176.37, 3583.84, 10.04,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(8343, 6136.21, 3600.43, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 5980.30, 3409.71, 10.05,   0.00, 0.00, -35.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 5897.24, 3290.99, 10.04,   0.00, 0.00, -35.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 6080.95, 3553.50, 10.04,   0.00, 0.00, -35.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 5740.75, 2545.05, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 5738.47, 2456.79, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, 5728.45, 2368.29, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8357, 5744.83, 2279.90, 10.06,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5790.77, 2959.73, -14.33,   0.00, 0.00, -33.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5777.48, 2959.44, -5.67,   0.00, 21.50, -33.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5724.49, 2758.53, -16.44,   0.00, 21.50, -69.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5714.75, 2758.44, -8.00,   0.00, 27.50, -69.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5785.97, 2871.08, -8.00,   0.00, 0.00, -19.50, -1, -1, -1, 300);
CreateDynamicObject(18226, 5769.35, 2869.78, -8.00,   0.00, 0.00, -19.50, -1, -1, -1, 300);
CreateDynamicObject(18226, 5751.74, 2869.23, -8.00,   0.00, 0.00, -19.50, -1, -1, -1, 300);
CreateDynamicObject(18228, 5780.53, 3008.44, -1.76,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18228, 5783.21, 2802.28, 3.73,   0.00, 0.00, 14.00, -1, -1, -1, 300);
CreateDynamicObject(18228, 5783.96, 2816.94, 3.73,   0.00, 0.00, 14.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5873.97, 2658.75, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5834.39, 2669.46, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5834.32, 2588.04, 10.74,   0.00, 0.00, -91.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5834.39, 2643.86, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5834.39, 2618.25, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5834.39, 2602.26, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5834.39, 2595.85, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5833.04, 2578.86, 10.74,   0.00, 0.00, -105.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5828.60, 2571.17, 10.74,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5821.24, 2565.73, 10.74,   0.00, 0.00, -152.27, -1, -1, -1, 300);
CreateDynamicObject(979, 5812.61, 2563.20, 10.74,   0.00, 0.00, -175.00, -1, -1, -1, 300);
CreateDynamicObject(18228, 5790.08, 2571.41, -1.39,   0.00, 0.00, 149.00, -1, -1, -1, 300);
CreateDynamicObject(18228, 5783.71, 2581.42, -1.39,   0.00, 0.00, 149.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5800.43, 2564.24, 10.74,   0.00, 0.00, -180.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5760.19, 2562.85, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5734.48, 2562.86, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5708.87, 2562.88, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5683.17, 2562.78, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5748.07, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5722.47, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5873.04, 2591.36, 10.74,   0.00, 0.00, 82.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5871.42, 2582.16, 10.74,   0.00, 0.00, 78.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5869.02, 2573.21, 10.74,   0.00, 0.00, 72.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5865.84, 2564.47, 10.74,   0.00, 0.00, 68.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5861.72, 2556.40, 10.74,   0.00, 0.00, 58.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5856.29, 2548.94, 10.74,   0.00, 0.00, 50.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5850.02, 2542.23, 10.74,   0.00, 0.00, 44.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5842.71, 2536.56, 10.74,   0.00, 0.00, 32.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5834.47, 2532.38, 10.74,   0.00, 0.00, 22.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5825.57, 2529.67, 10.74,   0.00, 0.00, 12.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5816.56, 2527.97, 10.74,   0.00, 0.00, 9.50, -1, -1, -1, 300);
CreateDynamicObject(982, 5799.28, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5773.67, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5696.88, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5671.28, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5654.21, 2525.78, 10.74,   0.00, 0.00, 18.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5665.82, 2562.65, 10.74,   0.00, 0.00, -178.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5646.14, 2521.49, 10.74,   0.00, 0.00, 38.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5640.20, 2514.67, 10.74,   0.00, 0.00, 60.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5637.25, 2506.14, 10.74,   0.00, 0.00, 82.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5637.57, 2497.03, 10.74,   0.00, 0.00, 102.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5640.73, 2488.38, 10.74,   0.00, 0.00, 118.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5646.34, 2481.19, 10.74,   0.00, 0.00, 138.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5654.13, 2476.68, 10.74,   0.00, 0.00, 162.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5663.05, 2475.13, 10.74,   0.00, 0.00, 178.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5656.60, 2562.00, 10.74,   0.00, 0.00, -174.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5647.51, 2560.38, 10.74,   0.00, 0.00, -166.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5638.88, 2557.42, 10.74,   0.00, 0.00, -156.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5630.66, 2553.21, 10.74,   0.00, 0.00, -150.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5623.37, 2547.70, 10.74,   0.00, 0.00, -136.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5616.67, 2541.23, 10.74,   0.00, 0.00, -136.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5610.75, 2534.18, 10.74,   0.00, 0.00, -124.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5606.49, 2526.13, 10.74,   0.00, 0.00, -112.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5603.31, 2517.37, 10.74,   0.00, 0.00, -108.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5601.42, 2508.42, 10.74,   0.00, 0.00, -96.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5601.41, 2499.28, 10.74,   0.00, 0.00, -84.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5602.71, 2490.11, 10.74,   0.00, 0.00, -80.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5605.10, 2481.20, 10.74,   0.00, 0.00, -70.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5608.85, 2472.80, 10.74,   0.00, 0.00, -62.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5612.47, 2466.38, 10.74,   0.00, 0.00, -60.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5618.00, 2459.05, 10.74,   0.00, 0.00, -46.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5624.77, 2452.95, 10.74,   0.00, 0.00, -38.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5632.39, 2447.81, 10.74,   0.00, 0.00, -30.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5640.66, 2443.96, 10.74,   0.00, 0.00, -20.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5649.48, 2441.45, 10.74,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5658.65, 2440.00, 10.74,   0.00, 0.00, -6.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5667.85, 2439.21, 10.74,   0.00, 0.00, -4.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5735.02, 2438.66, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5730.43, 2475.24, 9.99,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5806.12, 2474.00, 10.70,   0.00, 0.00, 86.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5831.04, 2469.14, 10.70,   0.00, 0.00, 72.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5848.46, 2458.45, 10.70,   0.00, 0.00, 50.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5863.89, 2438.73, 10.70,   0.00, 0.00, 26.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5869.95, 2414.44, 10.70,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5865.62, 2389.79, 10.70,   0.00, 0.00, -22.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5851.63, 2369.04, 10.70,   0.00, 0.00, -46.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5830.57, 2355.37, 10.70,   0.00, 0.00, -68.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5807.40, 2350.72, 10.70,   0.00, 0.00, -88.00, -1, -1, -1, 300);
CreateDynamicObject(18228, 5817.73, 2426.48, -2.49,   0.00, 0.00, 98.00, -1, -1, -1, 300);
CreateDynamicObject(18228, 5812.77, 2394.20, -2.49,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5802.31, 2438.99, 10.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5813.90, 2438.10, 10.74,   0.00, 0.00, -10.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5822.39, 2435.02, 10.74,   0.00, 0.00, -30.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5829.34, 2429.18, 10.74,   0.00, 0.00, -50.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5834.03, 2421.38, 10.74,   0.00, 0.00, -68.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5835.93, 2412.47, 10.74,   0.00, 0.00, -88.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5833.00, 2401.65, 10.74,   0.00, 0.00, -116.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5825.94, 2393.43, 10.74,   0.00, 0.00, -140.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5818.15, 2388.75, 10.74,   0.00, 0.00, -158.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5807.72, 2385.93, 10.74,   0.00, 0.00, -178.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5798.46, 2385.60, 10.74,   0.00, 0.00, -178.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5789.23, 2385.84, 10.74,   0.00, 0.00, -185.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5802.73, 2475.21, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5822.47, 2473.26, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5840.83, 2466.46, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5857.56, 2452.30, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5868.69, 2431.10, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5871.40, 2404.65, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5864.64, 2382.96, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5847.60, 2362.97, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5823.93, 2351.51, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5798.76, 2349.49, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5731.88, 2349.91, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8150, 5721.96, 2386.50, 9.99,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5541.11, 2319.67, -11.37,   0.00, 0.00, -33.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5553.64, 2367.94, -11.37,   0.00, 0.00, -80.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5568.00, 2267.42, -11.37,   0.00, 0.00, 13.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5646.44, 2386.13, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5620.86, 2386.11, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5575.33, 2376.37, 10.74,   0.00, 0.00, -148.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5604.89, 2385.77, 10.70,   0.00, 0.00, 96.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5598.56, 2385.08, 10.70,   0.00, 0.00, 96.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5592.29, 2384.06, 10.70,   0.00, 0.00, 102.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5568.07, 2370.72, 10.74,   0.00, 0.00, -136.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5561.76, 2363.94, 10.74,   0.00, 0.00, -130.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5556.15, 2356.76, 10.74,   0.00, 0.00, -126.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5548.86, 2341.82, 10.74,   0.00, 0.00, -110.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5545.55, 2328.97, 10.74,   0.00, 0.00, -98.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5546.20, 2314.45, 10.74,   0.00, 0.00, -84.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5557.92, 2288.76, 10.74,   0.00, 0.00, -56.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5563.72, 2281.58, 10.74,   0.00, 0.00, -46.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5570.56, 2275.46, 10.74,   0.00, 0.00, -38.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5578.25, 2270.28, 10.74,   0.00, 0.00, -30.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5586.66, 2266.38, 10.74,   0.00, 0.00, -20.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5595.57, 2263.84, 10.74,   0.00, 0.00, -12.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5604.66, 2262.40, 10.74,   0.00, 0.00, -6.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5656.20, 2350.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5630.61, 2350.28, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5614.63, 2350.29, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5608.25, 2350.06, 10.70,   0.00, 0.00, 94.00, -1, -1, -1, 300);
CreateDynamicObject(983, 5601.96, 2349.07, 10.70,   0.00, 0.00, 104.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5594.96, 2345.91, 10.74,   0.00, 0.00, 31.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5588.36, 2339.75, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5584.05, 2331.66, 10.74,   0.00, 0.00, 69.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5582.64, 2322.76, 10.74,   0.00, 0.00, 93.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5584.85, 2313.93, 10.74,   0.00, 0.00, 115.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5589.96, 2306.35, 10.74,   0.00, 0.00, 133.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5597.25, 2300.87, 10.74,   0.00, 0.00, 153.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5605.84, 2298.26, 10.74,   0.00, 0.00, 173.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5615.08, 2297.61, 10.74,   0.00, 0.00, 179.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 5621.10, 2262.14, 6.73,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 5739.77, 2297.35, 6.73,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 5753.56, 2262.14, 6.73,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 5872.02, 2297.35, 6.73,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5896.22, 2193.90, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5912.42, 2182.29, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5927.67, 2171.30, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5943.03, 2160.49, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6124.30, 2221.38, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6123.61, 2205.87, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6123.36, 2188.81, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6123.14, 2172.84, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6137.64, 3507.43, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6146.44, 3519.79, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6155.97, 3532.56, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 6162.98, 3542.37, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5938.88, 3214.94, -5.00,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5948.41, 3228.82, -5.00,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(18226, 5958.68, 3242.42, -5.00,   0.00, 0.00, 33.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5590.83, 2382.49, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5574.33, 2376.81, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5559.56, 2363.31, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5547.65, 2341.35, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5544.76, 2329.72, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5544.90, 2315.16, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5557.31, 2287.87, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5569.14, 2274.65, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5588.19, 2264.10, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5888.68, 2297.17, 10.74,   0.00, 0.00, 175.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5897.75, 2295.39, 10.74,   0.00, 0.00, 163.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5906.48, 2292.21, 10.74,   0.00, 0.00, 157.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5914.50, 2287.76, 10.74,   0.00, 0.00, 145.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5878.39, 2261.98, 10.74,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5887.55, 2261.11, 10.74,   0.00, 0.00, -11.00, -1, -1, -1, 300);
CreateDynamicObject(979, 5895.92, 2257.73, 10.74,   0.00, 0.00, -33.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6016.42, 2215.89, 6.73,   0.00, 0.00, -125.06, -1, -1, -1, 300);
CreateDynamicObject(7371, 5909.41, 2248.75, 6.73,   0.00, 0.00, 55.02, -1, -1, -1, 300);
CreateDynamicObject(7371, 6124.75, 2139.89, 6.73,   0.00, 0.00, -125.06, -1, -1, -1, 300);
CreateDynamicObject(7371, 6017.80, 2172.91, 6.73,   0.00, 0.00, 55.02, -1, -1, -1, 300);
CreateDynamicObject(711, 5912.75, 2244.62, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5928.78, 2233.56, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5943.83, 2222.89, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6127.40, 2097.86, 10.70,   0.00, 0.00, 62.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6151.35, 2090.07, 10.70,   0.00, 0.00, 82.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6174.62, 2092.46, 10.70,   0.00, 0.00, 108.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6196.29, 2104.97, 10.70,   0.00, 0.00, 132.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6211.40, 2125.02, 10.70,   0.00, 0.00, 154.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6138.40, 2130.69, 10.74,   0.00, 0.00, 146.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6146.59, 2126.52, 10.74,   0.00, 0.00, 160.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6155.53, 2124.62, 10.74,   0.00, 0.00, 176.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6164.58, 2125.57, 10.74,   0.00, 0.00, 196.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6172.67, 2129.70, 10.74,   0.00, 0.00, 218.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6178.77, 2136.47, 10.74,   0.00, 0.00, 238.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6181.99, 2144.89, 10.74,   0.00, 0.00, 260.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6217.93, 2154.92, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6183.01, 2269.56, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6217.56, 2139.66, 10.70,   0.00, 0.00, -10.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6181.90, 2153.57, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6183.86, 2170.93, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6183.85, 2203.86, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6181.90, 2226.22, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6182.87, 2294.49, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6182.87, 2320.07, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6182.88, 2345.67, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6218.14, 2287.88, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6218.13, 2313.47, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6218.14, 2339.07, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2358.67, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2359.37, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2360.07, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2360.79, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2361.49, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2362.15, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.83, 2362.81, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2358.50, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6218.13, 2355.06, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2359.14, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2359.86, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2360.52, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2361.18, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2361.78, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2362.43, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.21, 2363.03, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6218.05, 2375.62, 8.09,   -7.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6183.00, 2482.77, 21.25,   7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6182.84, 2497.02, 27.13,   7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6182.82, 2500.36, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6218.23, 2500.48, 26.92,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6218.21, 2497.15, 27.22,   7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6182.80, 2545.58, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6218.23, 2545.73, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6182.80, 2635.52, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6218.23, 2635.68, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6182.79, 2697.97, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6218.24, 2698.13, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6127.32, 2096.20, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6148.60, 2088.93, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6171.31, 2089.87, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6191.69, 2098.91, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6208.16, 2115.23, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6184.79, 2755.60, 27.57,   0.00, 0.00, -9.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6189.08, 2772.25, 27.58,   0.00, 0.00, -120.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6194.00, 2780.12, 27.58,   0.00, 0.00, -124.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6206.25, 2792.21, 27.57,   0.00, 0.00, -49.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6228.26, 2803.92, 27.57,   0.00, 0.00, -75.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6253.33, 2805.65, 27.57,   0.00, 0.00, -97.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6275.40, 2797.68, 27.57,   0.00, 0.00, -121.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6294.06, 2780.86, 27.57,   0.00, 0.00, -143.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6304.38, 2758.11, 27.57,   0.00, 0.00, -168.13, -1, -1, -1, 300);
CreateDynamicObject(8682, 6306.99, 2700.62, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6271.54, 2701.52, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6219.07, 2747.63, 27.58,   0.00, 0.00, 81.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6221.75, 2756.40, 27.58,   0.00, 0.00, 65.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6226.95, 2763.84, 27.58,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6234.41, 2769.06, 27.58,   0.00, 0.00, 25.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6243.23, 2771.10, 27.58,   0.00, 0.00, 1.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6252.26, 2769.84, 27.58,   0.00, 0.00, -17.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6260.35, 2765.71, 27.58,   0.00, 0.00, -37.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6266.70, 2759.13, 27.58,   0.00, 0.00, -55.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6270.39, 2750.84, 27.58,   0.00, 0.00, -77.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6306.99, 2660.63, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8682, 6271.54, 2661.53, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6307.81, 2611.17, 27.58,   0.00, 0.00, 99.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6277.68, 2587.07, 27.58,   0.00, 0.00, -67.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6273.75, 2603.94, 27.57,   0.00, 0.00, -170.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6282.14, 2579.01, 27.58,   0.00, 0.00, -55.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6294.76, 2567.27, 27.57,   0.00, 0.00, -129.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6317.05, 2555.92, 27.57,   0.00, 0.00, -105.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6342.10, 2554.18, 27.57,   0.00, 0.00, -83.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6365.52, 2562.72, 27.57,   0.00, 0.00, -57.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6383.57, 2580.16, 27.57,   0.00, 0.00, -35.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6393.32, 2603.20, 27.57,   0.00, 0.00, -11.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6395.76, 2628.54, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6310.50, 2602.39, 27.58,   0.00, 0.00, 115.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6315.83, 2595.05, 27.58,   0.00, 0.00, 137.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6323.47, 2590.10, 27.58,   0.00, 0.00, 157.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6332.36, 2588.05, 27.58,   0.00, 0.00, 177.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6341.43, 2589.17, 27.58,   0.00, 0.00, 197.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6349.56, 2593.31, 27.58,   0.00, 0.00, 217.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6355.62, 2600.06, 27.58,   0.00, 0.00, 239.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6358.88, 2608.55, 27.58,   0.00, 0.00, 259.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6359.84, 2625.79, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6395.77, 2644.83, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6359.81, 2645.21, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6359.84, 2641.77, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6395.75, 2641.34, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6359.81, 2645.85, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6395.77, 2645.44, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6395.77, 2646.09, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6359.81, 2646.48, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6359.99, 2765.34, 8.78,   -7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6395.62, 2657.87, 22.02,   7.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6359.79, 2780.62, 11.15,   -7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6359.75, 2784.01, 10.02,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 6395.85, 2783.94, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 6395.83, 2780.45, 11.12,   -7.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6183.71, 2758.79, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6188.14, 2767.84, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6191.37, 2777.93, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6198.24, 2786.83, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6273.33, 2596.47, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6278.19, 2583.36, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6286.85, 2572.10, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6297.53, 2563.11, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6359.89, 2904.34, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6395.68, 2796.04, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6359.89, 3036.63, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6395.68, 2928.32, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6359.89, 3168.94, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6395.68, 3060.65, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6359.89, 3301.21, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6395.68, 3193.03, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6359.89, 3433.51, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6395.68, 3325.33, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6359.70, 3458.37, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6395.86, 3458.30, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6359.71, 3483.97, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6359.71, 3509.57, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6359.72, 3535.16, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6395.84, 3483.87, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6395.82, 3509.45, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6395.81, 3535.04, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6393.59, 3560.44, 10.70,   0.00, 0.00, 10.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6384.59, 3583.87, 10.70,   0.00, 0.00, 32.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6367.20, 3601.84, 10.70,   0.00, 0.00, 56.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6343.99, 3611.20, 10.70,   0.00, 0.00, 80.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6318.97, 3610.30, 10.70,   0.00, 0.00, 104.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6296.49, 3599.32, 10.70,   0.00, 0.00, 128.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6280.02, 3580.35, 10.70,   0.00, 0.00, 150.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6272.52, 3556.51, 10.70,   0.00, 0.00, 175.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6271.41, 3530.97, 10.70,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6359.19, 3552.47, 10.74,   0.00, 0.00, -84.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6356.82, 3561.30, 10.74,   0.00, 0.00, -66.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6351.83, 3568.99, 10.74,   0.00, 0.00, -48.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6344.58, 3574.46, 10.74,   0.00, 0.00, -26.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6335.84, 3576.96, 10.74,   0.00, 0.00, -6.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6326.71, 3576.48, 10.74,   0.00, 0.00, 12.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6318.47, 3572.80, 10.74,   0.00, 0.00, 36.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6311.99, 3566.33, 10.74,   0.00, 0.00, 54.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6308.14, 3558.08, 10.74,   0.00, 0.00, 76.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6306.95, 3540.89, 10.70,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6306.05, 3515.34, 10.70,   0.00, 0.00, 176.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6299.95, 3490.91, 10.70,   0.00, 0.00, 156.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6285.23, 3470.67, 10.70,   0.00, 0.00, 132.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6263.54, 3458.16, 10.70,   0.00, 0.00, 108.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6238.65, 3455.56, 10.70,   0.00, 0.00, 84.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6214.85, 3463.31, 10.70,   0.00, 0.00, 60.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6195.90, 3479.79, 10.70,   0.00, 0.00, 38.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6185.38, 3502.39, 10.70,   0.00, 0.00, 12.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6182.72, 3527.70, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6182.73, 3553.28, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6182.29, 3578.86, 10.70,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6270.72, 3513.67, 10.74,   0.00, 0.00, -98.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6268.07, 3504.98, 10.74,   0.00, 0.00, -116.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6262.83, 3497.50, 10.74,   0.00, 0.00, -134.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6255.39, 3492.29, 10.74,   0.00, 0.00, -156.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6246.53, 3490.08, 10.74,   0.00, 0.00, -176.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6237.52, 3491.18, 10.74,   0.00, 0.00, -198.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6229.35, 3495.34, 10.74,   0.00, 0.00, -216.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6223.00, 3501.93, 10.74,   0.00, 0.00, -236.00, -1, -1, -1, 300);
CreateDynamicObject(979, 6219.28, 3510.27, 10.74,   0.00, 0.00, -256.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6218.09, 3527.50, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6218.08, 3553.09, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6218.06, 3578.68, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6214.10, 3603.63, 10.70,   0.00, 0.00, 18.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6201.58, 3625.30, 10.70,   0.00, 0.00, 42.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6181.34, 3640.01, 10.70,   0.00, 0.00, 66.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6156.86, 3645.22, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6132.22, 3640.42, 10.70,   0.00, 0.00, 112.00, -1, -1, -1, 300);
CreateDynamicObject(982, 6111.80, 3626.11, 10.70,   0.00, 0.00, 138.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6179.84, 3595.75, 10.74,   0.00, 0.00, -65.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6174.60, 3603.24, 10.74,   0.00, 0.00, -45.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6167.07, 3608.32, 10.74,   0.00, 0.00, -23.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6158.19, 3610.37, 10.74,   0.00, 0.00, -3.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6149.08, 3609.41, 10.74,   0.00, 0.00, 15.00, -1, -1, -1, 300);
CreateDynamicObject(978, 6140.89, 3605.42, 10.74,   0.00, 0.00, 37.00, -1, -1, -1, 300);
CreateDynamicObject(7371, 6096.45, 3606.66, 6.73,   0.00, 0.00, -35.04, -1, -1, -1, 300);
CreateDynamicObject(7371, 6068.27, 3504.48, 6.73,   0.00, 0.00, 145.01, -1, -1, -1, 300);
CreateDynamicObject(7371, 5992.42, 3396.10, 6.73,   0.00, 0.00, 145.01, -1, -1, -1, 300);
CreateDynamicObject(7371, 6020.52, 3498.40, 6.73,   0.00, 0.00, -35.04, -1, -1, -1, 300);
CreateDynamicObject(7371, 5944.51, 3390.06, 6.73,   0.00, 0.00, -35.04, -1, -1, -1, 300);
CreateDynamicObject(7371, 5916.57, 3287.71, 6.73,   0.00, 0.00, 145.01, -1, -1, -1, 300);
CreateDynamicObject(978, 5907.43, 3274.25, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5883.46, 3239.60, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5878.14, 3232.02, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(978, 5873.83, 3223.90, 10.74,   0.00, 0.00, 69.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5872.13, 3206.90, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5872.57, 3181.30, 10.70,   0.00, 0.00, 2.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5868.01, 3281.33, 10.70,   0.00, 0.00, -35.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5853.33, 3260.37, 10.70,   0.00, 0.00, -35.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5841.41, 3237.94, 10.70,   0.00, 0.00, -21.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5836.14, 3213.22, 10.70,   0.00, 0.00, -3.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5835.47, 3187.64, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5835.46, 3162.05, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 5834.90, 3136.47, 10.70,   0.00, 0.00, -2.50, -1, -1, -1, 300);
CreateDynamicObject(711, 6395.31, 3558.46, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6388.35, 3580.10, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6373.66, 3599.21, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6304.67, 3497.59, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6292.13, 3475.04, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6271.52, 3459.35, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6217.21, 3599.65, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6206.66, 3622.29, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 6187.18, 3638.84, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5837.78, 3225.36, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5836.77, 3205.73, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5800.33, 2835.80, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5813.95, 2835.80, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5827.52, 2835.80, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5827.62, 2978.60, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5813.87, 2978.60, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, 5800.01, 2978.60, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//дрифт трасса 3 (конец)

//дрифт трасса 4 (начало)
ObjGam[22] = CreateObject(5004, 2809.69458, -5649.09717, 10.76300,   0.00000, 0.00000, 90.00000);

CreateDynamicObject(16112, 3136.30005, -6157.60010, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16113, 3076.30103, -6222.00000, 9.70000,   0.00000, 0.00000, 19.99510, -1, -1, -1, 300);
CreateDynamicObject(16113, 3032.69995, -6196.70020, 9.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16113, 2991.50000, -6174.39990, 9.70000,   0.00000, 0.00000, 26.00000, -1, -1, -1, 300);
CreateDynamicObject(16113, 2952.43726, -6151.04297, 9.70000,   0.00000, 0.00000, 342.00000, -1, -1, -1, 300);
CreateDynamicObject(16113, 2912.30103, -6130.50000, 9.70000,   0.00000, 0.00000, 29.99270, -1, -1, -1, 300);
CreateDynamicObject(16113, 2875.50000, -6106.89990, 9.70000,   0.00000, 0.00000, 309.99570, -1, -1, -1, 300);
CreateDynamicObject(16121, 3237.89990, -6177.60107, 9.70000,   0.00000, 0.00000, 153.98441, -1, -1, -1, 300);
CreateDynamicObject(16121, 3239.12793, -5789.89893, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 300);
CreateDynamicObject(16121, 3233.50000, -5830.50000, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 300);
CreateDynamicObject(16121, 3232.80103, -6034.70020, 9.70000,   0.00000, 0.00000, 157.97791, -1, -1, -1, 300);
CreateDynamicObject(16121, 3232.30103, -5935.89990, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 300);
CreateDynamicObject(16121, 3232.19995, -5884.39990, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 300);
CreateDynamicObject(16121, 3231.19995, -6125.70020, 9.70000,   0.00000, 0.00000, 189.98109, -1, -1, -1, 300);
CreateDynamicObject(16121, 3230.30103, -6079.70020, 9.70000,   0.00000, 0.00000, 153.97890, -1, -1, -1, 300);
CreateDynamicObject(16121, 3229.80103, -5988.60107, 9.70000,   0.00000, 0.00000, 161.97690, -1, -1, -1, 300);
CreateDynamicObject(16121, 3222.30103, -6221.39990, 9.70000,   0.00000, 0.00000, 135.98880, -1, -1, -1, 300);
CreateDynamicObject(16121, 3186.66895, -5690.45996, 10.60000,   0.00000, 0.00000, 235.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3172.60107, -6247.20020, 9.70000,   0.00000, 0.00000, 91.98850, -1, -1, -1, 300);
CreateDynamicObject(16121, 3138.30005, -5685.20020, 10.60000,   0.00000, 0.00000, 261.97690, -1, -1, -1, 300);
CreateDynamicObject(16121, 3121.00000, -6245.30078, 9.70000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 300);
CreateDynamicObject(16121, 3116.50000, -6051.60010, 9.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3030.30103, -5843.30078, 9.50000,   0.00000, 0.00000, 279.99210, -1, -1, -1, 300);
CreateDynamicObject(16121, 3020.10010, -5812.00000, 10.00000,   0.00000, 0.00000, 5.99210, -1, -1, -1, 300);
CreateDynamicObject(16121, 3006.36816, -5853.54199, 9.50000,   0.00000, 0.00000, 173.99600, -1, -1, -1, 300);
CreateDynamicObject(16121, 3001.51855, -5808.98975, 9.50000,   0.00000, 0.00000, 115.98260, -1, -1, -1, 300);
CreateDynamicObject(16121, 2993.50000, -5764.80078, 9.50000,   0.00000, 0.00000, 167.98100, -1, -1, -1, 300);
CreateDynamicObject(16133, 2925.39990, -5971.50000, 10.00000,   0.00000, 0.00000, 127.99620, -1, -1, -1, 300);
CreateDynamicObject(16133, 2898.00000, -5978.39990, 10.70000,   0.00000, 0.00000, 19.99620, -1, -1, -1, 300);
CreateDynamicObject(16133, 2816.90576, -5834.24805, 9.40000,   0.00000, 0.00000, 92.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, 2811.99780, -6010.72900, 9.40000,   0.00000, 0.00000, 242.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, 2779.46362, -5861.32959, 9.40000,   0.00000, 0.00000, 129.98840, -1, -1, -1, 300);
CreateDynamicObject(16133, 2767.26416, -5992.32080, 9.40000,   0.00000, 0.00000, 217.99620, -1, -1, -1, 300);
CreateDynamicObject(16133, 2752.14502, -5902.65234, 9.40000,   0.00000, 0.00000, 144.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, 2745.71289, -5951.49072, 9.40000,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
CreateDynamicObject(16685, 3208.53101, -5800.44385, 10.70000,   0.28020, 0.00000, 88.01150, -1, -1, -1, 300);
CreateDynamicObject(16685, 3206.30103, -5944.20020, 10.70000,   0.27470, 0.00000, 88.00600, -1, -1, -1, 300);
CreateDynamicObject(16685, 3200.76392, -6143.39893, 10.70000,   0.00000, 0.00000, 270.01099, -1, -1, -1, 300);
CreateDynamicObject(16685, 3159.19995, -5960.10107, 10.70000,   0.27470, 0.00000, 90.01100, -1, -1, -1, 300);
CreateDynamicObject(16685, 3158.79004, -5793.27197, 10.70000,   0.28560, 0.00000, 88.01150, -1, -1, -1, 300);
CreateDynamicObject(16685, 3148.57593, -6121.82813, 10.67700,   0.00000, 0.00000, 270.01099, -1, -1, -1, 300);
CreateDynamicObject(16685, 3096.34912, -6122.03223, 10.70000,   0.19780, 0.00000, 270.01099, -1, -1, -1, 300);
CreateDynamicObject(16685, 3075.59399, -5788.32080, 10.70000,   0.28560, 0.00000, 68.01090, -1, -1, -1, 300);
CreateDynamicObject(16685, 3044.36011, -6099.11084, 10.70000,   0.33510, 0.00000, 270.01099, -1, -1, -1, 300);
CreateDynamicObject(16685, 2992.35791, -6098.21582, 10.70000,   0.19780, 0.00000, 270.01099, -1, -1, -1, 300);
CreateDynamicObject(16685, 2977.39990, -5950.89990, 10.80000,   0.28560, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2977.39990, -5743.20020, 10.78000,   0.24720, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2977.19995, -5795.30078, 10.80000,   0.28560, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2977.00000, -5847.50000, 10.78000,   0.29660, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2976.89990, -5899.39990, 10.78000,   0.28560, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2976.89990, -6003.00000, 10.76900,   0.29110, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2960.39990, -5695.79980, 10.80000,   0.24720, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2940.18799, -6060.40381, 10.70000,   0.01650, 0.00000, 270.01099, -1, -1, -1, 300);
CreateDynamicObject(16685, 2918.08105, -5657.60791, 10.80000,   0.24720, 0.00000, 180.01649, -1, -1, -1, 300);
CreateDynamicObject(16685, 2897.29199, -5853.29688, 10.70000,   0.18680, 0.00000, 184.00549, -1, -1, -1, 300);
CreateDynamicObject(16685, 2888.26196, -6027.52686, 10.70000,   0.19780, 0.00000, 270.01651, -1, -1, -1, 300);
CreateDynamicObject(16685, 2871.93994, -5978.31982, 10.70000,   0.18680, 0.00000, 180.00549, -1, -1, -1, 300);
CreateDynamicObject(16685, 2865.26611, -5906.86084, 10.70000,   0.18680, 0.00000, 180.00549, -1, -1, -1, 300);
CreateDynamicObject(16685, 2856.80005, -5823.50000, 10.50000,   0.20000, 0.00000, 90.01650, -1, -1, -1, 300);
CreateDynamicObject(16685, 2854.69189, -5952.35400, 10.70000,   0.18680, 0.00000, 180.00549, -1, -1, -1, 300);
CreateDynamicObject(16685, 2836.13989, -6022.30713, 10.50000,   0.19780, 0.00000, 270.01651, -1, -1, -1, 300);
CreateDynamicObject(3578, 7154.51123, -10507.41016, 23.32500,   0.00000, 0.00000, 272.95480, -1, -1, -1, 300);
CreateDynamicObject(3578, 7168.26123, -10507.74023, 23.32500,   0.00000, 0.00000, 261.94061, -1, -1, -1, 300);
CreateDynamicObject(3666, 7091.00000, -10896.29980, 12.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(688, 3200.93335, -6100.51709, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(688, 3186.00000, -6088.39990, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(688, 3148.71338, -6079.70654, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3110.60864, -6134.41797, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3086.16138, -6138.75439, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3085.92554, -6048.92529, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3066.94971, -6119.70264, 10.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3050.58276, -6039.53271, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3041.71997, -6113.69092, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 3019.50000, -6103.79980, 10.80000,   0.00000, 0.00000, 32.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 2867.11743, -6080.48340, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(690, 2856.14258, -6066.70557, 10.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3168.00000, -6085.10010, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(695, 2925.38037, -6043.42969, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(696, 3005.30005, -6093.00000, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(696, 2993.39990, -6095.10010, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(696, 2984.89990, -6085.00000, 10.80000,   0.00000, 0.00000, 260.00000, -1, -1, -1, 300);
CreateDynamicObject(696, 2972.00000, -6082.79980, 10.70000,   0.00000, 0.00000, 260.00000, -1, -1, -1, 300);
CreateDynamicObject(696, 2962.74268, -6076.72803, 10.70000,   0.00000, 0.00000, 260.00000, -1, -1, -1, 300);
CreateDynamicObject(696, 2950.22119, -6071.59570, 10.70000,   0.00000, 0.00000, 109.99690, -1, -1, -1, 300);
CreateDynamicObject(696, 2938.22119, -6061.66211, 10.70000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(790, 3114.63013, -5871.31006, 10.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(791, 7118.10010, -10903.00000, 10.30000,   0.00000, 0.00000, 39.99570, -1, -1, -1, 300);
CreateDynamicObject(791, 3197.19995, -5912.89990, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(791, 3093.38501, -5907.86279, 10.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(791, 3014.50000, -5935.39990, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(791, 2959.19995, -5932.20020, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, 3013.89990, -6133.30078, 11.00000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 300);
CreateDynamicObject(8171, 2894.30005, -6064.29980, 11.00000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 300);
CreateDynamicObject(827, 7173.55615, -10508.03027, 25.33800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3174.30103, -6147.89990, 11.00000,   0.00000, 0.00000, 251.99890, -1, -1, -1, 300);
CreateDynamicObject(8343, 3060.80103, -5841.30078, 10.97000,   0.00000, 0.00000, 215.99670, -1, -1, -1, 300);
CreateDynamicObject(8343, 3000.60010, -5880.70020, 10.99900,   0.00000, 0.00000, 116.39470, -1, -1, -1, 300);
CreateDynamicObject(8343, 2977.10107, -5992.20020, 10.98000,   0.00000, 0.00000, 339.99939, -1, -1, -1, 300);
CreateDynamicObject(8343, 2966.00000, -6029.89990, 11.00000,   0.00000, 0.00000, 71.99890, -1, -1, -1, 300);
CreateDynamicObject(8343, 2915.39990, -5719.70020, 10.98000,   0.00000, 0.00000, 276.99829, -1, -1, -1, 300);
CreateDynamicObject(8343, 2895.10010, -6037.00000, 11.02200,   0.00000, 0.00000, 59.99630, -1, -1, -1, 300);
CreateDynamicObject(8343, 2831.50000, -5881.20020, 10.93000,   0.00000, 0.00000, 325.99731, -1, -1, -1, 300);
CreateDynamicObject(8344, 3173.08081, -5778.09473, 10.96000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3141.89990, -6179.29980, 10.98000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3096.00000, -5761.89990, 11.00000,   0.00000, 0.00000, 279.99759, -1, -1, -1, 300);
CreateDynamicObject(8344, 3076.00000, -5980.10107, 11.00000,   0.00000, 0.00000, 63.99540, -1, -1, -1, 300);
CreateDynamicObject(8344, 2857.69995, -6025.70020, 11.00000,   359.89999, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 2801.10010, -5933.00000, 11.02900,   359.79129, 0.00000, 341.97690, -1, -1, -1, 300);
CreateDynamicObject(8355, 3150.10010, -5912.10010, 11.00000,   0.00000, 0.00000, 339.99799, -1, -1, -1, 300);
CreateDynamicObject(8355, 3070.21997, -6088.89990, 11.00000,   0.00000, 0.00000, 72.00000, -1, -1, -1, 300);
CreateDynamicObject(8355, 2953.10010, -5795.10010, 11.01900,   0.00000, 0.00000, 7.99800, -1, -1, -1, 300);
CreateDynamicObject(8355, 2924.39990, -5881.50000, 10.94000,   0.00000, 0.00000, 76.99770, -1, -1, -1, 300);
CreateDynamicObject(996, 3043.10010, -6144.50000, 10.65000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 300);
CreateDynamicObject(996, 3035.50000, -6157.70020, 10.65000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 300);
//CreateDynamicObject(5004, 2809.69458, -5649.09717, 10.76300,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3233.30884, -5741.04346, 9.70000,   0.00000, 0.00000, 185.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3222.51538, -5716.72949, 9.70000,   0.00000, 0.00000, 207.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3098.08472, -5693.00928, 10.60000,   0.00000, 0.00000, 261.97690, -1, -1, -1, 300);
CreateDynamicObject(16121, 3056.20166, -5707.41699, 10.60000,   0.00000, 0.00000, 287.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3025.69971, -5737.84424, 10.60000,   0.00000, 0.00000, 316.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3013.66577, -5765.01221, 10.60000,   0.00000, 0.00000, 338.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3089.38110, -5670.90771, 10.60000,   0.00000, 0.00000, 164.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3082.17773, -5648.59766, 10.60000,   0.00000, 0.00000, 164.17999, -1, -1, -1, 300);
CreateDynamicObject(16121, 3049.60083, -5616.93311, 10.60000,   0.00000, 0.00000, 250.75999, -1, -1, -1, 300);
CreateDynamicObject(16121, 3013.67773, -5617.24561, 10.60000,   0.00000, 0.00000, 251.25999, -1, -1, -1, 300);
CreateDynamicObject(16121, 2972.41699, -5617.54004, 10.60000,   0.00000, 0.00000, 250.74001, -1, -1, -1, 300);
CreateDynamicObject(16121, 2931.39673, -5618.56299, 10.60000,   0.00000, 0.00000, 251.25999, -1, -1, -1, 300);
CreateDynamicObject(16121, 2894.49023, -5617.16113, 10.60000,   0.00000, 0.00000, 250.80000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2853.52246, -5617.21777, 10.60000,   0.00000, 0.00000, 251.25999, -1, -1, -1, 300);
CreateDynamicObject(16121, 2811.72461, -5617.18945, 10.60000,   0.00000, 0.00000, 250.75999, -1, -1, -1, 300);
CreateDynamicObject(16121, 2769.97144, -5615.30225, 10.60000,   0.00000, 0.00000, 251.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2740.60522, -5642.66650, 10.60000,   0.00000, 0.00000, 338.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2739.31836, -5681.69873, 10.60000,   0.00000, 0.00000, 337.44000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2739.25146, -5722.23047, 10.60000,   0.00000, 0.00000, 345.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2740.59009, -5764.55859, 10.60000,   0.00000, 0.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2764.23804, -5804.46484, 10.60000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2817.77637, -5805.20410, 10.60000,   0.00000, 0.00000, 42.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3194.54370, -6241.13379, 9.70000,   0.00000, 0.00000, 105.00000, -1, -1, -1, 300);
CreateDynamicObject(791, 3123.34595, -5851.23633, 10.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(790, 3132.25732, -5810.08936, 10.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16092, 3046.99194, -5869.51416, 11.32740,   0.00000, 0.00000, 26.00000, -1, -1, -1, 300);
CreateDynamicObject(16092, 3052.89014, -5881.65771, 11.32740,   0.00000, 0.00000, 26.00000, -1, -1, -1, 300);
CreateDynamicObject(16092, 3058.78882, -5893.79102, 11.32740,   0.00000, 0.00000, 26.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 3044.83789, -5867.21875, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 3047.43042, -5872.56494, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 3050.76001, -5879.33643, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 3053.35034, -5884.67480, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 3056.61914, -5891.44482, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 3059.20337, -5896.82080, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(8682, 2896.48706, -5895.01855, 11.47260,   0.00000, 0.00000, 76.64000, -1, -1, -1, 300);
CreateDynamicObject(982, 2952.70386, -5908.30029, 11.59770,   0.00000, 0.00000, 77.02000, -1, -1, -1, 300);
CreateDynamicObject(982, 2977.62622, -5914.07959, 11.59770,   0.00000, 0.00000, 77.02000, -1, -1, -1, 300);
CreateDynamicObject(982, 3002.84082, -5917.73193, 11.59770,   0.00000, 0.00000, 86.54000, -1, -1, -1, 300);
CreateDynamicObject(982, 3027.70972, -5914.34033, 11.59770,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3050.99072, -5903.96191, 11.59770,   0.00000, 0.00000, 119.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3072.39014, -5890.04834, 11.59770,   0.00000, 0.00000, 127.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3088.89355, -5871.21436, 11.59770,   0.00000, 0.00000, 150.56000, -1, -1, -1, 300);
CreateDynamicObject(982, 3096.73950, -5847.37598, 11.59770,   0.00000, 0.00000, 173.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3094.99121, -5822.32910, 11.59770,   0.00000, 0.00000, 195.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3206.91748, -5820.54102, 11.59770,   0.00000, 0.00000, 149.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3164.28125, -5805.96436, 11.59770,   0.00000, 0.00000, 175.00000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3184.87280, -5873.72705, 11.47260,   0.00000, 0.00000, -20.06000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3147.75635, -5860.94336, 11.47260,   0.00000, 0.00000, -20.06000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3157.84448, -5947.71680, 11.47260,   0.00000, 0.00000, -20.06000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3123.58569, -5927.67480, 11.47260,   0.00000, 0.00000, -19.76000, -1, -1, -1, 300);
CreateDynamicObject(982, 3134.67236, -6000.14795, 11.59770,   0.00000, 0.00000, 142.67999, -1, -1, -1, 300);
CreateDynamicObject(982, 3115.68994, -6016.51074, 11.59770,   0.00000, 0.00000, 119.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3091.75610, -6023.93506, 11.59770,   0.00000, 0.00000, 95.54000, -1, -1, -1, 300);
CreateDynamicObject(982, 3066.72559, -6021.62842, 11.59770,   0.00000, 0.00000, 74.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3042.91235, -6012.45264, 11.59770,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3027.50464, -5961.51221, 11.59770,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3003.47144, -5953.25293, 11.59770,   0.00000, 0.00000, 78.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 2978.44482, -5953.26025, 11.59770,   0.00000, 0.00000, 102.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 2955.32739, -5963.08984, 11.59770,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 2935.85083, -5979.46240, 11.59770,   0.00000, 0.00000, 136.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 2928.05078, -6039.32568, 11.59770,   0.00000, 0.00000, 208.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 2943.19653, -6059.56836, 11.59770,   0.00000, 0.00000, 225.60001, -1, -1, -1, 300);
CreateDynamicObject(982, 2964.03491, -6073.70215, 11.59770,   0.00000, 0.00000, 246.00000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3018.52344, -6092.70605, 11.47260,   0.00000, 0.00000, 72.12000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3074.80737, -6069.68018, 11.47260,   0.00000, 0.00000, 71.96000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3104.13452, -6120.31006, 11.47260,   0.00000, 0.00000, 72.12000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3130.19971, -6087.70215, 11.47260,   0.00000, 0.00000, 71.96000, -1, -1, -1, 300);
CreateDynamicObject(982, 3184.06055, -6108.00977, 11.59770,   0.00000, 0.00000, 240.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3150.87646, -6136.51074, 11.47480,   0.00000, 0.00000, -30.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3157.88623, -6142.38623, 11.47480,   0.00000, 0.00000, -50.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3205.49707, -6121.92188, 11.59770,   0.00000, 0.00000, 234.00000, -1, -1, -1, 300);
CreateDynamicObject(8682, 3062.62964, -6138.58643, 11.47260,   0.00000, 0.00000, 59.92000, -1, -1, -1, 300);
CreateDynamicObject(982, 3113.57056, -6165.49072, 11.59770,   0.00000, 0.00000, 70.00000, -1, -1, -1, 300);
CreateDynamicObject(8682, 2984.71802, -6093.63525, 11.47260,   0.00000, 0.00000, 60.12000, -1, -1, -1, 300);
CreateDynamicObject(982, 2934.67407, -6064.79834, 11.59770,   0.00000, 0.00000, 59.86000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2788.56226, -5801.99756, 10.60000,   0.00000, 0.00000, 68.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3142.53979, -5759.80615, 9.40000,   0.00000, 0.00000, 265.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3161.69214, -5791.90674, 9.40000,   0.00000, 0.00000, 146.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3112.25903, -5766.22510, 9.40000,   0.00000, 0.00000, 265.88000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3091.24072, -5795.81006, 9.40000,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2852.50000, -5833.85645, 9.40000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2902.18555, -5845.48779, 9.40000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2925.13403, -5821.75879, 9.40000,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3056.28345, -5968.64453, 9.40000,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3100.25488, -5964.63086, 9.40000,   0.00000, 0.00000, 138.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2823.11694, -5903.43115, 9.40000,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2821.74414, -5951.16943, 9.40000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2859.97241, -5958.29443, 9.40000,   0.00000, 0.00000, 51.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2865.80396, -5897.20117, 9.40000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 3012.68262, -6004.89160, 9.40000,   0.00000, 0.00000, -131.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2983.60449, -6017.56738, 9.40000,   0.00000, 0.00000, 61.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2986.45728, -6034.37744, 9.40000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 3019.87671, -6051.79395, 11.59770,   0.00000, 0.00000, 72.00000, -1, -1, -1, 300);
CreateDynamicObject(16121, 2916.54932, -6016.59863, 9.40000,   0.00000, 0.00000, 157.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 2912.51221, -6051.99658, 11.59770,   0.00000, 0.00000, 60.04000, -1, -1, -1, 300);
CreateDynamicObject(982, 2898.53589, -6033.13232, 11.59770,   0.00000, 0.00000, 13.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, 2851.28589, -6037.74219, 9.40000,   0.00000, 0.00000, 5.00000, -1, -1, -1, 300);
//дрифт трасса 4 (конец)

//Ухо (начало)
	CreateDynamicObject(18275,-298.66015625,1506.69140625,76.63683319,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cw2_mtbfinish) (1)
	CreateDynamicObject(18275,-305.72528076,1506.70825195,76.63101196,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cw2_mtbfinish) (2)
	CreateDynamicObject(16092,-300.95996094,1490.24707031,74.00608826,0.00000000,0.00000000,272.75207520, -1, -1, -1, 300); //object(des_pipestrut05) (1)
	CreateDynamicObject(3281,-295.71337891,1504.17248535,75.41996765,0.00000000,355.50000000,270.30029297, -1, -1, -1, 300); //object(mtb_banner1) (1)
	CreateDynamicObject(3281,-295.05929565,1493.37573242,75.62093353,0.00000000,0.00000000,274.28112793, -1, -1, -1, 300); //object(mtb_banner1) (3)
	CreateDynamicObject(3281,-295.53125000,1500.55761719,75.57463074,0.00000000,0.00000000,276.26220703, -1, -1, -1, 300); //object(mtb_banner1) (4)
	CreateDynamicObject(3281,-295.26464844,1496.96777344,75.58135223,0.00000000,0.00000000,272.29614258, -1, -1, -1, 300); //object(mtb_banner1) (5)
	CreateDynamicObject(3281,-294.81097412,1509.16918945,75.58325958,0.00000000,0.00000000,238.32226562, -1, -1, -1, 300); //object(mtb_banner1) (6)
	CreateDynamicObject(3281,-292.51803589,1511.87255859,75.58089447,0.00000000,0.00000000,222.44104004, -1, -1, -1, 300); //object(mtb_banner1) (7)
	CreateDynamicObject(3281,-289.82015991,1514.28417969,75.58325958,0.00000000,0.00000000,222.44018555, -1, -1, -1, 300); //object(mtb_banner1) (8)
	CreateDynamicObject(3281,-284.49981689,1519.08325195,75.58325958,0.00000000,0.00000000,222.44018555, -1, -1, -1, 300); //object(mtb_banner1) (10)
	CreateDynamicObject(3281,-281.82086182,1521.47412109,75.58325958,0.00000000,0.00000000,222.44018555, -1, -1, -1, 300); //object(mtb_banner1) (11)
	CreateDynamicObject(3281,-279.15634155,1523.86181641,75.58325958,0.00000000,0.00000000,222.44018555, -1, -1, -1, 300); //object(mtb_banner1) (12)
	CreateDynamicObject(3281,-276.48980713,1526.24975586,75.58325958,0.00000000,0.00000000,222.44018555, -1, -1, -1, 300); //object(mtb_banner1) (13)
	CreateDynamicObject(3281,-273.85894775,1528.69067383,75.58325958,0.00000000,0.00000000,224.42517090, -1, -1, -1, 300); //object(mtb_banner1) (14)
	CreateDynamicObject(3281,-271.26782227,1531.14843750,75.58325958,0.00000000,0.00000000,224.42321777, -1, -1, -1, 300); //object(mtb_banner1) (15)
	CreateDynamicObject(3281,-287.17089844,1516.69726562,75.58325958,0.00000000,0.00000000,222.44018555, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-347.29992676,1513.06933594,75.53014374,0.00000000,0.00000000,100.76544189, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-347.73181152,1520.22851562,75.58325958,0.00000000,0.00000000,90.83496094, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-347.65716553,1516.63195801,75.58325958,0.00000000,0.00000000,90.83496094, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-348.70828247,1523.58593750,75.58089447,0.00000000,0.00000000,120.69989014, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-349.52719116,1526.91748047,75.45513916,0.00000000,2.00000000,86.81582642, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-349.23638916,1530.50268555,75.38013458,0.00000000,0.00000000,82.84399414, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-347.70013428,1533.47167969,75.38013458,0.00000000,0.00000000,41.11260986, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-309.85531616,1509.01794434,75.58325958,0.00000000,0.00000000,128.22167969, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-312.72845459,1510.85522461,75.58325958,0.00000000,0.00000000,166.07128906, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-316.26821899,1511.25158691,75.58325958,0.00000000,0.00000000,179.96423340, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-319.85263062,1511.22509766,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-323.45703125,1511.19726562,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-327.07324219,1511.17089844,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-330.65832520,1511.16699219,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-344.07409668,1549.67932129,75.58325958,0.00000000,0.00000000,359.46618652, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-337.84732056,1511.13354492,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-341.45111084,1511.13073730,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-345.05133057,1511.20495605,75.53325653,0.00000000,0.00000000,176.50659180, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(1348,-345.52774048,1535.52551270,75.26502991,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cj_o2tanks) (1)
	CreateDynamicObject(3633,-340.05026245,1548.34460449,75.03730011,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(imoildrum4_las) (1)
	CreateDynamicObject(3633,-341.34402466,1548.37548828,75.03730011,0.00000000,0.00000000,23.81982422, -1, -1, -1, 300); //object(imoildrum4_las) (2)
	CreateDynamicObject(3633,-340.64022827,1548.28417969,75.98509979,0.00000000,0.00000000,318.04345703, -1, -1, -1, 300); //object(imoildrum4_las) (3)
	CreateDynamicObject(1262,-297.85943604,1491.22204590,81.47664642,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (1)
	CreateDynamicObject(1262,-299.48098755,1491.16906738,81.47664642,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (2)
	CreateDynamicObject(1262,-300.89062500,1491.07617188,81.47664642,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (3)
	CreateDynamicObject(1262,-303.93493652,1490.85498047,81.47664642,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (4)
	CreateDynamicObject(955,-303.33605957,1538.65270996,74.96252441,0.00000000,0.00000000,47.81799316, -1, -1, -1, 300); //object(cj_ext_sprunk) (1)
	CreateDynamicObject(1370,-340.57083130,1548.39465332,77.00170898,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cj_flame_drum) (1)
	CreateDynamicObject(1437,-318.16833496,1536.61791992,74.56250000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_ladder_2) (1)
	CreateDynamicObject(1521,-308.50094604,1538.26623535,75.72425842,0.00000000,0.00000000,45.83502197, -1, -1, -1, 300); //object(dyn_scaff2_cover) (1)
	CreateDynamicObject(8674,-333.99966431,1545.30895996,76.02941895,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(csrsfence02_lvs) (1)
	CreateDynamicObject(8674,-314.30258179,1547.51477051,76.02941895,0.00000000,0.00000000,41.81988525, -1, -1, -1, 300); //object(csrsfence02_lvs) (2)
	CreateDynamicObject(18074,-293.65032959,1541.71313477,74.70201874,0.00000000,0.00000000,44.65478516, -1, -1, -1, 300); //object(donut_rail) (1)
	CreateDynamicObject(18074,-296.32064819,1534.73388672,74.70201874,0.00000000,0.00000000,89.94384766, -1, -1, -1, 300); //object(donut_rail) (2)
	CreateDynamicObject(18074,-306.57043457,1534.70996094,74.70201874,0.00000000,0.00000000,89.93957520, -1, -1, -1, 300); //object(donut_rail) (3)
	CreateDynamicObject(18074,-316.76684570,1534.70349121,74.70201874,0.00000000,0.00000000,89.93957520, -1, -1, -1, 300); //object(donut_rail) (4)
	CreateDynamicObject(18074,-327.03289795,1534.74060059,74.70201874,0.00000000,0.00000000,89.93957520, -1, -1, -1, 300); //object(donut_rail) (5)
	CreateDynamicObject(16151,-299.52160645,1541.57153320,74.88742828,0.00000000,0.00000000,135.56500244, -1, -1, -1, 300); //object(ufo_bar) (1)
	CreateDynamicObject(1432,-298.08212280,1536.39746094,74.56250000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_table_2) (1)
	CreateDynamicObject(1810,-329.81900024,1536.79907227,75.61170959,0.00000000,0.00000000,35.72976685, -1, -1, -1, 300); //object(cj_foldchair) (1)
	CreateDynamicObject(2802,-293.56729126,1538.52587891,74.89276123,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(castable1) (1)
	CreateDynamicObject(2800,-293.50390625,1538.48828125,75.05368805,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(castable2top) (1)
	CreateDynamicObject(3506,-292.06921387,1494.22766113,75.03724670,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsn_nitree_y02) (1)
	CreateDynamicObject(3506,-292.35836792,1503.09875488,74.94295502,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsn_nitree_y02) (2)
	CreateDynamicObject(3506,-309.61984253,1502.13696289,74.59343719,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsn_nitree_y02) (3)
	CreateDynamicObject(3506,-308.98599243,1493.70959473,74.74890900,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsn_nitree_y02) (4)
	CreateDynamicObject(3511,-369.78485107,1477.32263184,62.31079102,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsn_nitree_b01) (2)
	CreateDynamicObject(2048,-302.17877197,1507.25610352,77.41907501,0.00000000,0.00000000,179.57043457, -1, -1, -1, 300); //object(cj_flag2) (1)
	CreateDynamicObject(7520,-287.17187500,1551.37500000,74.35937500,0.00000000,0.00000000,314.91210938, -1, -1, -1, 300); //object(vgnlowbuild203) (1)
	CreateDynamicObject(3281,-307.23684692,1492.74694824,75.56694031,0.00000000,358.75000000,94.82135010, -1, -1, -1, 300); //object(mtb_banner1) (5)
	CreateDynamicObject(3281,-307.55273438,1496.32617188,75.61750793,0.00000000,358.99475098,94.81201172, -1, -1, -1, 300); //object(mtb_banner1) (5)
	CreateDynamicObject(3281,-307.89883423,1499.89672852,75.55285645,0.00000000,359.49206543,95.56201172, -1, -1, -1, 300); //object(mtb_banner1) (5)
	CreateDynamicObject(3281,-308.32666016,1503.48522949,75.50608063,0.00000000,0.73913574,95.30908203, -1, -1, -1, 300); //object(mtb_banner1) (5)
	CreateDynamicObject(3281,-313.32171631,1561.23681641,75.58325958,0.00000000,0.00000000,128.17150879, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-315.67190552,1563.93457031,75.58325958,0.00000000,0.00000000,133.13641357, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-318.15042114,1566.56030273,75.58325958,0.00000000,0.00000000,133.38232422, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-319.17031860,1569.58496094,75.53014374,0.00000000,0.00000000,79.60461426, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-317.61849976,1572.63159180,75.58325958,0.00000000,0.00000000,45.67645264, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-315.09576416,1575.19799805,75.58325958,0.00000000,0.00000000,44.19067383, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-312.54360962,1577.72924805,75.58325958,0.00000000,0.00000000,44.18701172, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-309.99514771,1580.27453613,75.58325958,0.00000000,0.00000000,44.93701172, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-307.51040649,1582.88854980,75.58325958,0.00000000,0.00000000,46.91906738, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-304.98577881,1585.46325684,75.58325958,0.00000000,0.00000000,43.43212891, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-299.62115479,1583.25561523,75.58355713,0.00000000,0.00000000,314.28906250, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-302.29882812,1585.61621094,75.50514221,0.00000000,0.00000000,321.72363281, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-297.04962158,1580.73291016,75.58446503,0.00000000,0.00000000,316.27087402, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-294.48135376,1578.24169922,75.58589172,0.00000000,0.00000000,314.76892090, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-293.66683960,1575.19299316,75.60514832,0.00000000,0.00000000,254.76562500, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-334.25976562,1511.15625000,75.58325958,0.00000000,0.00000000,179.96154785, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(1238,-311.29766846,1401.69189453,71.41777039,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (1)
	CreateDynamicObject(1238,-308.47787476,1401.30957031,71.51658630,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (2)
	CreateDynamicObject(1238,-306.17224121,1401.58349609,71.60572815,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (3)
	CreateDynamicObject(1238,-304.57519531,1402.35717773,71.62454987,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (4)
	CreateDynamicObject(1238,-303.44628906,1403.33886719,71.61802673,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-302.47079468,1405.00268555,71.60337067,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (6)
	CreateDynamicObject(1238,-309.98339844,1401.49865723,71.46446228,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (7)
	CreateDynamicObject(1238,-307.39743042,1401.42321777,71.58328247,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (8)
	CreateDynamicObject(1238,-301.95220947,1406.49523926,71.59165955,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (9)
	CreateDynamicObject(1238,-301.48696899,1407.99841309,71.57765198,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (10)
	CreateDynamicObject(1238,-312.04092407,1402.69970703,71.12748718,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (11)
	CreateDynamicObject(1238,-356.70385742,1457.84252930,63.54178238,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (12)
	CreateDynamicObject(1238,-360.32919312,1458.51147461,63.25307846,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (13)
	CreateDynamicObject(1238,-364.08627319,1458.38598633,62.80887604,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (14)
	CreateDynamicObject(1238,-367.40560913,1457.78125000,62.26379395,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (15)
	CreateDynamicObject(1238,-369.09280396,1457.04553223,61.90884018,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (16)
	CreateDynamicObject(1238,-370.51928711,1456.20166016,61.59343338,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (17)
	CreateDynamicObject(1238,-371.61541748,1455.25988770,61.32390976,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (18)
	CreateDynamicObject(1238,-373.55221558,1450.08618164,60.84804153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (19)
	CreateDynamicObject(1238,-372.19976807,1445.53833008,60.60423279,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (20)
	CreateDynamicObject(1238,-372.65026855,1447.05224609,60.68487167,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (21)
	CreateDynamicObject(1238,-373.09408569,1448.56518555,60.76591110,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (22)
	CreateDynamicObject(1238,-358.55770874,1458.18041992,63.38511276,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (23)
	CreateDynamicObject(1238,-362.36608887,1458.44543457,62.99996185,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (24)
	CreateDynamicObject(1238,-365.69049072,1458.11608887,62.57028580,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (25)
	CreateDynamicObject(1238,-373.24926758,1451.65930176,60.91929626,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (28)
	CreateDynamicObject(1238,-372.34451294,1454.10998535,61.14151382,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (29)
	CreateDynamicObject(1238,-372.85577393,1453.02905273,60.98354721,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (30)
	CreateDynamicObject(1238,-329.39895630,1322.10058594,51.89086914,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (31)
	CreateDynamicObject(1238,-371.72949219,1443.81738281,60.50957108,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (32)
	CreateDynamicObject(1238,-328.11041260,1322.81518555,52.25366974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (33)
	CreateDynamicObject(1238,-326.30532837,1325.41882324,52.92094421,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (34)
	CreateDynamicObject(1238,-332.28628540,1322.19812012,51.35661697,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (35)
	CreateDynamicObject(1238,-335.69729614,1323.56030273,50.88260651,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (36)
	CreateDynamicObject(1238,-326.00503540,1328.94506836,53.30167770,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (37)
	CreateDynamicObject(1238,-326.12808228,1327.07495117,53.09842300,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (38)
	CreateDynamicObject(1238,-333.83752441,1322.79479980,51.13758850,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (39)
	CreateDynamicObject(1238,-327.03396606,1324.01550293,52.59884262,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (40)
	CreateDynamicObject(1238,-330.85299683,1322.02929688,51.60293198,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (41)
	CreateDynamicObject(1238,-433.55151367,1451.01379395,33.34466171,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (43)
	CreateDynamicObject(1238,-436.10742188,1452.08984375,33.26166153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (44)
	CreateDynamicObject(1238,-434.90014648,1451.56420898,33.31760788,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (45)
	CreateDynamicObject(1238,-432.25537109,1451.71862793,33.41331100,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (46)
	CreateDynamicObject(1238,-430.88641357,1452.47460938,33.48628616,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (47)
	CreateDynamicObject(1238,-436.43325806,1453.54992676,33.27788925,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (48)
	CreateDynamicObject(1238,-437.19372559,1456.64465332,33.30741501,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (49)
	CreateDynamicObject(1238,-400.29016113,1902.53637695,57.31188965,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (51)
	CreateDynamicObject(1238,-403.93176270,1907.43969727,57.60702515,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (52)
	CreateDynamicObject(1238,-409.40554810,1910.27319336,57.41780472,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (53)
	CreateDynamicObject(1238,-415.64929199,1910.55676270,57.13519669,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (54)
	CreateDynamicObject(1238,-421.33706665,1908.06237793,57.08816147,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (55)
	CreateDynamicObject(1238,-424.89614868,1903.28442383,57.62464905,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (56)
	CreateDynamicObject(1238,-418.50796509,1909.47607422,57.08755875,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (57)
	CreateDynamicObject(1238,-423.16458130,1905.91491699,57.31736374,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (58)
	CreateDynamicObject(1238,-412.35983276,1910.48120117,57.28153229,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (59)
	CreateDynamicObject(1238,-406.59384155,1908.89697266,57.50628281,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (60)
	CreateDynamicObject(1238,-402.01910400,1904.92077637,57.45523453,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (61)
	CreateDynamicObject(1238,-399.03387451,1893.89611816,56.20718765,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (62)
	CreateDynamicObject(1238,-399.67669678,1898.24267578,56.76612091,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (63)
	CreateDynamicObject(1238,-426.48330688,1895.30554199,58.94201279,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (64)
	CreateDynamicObject(1238,-425.71325684,1899.62854004,58.23505402,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (65)
	CreateDynamicObject(1238,-430.37969971,1783.12072754,70.69570923,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (66)
	CreateDynamicObject(1238,-431.71026611,1777.13940430,71.34028625,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (67)
	CreateDynamicObject(1238,-436.80703735,1771.08947754,71.53797913,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (68)
	CreateDynamicObject(1238,-527.05456543,2002.74621582,59.73812866,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (69)
	CreateDynamicObject(1238,-451.13449097,1766.49035645,71.55716705,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (70)
	CreateDynamicObject(1238,-456.03814697,1769.22827148,71.98884583,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (71)
	CreateDynamicObject(1238,-458.74462891,1772.25891113,72.50803375,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (72)
	CreateDynamicObject(1238,-459.73846436,1776.53552246,72.96438599,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (73)
	CreateDynamicObject(1238,-453.71557617,1767.79284668,71.75901794,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (74)
	CreateDynamicObject(1238,-447.82394409,1766.57067871,71.52941895,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (75)
	CreateDynamicObject(1238,-441.80725098,1768.47485352,71.52555084,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (76)
	CreateDynamicObject(1238,-439.27508545,1769.70812988,71.52587891,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (77)
	CreateDynamicObject(1238,-434.65783691,1773.20605469,71.44698334,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (78)
	CreateDynamicObject(1238,-432.93698120,1775.22180176,71.38320160,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (79)
	CreateDynamicObject(1238,-431.15081787,1779.08801270,71.11286926,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (80)
	CreateDynamicObject(1238,-430.60595703,1781.17114258,70.88894653,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (81)
	CreateDynamicObject(1238,-457.43310547,1770.67724609,72.23572540,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (82)
	CreateDynamicObject(1238,-459.36911011,1774.47863770,72.74475098,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (83)
	CreateDynamicObject(1238,-1211.80053711,1807.81652832,40.89518356,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (89)
	CreateDynamicObject(1238,-1209.61621094,1807.55664062,40.91867065,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (90)
	CreateDynamicObject(1238,-1211.63452148,1809.34960938,40.94654846,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (91)
	CreateDynamicObject(1238,-1211.42053223,1811.12500000,41.02624130,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (92)
	CreateDynamicObject(1238,-1207.70178223,1807.26257324,40.94733810,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (93)
	CreateDynamicObject(1238,-1190.58312988,1830.55126953,41.01932144,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (95)
	CreateDynamicObject(1238,-1191.72229004,1830.01513672,41.03623199,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (96)
	CreateDynamicObject(1238,-1192.79980469,1829.21398926,41.04127884,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (97)
	CreateDynamicObject(1238,-1190.01586914,1829.13305664,40.96241760,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (98)
	CreateDynamicObject(1238,-1189.31250000,1827.64270020,40.90253067,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (99)
	CreateDynamicObject(1238,-1188.62414551,1826.00805664,40.89189148,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (100)
	CreateDynamicObject(1238,-1188.07287598,1824.27575684,40.92687225,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (101)
	CreateDynamicObject(3578,-429.32812500,1454.16601562,34.07686234,0.00000000,356.49536133,23.81835938, -1, -1, -1, 300); //object(dockbarr1_la) (1)
	CreateDynamicObject(3578,-436.34008789,1457.77343750,33.81765366,0.00000000,0.74536133,282.22351074, -1, -1, -1, 300); //object(dockbarr1_la) (2)
	CreateDynamicObject(3578,-437.81076050,1428.20043945,32.84934235,0.00000000,357.75000000,14.03009033, -1, -1, -1, 300); //object(dockbarr1_la) (3)
	CreateDynamicObject(3578,-429.19854736,1434.15551758,33.75029373,0.00000000,355.25000000,53.90954590, -1, -1, -1, 300); //object(dockbarr1_la) (4)
	CreateDynamicObject(3578,-445.09082031,1432.61511230,32.97794342,0.00000000,1.74780273,284.69982910, -1, -1, -1, 300); //object(dockbarr1_la) (5)
	CreateDynamicObject(1238,-429.48495483,1452.95617676,33.57000351,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (103)
	CreateDynamicObject(1238,-428.12054443,1453.21142578,33.62733078,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (104)
	CreateDynamicObject(1238,-426.84774780,1453.47521973,33.68293762,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (105)
	CreateDynamicObject(1238,-425.47671509,1453.76086426,33.74296188,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (106)
	CreateDynamicObject(1238,-424.17297363,1454.01867676,33.79889297,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (107)
	CreateDynamicObject(1238,-422.62829590,1454.08483887,33.89249802,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (108)
	CreateDynamicObject(1238,-421.29013062,1454.09790039,33.98566055,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (109)
	CreateDynamicObject(1238,-419.79193115,1454.10351562,34.08933640,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (110)
	CreateDynamicObject(1238,-418.38388062,1454.17663574,34.19150162,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (111)
	CreateDynamicObject(3578,-422.10681152,1460.37500000,34.67202377,0.00000000,356.49536133,57.69839478, -1, -1, -1, 300); //object(dockbarr1_la) (6)
	CreateDynamicObject(3578,-434.83615112,1467.08325195,34.05897903,0.00000000,357.73986816,60.19470215, -1, -1, -1, 300); //object(dockbarr1_la) (7)
	CreateDynamicObject(1238,-436.75683594,1454.81835938,33.28911209,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (113)
	CreateDynamicObject(1238,-437.63140869,1458.34191895,33.32217026,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (114)
	CreateDynamicObject(1238,-437.89251709,1459.99133301,33.34994507,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (115)
	CreateDynamicObject(1238,-438.18371582,1462.16882324,33.36187744,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (116)
	CreateDynamicObject(1238,-438.42718506,1463.99743652,33.37202835,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (117)
	CreateDynamicObject(1238,-438.57431030,1465.70275879,33.39130783,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (118)
	CreateDynamicObject(1238,-438.80963135,1467.53686523,33.39830780,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (119)
	CreateDynamicObject(1238,-439.08215332,1469.69274902,33.41027451,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (120)
	CreateDynamicObject(1238,-425.74859619,1439.56115723,33.72985077,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (121)
	CreateDynamicObject(1238,-427.58889771,1438.27734375,33.70862961,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (122)
	CreateDynamicObject(1238,-429.40188599,1435.89672852,33.64023972,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (123)
	CreateDynamicObject(1238,-428.48941040,1437.13330078,33.67520142,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (124)
	CreateDynamicObject(1238,-446.39178467,1438.80383301,32.75362778,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (125)
	CreateDynamicObject(1238,-421.79278564,1441.26171875,34.02425766,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (126)
	CreateDynamicObject(1238,-419.65194702,1441.43920898,34.37467957,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (127)
	CreateDynamicObject(1238,-417.76818848,1440.95617676,34.78400803,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (128)
	CreateDynamicObject(1238,-414.79553223,1439.19726562,35.54006195,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (129)
	CreateDynamicObject(1238,-416.10882568,1440.00976562,35.21606445,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (130)
	CreateDynamicObject(1238,-413.63998413,1438.05017090,35.81256485,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (131)
	CreateDynamicObject(1238,-412.67709351,1436.92333984,36.05952072,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (132)
	CreateDynamicObject(1238,-411.76757812,1435.45019531,36.27731705,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-423.92285156,1440.61328125,33.79348755,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (135)
	CreateDynamicObject(1238,-446.80999756,1440.65014648,32.81198502,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (136)
	CreateDynamicObject(1238,-447.19412231,1442.30053711,32.86558914,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (137)
	CreateDynamicObject(1238,-447.65939331,1444.23071289,32.93051529,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (138)
	CreateDynamicObject(1238,-448.15689087,1446.34899902,32.99994278,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (139)
	CreateDynamicObject(1238,-448.58569336,1448.49731445,33.08581543,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (140)
	CreateDynamicObject(1238,-448.95828247,1450.51098633,33.16319656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (141)
	CreateDynamicObject(1238,-449.34552002,1452.41711426,33.24046707,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (142)
	CreateDynamicObject(3578,-522.73980713,2001.16076660,60.23957443,0.00000000,359.98681641,322.43408203, -1, -1, -1, 300); //object(dockbarr1_la) (8)
	CreateDynamicObject(3578,-514.32421875,1995.70214844,60.18918991,0.00000000,0.47790527,332.44628906, -1, -1, -1, 300); //object(dockbarr1_la) (9)
	CreateDynamicObject(3578,-504.90646362,1994.46887207,60.08264923,0.00000000,359.73132324,12.14599609, -1, -1, -1, 300); //object(dockbarr1_la) (10)
	CreateDynamicObject(3578,-496.08386230,1998.59436035,60.13920212,0.00000000,359.73083496,38.17547607, -1, -1, -1, 300); //object(dockbarr1_la) (11)
	CreateDynamicObject(1238,-444.40625000,1767.14453125,71.52536011,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (144)
	CreateDynamicObject(1238,-524.42028809,2000.85986328,59.75047302,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (145)
	CreateDynamicObject(1238,-522.08728027,1999.15576172,59.72750092,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (146)
	CreateDynamicObject(1238,-519.77947998,1997.42724609,59.71958923,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (147)
	CreateDynamicObject(1238,-517.24133301,1995.81286621,59.71449661,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (148)
	CreateDynamicObject(1238,-514.77441406,1994.52050781,59.69995880,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (149)
	CreateDynamicObject(1238,-511.63690186,1993.28576660,59.69192505,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (150)
	CreateDynamicObject(1238,-507.92877197,1992.88989258,59.70600510,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (151)
	CreateDynamicObject(1238,-505.17623901,1993.16784668,59.70940781,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (152)
	CreateDynamicObject(1238,-502.82858276,1993.66870117,59.70271301,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (153)
	CreateDynamicObject(1238,-500.35690308,1994.64855957,59.70284271,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (154)
	CreateDynamicObject(1238,-498.16323853,1995.96630859,59.69703293,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (155)
	CreateDynamicObject(1238,-496.11715698,1997.45837402,59.70262146,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (156)
	CreateDynamicObject(1238,-494.03836060,1999.16101074,59.69540787,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (157)
	CreateDynamicObject(1238,-491.70294189,2000.94079590,59.68320847,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (158)
	CreateDynamicObject(1238,-386.63052368,2066.59008789,60.68178940,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (159)
	CreateDynamicObject(1238,-386.14294434,2062.94238281,60.79083633,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (160)
	CreateDynamicObject(1238,-386.42501831,2064.87451172,60.73772812,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (161)
	CreateDynamicObject(1238,-387.88049316,2068.47143555,60.71331406,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (162)
	CreateDynamicObject(1238,-389.20748901,2070.44140625,60.74465942,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (163)
	CreateDynamicObject(1238,-391.40258789,2071.92871094,60.84858322,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (164)
	CreateDynamicObject(1238,-393.96002197,2073.52563477,60.97150803,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (165)
	CreateDynamicObject(1238,-396.15493774,2074.01269531,61.06187057,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (166)
	CreateDynamicObject(1238,-398.24783325,2074.44824219,61.15090942,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (167)
	CreateDynamicObject(1238,-400.32510376,2074.07934570,61.20795059,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (168)
	CreateDynamicObject(1238,-387.09399414,2060.92822266,60.97390366,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (169)
	CreateDynamicObject(1238,-388.18667603,2058.68041992,61.18070602,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (170)
	CreateDynamicObject(1238,-402.39727783,2072.38623047,61.18371964,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (171)
	CreateDynamicObject(3578,-1206.24963379,1807.83032227,41.39677811,0.00000000,359.00000000,348.09008789, -1, -1, -1, 300); //object(dockbarr1_la) (12)
	CreateDynamicObject(3578,-1189.46313477,1824.96166992,41.29677200,0.00000000,358.99475098,111.69689941, -1, -1, -1, 300); //object(dockbarr1_la) (13)
	CreateDynamicObject(1238,-1190.09997559,1805.26232910,40.57626724,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (173)
	CreateDynamicObject(1238,-1188.79541016,1805.61743164,40.49301910,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (174)
	CreateDynamicObject(1238,-1187.65368652,1806.46533203,40.28964615,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (175)
	CreateDynamicObject(1238,-1186.72534180,1807.30383301,40.18196487,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (176)
	CreateDynamicObject(1238,-1186.48571777,1808.56909180,40.22687149,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (177)
	CreateDynamicObject(3578,-1196.17871094,1806.01074219,41.42924500,0.00000000,358.99475098,350.06835938, -1, -1, -1, 300); //object(dockbarr1_la) (14)
	CreateDynamicObject(3578,-1187.10168457,1815.17883301,40.84790421,0.00000000,355.74475098,95.76757812, -1, -1, -1, 300); //object(dockbarr1_la) (15)
	CreateDynamicObject(3666,-1190.07800293,1806.05383301,41.06153488,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (1)
	CreateDynamicObject(3666,-1188.27099609,1807.09741211,40.84122086,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (2)
	CreateDynamicObject(3666,-1187.36889648,1809.07434082,40.81756210,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (3)
	CreateDynamicObject(3578,-1203.14025879,1814.94702148,41.49678421,0.00000000,359.99279785,41.22232056, -1, -1, -1, 300); //object(dockbarr1_la) (16)
	CreateDynamicObject(3578,-1175.04187012,1825.85009766,41.07067108,0.50000000,358.49279785,103.42221069, -1, -1, -1, 300); //object(dockbarr1_la) (17)
	CreateDynamicObject(1238,-1173.47851562,1808.95251465,40.09241867,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (180)
	CreateDynamicObject(1238,-1173.42248535,1807.76098633,40.05176544,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (181)
	CreateDynamicObject(1238,-1172.73461914,1806.57019043,39.85988617,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (182)
	CreateDynamicObject(1238,-1171.93237305,1805.40686035,39.66891479,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (183)
	CreateDynamicObject(1238,-1170.75915527,1804.95959473,39.59871674,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (184)
	CreateDynamicObject(1238,-1169.22302246,1804.50878906,39.50703812,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (185)
	CreateDynamicObject(3881,-1195.17529297,1823.60461426,42.57031250,0.00000000,0.00000000,312.18017578, -1, -1, -1, 300); //object(airsecbooth_sfse) (1)
	CreateDynamicObject(8877,-1208.39782715,1811.22241211,46.81303024,0.00000000,0.00000000,69.97027588, -1, -1, -1, 300); //object(vgsecnstrct10) (1)
	CreateDynamicObject(8877,-1198.69726562,1819.81933594,46.81303024,0.00000000,0.00000000,107.81433105, -1, -1, -1, 300); //object(vgsecnstrct10) (2)
	CreateDynamicObject(3578,-1173.50683594,1815.43652344,40.81965256,0.00000000,357.98950195,93.01025391, -1, -1, -1, 300); //object(dockbarr1_la) (18)
	CreateDynamicObject(3578,-1203.35485840,1838.27185059,41.42177963,0.00000000,0.73913574,33.28073120, -1, -1, -1, 300); //object(dockbarr1_la) (19)
	CreateDynamicObject(3578,-1194.16320801,1842.53369141,41.29151154,0.00000000,0.73913574,15.41265869, -1, -1, -1, 300); //object(dockbarr1_la) (20)
	CreateDynamicObject(3578,-1184.74316406,1841.82324219,41.26271439,0.00000000,359.48913574,335.61840820, -1, -1, -1, 300); //object(dockbarr1_la) (21)
	CreateDynamicObject(3666,-1212.03503418,1830.52209473,41.44337082,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (5)
	CreateDynamicObject(3666,-1210.59130859,1832.02478027,41.44337082,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (6)
	CreateDynamicObject(3666,-1208.97546387,1833.67419434,41.44337082,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (7)
	CreateDynamicObject(3666,-1179.40209961,1837.99792480,41.23948669,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (8)
	CreateDynamicObject(3666,-1178.10937500,1835.35314941,41.19092178,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (9)
	CreateDynamicObject(3666,-1177.09582520,1832.98876953,41.11936951,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (10)
	CreateDynamicObject(3666,-1172.51855469,1808.61279297,40.48425293,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (12)
	CreateDynamicObject(3666,-1171.57922363,1806.35681152,40.23564529,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (13)
	CreateDynamicObject(3666,-1169.52856445,1805.42651367,40.20518112,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (14)
	CreateDynamicObject(3578,-1150.32690430,1792.72509766,40.18971252,0.00000000,356.23901367,7.60571289, -1, -1, -1, 300); //object(dockbarr1_la) (22)
	CreateDynamicObject(3578,-1181.04907227,1791.79663086,40.34969711,0.00000000,1.98852539,0.60424805, -1, -1, -1, 300); //object(dockbarr1_la) (23)
	CreateDynamicObject(3578,-1170.84960938,1791.89453125,39.98836136,0.00000000,1.98852539,0.60424805, -1, -1, -1, 300); //object(dockbarr1_la) (24)
	CreateDynamicObject(3578,-1160.59375000,1791.99804688,39.82629395,0.00000000,359.73632812,0.60424805, -1, -1, -1, 300); //object(dockbarr1_la) (25)
	CreateDynamicObject(3578,-1223.08886719,1816.34436035,41.33303070,0.00000000,358.48608398,73.11254883, -1, -1, -1, 300); //object(dockbarr1_la) (26)
	CreateDynamicObject(3578,-1224.66125488,1806.36364746,41.11954880,0.00000000,359.23388672,88.98846436, -1, -1, -1, 300); //object(dockbarr1_la) (27)
	CreateDynamicObject(3578,-1220.79089355,1798.47851562,41.11045456,359.25000000,1.22839355,143.47875977, -1, -1, -1, 300); //object(dockbarr1_la) (28)
	CreateDynamicObject(3666,-1215.59838867,1795.38378906,41.18933105,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (16)
	CreateDynamicObject(3666,-1213.91845703,1795.08068848,41.21792984,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (17)
	CreateDynamicObject(3666,-1212.31701660,1794.85754395,41.23337936,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (18)
	CreateDynamicObject(3666,-1187.27478027,1792.02880859,40.54842377,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (19)
	CreateDynamicObject(3666,-1188.79711914,1792.07104492,40.64556503,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (20)
	CreateDynamicObject(3666,-1190.38842773,1792.12390137,40.73072052,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (21)
	CreateDynamicObject(3666,-1144.30712891,1793.39733887,40.14059448,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (22)
	CreateDynamicObject(3666,-1142.94299316,1793.59289551,40.22418594,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (23)
	CreateDynamicObject(3666,-1141.56884766,1793.82983398,40.30499268,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (24)
	CreateDynamicObject(3578,-1163.35729980,1805.08544922,39.80556870,0.00000000,359.73852539,3.07421875, -1, -1, -1, 300); //object(dockbarr1_la) (29)
	CreateDynamicObject(3666,-1157.32666016,1805.33874512,39.83976364,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (26)
	CreateDynamicObject(3666,-1155.82202148,1805.44335938,39.86398697,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (27)
	CreateDynamicObject(3666,-1154.69860840,1805.51696777,39.88013840,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las) (28)
	CreateDynamicObject(1238,-1153.82324219,1805.11962891,39.50153732,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (187)
	CreateDynamicObject(1238,-1152.62561035,1805.18664551,39.51382446,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (188)
	CreateDynamicObject(1238,-1151.46472168,1805.38085938,39.55514526,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (189)
	CreateDynamicObject(1238,-1211.43981934,1794.95190430,41.00743484,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (190)
	CreateDynamicObject(1238,-1210.66503906,1794.14379883,41.14223480,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (191)
	CreateDynamicObject(1238,-1209.83471680,1793.07165527,41.29706955,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (192)
	CreateDynamicObject(1238,-1191.21972656,1791.87658691,40.63012314,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (194)
	CreateDynamicObject(1238,-1192.47326660,1791.43811035,40.78544617,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (195)
	CreateDynamicObject(1238,-1193.82189941,1790.99511719,40.94126892,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (196)
	CreateDynamicObject(1238,-1196.22619629,1790.87792969,41.04587555,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (197)
	CreateDynamicObject(1238,-1198.01354980,1791.22045898,41.09123230,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (198)
	CreateDynamicObject(1238,-1199.75390625,1791.54931641,41.13541031,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (199)
	CreateDynamicObject(1238,-1201.63012695,1791.83752441,41.18321228,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (200)
	CreateDynamicObject(1238,-1203.67065430,1792.24743652,41.23494339,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (201)
	CreateDynamicObject(1238,-1205.69091797,1792.57214355,41.28638077,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (202)
	CreateDynamicObject(1238,-1207.79577637,1792.90185547,41.32258987,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (203)
	CreateDynamicObject(16337,-311.55902100,1505.95104980,74.57015228,0.00000000,0.00000000,1.98498535, -1, -1, -1, 300); //object(des_cranecontrol) (1)
	CreateDynamicObject(3281,-309.35354614,1325.44799805,54.31383133,0.00000000,1.75000000,263.51110840, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-308.95117188,1329.04003906,54.40844727,0.00000000,1.24694824,263.50708008, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-317.88067627,1310.51647949,53.45265198,0.00000000,3.24694824,211.80712891, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-309.77441406,1321.89746094,54.13737488,0.00000000,4.24694824,263.50708008, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-311.02734375,1318.69726562,53.97315979,0.00000000,2.74658203,233.72863770, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-313.16210938,1315.79980469,53.77481842,0.00000000,2.74658203,233.72863770, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3281,-315.29101562,1312.90917969,53.60891342,0.00000000,2.74658203,233.72863770, -1, -1, -1, 300); //object(mtb_banner1) (9)
	CreateDynamicObject(3877,-307.36523438,1402.62597656,71.06864929,0.00000000,0.00000000,7.93762207, -1, -1, -1, 300); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,-304.97265625,1388.14843750,73.13910675,0.00000000,0.00000000,7.93212891, -1, -1, -1, 300); //object(sf_rooflite) (2)
	CreateDynamicObject(3877,-368.18917847,1456.16052246,63.31073761,0.00000000,0.00000000,27.78753662, -1, -1, -1, 300); //object(sf_rooflite) (3)
	CreateDynamicObject(3877,-374.93087769,1468.71411133,63.14639282,0.00000000,0.00000000,27.78442383, -1, -1, -1, 300); //object(sf_rooflite) (4)
	CreateDynamicObject(3877,-328.87109375,1323.66699219,53.61922836,0.00000000,0.00000000,27.77893066, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-412.68835449,1908.95458984,58.72234344,0.00000000,0.00000000,9.91949463, -1, -1, -1, 300); //object(sf_rooflite) (7)
	CreateDynamicObject(3877,-847.36132812,1820.80432129,60.81600189,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (8)
	CreateDynamicObject(3877,-390.88085938,2070.38671875,62.23809052,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (9)
	CreateDynamicObject(1262,-295.58764648,1507.24853516,76.91493225,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (3)
	CreateDynamicObject(1262,-302.66888428,1507.29016113,76.13655090,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (3)
	CreateDynamicObject(1262,-301.57421875,1507.27343750,76.11489105,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (3)
	CreateDynamicObject(1262,-308.69650269,1507.26525879,76.97837830,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (3)
	CreateDynamicObject(3877,-446.07519531,1768.00976562,72.94361115,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (8)
	CreateDynamicObject(3877,-939.33984375,1791.21313477,60.92319107,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (8)
	CreateDynamicObject(3877,-928.68487549,1804.89440918,61.43984985,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (8)
	CreateDynamicObject(3877,-865.02722168,1825.70458984,61.53115845,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (8)
	CreateDynamicObject(1262,-302.50683594,1490.99804688,81.49121094,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (4)
	CreateDynamicObject(3877,-424.33273315,1439.34069824,35.12869644,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-436.23208618,1462.43627930,34.88134003,0.00000000,0.00000000,27.77893066, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-434.13494873,1453.46398926,34.75504303,0.00000000,0.00000000,27.77893066, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-425.24005127,1457.25317383,35.38695908,0.00000000,0.00000000,27.77893066, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-528.98156738,1988.35778809,61.05636597,0.00000000,0.00000000,55.70391846, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(1238,-527.30340576,1987.25964355,59.70880508,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (149)
	CreateDynamicObject(1238,-525.23895264,1986.18078613,59.70880508,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (149)
	CreateDynamicObject(1238,-523.03851318,1985.22106934,59.70880508,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (149)
	CreateDynamicObject(1238,-520.37188721,1984.39160156,59.70880508,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (149)
	CreateDynamicObject(3877,-379.62057495,2084.28173828,61.55606842,0.00000000,0.00000000,9.91516113, -1, -1, -1, 300); //object(sf_rooflite) (9)
	CreateDynamicObject(621,-295.53952026,1370.91113281,68.22042847,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (1)
	CreateDynamicObject(621,-315.51074219,1383.60351562,69.99920654,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (2)
	CreateDynamicObject(621,-343.27966309,1309.76293945,44.97257233,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (3)
	CreateDynamicObject(621,-316.47247314,1343.30993652,49.95304108,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (4)
	CreateDynamicObject(621,-431.61810303,1459.88183594,32.43209457,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (5)
	CreateDynamicObject(621,-428.97116089,1429.00268555,31.81048203,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (6)
	CreateDynamicObject(621,-385.32354736,1751.18444824,42.03387451,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (7)
	CreateDynamicObject(621,-444.47207642,1873.98876953,60.19545746,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (8)
	CreateDynamicObject(621,-474.89385986,1762.97558594,71.22278595,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (9)
	CreateDynamicObject(621,-492.08099365,1940.06262207,85.02601624,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (10)
	CreateDynamicObject(621,-521.00421143,2005.40417480,57.17543030,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (11)
	CreateDynamicObject(621,-504.16714478,1997.29846191,59.07496643,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (12)
	CreateDynamicObject(621,-861.78454590,1846.04089355,58.81469727,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (13)
	CreateDynamicObject(621,-1146.67846680,1789.87744141,37.65126801,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (14)
	CreateDynamicObject(621,-953.76660156,1789.92871094,59.59924316,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (16)
	CreateDynamicObject(621,-1191.36242676,1816.72058105,40.08773804,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (17)
	CreateDynamicObject(621,-465.06176758,1632.40600586,37.96423340,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(veg_palm02) (18)
	CreateDynamicObject(3877,-304.94192505,1403.70166016,71.06864929,0.00000000,0.00000000,41.19763184, -1, -1, -1, 300); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,-297.26113892,1390.92309570,73.15921021,0.00000000,0.00000000,39.69213867, -1, -1, -1, 300); //object(sf_rooflite) (2)
	CreateDynamicObject(1238,-296.34167480,1391.78161621,71.80731201,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-299.74359131,1389.87988281,71.80529785,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-300.93270874,1389.31774902,71.80473328,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-302.09606934,1388.82727051,71.79910278,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-306.67926025,1388.08142090,71.76097107,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(3877,-292.17950439,1396.24768066,73.13610840,0.00000000,0.00000000,61.52310181, -1, -1, -1, 300); //object(sf_rooflite) (2)
	CreateDynamicObject(1238,-298.62402344,1390.43652344,71.80345917,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-295.47668457,1392.58569336,71.80329132,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-294.63513184,1393.41345215,71.79621124,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-293.74603271,1394.24108887,71.79283905,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-292.87374878,1395.19189453,71.78670502,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(3877,-312.93441772,1388.06091309,73.04767609,0.00000000,0.00000000,354.04263306, -1, -1, -1, 300); //object(sf_rooflite) (2)
	CreateDynamicObject(1238,-303.31445312,1388.49707031,71.79511261,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-308.31988525,1388.02124023,71.74224854,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-309.71313477,1387.93469238,71.73980713,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(1238,-311.14431763,1387.88061523,71.73245239,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
	CreateDynamicObject(3877,-418.40933228,1439.77856445,35.98358917,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-413.63034058,1436.82849121,37.40474701,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-384.72830200,1363.85253906,46.30185699,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-381.35388184,1357.90637207,47.10634995,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-378.06384277,1351.73547363,47.77257156,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,-375.07989502,1345.40417480,48.28903198,0.00000000,0.00000000,27.77343750, -1, -1, -1, 300); //object(sf_rooflite) (6)
	CreateDynamicObject(1238,-375.60992432,1346.56201172,46.94561386,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-376.23016357,1347.92248535,46.83348846,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-376.91149902,1349.22839355,46.70853043,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-377.60449219,1350.42443848,46.58018494,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-378.69189453,1352.94714355,46.38490677,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-379.25885010,1354.11096191,46.28165817,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-380.02178955,1355.27270508,46.13888931,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-380.66461182,1356.49621582,46.00544739,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-382.09490967,1359.04357910,45.67333221,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-382.73245239,1360.12292480,45.52886200,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-383.37261963,1361.20678711,45.38379288,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-384.01354980,1362.39440918,45.23203659,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-386.21295166,1365.00341797,44.80448532,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-387.56280518,1365.90478516,44.58656693,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-389.02658081,1366.71411133,44.36094284,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-374.63354492,1343.92321777,47.11741638,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-374.79373169,1342.55847168,47.07221222,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
	CreateDynamicObject(1238,-375.11560059,1341.15759277,46.99407959,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (133)
//Ухо (конец)

//Стант возле уха (начало)
	CreateDynamicObject(18754, -578.16370, 1635.95557, 0.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18754, -578.16370, 1387.20874, 0.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18753, -743.13666, 1377.25415, 0.28640,   0.00000, 0.00000, 28.74000, -1, -1, -1, 300);
	CreateDynamicObject(18753, -478.10931, 1273.64954, 0.28640,   0.00000, 0.00000, 12.22000, -1, -1, -1, 300);
	CreateDynamicObject(18753, -600.27478, 1247.18921, 0.28640,   0.00000, 0.00000, 12.22000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -639.40900, 1605.96936, 0.51580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -619.41010, 1605.96936, 0.51580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -659.41119, 1605.96936, 0.51580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.41968, 1620.97266, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.41968, 1640.97424, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.39996, 1660.97742, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.40002, 1680.97656, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.40002, 1700.97742, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.40002, 1720.97327, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18787, -604.40002, 1740.96912, 0.51580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -813.26801, 1713.95068, 4.51810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -813.26801, 1698.25586, 4.51810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -813.26801, 1682.56226, 4.51810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -813.26801, 1666.87244, 4.51810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -813.26801, 1651.17456, 4.51810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -813.26801, 1635.48242, 4.51810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18859, -542.53674, 1948.10547, 70.36932,   0.00000, 0.00000, 142.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -924.43878, 2027.29077, 62.65610,   0.00000, -3.00000, 130.67999, -1, -1, -1, 300);
	CreateDynamicObject(18822, -948.69647, 2068.13965, 75.82350,   -75.00000, 4.00000, 21.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -943.85541, 2113.08130, 88.36410,   -75.00000, 4.00000, -25.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -908.13562, 2140.84741, 100.90940,   -75.00000, 4.00000, -71.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -863.41772, 2134.44849, 113.47560,   -75.00000, 4.00000, -117.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -830.03528, 2100.06787, 124.08780,   0.00000, 80.00000, -54.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -800.78973, 2059.80420, 130.63319,   0.00000, 85.00000, -54.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -771.30573, 2019.21130, 132.81619,   0.00000, 90.00000, -54.00000, -1, -1, -1, 300);
	CreateDynamicObject(18820, -740.30011, 1980.93896, 132.81531,   90.00000, 0.00000, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -572.48480, 1982.53345, 72.32249,   76.00000, -4.00000, -107.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -617.74872, 1981.03870, 84.05030,   76.00000, -4.00000, -61.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.49182, 1970.68970, 96.98150,   112.00000, -33.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -643.18866, 1986.14819, 104.80390,   108.00000, 0.00000, 229.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -656.93457, 1970.60583, 114.62610,   108.00000, 0.00000, 48.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -642.74200, 1986.60095, 124.45370,   108.00000, 0.00000, 229.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -703.95044, 1993.83862, 138.51469,   111.00000, 0.00000, 222.70000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -702.17950, 1951.73218, 132.82950,   90.00000, -4.00000, 73.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -657.58112, 1955.14551, 131.10640,   94.18000, -4.00000, 123.60000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -714.17493, 1954.80859, 144.24440,   90.00000, 0.00000, -25.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -937.37610, 2042.34424, 63.17580,   0.00000, 0.00000, 130.67999, -1, -1, -1, 300);
	CreateDynamicObject(18783, -937.37610, 2042.34424, 58.17380,   0.00000, 0.00000, 130.67999, -1, -1, -1, 300);
	CreateDynamicObject(18822, -716.22998, 1908.02600, 144.24440,   90.00000, 0.00000, 20.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -689.78711, 1868.59839, 137.45210,   0.00000, 112.00000, -48.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -664.71802, 1834.54187, 113.32840,   -30.00000, -121.00000, 100.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -645.94373, 1791.83435, 102.28900,   95.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -623.93988, 1748.54663, 95.90530,   100.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -597.91412, 1708.29871, 85.25740,   105.00000, 0.00000, 36.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -572.36243, 1669.10547, 70.42600,   110.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -549.56403, 1629.62085, 51.51090,   115.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -527.00012, 1590.52124, 30.45850,   115.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -506.31656, 1549.79980, 13.77040,   105.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -497.43890, 1528.36414, 2.46195,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -483.97952, 1526.39661, 6.34760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -497.44031, 1508.37280, 2.46550,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -772.12347, 1943.70105, 132.82060,   90.00000, 0.00000, -27.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -775.78607, 1897.04871, 132.82060,   90.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -756.67761, 1853.41479, 132.82809,   90.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -736.39099, 1807.87085, 132.82809,   90.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -716.09589, 1762.28137, 132.82809,   90.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -695.80756, 1716.71985, 132.82809,   90.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -675.51697, 1671.14856, 132.82809,   90.00000, 0.00000, 24.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.31873, 1644.99377, 127.91620,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.86469, 1664.19495, 118.08950,   108.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.33801, 1645.07434, 108.26610,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.29730, 1644.99426, 9.84870,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.87433, 1664.34302, 98.45310,   108.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.30750, 1645.10474, 88.61920,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.87433, 1664.34302, 78.78250,   108.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.27856, 1645.06921, 68.93240,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.87433, 1664.34302, 59.08920,   108.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.29730, 1644.99426, 49.25710,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.87433, 1664.34302, 39.41280,   108.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -647.29730, 1644.99426, 29.55200,   108.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -655.87433, 1664.34302, 19.68670,   108.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -508.98029, 1953.79956, 60.74640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -544.48633, 1981.14575, 60.65640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -935.85437, 2050.74805, 65.97174,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -944.34521, 2043.74402, 65.97174,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -555.79846, 1967.34180, 65.54640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -549.25189, 1975.21606, 60.61346,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -643.34308, 1658.09900, 3.31650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -631.88171, 1663.03918, 3.31650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -490.98331, 1531.09741, 5.26910,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -502.28043, 1525.88428, 5.26910,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -809.78625, 1373.37781, 1.52830,   0.00000, 0.00000, -61.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -804.66284, 1364.12000, 1.52830,   0.00000, 0.00000, -61.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -814.95178, 1382.75085, 1.52830,   0.00000, 0.00000, -61.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -797.05542, 1357.58167, 1.52830,   0.00000, 0.00000, -19.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -811.62225, 1388.01038, 1.52830,   0.00000, 0.00000, -3.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -786.92065, 1354.50476, 1.52830,   0.00000, 0.00000, -15.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -776.58319, 1353.85071, 1.52830,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -766.36694, 1355.74915, 1.52830,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -755.96490, 1355.66333, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -745.72418, 1353.64856, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -735.53046, 1351.67822, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -725.21906, 1349.81897, 1.52830,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -714.89874, 1349.07874, 1.52830,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -704.63330, 1350.71741, 1.52830,   0.00000, 0.00000, 17.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -694.21106, 1352.35107, 1.52830,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -683.58081, 1351.95776, 1.52830,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -673.58484, 1348.84399, 1.52830,   0.00000, 0.00000, -29.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -663.53949, 1345.77197, 1.52830,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -652.91364, 1345.24512, 1.52830,   0.00000, 0.00000, -1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -642.27307, 1345.08875, 1.52830,   0.00000, 0.00000, -1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -801.12341, 1387.62122, 1.52830,   0.00000, 0.00000, -1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -790.63354, 1386.56104, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -780.13629, 1387.28503, 1.52830,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -769.74432, 1389.30249, 1.52830,   0.00000, 0.00000, 3.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -759.36694, 1390.68115, 1.52830,   0.00000, 0.00000, 13.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -748.93756, 1392.32849, 1.52830,   0.00000, 0.00000, 5.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -738.37396, 1391.51843, 1.52830,   0.00000, 0.00000, -13.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -728.00928, 1390.60474, 1.52830,   0.00000, 0.00000, 3.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -717.59601, 1391.42346, 1.52830,   0.00000, 0.00000, 7.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -707.19434, 1392.86621, 1.52830,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -696.72742, 1393.93494, 1.52830,   0.00000, 0.00000, 3.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -686.23737, 1394.80176, 1.52830,   0.00000, 0.00000, 7.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -676.16528, 1397.71533, 1.52830,   0.00000, 0.00000, 25.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -669.30200, 1405.08447, 1.52830,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -665.81805, 1415.06506, 1.52830,   0.00000, 0.00000, 73.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -660.39575, 1423.98132, 1.52830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -651.00067, 1426.94543, 1.52830,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -640.50732, 1426.59790, 1.52830,   0.00000, 0.00000, 5.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -629.88605, 1426.75635, 1.52830,   0.00000, 0.00000, -3.00000, -1, -1, -1, 300);
	CreateDynamicObject(3715, -623.24335, 1381.95325, 9.88220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -623.53540, 1422.48486, 1.52830,   0.00000, 0.00000, 94.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -623.26154, 1411.99573, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -623.33600, 1401.47864, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -623.65137, 1362.43579, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -625.04041, 1352.01050, 1.52830,   0.00000, 0.00000, 74.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -631.79895, 1345.76563, 1.52830,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -629.05377, 1379.38391, 1.52830,   0.00000, 0.00000, 25.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -629.35382, 1384.53174, 1.52830,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -634.72015, 1392.19177, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -634.63922, 1402.69836, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -634.53821, 1411.37915, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -640.13629, 1415.79529, 1.52830,   0.00000, 0.00000, 4.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -648.37341, 1415.96973, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -661.70081, 1407.72302, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -651.31622, 1406.34045, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -640.37207, 1394.26099, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -650.69281, 1395.72192, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -654.03937, 1396.31519, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -674.33295, 1392.20129, 1.52830,   0.00000, 0.00000, -42.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -665.25714, 1387.35669, 1.52830,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -654.94153, 1385.37805, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -634.80811, 1381.65723, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -634.82343, 1371.25830, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -640.60840, 1372.47339, 1.52830,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -651.10852, 1373.19312, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -661.46118, 1374.68811, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -680.78247, 1363.12708, 1.52830,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -691.28210, 1363.46313, 1.52830,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -701.65387, 1361.83850, 1.52830,   0.00000, 0.00000, 17.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -712.09833, 1360.15112, 1.52830,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -722.62793, 1360.80225, 1.52830,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -732.94092, 1362.64172, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -743.20892, 1364.58142, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -753.47418, 1366.53699, 1.52830,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -763.92828, 1366.48169, 1.52830,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -774.20837, 1364.69409, 1.52830,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -784.59412, 1365.10291, 1.52830,   0.00000, 0.00000, -15.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -792.18707, 1367.72803, 1.52830,   0.00000, 0.00000, -23.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -670.62939, 1377.20422, 1.52830,   0.00000, 0.00000, -24.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -686.82440, 1388.68726, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -686.77087, 1379.55542, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -699.75372, 1368.15332, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -699.72589, 1378.60205, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -713.90979, 1385.98059, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -713.98834, 1375.49878, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -726.10406, 1367.24475, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -726.03021, 1374.89709, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -738.17749, 1379.44092, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -738.28296, 1385.41455, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -752.25714, 1372.21436, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -752.24329, 1376.21558, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -765.99500, 1383.52844, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -765.92548, 1380.64490, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -778.65869, 1369.73633, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -778.59601, 1373.63635, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -790.14990, 1381.92822, 1.52830,   0.00000, 0.00000, 96.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -799.44238, 1374.59204, 1.52830,   0.00000, 0.00000, 118.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -650.93811, 1384.87537, 1.52830,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -675.12103, 1373.14990, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -675.04956, 1367.45947, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -661.24823, 1351.33691, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -661.32422, 1356.14001, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -648.84381, 1366.91052, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -648.91620, 1363.66833, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -643.10651, 1359.11731, 1.52830,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -640.51306, 1359.04834, 1.52830,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -634.75446, 1363.93555, 1.52830,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -624.78333, 1382.86206, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -624.70764, 1381.37341, 2.66956,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -653.08209, 1416.60925, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -646.53766, 1405.67053, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -658.84155, 1397.00598, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -646.12726, 1384.15430, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -675.00476, 1379.16357, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -686.68652, 1374.73608, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -699.71057, 1383.47205, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -714.03070, 1370.71838, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -726.01416, 1379.73486, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -738.22711, 1374.66858, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -752.25208, 1381.10376, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -765.95691, 1375.81250, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -778.62048, 1378.50464, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -789.69385, 1377.09558, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -801.73425, 1378.90723, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -816.35431, 1388.24451, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -801.70502, 1359.16150, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -661.32794, 1361.00366, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -675.09485, 1362.59485, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3515, -641.88611, 1365.73779, 1.55900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -648.92828, 1358.97412, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -635.67017, 1358.97900, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -634.84161, 1371.93896, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, -648.21185, 1372.73279, 2.66960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -641.87952, 1365.70874, 2.66956,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -641.87152, 1365.45789, 2.38960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -642.08600, 1365.57898, 2.38960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -642.08618, 1365.82898, 2.38960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -641.89130, 1365.94812, 2.38960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -641.67932, 1365.82715, 2.38960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -641.66699, 1365.57898, 2.38960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18806, -647.79041, 1273.46362, -6.68102,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(18806, -656.51233, 1286.88611, -6.68100,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(18759, -553.99481, 1698.41040, 32.00509,   90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7073, -620.99780, 1410.24414, 19.01690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7392, -624.02667, 1351.86731, 10.41590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18771, -588.15137, 1689.76416, 0.73950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18771, -529.23547, 1679.58008, 0.73950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -499.43829, 1253.88306, 5.19470,   90.00000, 0.00000, 105.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -560.97095, 1237.43335, 5.19470,   90.00000, 0.00000, 105.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -535.68805, 1266.12561, 5.19470,   90.00000, 0.00000, 285.00000, -1, -1, -1, 300);
	CreateDynamicObject(18779, -481.90237, 1244.63171, 10.65660,   0.00000, 0.00000, -168.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -580.27759, 1654.30383, 2.30100,   0.00000, 0.00000, 55.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -587.76910, 1625.13123, 2.30100,   0.00000, 0.00000, 55.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -553.28400, 1511.53992, 3.18390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18781, -480.00909, 1444.62671, 9.02380,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -553.28400, 1551.44128, 3.18390,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -553.21869, 1536.52600, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -553.21869, 1531.51685, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -553.21869, 1526.52234, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -578.10718, 1402.12537, 3.18390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -578.10724, 1441.99414, 3.18390,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18780, -591.74207, 1535.50562, 12.53330,   0.00000, 0.00000, 103.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -499.09961, 1288.15759, 9.45383,   80.00000, 0.00000, 217.00000, -1, -1, -1, 300);
	CreateDynamicObject(18826, -516.68213, 1321.97351, 23.23420,   -57.00000, 11.00000, -21.00000, -1, -1, -1, 300);
	CreateDynamicObject(18822, -476.53159, 1321.55701, 28.51924,   85.00000, 180.00000, -99.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -528.23340, 1442.03088, 3.18390,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18784, -528.23340, 1402.08813, 3.18390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -553.45471, 1318.33765, 2.30100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18778, -553.45465, 1346.62183, 2.30100,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -578.20874, 1427.01501, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -578.20868, 1417.03369, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -528.43121, 1427.05017, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -528.43121, 1417.06396, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -553.29218, 1337.50659, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18858, -553.29218, 1327.46753, 9.95030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -583.90753, 1241.85254, 1.00940,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -574.30847, 1244.88745, 1.00940,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -454.15659, 1326.42505, 23.89700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19123, -451.24661, 1314.34912, 23.14690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -610.60095, 1326.96301, 2.11174,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -592.26514, 1299.19910, 2.11174,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -671.88147, 1247.54126, 10.54457,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -692.84314, 1273.66626, 10.01850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//Стант возле уха (конец)

//Аэропорт Лос Сантоса (начало)
	CreateDynamicObject(3516,1583.44384766,-2376.03710938,15.78254223,0.00000000,0.00000000,89.82501221, -1, -1, -1, 300); //object(vgsstriptlights1)(1)
	CreateDynamicObject(1238,1589.44042969,-2382.49218750,12.69318008,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone)(1)
	CreateDynamicObject(1238,1589.38000488,-2373.91308594,12.69318008,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone)(2)
	CreateDynamicObject(1215,1588.68530273,-2378.21044922,12.93932343,0.00000000,0.00000000,1.98498535, -1, -1, -1, 300); //object(bollardlight)(8)
	CreateDynamicObject(3379,1340.19152832,-2372.02490234,20.73039055,1.75000000,0.00000000,91.31002808, -1, -1, -1, 300); //object(ce_hairpinr)(1)
	CreateDynamicObject(18102,1603.75671387,-2382.36279297,19.26451874,0.00000000,0.00000000,266.70495605, -1, -1, -1, 300); //object(light_box1)(1)
	CreateDynamicObject(10575,1361.59057617,-2439.17651367,8.58372498,0.00000000,0.00000000,91.31002808, -1, -1, -1, 300); //object(modshopdoor1_sfs)(1)
	CreateDynamicObject(10575,1354.73400879,-2439.14404297,8.56458950,0.00000000,0.00000000,90.07501221, -1, -1, -1, 300); //object(modshopdoor1_sfs)(2)
	CreateDynamicObject(10575,1361.59020996,-2474.21704102,8.50075626,0.00000000,0.00000000,269.67498779, -1, -1, -1, 300); //object(modshopdoor1_sfs)(3)
	CreateDynamicObject(10575,1354.70227051,-2474.27343750,8.50157070,0.00000000,0.00000000,271.42498779, -1, -1, -1, 300); //object(modshopdoor1_sfs)(4)
	CreateDynamicObject(18286,1573.16003418,-2371.94946289,11.60791302,353.27636719,0.00000000,73.44360352, -1, -1, -1, 300); //object(cw_mountbarr06)(1)
	CreateDynamicObject(18286,1509.21752930,-2371.79565430,11.63291264,352.77087402,0.00000000,73.43811035, -1, -1, -1, 300); //object(cw_mountbarr06)(2)
	CreateDynamicObject(1215,1303.98205566,-2297.96337891,13.08053398,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(16)
	CreateDynamicObject(1215,1307.49353027,-2298.66552734,13.10111427,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(17)
	CreateDynamicObject(1215,1310.17553711,-2299.00097656,13.11119843,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(18)
	CreateDynamicObject(1215,1312.61950684,-2300.52734375,13.11119843,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(19)
	CreateDynamicObject(1215,1314.56506348,-2301.24023438,13.11119843,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(20)
	CreateDynamicObject(1215,1316.41442871,-2302.27832031,13.11119843,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(21)
	CreateDynamicObject(1215,1318.14770508,-2303.12451172,13.11119843,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(22)
	CreateDynamicObject(1215,1320.69982910,-2304.56420898,13.11119843,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(23)
	CreateDynamicObject(18219,1330.51623535,-2315.11596680,13.44942760,354.04504395,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtbfence09)(1)
	CreateDynamicObject(18219,1339.46923828,-2339.44116211,13.44942760,354.03991699,0.00000000,320.53500366, -1, -1, -1, 300); //object(mtbfence09)(2)
	CreateDynamicObject(18219,1339.68432617,-2367.01513672,13.44942760,354.03991699,0.00000000,320.53161621, -1, -1, -1, 300); //object(mtbfence09)(3)
	CreateDynamicObject(18219,1339.95410156,-2394.64550781,13.44942760,354.03991699,0.00000000,320.53161621, -1, -1, -1, 300); //object(mtbfence09)(4)
	CreateDynamicObject(18219,1333.01232910,-2420.30615234,13.44942760,355.78991699,356.52999878,109.40597534, -1, -1, -1, 300); //object(mtbfence09)(5)
	CreateDynamicObject(18219,1315.83007812,-2510.76855469,12.41665745,351.03515625,356.52282715,325.46447754, -1, -1, -1, 300); //object(mtbfence09)(6)
	CreateDynamicObject(18219,1343.35668945,-2519.11279297,13.22379780,357.28674316,356.52832031,95.50683594, -1, -1, -1, 300); //object(mtbfence09)(7)
	CreateDynamicObject(18219,1315.11328125,-2424.71801758,9.34372044,13.11999512,352.21276855,320.25952148, -1, -1, -1, 300); //object(mtbfence09)(8)
	CreateDynamicObject(18219,1314.52246094,-2397.33105469,12.79372501,6.09741211,349.70581055,320.25146484, -1, -1, -1, 300); //object(mtbfence09)(9)
	CreateDynamicObject(18219,1314.36279297,-2454.38378906,7.59373236,9.14767456,344.27075195,320.52197266, -1, -1, -1, 300); //object(mtbfence09)(10)
	CreateDynamicObject(18219,1314.27429199,-2482.55834961,8.96671009,346.53515625,356.52282715,318.49450684, -1, -1, -1, 300); //object(mtbfence09)(11)
	CreateDynamicObject(18219,1360.94873047,-2456.70043945,7.49788523,355.52999878,0.00000000,50.56500244, -1, -1, -1, 300); //object(mtbfence09)(12)
	CreateDynamicObject(18219,1328.41247559,-2457.21069336,7.49788523,355.52856445,0.00000000,50.56457520, -1, -1, -1, 300); //object(mtbfence09)(13)
	CreateDynamicObject(16281,1344.37719727,-2456.78320312,6.90158176,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(des_fgateway01)(1)
	CreateDynamicObject(18220,1530.74877930,-2288.32128906,-2.91943979,358.50000000,359.25000000,337.15002441, -1, -1, -1, 300); //object(mtbfence10)(1)
	CreateDynamicObject(18219,1351.62829590,-2391.62548828,13.44942760,354.03991699,0.00000000,320.53161621, -1, -1, -1, 300); //object(mtbfence09)(14)
	CreateDynamicObject(18219,1351.99694824,-2364.14379883,13.44942760,354.03991699,0.00000000,317.78161621, -1, -1, -1, 300); //object(mtbfence09)(15)
	CreateDynamicObject(18219,1345.56469727,-2313.46459961,13.44942760,354.03991699,0.00000000,113.14501953, -1, -1, -1, 300); //object(mtbfence09)(16)
	CreateDynamicObject(18219,1361.10461426,-2290.84179688,13.44942760,354.03991699,0.00000000,97.26269531, -1, -1, -1, 300); //object(mtbfence09)(17)
	CreateDynamicObject(18219,1352.76757812,-2336.59960938,13.44942760,354.03991699,0.00000000,319.02648926, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1384.25146484,-2280.78295898,13.44942760,354.03991699,0.00000000,49.62194824, -1, -1, -1, 300); //object(mtbfence09)(19)
	CreateDynamicObject(18219,1428.48974609,-2291.50366211,13.44942760,354.03991699,0.00000000,49.61975098, -1, -1, -1, 300); //object(mtbfence09)(20)
	CreateDynamicObject(18219,1400.94848633,-2292.79272461,13.44942760,354.03991699,0.00000000,55.57434082, -1, -1, -1, 300); //object(mtbfence09)(21)
	CreateDynamicObject(18219,1444.53112793,-2278.08374023,13.44942760,354.03991699,0.00000000,131.00476074, -1, -1, -1, 300); //object(mtbfence09)(22)
	CreateDynamicObject(18219,1478.73339844,-2244.01269531,13.44942760,354.03991699,0.00000000,131.00097656, -1, -1, -1, 300); //object(mtbfence09)(23)
	CreateDynamicObject(18219,1481.19067383,-2216.60009766,13.37442112,355.03991699,0.00000000,138.94097900, -1, -1, -1, 300); //object(mtbfence09)(24)
	CreateDynamicObject(18219,1495.28515625,-2202.04492188,13.37442112,355.03967285,0.00000000,233.00903320, -1, -1, -1, 300); //object(mtbfence09)(25)
	CreateDynamicObject(18219,1468.25573730,-2216.30517578,13.37442112,355.03967285,0.00000000,138.93859863, -1, -1, -1, 300); //object(mtbfence09)(26)
	CreateDynamicObject(18219,1729.51074219,-2176.95532227,14.19632053,355.03967285,0.00000000,48.36358643, -1, -1, -1, 300); //object(mtbfence09)(27)
	CreateDynamicObject(18219,1488.11975098,-2187.91674805,13.77441502,355.03967285,0.00000000,51.10290527, -1, -1, -1, 300); //object(mtbfence09)(28)
	CreateDynamicObject(18219,1757.08435059,-2177.68164062,13.82132626,355.03967285,0.00000000,48.36181641, -1, -1, -1, 300); //object(mtbfence09)(29)
	CreateDynamicObject(18219,1784.75427246,-2178.72290039,13.82132626,355.03967285,0.00000000,48.36181641, -1, -1, -1, 300); //object(mtbfence09)(30)
	CreateDynamicObject(18219,1793.60498047,-2205.31762695,13.82132626,355.03967285,0.25000000,47.87683105, -1, -1, -1, 300); //object(mtbfence09)(31)
	CreateDynamicObject(18219,1793.29882812,-2366.97290039,13.82132626,355.03967285,0.24719238,47.87292480, -1, -1, -1, 300); //object(mtbfence09)(32)
	CreateDynamicObject(3334,1465.54553223,-2230.55957031,16.93926811,0.00000000,0.00000000,281.84997559, -1, -1, -1, 300); //object(big_cock_sign)(1)
	CreateDynamicObject(18219,1314.12194824,-2371.07519531,13.24371815,6.06741333,347.72082520,320.25146484, -1, -1, -1, 300); //object(mtbfence09)(9)
	CreateDynamicObject(18219,1307.98242188,-2344.96386719,13.24371815,6.05895996,347.71728516,346.05285645, -1, -1, -1, 300); //object(mtbfence09)(9)
	CreateDynamicObject(18219,1362.83264160,-2312.88403320,13.44942760,354.03991699,0.00000000,275.35681152, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1515.58850098,-2186.60864258,13.81351376,354.03991699,0.00000000,235.65600586, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1543.11853027,-2184.80786133,13.63851643,354.03991699,0.00000000,231.46124268, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1570.40844727,-2181.92895508,13.23850727,354.03991699,0.00000000,240.40124512, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1625.17431641,-2175.97265625,13.29633045,354.03991699,0.00000000,233.15124512, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1597.70092773,-2178.08203125,13.37132263,354.03991699,0.00000000,235.65124512, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1652.63928223,-2174.45483398,13.29633045,354.03991699,0.00000000,233.14636230, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1680.08557129,-2174.79443359,13.29633045,354.03991699,0.00000000,225.47137451, -1, -1, -1, 300); //object(mtbfence09)(18)
	CreateDynamicObject(18219,1522.85522461,-2201.52001953,13.37442112,355.03967285,358.01501465,229.05401611, -1, -1, -1, 300); //object(mtbfence09)(25)
	CreateDynamicObject(18219,1550.46643066,-2202.09497070,13.37442112,355.03967285,358.01147461,228.30395508, -1, -1, -1, 300); //object(mtbfence09)(25)
	CreateDynamicObject(18219,1577.92687988,-2204.24877930,13.37442112,355.03967285,358.01147461,222.34637451, -1, -1, -1, 300); //object(mtbfence09)(25)
	CreateDynamicObject(18219,1288.36645508,-2330.51147461,13.24371815,350.17895508,3.59716797,41.63244629, -1, -1, -1, 300); //object(mtbfence09)(9)
	CreateDynamicObject(18219,1408.73425293,-2272.18505859,13.59765053,0.00000000,355.00000000,89.32501221, -1, -1, -1, 300); //object(mtbfence09)(47)
	CreateDynamicObject(18219,1428.16809082,-2252.75000000,13.47265244,357.50000000,356.98071289,280.11914062, -1, -1, -1, 300); //object(mtbfence09)(48)
	CreateDynamicObject(18219,1450.13623047,-2236.46875000,13.59765053,0.00000000,353.97875977,252.09045410, -1, -1, -1, 300); //object(mtbfence09)(49)
	CreateDynamicObject(18221,1378.91442871,-2301.42578125,13.55608273,357.25000000,0.00000000,290.52499390, -1, -1, -1, 300); //object(mtbfence11)(1)
	CreateDynamicObject(1215,1384.74975586,-2294.97143555,13.05544853,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(1215,1381.34216309,-2296.65161133,13.03284264,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(1215,1376.68872070,-2299.86791992,13.07365131,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(1215,1378.69714355,-2298.00146484,13.04692745,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(1215,1373.76647949,-2301.73559570,13.09638119,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(1215,1437.20446777,-2242.05834961,13.11802673,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(18219,1450.09851074,-2387.65722656,13.78856659,0.00000000,0.00000000,47.86001587, -1, -1, -1, 300); //object(mtbfence09)(51)
	CreateDynamicObject(18219,1451.07434082,-2368.48876953,13.81033897,0.00000000,0.00000000,49.62500000, -1, -1, -1, 300); //object(mtbfence09)(52)
	CreateDynamicObject(7893,1324.50024414,-2530.65283203,12.79263687,0.00000000,0.47000122,346.00000000, -1, -1, -1, 300); //object(vegascrashbar04)(1)
	CreateDynamicObject(973,1333.07873535,-2528.33081055,12.94081497,0.00000000,0.00000000,214.38006592, -1, -1, -1, 300); //object(sub_roadbarrier)(1)
	CreateDynamicObject(973,1318.39123535,-2524.45800781,13.09022236,0.00000000,0.00000000,113.14501953, -1, -1, -1, 300); //object(sub_roadbarrier)(2)
	CreateDynamicObject(973,1468.31762695,-2197.99804688,13.22303295,0.00000000,0.00000000,91.31002808, -1, -1, -1, 300); //object(sub_roadbarrier)(3)
	CreateDynamicObject(994,1468.62121582,-2192.77075195,12.38281250,0.00000000,0.00000000,37.71499634, -1, -1, -1, 300); //object(lhouse_barrier2)(1)
	CreateDynamicObject(1282,1545.09387207,-2365.20434570,13.23569107,0.00000000,0.00000000,359.99938965, -1, -1, -1, 300); //object(barrierm)(1)
	CreateDynamicObject(1282,1537.78405762,-2365.35424805,13.24347115,0.00000000,358.01501465,175.39025879, -1, -1, -1, 300); //object(barrierm)(2)
	CreateDynamicObject(1237,1545.14147949,-2366.92065430,12.54687500,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(1)
	CreateDynamicObject(1237,1537.65515137,-2366.87475586,12.54687500,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(2)
	CreateDynamicObject(18219,1469.68469238,-2368.24145508,12.51032829,355.00000000,0.00000000,49.61975098, -1, -1, -1, 300); //object(mtbfence09)(56)
	CreateDynamicObject(13646,1548.41064453,-2346.93627930,12.47085857,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(ramplandpad)(1)
//Аэропорт Лос Сантоса (конец)

//Гора Вайнвуд (начало)
	CreateDynamicObject(11239,1272.38452148,-728.16247559,93.33664703,357.75000000,0.00000000,289.74011230, -1, -1, -1, 300); //object(dockbarrier2zb_sfse)(1)
	CreateDynamicObject(11239,1322.98059082,-704.77355957,92.36158752,0.49780273,0.00000000,291.48919678, -1, -1, -1, 300); //object(dockbarrier2zb_sfse)(2)
	CreateDynamicObject(11239,1322.33972168,-690.52246094,92.83650970,358.50939941,0.00000000,289.11352539, -1, -1, -1, 300); //object(dockbarrier2zb_sfse)(3)
	CreateDynamicObject(11239,1271.02136230,-713.59075928,94.51153564,359.25585938,359.54501343,291.03802490, -1, -1, -1, 300); //object(dockbarrier2zb_sfse)(4)
	CreateDynamicObject(18218,1312.07336426,-597.49517822,97.74626160,0.00000000,0.00000000,70.21002197, -1, -1, -1, 300); //object(mtbfence08)(1)
	CreateDynamicObject(18218,1287.04833984,-609.20739746,101.12139130,357.25000000,0.00000000,70.20812988, -1, -1, -1, 300); //object(mtbfence08)(2)
	CreateDynamicObject(18218,1361.13171387,-687.76483154,92.27913666,343.42791748,358.25000000,72.70309448, -1, -1, -1, 300); //object(mtbfence08)(3)
	CreateDynamicObject(18218,1141.40332031,-635.51660156,104.42617035,353.44738770,0.00000000,31.24127197, -1, -1, -1, 300); //object(mtbfence08)(4)
	CreateDynamicObject(18218,1406.99414062,-636.08984375,87.34294891,7.24548340,358.24768066,122.73922729, -1, -1, -1, 300); //object(mtbfence08)(5)
	CreateDynamicObject(18218,1384.72387695,-672.90612793,93.17919159,351.17712402,358.24768066,82.39202881, -1, -1, -1, 300); //object(mtbfence08)(6)
	CreateDynamicObject(18218,1375.44335938,-567.02734375,83.54271698,335.24230957,353.18847656,219.07836914, -1, -1, -1, 300); //object(mtbfence08)(7)
	CreateDynamicObject(18218,1275.94042969,-598.92968750,101.12139130,357.24243164,0.00000000,66.45629883, -1, -1, -1, 300); //object(mtbfence08)(8)
	CreateDynamicObject(18218,1088.99450684,-628.16839600,111.20117188,3.19665527,0.00000000,40.91461182, -1, -1, -1, 300); //object(mtbfence08)(9)
	CreateDynamicObject(18219,1056.37634277,-625.05407715,116.58195496,3.97000122,0.00000000,58.22503662, -1, -1, -1, 300); //object(mtbfence09)(1)
	CreateDynamicObject(18219,1071.46313477,-636.81896973,114.50064087,356.46606445,357.00000000,147.03500366, -1, -1, -1, 300); //object(mtbfence09)(2)
	CreateDynamicObject(18219,1045.57519531,-630.81054688,116.27574921,3.96606445,0.00000000,57.47497559, -1, -1, -1, 300); //object(mtbfence09)(3)
	CreateDynamicObject(18219,936.95532227,-683.08496094,118.59222412,346.21606445,0.00000000,94.82205200, -1, -1, -1, 300); //object(mtbfence09)(4)
	CreateDynamicObject(18219,924.74499512,-668.25616455,118.59222412,346.21215820,0.00000000,97.27252197, -1, -1, -1, 300); //object(mtbfence09)(5)
	CreateDynamicObject(18219,898.42388916,-708.59899902,109.81717682,338.95666504,359.25000000,116.80746460, -1, -1, -1, 300); //object(mtbfence09)(6)
	CreateDynamicObject(18219,920.09295654,-704.24847412,113.59207153,339.20568848,359.24743652,108.30664062, -1, -1, -1, 300); //object(mtbfence09)(7)
	CreateDynamicObject(18219,908.11145020,-727.83734131,106.51708221,336.70568848,354.24194336,114.27627563, -1, -1, -1, 300); //object(mtbfence09)(8)
	CreateDynamicObject(18219,897.84497070,-752.14739990,98.39207458,332.95349121,358.49194336,114.74230957, -1, -1, -1, 300); //object(mtbfence09)(9)
	CreateDynamicObject(18219,897.84472656,-752.14648438,98.39207458,332.95166016,358.48937988,114.74121094, -1, -1, -1, 300); //object(mtbfence09)(10)
	CreateDynamicObject(18219,887.92218018,-732.49853516,101.99229431,327.45166016,359.73937988,112.49121094, -1, -1, -1, 300); //object(mtbfence09)(11)
	CreateDynamicObject(18219,844.14410400,-793.63940430,76.34231567,345.24707031,346.60644531,73.58401489, -1, -1, -1, 300); //object(mtbfence09)(12)
	CreateDynamicObject(18219,884.83776855,-769.13305664,92.34251404,342.99536133,346.60217285,90.69592285, -1, -1, -1, 300); //object(mtbfence09)(13)
	CreateDynamicObject(18219,863.64898682,-783.82183838,83.24247742,344.24316406,345.09667969,74.41711426, -1, -1, -1, 300); //object(mtbfence09)(14)
	CreateDynamicObject(18219,819.51641846,-803.03265381,70.01068115,352.99011230,345.09155273,65.41589355, -1, -1, -1, 300); //object(mtbfence09)(15)
	CreateDynamicObject(18216,822.03527832,-780.26586914,72.67448425,352.05999756,15.88000488,190.56005859, -1, -1, -1, 300); //object(mtbfence1)(1)
	CreateDynamicObject(18219,783.01226807,-787.50555420,66.85360718,1.64514160,339.33605957,59.98760986, -1, -1, -1, 300); //object(mtbfence09)(16)
	CreateDynamicObject(8674,799.99865723,-807.04260254,66.69572449,0.00000000,357.00000000,8.70501709, -1, -1, -1, 300); //object(csrsfence02_lvs)(1)
	CreateDynamicObject(8674,784.53906250,-809.07421875,65.96806335,0.00000000,0.00000000,2.71911621, -1, -1, -1, 300); //object(csrsfence02_lvs)(2)
	CreateDynamicObject(18220,492.20401001,-1016.89550781,91.79369354,354.04501343,0.00000000,292.78997803, -1, -1, -1, 300); //object(mtbfence10)(1)
	CreateDynamicObject(18220,511.90206909,-998.03588867,88.46849060,349.28991699,356.00000000,284.03564453, -1, -1, -1, 300); //object(mtbfence10)(2)
	CreateDynamicObject(18220,183.25653076,-1406.41711426,45.41336060,353.24322510,1.95043945,115.21380615, -1, -1, -1, 300); //object(mtbfence10)(3)
	CreateDynamicObject(18220,181.89379883,-1170.66979980,55.61434555,342.32614136,1.95007324,118.77941895, -1, -1, -1, 300); //object(mtbfence10)(4)
	CreateDynamicObject(18220,197.07035828,-1147.95507812,60.36434555,6.17285156,1.95007324,299.67364502, -1, -1, -1, 300); //object(mtbfence10)(5)
	CreateDynamicObject(18220,163.07812500,-1189.98535156,51.98939896,0.68115234,1.95007324,284.02954102, -1, -1, -1, 300); //object(mtbfence10)(6)
	CreateDynamicObject(18220,671.26770020,-1042.88452148,50.95029449,1.39782715,344.95007324,128.13250732, -1, -1, -1, 300); //object(mtbfence10)(7)
	CreateDynamicObject(18220,162.71777344,-1409.57421875,44.81332397,356.46789551,1.95007324,31.23413086, -1, -1, -1, 300); //object(mtbfence10)(8)
	CreateDynamicObject(18220,241.52050781,-1322.87890625,53.66773987,356.46789551,350.94726562,101.11816406, -1, -1, -1, 300); //object(mtbfence10)(9)
	CreateDynamicObject(18220,397.22070312,-1234.48437500,51.46558380,1.14257812,350.94726562,84.72656250, -1, -1, -1, 300); //object(mtbfence10)(10)
	CreateDynamicObject(18220,603.44238281,-1119.08789062,47.51325989,2.39501953,353.44665527,330.37536621, -1, -1, -1, 300); //object(mtbfence10)(11)
	CreateDynamicObject(18220,642.83691406,-1083.98144531,47.44284439,1.39526367,344.94873047,106.29272461, -1, -1, -1, 300); //object(mtbfence10)(12)
	CreateDynamicObject(18220,694.35650635,-1002.96301270,51.67533875,3.85025024,344.94873047,120.87805176, -1, -1, -1, 300); //object(mtbfence10)(13)
	CreateDynamicObject(18220,1006.31250000,-784.30364990,101.43162537,5.08013916,356.44323730,284.36682129, -1, -1, -1, 300); //object(mtbfence10)(14)
	CreateDynamicObject(18220,749.45996094,-934.07714844,55.35037994,359.12109375,355.68786621,290.08300781, -1, -1, -1, 300); //object(mtbfence10)(15)
	CreateDynamicObject(8674,1025.73693848,-791.89428711,102.86946869,0.75000000,354.50000000,17.11499023, -1, -1, -1, 300); //object(csrsfence02_lvs)(3)
	CreateDynamicObject(8674,1082.13879395,-765.85449219,108.71701050,0.74707031,354.49584961,7.36120605, -1, -1, -1, 300); //object(csrsfence02_lvs)(4)
	CreateDynamicObject(12921,1244.44470215,-733.94714355,96.80424500,0.00000000,0.00000000,289.27499390, -1, -1, -1, 300); //object(sw_farment01)(1)
	CreateDynamicObject(17037,1235.22021484,-728.96038818,97.03719330,357.75000000,0.25000000,293.75997925, -1, -1, -1, 300); //object(cuntw_carport2_)(1)
	CreateDynamicObject(1976,1411.96740723,-617.56396484,88.81216431,0.00000000,0.00000000,266.90997314, -1, -1, -1, 300); //object(w_test)(1)
	CreateDynamicObject(1222,1401.48352051,-653.87774658,91.31628418,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(1)
	CreateDynamicObject(1222,1399.37109375,-657.27209473,91.96942139,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(2)
	CreateDynamicObject(1222,1397.06225586,-661.11688232,92.82727051,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(3)
	CreateDynamicObject(1222,1349.29418945,-569.84356689,89.25022888,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(4)
	CreateDynamicObject(1222,1337.48022461,-574.07281494,91.62543488,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(5)
	CreateDynamicObject(1222,1252.19812012,-608.21136475,101.09958649,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(6)
	CreateDynamicObject(1222,1258.97607422,-608.27593994,103.97601318,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(7)
	CreateDynamicObject(1222,1262.95324707,-605.44311523,103.61735535,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(8)
	CreateDynamicObject(1222,1270.74084473,-618.13153076,102.87844849,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(9)
	CreateDynamicObject(1222,1265.38061523,-620.55987549,103.26860046,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(10)
	CreateDynamicObject(1222,1158.11914062,-640.09161377,103.39943695,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(11)
	CreateDynamicObject(1222,1125.19042969,-632.46289062,105.01345825,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(12)
	CreateDynamicObject(1222,1119.90551758,-632.60314941,106.32041931,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(13)
	CreateDynamicObject(1222,1005.40112305,-643.12463379,120.86266327,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(14)
	CreateDynamicObject(1222,1003.04656982,-643.95880127,120.98595428,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(15)
	CreateDynamicObject(1222,1001.01391602,-644.88641357,121.07382965,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(16)
	CreateDynamicObject(1222,933.38519287,-656.41052246,119.45359802,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(17)
	CreateDynamicObject(1222,906.38342285,-691.93725586,113.94023132,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(18)
	CreateDynamicObject(1222,907.38208008,-688.81103516,114.63664246,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(19)
	CreateDynamicObject(1222,909.64379883,-684.42443848,115.56820679,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(20)
	CreateDynamicObject(1222,912.89514160,-681.08386230,115.99917603,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(21)
	CreateDynamicObject(1222,805.98504639,-806.29425049,66.80753326,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(22)
	CreateDynamicObject(1222,508.24877930,-927.15075684,75.70549011,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(23)
	CreateDynamicObject(1222,506.65557861,-939.99847412,77.71740723,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(24)
	CreateDynamicObject(1222,501.46838379,-1006.91802979,90.38364410,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(25)
	CreateDynamicObject(1222,410.65045166,-1007.85766602,91.95027924,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(26)
	CreateDynamicObject(1222,407.87298584,-1008.01702881,91.88504028,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(27)
	CreateDynamicObject(1222,289.56488037,-1096.81701660,82.57524872,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(28)
	CreateDynamicObject(1222,291.19219971,-1100.99108887,82.44524384,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(29)
	CreateDynamicObject(1222,208.32284546,-1134.09216309,62.63312912,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(30)
	CreateDynamicObject(1222,211.38076782,-1131.19274902,62.99439240,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(31)
	CreateDynamicObject(1222,217.82662964,-1127.50451660,63.75838470,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(32)
	CreateDynamicObject(1222,223.03546143,-1125.87609863,64.51033020,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(33)
	CreateDynamicObject(1222,150.37162781,-1199.89978027,50.21736908,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(34)
	CreateDynamicObject(1222,170.36241150,-1391.74963379,47.77999115,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(35)
	CreateDynamicObject(1222,202.00099182,-1385.66040039,48.52035522,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(36)
	CreateDynamicObject(1222,199.06173706,-1388.33605957,48.00099182,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(37)
	CreateDynamicObject(1222,209.87446594,-1351.89526367,50.27656174,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(38)
	CreateDynamicObject(1222,211.30595398,-1350.14697266,50.40404129,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(39)
	CreateDynamicObject(1222,213.50889587,-1348.82824707,50.53567123,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(40)
	CreateDynamicObject(1222,264.79052734,-1332.21203613,52.75268173,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(41)
	CreateDynamicObject(1222,263.30139160,-1333.23522949,52.70021057,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(43)
	CreateDynamicObject(1222,261.87420654,-1334.33337402,52.64924240,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(44)
	CreateDynamicObject(1222,285.37091064,-1317.79614258,53.42681503,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(45)
	CreateDynamicObject(1222,304.58038330,-1354.49780273,23.29575729,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(46)
	CreateDynamicObject(1222,283.85931396,-1318.85278320,53.37773132,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(47)
	CreateDynamicObject(1222,282.44836426,-1319.90417480,53.33553696,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(48)
	CreateDynamicObject(1222,281.07849121,-1320.80065918,53.29212570,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(49)
	CreateDynamicObject(1222,279.40310669,-1322.08374023,53.23595047,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(50)
	CreateDynamicObject(1222,335.68386841,-1288.32617188,53.70001221,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(51)
	CreateDynamicObject(1222,333.77755737,-1289.22778320,53.70001221,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(52)
	CreateDynamicObject(1222,331.71759033,-1290.53649902,53.70001221,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(53)
	CreateDynamicObject(1222,329.33148193,-1291.52709961,53.70001221,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(54)
	CreateDynamicObject(1222,381.27099609,-1241.24426270,52.69118500,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(55)
	CreateDynamicObject(1222,377.81314087,-1243.36596680,53.01886368,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(56)
	CreateDynamicObject(1222,373.94726562,-1244.17785645,53.47394562,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(57)
	CreateDynamicObject(1222,605.47509766,-1111.52172852,46.82185364,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(58)
	CreateDynamicObject(1222,608.52850342,-1110.19995117,46.65509033,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(59)
	CreateDynamicObject(1222,612.31872559,-1106.78564453,46.52270126,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(60)
	CreateDynamicObject(1222,629.45245361,-1115.90893555,46.22140503,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(61)
	CreateDynamicObject(1222,675.42712402,-1042.25659180,49.95164108,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(62)
	CreateDynamicObject(1222,680.27209473,-1035.00659180,50.31716156,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(63)
	CreateDynamicObject(1222,798.97460938,-879.56433105,58.64400482,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(64)
	CreateDynamicObject(1222,805.76257324,-875.36657715,60.93883514,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(65)
	CreateDynamicObject(1222,833.27917480,-865.67968750,68.50798798,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(66)
	CreateDynamicObject(1222,837.09283447,-875.62384033,68.26512909,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(67)
	CreateDynamicObject(1222,833.75189209,-876.99456787,68.26512909,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(68)
	CreateDynamicObject(1222,830.66802979,-878.45892334,68.25255585,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(69)
	CreateDynamicObject(1222,937.11523438,-834.89379883,94.29386139,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(70)
	CreateDynamicObject(1222,931.44323730,-837.97576904,93.81705475,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(71)
	CreateDynamicObject(1222,927.23999023,-840.71826172,93.45554352,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(72)
	CreateDynamicObject(1222,923.37060547,-842.63513184,93.13568878,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(73)
	CreateDynamicObject(1222,994.63922119,-794.53765869,99.40617371,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(74)
	CreateDynamicObject(1222,1018.99945068,-774.99731445,102.41915894,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(75)
	CreateDynamicObject(1222,1022.85510254,-777.90600586,102.42423248,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(76)
	CreateDynamicObject(1222,1018.00555420,-778.81433105,101.96015167,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(77)
	CreateDynamicObject(1222,1076.30566406,-765.58483887,107.10494995,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(78)
	CreateDynamicObject(1222,1071.84948730,-762.58032227,106.32182312,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(79)
	CreateDynamicObject(1222,1084.33093262,-776.50970459,107.78250122,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(80)
	CreateDynamicObject(1222,1079.80883789,-777.34594727,107.38788605,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(81)
	CreateDynamicObject(1222,1075.68688965,-777.88208008,107.08756256,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(82)
	CreateDynamicObject(1222,1244.27709961,-725.87835693,94.92636108,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(83)
	CreateDynamicObject(1222,1240.30310059,-728.36218262,94.97270203,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(84)
	CreateDynamicObject(1222,1231.36743164,-733.03540039,95.55207062,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(85)
	CreateDynamicObject(1222,1350.73718262,-680.20538330,92.04203796,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(86)
	CreateDynamicObject(1222,1354.00439453,-678.82867432,92.47928619,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(87)
	CreateDynamicObject(1222,1083.22851562,-623.16296387,112.00064850,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(88)
	CreateDynamicObject(1222,1122.25988770,-632.52911377,105.73506165,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel3)(89)
	CreateDynamicObject(16776,1350.43237305,-698.97479248,90.71424866,4.19000244,0.00000000,179.36495972, -1, -1, -1, 300); //object(des_cockbody)(1)
	CreateDynamicObject(10397,1293.99194336,-711.32824707,95.46125793,8.00000000,359.75000000,21.83499146, -1, -1, -1, 300); //object(hc_stadlight1_sfs)(1)
	CreateDynamicObject(2886,1245.81091309,-738.38116455,95.01042938,0.00000000,0.00000000,294.49499512, -1, -1, -1, 300); //object(sec_keypad)(1)
	CreateDynamicObject(1210,1232.56311035,-733.21276855,95.09844208,0.00000000,0.00000000,23.27001953, -1, -1, -1, 300); //object(briefcase)(1)
	CreateDynamicObject(2061,1231.76367188,-733.68438721,95.25838470,0.00000000,0.00000000,21.83499146, -1, -1, -1, 300); //object(cj_shells1)(1)
	CreateDynamicObject(1350,1254.97387695,-733.46002197,93.40153503,0.00000000,0.00000000,292.50997925, -1, -1, -1, 300); //object(cj_traffic_light4)(1)
	CreateDynamicObject(1232,1409.42114258,-619.88586426,85.51596832,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(1)
	CreateDynamicObject(1232,1403.71057129,-585.83001709,80.10076141,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(2)
	CreateDynamicObject(1232,1344.54443359,-571.75665283,92.36463928,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(3)
	CreateDynamicObject(1232,1337.45776367,-586.17205811,94.85404968,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(4)
	CreateDynamicObject(1232,1260.61389160,-607.02661133,106.02983093,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(5)
	CreateDynamicObject(1232,1081.83227539,-623.03094482,114.35849762,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(6)
	CreateDynamicObject(1232,985.22015381,-647.00250244,123.47516632,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(7)
	CreateDynamicObject(1232,894.44323730,-760.10833740,98.86382294,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(8)
	CreateDynamicObject(1232,557.92468262,-908.68414307,69.98642731,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(9)
	CreateDynamicObject(1232,142.06802368,-1291.00012207,47.71102142,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(10)
	CreateDynamicObject(1232,170.41192627,-1390.23364258,50.12850952,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(11)
	CreateDynamicObject(16442,1267.45202637,-618.78186035,104.36456299,0.00000000,0.00000000,194.53002930, -1, -1, -1, 300); //object(desn2_stripsigs1)(1)
	CreateDynamicObject(1825,1235.76464844,-730.59735107,94.80340576,0.00000000,2.25000000,0.00000000, -1, -1, -1, 300); //object(kb_table_chairs1)(1)
	CreateDynamicObject(1226,1389.38134766,-667.73370361,96.84304810,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(1)
	CreateDynamicObject(1226,1401.61633301,-651.94836426,94.33677673,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(2)
	CreateDynamicObject(1226,1369.64123535,-567.16729736,88.10899353,0.00000000,0.00000000,89.32501221, -1, -1, -1, 300); //object(lamppost3)(3)
	CreateDynamicObject(1226,1296.32714844,-603.92993164,102.99044037,0.00000000,0.00000000,296.47998047, -1, -1, -1, 300); //object(lamppost3)(4)
	CreateDynamicObject(1226,1264.54760742,-604.87133789,106.50233459,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(5)
	CreateDynamicObject(1226,1197.73999023,-633.69342041,106.88238525,0.00000000,0.00000000,276.62994385, -1, -1, -1, 300); //object(lamppost3)(6)
	CreateDynamicObject(1226,1192.94055176,-621.52026367,106.88249207,0.00000000,0.00000000,53.59500122, -1, -1, -1, 300); //object(lamppost3)(7)
	CreateDynamicObject(1226,1062.00109863,-623.44067383,118.97878265,0.00000000,0.00000000,280.59997559, -1, -1, -1, 300); //object(lamppost3)(8)
	CreateDynamicObject(1226,971.38287354,-634.88659668,124.74300385,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(9)
	CreateDynamicObject(1226,944.12030029,-670.28509521,123.25410461,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(10)
	CreateDynamicObject(1226,912.04364014,-683.34240723,119.16013336,0.00000000,0.00000000,140.93499756, -1, -1, -1, 300); //object(lamppost3)(11)
	CreateDynamicObject(1226,924.89495850,-694.40966797,119.66194916,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(12)
	CreateDynamicObject(1226,923.45019531,-696.81427002,119.38590240,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(13)
	CreateDynamicObject(1226,905.34240723,-694.92187500,116.66868591,0.00000000,0.00000000,164.75500488, -1, -1, -1, 300); //object(lamppost3)(14)
	CreateDynamicObject(1226,886.85644531,-762.37908936,98.38565826,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(15)
	CreateDynamicObject(1226,882.26855469,-747.93829346,100.28084564,0.00000000,0.00000000,129.02502441, -1, -1, -1, 300); //object(lamppost3)(16)
	CreateDynamicObject(1226,862.86102295,-766.90991211,89.61988068,0.00000000,0.00000000,121.08502197, -1, -1, -1, 300); //object(lamppost3)(17)
	CreateDynamicObject(1226,804.62170410,-806.33441162,70.03250885,0.00000000,0.00000000,274.64501953, -1, -1, -1, 300); //object(lamppost3)(18)
	CreateDynamicObject(1226,771.62658691,-813.85919189,69.00217438,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(19)
	CreateDynamicObject(1226,771.90240479,-791.17822266,68.82360840,0.00000000,0.00000000,95.28002930, -1, -1, -1, 300); //object(lamppost3)(20)
	CreateDynamicObject(1226,661.10852051,-898.77355957,66.31480408,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(21)
	CreateDynamicObject(1226,646.26080322,-887.66711426,66.04538727,0.00000000,0.00000000,115.13003540, -1, -1, -1, 300); //object(lamppost3)(22)
	CreateDynamicObject(1226,520.40863037,-897.86651611,74.95420074,0.00000000,0.00000000,140.93499756, -1, -1, -1, 300); //object(lamppost3)(23)
	CreateDynamicObject(1226,508.34207153,-933.75280762,79.98278809,0.00000000,0.00000000,168.72503662, -1, -1, -1, 300); //object(lamppost3)(24)
	CreateDynamicObject(1226,514.48101807,-989.25415039,90.51309204,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(25)
	CreateDynamicObject(1226,473.69836426,-1024.05346680,95.66733551,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(29)
	CreateDynamicObject(1226,500.79199219,-1008.80664062,93.57212067,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(30)
	CreateDynamicObject(1226,289.86257935,-1098.97546387,85.53942871,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(31)
	CreateDynamicObject(1226,287.31115723,-1094.84350586,86.31204224,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(32)
	CreateDynamicObject(1226,263.57141113,-1117.35266113,81.44820404,0.00000000,0.00000000,142.92004395, -1, -1, -1, 300); //object(lamppost3)(33)
	CreateDynamicObject(1226,259.90380859,-1120.78710938,80.72808075,0.00000000,0.00000000,123.07003784, -1, -1, -1, 300); //object(lamppost3)(34)
	CreateDynamicObject(1226,253.37496948,-1147.03686523,78.21880341,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(35)
	CreateDynamicObject(1226,246.51936340,-1147.50915527,77.21734619,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(36)
	CreateDynamicObject(1226,260.08648682,-1144.77685547,78.88256836,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(37)
	CreateDynamicObject(1226,219.65896606,-1125.07861328,67.59033966,0.00000000,0.00000000,121.08502197, -1, -1, -1, 300); //object(lamppost3)(38)
	CreateDynamicObject(1226,213.18260193,-1129.04785156,66.68775940,0.00000000,0.00000000,125.05505371, -1, -1, -1, 300); //object(lamppost3)(39)
	CreateDynamicObject(1226,208.33361816,-1131.52221680,66.19905853,0.00000000,0.00000000,136.96502686, -1, -1, -1, 300); //object(lamppost3)(40)
	CreateDynamicObject(1226,166.33242798,-1186.49316406,55.80247879,0.00000000,0.00000000,123.07003784, -1, -1, -1, 300); //object(lamppost3)(41)
	CreateDynamicObject(1226,163.74346924,-1222.17016602,46.96490097,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(42)
	CreateDynamicObject(1226,178.03340149,-1205.51562500,52.42467499,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(43)
	CreateDynamicObject(1226,156.20266724,-1377.58593750,52.84606552,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(46)
	CreateDynamicObject(1226,186.28962708,-1403.52319336,49.19467545,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(47)
	CreateDynamicObject(1226,181.08247375,-1410.42785645,48.48181152,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(48)
	CreateDynamicObject(1226,174.86782837,-1416.77770996,47.69363785,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(49)
	CreateDynamicObject(1226,156.78353882,-1407.70458984,48.74791718,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(50)
	CreateDynamicObject(1226,162.90936279,-1412.39550781,47.84764099,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(51)
	CreateDynamicObject(1226,199.79792786,-1387.20056152,51.49699402,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(52)
	CreateDynamicObject(1226,209.19456482,-1350.32641602,53.72365570,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(53)
	CreateDynamicObject(1226,244.98016357,-1316.28820801,56.83303833,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(54)
	CreateDynamicObject(1226,263.70257568,-1335.07800293,56.10049820,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(55)
	CreateDynamicObject(1226,331.85501099,-1290.14782715,58.14426804,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(56)
	CreateDynamicObject(1226,396.85260010,-1233.72705078,54.66538239,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(57)
	CreateDynamicObject(1226,569.62512207,-1192.02380371,52.10385132,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(58)
	CreateDynamicObject(1226,605.11627197,-1109.27514648,51.39933395,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(59)
	CreateDynamicObject(1226,608.32690430,-1106.41491699,51.13420105,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(60)
	CreateDynamicObject(1226,601.10693359,-1131.79602051,50.25518799,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(61)
	CreateDynamicObject(1226,629.42877197,-1115.62109375,49.59315491,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(62)
	CreateDynamicObject(1226,627.21807861,-1094.34558105,52.37442017,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(63)
	CreateDynamicObject(1226,638.06823730,-1085.14221191,50.89460373,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(64)
	CreateDynamicObject(1226,644.24914551,-1080.70812988,51.09255219,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(65)
	CreateDynamicObject(1226,662.54431152,-1054.29650879,52.67029572,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(66)
	CreateDynamicObject(1226,681.15325928,-1032.92687988,53.87639999,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(67)
	CreateDynamicObject(1226,686.08062744,-1015.45880127,54.99857330,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(68)
	CreateDynamicObject(1226,703.80584717,-990.39703369,55.07268143,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(69)
	CreateDynamicObject(1226,716.70379639,-970.23114014,57.13665390,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(70)
	CreateDynamicObject(1226,726.88543701,-956.86950684,58.35350037,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(71)
	CreateDynamicObject(1226,739.66864014,-941.53106689,58.45489502,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(72)
	CreateDynamicObject(1226,830.67559814,-878.52990723,73.00762939,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(73)
	CreateDynamicObject(1226,836.27386475,-877.49206543,71.25066376,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(74)
	CreateDynamicObject(1226,834.48748779,-864.59362793,72.08514404,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(75)
	CreateDynamicObject(1226,858.95898438,-856.17224121,79.80172729,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(76)
	CreateDynamicObject(1226,864.87829590,-853.76831055,80.17848969,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(77)
	CreateDynamicObject(1226,925.51550293,-842.95330811,96.64979553,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(78)
	CreateDynamicObject(1226,929.57543945,-840.57812500,96.97010803,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(79)
	CreateDynamicObject(1226,934.36657715,-837.99517822,97.35578918,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(80)
	CreateDynamicObject(1226,992.07208252,-794.15911865,103.50201416,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(81)
	CreateDynamicObject(1226,998.82867432,-787.65771484,103.39389038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(82)
	CreateDynamicObject(1226,1019.83349609,-777.18096924,105.69866943,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(83)
	CreateDynamicObject(1226,1020.45721436,-794.48364258,104.88574219,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(84)
	CreateDynamicObject(1226,1076.64538574,-778.01989746,110.48265076,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(85)
	CreateDynamicObject(1226,1080.80908203,-777.01391602,110.91291809,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(86)
	CreateDynamicObject(1226,1073.84216309,-766.51513672,110.37097931,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(lamppost3)(87)
	CreateDynamicObject(1226,173.37011719,-1182.13574219,56.69085693,0.00000000,0.00000000,123.06884766, -1, -1, -1, 300); //object(lamppost3)(89)
	CreateDynamicObject(1226,156.87004089,-1194.14184570,54.83742142,0.00000000,0.00000000,123.06884766, -1, -1, -1, 300); //object(lamppost3)(90)
//Гора Вайнвуд (конец)

//Островок раздолья (начало)
	ObjGam[23] = CreateObject(10946,-828.51562500,553.94531250,3.66345406,0.00000000,0.00000000,180.10986328);

	CreateDynamicObject(10946,-828.62701416,506.04324341,3.62499857,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fuuuuuuuck_sfs)(1)
//	CreateDynamicObject(10946,-828.51562500,553.94531250,3.66345406,0.00000000,0.00000000,180.10986328, -1, -1, -1, 300); //object(fuuuuuuuck_sfs)(4)
	CreateDynamicObject(3281,-879.90875244,549.58843994,3.06702852,0.00000000,0.00000000,65.50500488, -1, -1, -1, 300); //object(mtb_banner1)(3)
	CreateDynamicObject(3281,-875.91796875,554.52636719,3.06702852,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(7834,-856.28125000,539.85351562,6.03849077,0.00000000,0.00000000,179.36279297, -1, -1, -1, 300); //object(vegasnfrates08)(1)
	CreateDynamicObject(7834,-828.83636475,547.26965332,6.03849077,0.00000000,0.00000000,90.39276123, -1, -1, -1, 300); //object(vegasnfrates08)(2)
	CreateDynamicObject(8341,-794.98828125,519.85742188,5.51940107,0.00000000,0.00000000,359.71984863, -1, -1, -1, 300); //object(vgsfrates12)(1)
	CreateDynamicObject(8883,-831.15917969,517.71289062,5.47404718,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsefrght01)(2)
	CreateDynamicObject(8884,-800.68316650,494.16351318,5.47404718,0.00000000,0.00000000,89.79501343, -1, -1, -1, 300); //object(vgsefrght02)(3)
	CreateDynamicObject(8884,-855.20336914,488.65161133,5.47404718,0.00000000,0.00000000,89.79125977, -1, -1, -1, 300); //object(vgsefrght02)(4)
	CreateDynamicObject(8884,-856.76379395,505.45642090,5.52404737,0.00000000,359.96691895,179.65942383, -1, -1, -1, 300); //object(vgsefrght02)(5)
	CreateDynamicObject(8886,-883.17663574,513.56030273,5.47404718,0.00000000,0.00000000,288.53997803, -1, -1, -1, 300); //object(vgsefrght04)(10)
	CreateDynamicObject(7516,-798.32025146,567.57519531,6.03654671,0.00000000,0.00000000,269.93994141, -1, -1, -1, 300); //object(vegasnfrates02)(1)
	CreateDynamicObject(3281,-795.38513184,539.21405029,2.99202824,0.00000000,0.00000000,89.08041382, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-844.68267822,522.26385498,3.06702852,0.00000000,0.00000000,0.41198730, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-827.07965088,507.52645874,3.06702852,0.00000000,0.00000000,91.07714844, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-795.33911133,542.80328369,2.99202824,0.00000000,0.00000000,89.07714844, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-843.79852295,557.08099365,3.06702852,0.00000000,0.00000000,179.63714600, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-795.35058594,555.57910156,2.96702814,0.00000000,0.00000000,89.07714844, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-795.29101562,546.39062500,2.99202824,0.00000000,0.00000000,89.07714844, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-810.27996826,557.50030518,3.06702852,0.00000000,0.00000000,179.32122803, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-815.69641113,562.95861816,3.06702852,0.00000000,0.00000000,89.57507324, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-806.68719482,557.52380371,3.06702852,0.00000000,0.00000000,182.09680176, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-876.77081299,510.32287598,3.06702852,0.00000000,0.00000000,0.41198730, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-841.08685303,522.25122070,3.06702852,0.00000000,0.00000000,0.41198730, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-837.51141357,522.22534180,3.06702852,0.00000000,0.00000000,0.41198730, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-865.96020508,527.84826660,3.06702852,0.00000000,0.00000000,269.83520508, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-864.19494629,522.47637939,3.06702852,0.00000000,0.00000000,0.10913086, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-856.99652100,522.41497803,3.06702852,0.00000000,0.00000000,359.93408203, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-860.58874512,522.44158936,3.06702852,0.00000000,0.00000000,359.93408203, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-878.42578125,552.85742188,3.06702852,0.00000000,0.00000000,65.50048828, -1, -1, -1, 300); //object(mtb_banner1)(3)
	CreateDynamicObject(3281,-881.40631104,546.31854248,3.06702852,0.00000000,0.00000000,65.50048828, -1, -1, -1, 300); //object(mtb_banner1)(3)
	CreateDynamicObject(3281,-873.15686035,510.34448242,3.06702852,0.00000000,0.00000000,0.41198730, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-804.91796875,484.81933594,3.06702852,0.00000000,0.00000000,89.07714844, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-827.04467773,516.01562500,3.06702852,0.00000000,0.00000000,91.07666016, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-865.94238281,524.28808594,3.06702852,0.00000000,0.00000000,269.83520508, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-872.32781982,554.51379395,3.06702852,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-870.50073242,556.29779053,3.06702852,0.00000000,0.00000000,89.59002686, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.16632080,542.88720703,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-870.47595215,563.45086670,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-870.41748047,567.02075195,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-870.47363281,559.87792969,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.17529297,539.22534180,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.18383789,535.57525635,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.19470215,531.89697266,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.22271729,528.30895996,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.25915527,524.72393799,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(3281,-882.30371094,521.12176514,3.06702852,0.00000000,0.00000000,89.58801270, -1, -1, -1, 300); //object(mtb_banner1)(4)
	CreateDynamicObject(17969,-843.67144775,482.30874634,3.36633110,0.00000000,0.00000000,269.71997070, -1, -1, -1, 300); //object(hub_graffitti)(1)
	CreateDynamicObject(3463,-875.89654541,508.95614624,2.04626656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vegaslampost2)(1)
	CreateDynamicObject(3463,-865.21893311,523.03497314,2.04626656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vegaslampost2)(2)
	CreateDynamicObject(3463,-870.59893799,555.32873535,2.04626656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vegaslampost2)(3)
	CreateDynamicObject(3463,-815.11834717,558.34973145,2.04626656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vegaslampost2)(4)
	CreateDynamicObject(3463,-831.67974854,507.75546265,2.04626656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vegaslampost2)(5)
	CreateDynamicObject(3281,-815.65167236,566.54919434,3.06702852,0.00000000,0.00000000,89.57153320, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-815.68572998,559.37622070,3.06702852,0.00000000,0.00000000,90.80657959, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-813.88464355,557.57427979,3.06702852,0.00000000,0.00000000,178.89514160, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(3281,-803.10552979,557.63604736,3.06702852,0.00000000,0.00000000,182.09289551, -1, -1, -1, 300); //object(mtb_banner1)(6)
	CreateDynamicObject(16092,-874.37475586,531.03796387,2.04626560,0.00000000,0.00000000,89.84002686, -1, -1, -1, 300); //object(des_pipestrut05)(1)
	CreateDynamicObject(7655,-855.11517334,519.67895508,8.23618698,0.00000000,358.01501465,85.35501099, -1, -1, -1, 300); //object(bunting06)(1)
	CreateDynamicObject(7655,-816.56640625,499.22656250,8.52464199,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bunting06)(2)
	CreateDynamicObject(7655,-806.27667236,558.01910400,9.02464199,0.00000000,0.00000000,55.58001709, -1, -1, -1, 300); //object(bunting06)(4)
	CreateDynamicObject(1215,-866.26843262,542.40991211,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(1)
	CreateDynamicObject(1215,-856.10211182,557.31353760,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(2)
	CreateDynamicObject(1215,-826.43847656,557.30108643,2.69885683,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(3)
	CreateDynamicObject(1215,-816.13861084,577.79534912,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(4)
	CreateDynamicObject(1215,-811.31970215,547.38061523,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(5)
	CreateDynamicObject(1215,-800.82348633,557.60620117,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(6)
	CreateDynamicObject(1215,-795.39288330,553.72106934,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(7)
	CreateDynamicObject(1215,-795.34765625,548.23144531,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(8)
	CreateDynamicObject(1215,-795.17413330,522.56097412,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(9)
	CreateDynamicObject(1215,-794.74005127,537.73968506,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(10)
	CreateDynamicObject(1215,-804.97058105,522.35491943,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(11)
	CreateDynamicObject(1215,-811.37390137,537.40319824,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(12)
	CreateDynamicObject(1215,-827.64764404,520.73028564,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(13)
	CreateDynamicObject(1215,-804.23773193,505.63381958,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(14)
	CreateDynamicObject(1215,-804.74291992,487.22183228,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(15)
	CreateDynamicObject(1215,-804.85107422,482.36691284,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(16)
	CreateDynamicObject(1215,-826.78521729,496.16918945,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(17)
	CreateDynamicObject(1215,-836.31066895,496.32916260,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(18)
	CreateDynamicObject(1215,-850.92242432,500.08834839,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(19)
	CreateDynamicObject(1215,-850.25097656,510.27239990,2.83612537,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(20)
	CreateDynamicObject(1215,-868.24896240,509.97341919,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(21)
	CreateDynamicObject(1215,-881.43817139,519.29779053,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(22)
	CreateDynamicObject(1215,-866.43432617,527.49578857,2.57213426,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(23)
	CreateDynamicObject(1215,-870.44854736,554.38629150,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(24)
	CreateDynamicObject(1262,-877.97302246,530.29803467,9.51682377,0.00000000,0.00000000,182.62005615, -1, -1, -1, 300); //object(mtraffic4)(1)
	CreateDynamicObject(1262,-869.95751953,530.01940918,9.51682377,0.00000000,0.00000000,182.61474609, -1, -1, -1, 300); //object(mtraffic4)(3)
	CreateDynamicObject(8397,-873.20416260,492.22293091,12.00781059,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(luxorpillar01_lvs)(1)
	CreateDynamicObject(12943,-787.24011230,541.83032227,1.69626582,0.00000000,0.00000000,359.00000000, -1, -1, -1, 300); //object(sw_shed07)(1)
	CreateDynamicObject(1215,-794.93920898,538.20513916,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(8)
	CreateDynamicObject(1215,-779.63616943,545.42675781,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(8)
	CreateDynamicObject(1215,-779.55822754,537.95281982,2.61058974,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(8)
	CreateDynamicObject(16151,-791.45446777,539.14422607,2.34626746,0.00000000,0.00000000,270.67498779, -1, -1, -1, 300); //object(ufo_bar)(1)
	CreateDynamicObject(1667,-789.03564453,540.13610840,3.09026527,0.00000000,0.00000000,1.98498535, -1, -1, -1, 300); //object(propwineglass1)(1)
	CreateDynamicObject(1667,-789.72967529,540.07641602,3.06526518,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(propwineglass1)(2)
	CreateDynamicObject(643,-788.62548828,544.62390137,2.51673794,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_chr_tbl_test)(1)
	CreateDynamicObject(643,-783.73687744,539.64605713,2.51673794,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_chr_tbl_test)(2)
	CreateDynamicObject(1670,-788.66735840,544.53894043,2.91681790,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(propcollecttable)(1)
	CreateDynamicObject(1775,-785.96502686,545.13684082,3.14330292,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cj_sprunk1)(1)
	CreateDynamicObject(2837,-783.33343506,544.15014648,2.91681790,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(gb_takeaway02)(1)
	CreateDynamicObject(643,-783.31054688,544.22851562,2.51673794,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_chr_tbl_test)(4)
	CreateDynamicObject(2860,-784.04022217,539.63348389,2.93340707,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(gb_kitchtakeway05)(1)
	CreateDynamicObject(3515,-775.23632812,554.06304932,4.01647377,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vgsfountain)(1)
	CreateDynamicObject(7388,-782.11352539,536.15417480,2.04626656,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(vrockpole)(1)
	CreateDynamicObject(13562,-884.07757568,513.98236084,9.11369133,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bigsprunkpole)(1)
	CreateDynamicObject(2672,-784.44409180,566.51025391,2.32572865,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(proc_rubbish_4)(1)
//Островок раздолья (конец)

//Форт Карсон (начало)
	CreateDynamicObject(16092, -139.07237, 618.33246, 1.07813,   0.00000, 0.00000, 278.84998, -1, -1, -1, 300);
	CreateDynamicObject(979, -112.21866, 825.26825, 19.90633,   0.00000, 0.00000, 114.63007, -1, -1, -1, 300);
	CreateDynamicObject(978, -143.91138, 611.77002, 1.91835,   0.00000, 0.00000, 282.58496, -1, -1, -1, 300);
	CreateDynamicObject(978, -132.80815, 534.25281, 7.01209,   0.00000, 358.01501, 261.98499, -1, -1, -1, 300);
	CreateDynamicObject(979, -116.96738, 544.63281, 6.59373,   0.00000, 3.75000, 86.83664, -1, -1, -1, 300);
	CreateDynamicObject(978, -144.00586, 602.76758, 2.05073,   0.00000, 358.01147, 256.77795, -1, -1, -1, 300);
	CreateDynamicObject(978, -132.15468, 543.35895, 6.68709,   0.00000, 358.01147, 269.91992, -1, -1, -1, 300);
	CreateDynamicObject(978, -129.08342, 527.89600, 7.08710,   0.00000, 0.99646, 337.40942, -1, -1, -1, 300);
	CreateDynamicObject(978, -120.13242, 526.69220, 6.93709,   0.00000, 0.99426, 7.18140, -1, -1, -1, 300);
	CreateDynamicObject(979, -127.62109, 605.61035, 1.83357,   0.00000, 0.00000, 128.51257, -1, -1, -1, 300);
	CreateDynamicObject(979, -112.70425, 540.90698, 6.91209,   1.00000, 359.99634, 190.05603, -1, -1, -1, 300);
	CreateDynamicObject(978, -134.40193, 551.99390, 6.03709,   0.00000, 353.76147, 299.69238, -1, -1, -1, 300);
	CreateDynamicObject(978, -139.32974, 559.51019, 4.96209,   0.00000, 353.75977, 305.64551, -1, -1, -1, 300);
	CreateDynamicObject(978, -145.74034, 594.09399, 2.19818,   0.00000, 359.50977, 259.99048, -1, -1, -1, 300);
	CreateDynamicObject(978, -143.47363, 567.33105, 4.06210,   0.00000, 355.00671, 289.76440, -1, -1, -1, 300);
	CreateDynamicObject(978, -146.05371, 576.47754, 3.16694,   0.00000, 355.00671, 285.79285, -1, -1, -1, 300);
	CreateDynamicObject(978, -147.23128, 585.55194, 2.27318,   0.00000, 359.50562, 259.98596, -1, -1, -1, 300);
	CreateDynamicObject(978, -111.61869, 528.71442, 6.93709,   0.00000, 359.23877, 19.08957, -1, -1, -1, 300);
	CreateDynamicObject(978, -102.79520, 531.50861, 6.86209,   0.00000, 359.48645, 19.08875, -1, -1, -1, 300);
	CreateDynamicObject(979, -103.70084, 543.34186, 6.83709,   0.99976, 358.99451, 199.97748, -1, -1, -1, 300);
	CreateDynamicObject(979, -116.50293, 553.86719, 5.86873,   0.00000, 5.74585, 86.83044, -1, -1, -1, 300);
	CreateDynamicObject(979, -131.56934, 613.59766, 1.91260,   0.00000, 0.00000, 102.71667, -1, -1, -1, 300);
	CreateDynamicObject(979, -120.89893, 832.23816, 20.03133,   0.00000, 356.25000, 203.71594, -1, -1, -1, 300);
	CreateDynamicObject(1237, -115.10894, 831.58740, 19.00324,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4505, -297.21838, 829.10968, 14.74153,   359.25000, 351.75000, 270.67499, -1, -1, -1, 300);
	CreateDynamicObject(4526, -192.46078, 1028.47095, 20.63347,   0.00000, 0.00000, 300.44998, -1, -1, -1, 300);
	CreateDynamicObject(1237, -180.02806, 1020.43732, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -180.20587, 1017.01727, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -180.16336, 1013.91174, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -180.15565, 1010.95984, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1228, -180.08643, 1018.78278, 19.16331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1228, -180.04401, 1022.19232, 19.16331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1228, -180.13121, 1015.37036, 19.16331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1228, -180.11943, 1012.34381, 19.16331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1228, -180.09120, 1009.51715, 19.16331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1228, -124.48322, 812.25415, 20.28607,   0.00000, 0.00000, 21.83499, -1, -1, -1, 300);
	CreateDynamicObject(1228, -126.38098, 813.86646, 20.28607,   0.00000, 0.00000, 73.45483, -1, -1, -1, 300);
	CreateDynamicObject(1228, -129.05855, 814.19977, 20.28607,   0.00000, 0.00000, 107.19958, -1, -1, -1, 300);
	CreateDynamicObject(978, -254.65048, 1008.11816, 19.59875,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -218.46289, 1007.88477, 19.57108,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -242.38907, 1007.92249, 19.58241,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -205.82524, 977.67126, 18.82107,   0.00000, 0.00000, 278.61499, -1, -1, -1, 300);
	CreateDynamicObject(1237, -206.88226, 971.66815, 17.78584,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -210.24405, 971.46539, 18.08794,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -215.17567, 971.29065, 18.31287,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -232.46179, 1007.37671, 18.71585,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -248.90703, 1007.80029, 18.77930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4505, -275.05573, 1078.79395, 21.64406,   0.00000, 0.00000, 268.17505, -1, -1, -1, 300);
	CreateDynamicObject(978, -266.75235, 1008.05865, 19.57716,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -295.84454, 1052.85913, 19.42675,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -286.87988, 1034.02539, 19.46718,   0.00000, 0.00000, 269.92310, -1, -1, -1, 300);
	CreateDynamicObject(978, -280.38458, 1013.09973, 19.57716,   0.00000, 0.00000, 318.31500, -1, -1, -1, 300);
	CreateDynamicObject(1434, -265.26086, 1061.17993, 18.81996,   0.00000, 0.00000, 272.65997, -1, -1, -1, 300);
	CreateDynamicObject(1434, -265.26276, 1058.30115, 18.81996,   0.00000, 0.00000, 269.40869, -1, -1, -1, 300);
	CreateDynamicObject(1434, -265.28580, 1055.34644, 18.81996,   0.00000, 0.00000, 269.40674, -1, -1, -1, 300);
	CreateDynamicObject(1434, -265.20578, 1052.34790, 18.69496,   0.00000, 0.00000, 269.40674, -1, -1, -1, 300);
	CreateDynamicObject(1434, -263.93317, 1040.61157, 18.84736,   0.00000, 0.00000, 217.81183, -1, -1, -1, 300);
	CreateDynamicObject(1434, -264.10547, 1049.94922, 18.69496,   0.00000, 0.00000, 311.10535, -1, -1, -1, 300);
	CreateDynamicObject(4505, -299.03818, 1097.88867, 21.64406,   0.00000, 0.00000, 173.89087, -1, -1, -1, 300);
	CreateDynamicObject(979, -311.76709, 1107.78748, 19.58241,   0.00000, 0.00000, 180.63501, -1, -1, -1, 300);
	CreateDynamicObject(1237, -307.10834, 1105.52600, 18.73439,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1408, -355.73080, 1102.77258, 19.33454,   0.00000, 0.00000, 268.68997, -1, -1, -1, 300);
	CreateDynamicObject(1408, -355.57349, 1108.04529, 19.33454,   0.00000, 0.00000, 268.68713, -1, -1, -1, 300);
	CreateDynamicObject(1408, -355.47925, 1113.54492, 19.33454,   0.00000, 0.00000, 268.68713, -1, -1, -1, 300);
	CreateDynamicObject(1408, -355.38922, 1118.76990, 19.33454,   0.00000, 0.00000, 268.68713, -1, -1, -1, 300);
	CreateDynamicObject(1408, -355.43118, 1126.52209, 19.33454,   0.00000, 0.00000, 268.68713, -1, -1, -1, 300);
	CreateDynamicObject(978, -349.48480, 1152.79785, 19.57319,   0.00000, 0.00000, 217.07648, -1, -1, -1, 300);
	CreateDynamicObject(978, -336.84769, 1158.37903, 19.50105,   0.00000, 0.00000, 181.09888, -1, -1, -1, 300);
	CreateDynamicObject(978, -314.65369, 1158.80298, 19.50105,   0.00000, 0.00000, 181.09863, -1, -1, -1, 300);
	CreateDynamicObject(978, -325.35641, 1158.42517, 19.50105,   0.00000, 0.00000, 180.09863, -1, -1, -1, 300);
	CreateDynamicObject(979, -334.68896, 1131.14380, 19.43241,   0.00000, 0.00000, 89.32501, -1, -1, -1, 300);
	CreateDynamicObject(979, -316.40091, 1138.13025, 19.58144,   0.00000, 0.00000, 359.99933, -1, -1, -1, 300);
	CreateDynamicObject(979, -327.12561, 1138.11523, 19.58405,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
	CreateDynamicObject(1228, -333.49774, 1136.64734, 19.16522,   0.00000, 0.00000, 318.31500, -1, -1, -1, 300);
	CreateDynamicObject(2914, -139.16818, 617.38129, 8.40032,   0.00000, 31.76001, 9.92499, -1, -1, -1, 300);
	CreateDynamicObject(2914, -138.79993, 617.45319, 8.40032,   0.00000, 31.75598, 189.28561, -1, -1, -1, 300);
	CreateDynamicObject(1584, -98.34985, 533.92749, 7.63345,   0.00000, 0.00000, 102.70502, -1, -1, -1, 300);
	CreateDynamicObject(4526, -271.44528, 1142.07092, 20.63347,   0.00000, 0.00000, 336.17999, -1, -1, -1, 300);
	CreateDynamicObject(7933, -306.57944, 1073.00574, 19.30280,   0.00000, 0.00000, 316.32999, -1, -1, -1, 300);
	CreateDynamicObject(16664, -300.53070, 1078.95850, 19.49925,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4517, -96.05859, 1198.70703, 20.38885,   0.00000, 0.00000, 91.30737, -1, -1, -1, 300);
	CreateDynamicObject(4514, -114.97949, 1180.32910, 20.37833,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4526, -140.83015, 1213.56873, 20.78191,   0.00000, 0.00000, 328.23999, -1, -1, -1, 300);
	CreateDynamicObject(1282, -132.13080, 1210.50879, 19.43100,   0.00000, 0.00000, 31.76001, -1, -1, -1, 300);
	CreateDynamicObject(1282, -130.25375, 1207.85547, 19.43100,   0.00000, 0.00000, 31.75598, -1, -1, -1, 300);
	CreateDynamicObject(1282, -127.50293, 1207.60547, 19.43100,   0.00000, 0.00000, 89.32098, -1, -1, -1, 300);
	CreateDynamicObject(1282, -124.25293, 1208.10547, 19.43100,   0.00000, 0.00000, 89.31885, -1, -1, -1, 300);
	CreateDynamicObject(981, -145.95540, 1186.60034, 19.51718,   0.00000, 0.00000, 180.08319, -1, -1, -1, 300);
	CreateDynamicObject(4504, -248.66470, 1215.65015, 21.34220,   0.00000, 0.00000, 268.70499, -1, -1, -1, 300);
	CreateDynamicObject(978, -199.39456, 1210.74597, 19.58241,   0.00000, 0.00000, 180.63501, -1, -1, -1, 300);
	CreateDynamicObject(978, -172.30354, 1210.56201, 19.58241,   0.00000, 0.00000, 172.69171, -1, -1, -1, 300);
	CreateDynamicObject(1237, -255.37442, 1187.72217, 18.74312,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -261.07117, 1187.65552, 18.74365,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -264.97128, 1187.69592, 18.74460,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -265.09000, 1183.70715, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -265.27106, 1178.08752, 18.75839,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -266.17072, 1209.14233, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -286.31219, 1188.43579, 18.74219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7933, -107.98810, 1245.27087, 15.96988,   0.00000, 355.25000, 232.95999, -1, -1, -1, 300);
	CreateDynamicObject(18218, 108.89534, 1197.06787, 17.75853,   355.00000, 359.00000, 349.34000, -1, -1, -1, 300);
	CreateDynamicObject(2728, 178.58125, 1145.93494, 13.26163,   0.00000, 0.00000, 248.83997, -1, -1, -1, 300);
	CreateDynamicObject(7315, -38.88340, 1198.73596, 33.14766,   0.00000, 0.00000, 270.65997, -1, -1, -1, 300);
	CreateDynamicObject(7908, -69.09590, 1287.26550, 13.92000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 159.25340, 1166.55737, 14.35047,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 162.03882, 1164.65369, 14.35213,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 164.44781, 1162.89722, 14.27828,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6299, 160.91858, 1180.22937, 16.20493,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8483, -308.82819, 770.93597, 19.95237,   359.25000, 345.00000, 91.31003, -1, -1, -1, 300);
	CreateDynamicObject(8873, 172.41190, 1134.06580, 19.71283,   0.00000, 0.00000, 117.82994, -1, -1, -1, 300);
	CreateDynamicObject(18257, 283.14478, 849.18463, 17.96634,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18257, 288.45123, 853.96625, 18.01211,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18257, 285.33160, 842.17053, 17.47854,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18257, 293.17117, 849.50940, 17.35931,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3569, 243.39020, 755.76672, 7.89331,   0.00000, 0.00000, 161.50000, -1, -1, -1, 300);
	CreateDynamicObject(3569, 226.81282, 732.04620, 7.74428,   0.00000, 0.00000, 290.51660, -1, -1, -1, 300);
	CreateDynamicObject(14878, -122.12717, 596.51178, 1.89556,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1348, -119.41037, 597.62836, 2.09154,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, 235.44075, 974.77026, 28.07330,   0.00000, 0.00000, 294.49500, -1, -1, -1, 300);
	CreateDynamicObject(981, 216.89757, 965.96899, 28.07330,   0.00000, 0.00000, 114.59766, -1, -1, -1, 300);
	CreateDynamicObject(978, 186.28140, 1152.88818, 14.52766,   0.00000, 0.00000, 136.96503, -1, -1, -1, 300);
	CreateDynamicObject(978, 191.58128, 1145.64307, 14.52766,   0.00000, 0.00000, 115.12604, -1, -1, -1, 300);
	CreateDynamicObject(978, 192.94008, 1137.13599, 14.52766,   0.00000, 0.00000, 83.36572, -1, -1, -1, 300);
	CreateDynamicObject(1237, 167.16022, 1163.10449, 13.74214,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, 172.68913, 1159.79517, 13.71103,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, 179.86676, 1157.76929, 13.68185,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 272.46204, 846.97186, 18.69525,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 273.47308, 842.61011, 18.29615,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 264.30652, 846.24268, 18.69678,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 274.60706, 825.98248, 16.72148,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 265.78000, 840.83618, 18.16490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 272.36581, 814.99634, 15.19186,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 266.35904, 826.30267, 16.19138,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 264.54968, 817.12103, 14.65558,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 258.80023, 791.50256, 10.00244,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 260.43225, 808.04822, 12.63384,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 267.21973, 802.85547, 12.82627,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 252.33325, 795.76306, 9.77632,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 242.67061, 764.32532, 5.60260,   0.00000, 0.00000, 15.88000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 239.30560, 763.43768, 5.60260,   0.00000, 0.00000, 15.87524, -1, -1, -1, 300);
	CreateDynamicObject(1662, -1.07042, 632.82764, 9.21831,   358.50000, 0.25000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 209.86902, 720.09448, 5.67210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 206.00125, 718.28210, 5.59891,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 201.27037, 716.23407, 5.53414,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 195.96724, 713.77008, 5.43553,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 191.37254, 711.73376, 5.48870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 186.83203, 709.37628, 5.61131,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 181.15334, 706.72009, 5.67272,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 172.86893, 702.16626, 5.67313,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 165.27289, 697.85950, 5.67498,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 155.74348, 691.99854, 5.66098,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1427, 149.72932, 688.36200, 5.68137,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 2.38032, 609.77502, 8.78264,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, -1.16507, 606.34369, 9.09198,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 8.40502, 603.60175, 8.85287,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 4.89935, 600.06677, 9.23650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, -35.40621, 563.41248, 9.20627,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, -51.06543, 551.99884, 8.08677,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, -54.21475, 560.52271, 8.15928,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, -40.80817, 569.61560, 9.04625,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, -98.27946, 533.82422, 6.58929,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16327, 213.37909, 758.46216, 5.31470,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(967, -146.21814, 619.42017, 1.13707,   0.00000, 0.00000, 13.89499, -1, -1, -1, 300);
	CreateDynamicObject(3243, -320.21906, 787.60052, 14.23939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3243, -320.72260, 797.75311, 15.09213,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3243, -321.64999, 807.47766, 14.41622,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3243, -330.68784, 790.18359, 16.55135,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3243, -332.03476, 798.40570, 15.58509,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3243, -332.44562, 808.16510, 14.38178,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3615, -152.91138, 611.79315, 3.27559,   0.00000, 0.00000, 280.83496, -1, -1, -1, 300);
	CreateDynamicObject(978, -127.53422, 1250.80566, 18.30472,   0.00000, 0.00000, 246.85156, -1, -1, -1, 300);
	CreateDynamicObject(978, -121.67773, 1258.69238, 17.90473,   0.25000, 355.24548, 215.08484, -1, -1, -1, 300);
	CreateDynamicObject(978, -112.58331, 1261.68005, 16.77975,   0.74707, 351.74780, 185.08484, -1, -1, -1, 300);
	CreateDynamicObject(18218, -71.92285, 1269.73633, 11.69406,   354.99573, 0.00000, 45.65369, -1, -1, -1, 300);
	CreateDynamicObject(11505, -97.04076, 588.26410, 6.50242,   357.00000, 359.00000, 12.89499, -1, -1, -1, 300);
	CreateDynamicObject(979, -120.22374, 601.37476, 1.86229,   0.00000, 0.00000, 172.18256, -1, -1, -1, 300);
	CreateDynamicObject(979, -114.11054, 595.70801, 1.86229,   0.00000, 0.00000, 104.68768, -1, -1, -1, 300);
	CreateDynamicObject(979, -115.89246, 563.02222, 4.76873,   0.00000, 6.99585, 86.83044, -1, -1, -1, 300);
	CreateDynamicObject(979, -113.85105, 571.60535, 3.96873,   0.00000, 6.49280, 63.00494, -1, -1, -1, 300);
	CreateDynamicObject(982, -100.88390, 594.51257, 2.08824,   0.00000, 0.00000, 281.09998, -1, -1, -1, 300);
	CreateDynamicObject(982, -96.99464, 578.38416, 3.21324,   0.00000, 0.00000, 280.59631, -1, -1, -1, 300);
	CreateDynamicObject(983, -86.99317, 575.52686, 3.87115,   4.25000, 0.75000, 306.40497, -1, -1, -1, 300);
	CreateDynamicObject(983, -81.78226, 582.68866, 3.42832,   4.24622, 1.99707, 306.40320, -1, -1, -1, 300);
	CreateDynamicObject(983, -85.18498, 597.64819, 2.42832,   5.74622, 0.74402, 282.56287, -1, -1, -1, 300);
	CreateDynamicObject(984, -80.07597, 591.83618, 3.74050,   357.25000, 0.00000, 14.14499, -1, -1, -1, 300);
	CreateDynamicObject(1337, -79.91904, 585.85101, 3.94387,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4504, -285.30899, 1205.90588, 21.32220,   0.00000, 0.00000, -43.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, 177.94040, 1101.58606, 16.02250,   0.00000, 4.00000, 96.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -304.67191, 1163.44543, -3.54589,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -297.43383, 1163.48511, -3.53589,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18809, -290.21857, 1163.47754, -3.54589,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19296, -304.77191, 1158.11499, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19296, -297.53383, 1158.15916, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19296, -290.31857, 1158.14260, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19297, -304.67191, 1158.11499, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19297, -297.43383, 1158.15916, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19297, -290.21857, 1158.14260, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19298, -304.57191, 1158.11499, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19298, -297.33383, 1158.15916, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19298, -290.11857, 1158.14260, 21.34254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7908, -69.08517, 1287.27490, 13.91004,   0.00000, 0.00000, 4.00000, -1, -1, -1, 300);
//Форт Карсон (конец)

//Парковка (начало)
	CreateDynamicObject(16088,1667.31774902,943.28698730,9.67187500,0.00000000,0.00000000,268.68997192, -1, -1, -1, 300); //object(des_pipestrut01)(1)
	CreateDynamicObject(4526,1637.45605469,928.71484375,11.42118645,0.00000000,0.00000000,19.84680176, -1, -1, -1, 300); //object(sfse_roadblock5)(1)
	CreateDynamicObject(978,1654.24951172,919.30523682,10.46053600,0.00000000,0.00000000,51.61004639, -1, -1, -1, 300); //object(sub_roadright)(1)
	CreateDynamicObject(978,1648.81774902,910.23809814,10.48553562,0.00000000,0.00000000,65.50329590, -1, -1, -1, 300); //object(sub_roadright)(2)
	CreateDynamicObject(978,1663.62060547,894.33532715,10.41444016,0.00000000,0.00000000,152.84503174, -1, -1, -1, 300); //object(sub_roadright)(3)
	CreateDynamicObject(979,1726.29711914,889.95867920,10.42011452,0.00000000,0.00000000,89.32501221, -1, -1, -1, 300); //object(sub_roadleft)(2)
	CreateDynamicObject(978,1718.05957031,917.79003906,10.61053371,0.00000000,0.00000000,257.01416016, -1, -1, -1, 300); //object(sub_roadright)(4)
	CreateDynamicObject(978,1722.25097656,926.80078125,10.58553410,0.00000000,0.00000000,232.95410156, -1, -1, -1, 300); //object(sub_roadright)(5)
	CreateDynamicObject(979,1750.64062500,916.29687500,10.49307442,0.00000000,0.00000000,13.89221191, -1, -1, -1, 300); //object(sub_roadleft)(3)
	CreateDynamicObject(979,1757.29003906,972.78710938,10.53553486,0.00000000,0.00000000,89.81872559, -1, -1, -1, 300); //object(sub_roadleft)(4)
	CreateDynamicObject(1424,1749.61352539,988.76306152,10.22479630,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_2)(1)
	CreateDynamicObject(1424,1752.33972168,988.64599609,10.20082951,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_2)(2)
	CreateDynamicObject(1424,1755.10620117,988.51416016,10.33382225,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_2)(3)
	CreateDynamicObject(978,1696.89392090,975.14520264,10.65245056,0.00000000,0.00000000,358.01135254, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(978,1705.00903320,970.95166016,10.66053295,0.00000000,0.00000000,302.43286133, -1, -1, -1, 300); //object(sub_roadright)(10)
	CreateDynamicObject(978,1650.48510742,978.60760498,10.60245132,0.00000000,0.00000000,350.28234863, -1, -1, -1, 300); //object(sub_roadright)(14)
	CreateDynamicObject(978,1641.88378906,983.67651367,10.55245209,0.00000000,0.00000000,307.40344238, -1, -1, -1, 300); //object(sub_roadright)(15)
	CreateDynamicObject(978,1638.69238281,993.34863281,10.57745171,0.00000000,0.00000000,269.68688965, -1, -1, -1, 300); //object(sub_roadright)(16)
	CreateDynamicObject(978,1666.98144531,1012.77636719,10.56053448,0.00000000,0.00000000,178.85742188, -1, -1, -1, 300); //object(sub_roadright)(17)
	CreateDynamicObject(978,1641.41955566,1003.38269043,10.60245132,0.00000000,0.00000000,233.94836426, -1, -1, -1, 300); //object(sub_roadright)(18)
	CreateDynamicObject(978,1642.74023438,1021.28039551,10.66053295,0.00000000,0.00000000,299.69140625, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(979,1701.54528809,991.67364502,10.56053448,0.00000000,0.00000000,168.72503662, -1, -1, -1, 300); //object(sub_roadleft)(1)
	CreateDynamicObject(979,1691.42480469,992.96026611,10.56053448,0.00000000,0.00000000,176.66253662, -1, -1, -1, 300); //object(sub_roadleft)(5)
	CreateDynamicObject(979,1691.25439453,995.58691406,10.56053448,0.00000000,0.00000000,5.95248413, -1, -1, -1, 300); //object(sub_roadleft)(6)
	CreateDynamicObject(979,1701.24938965,997.93420410,10.56053448,0.00000000,0.00000000,19.57910156, -1, -1, -1, 300); //object(sub_roadleft)(7)
	CreateDynamicObject(979,1702.00842285,1028.09948730,10.66053295,0.00000000,0.00000000,148.60269165, -1, -1, -1, 300); //object(sub_roadleft)(9)
	CreateDynamicObject(979,1692.04040527,1031.52490234,10.56053448,0.00000000,0.00000000,176.38867188, -1, -1, -1, 300); //object(sub_roadleft)(10)
	CreateDynamicObject(978,1686.26562500,975.17675781,10.65245056,0.00000000,0.00000000,1.73583984, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(978,1666.98828125,1014.41601562,10.53553486,0.00000000,0.00000000,359.23645020, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(978,1639.16577148,1030.74719238,10.66053295,1.00000000,359.25000000,279.84069824, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(978,1639.31445312,1040.77343750,10.66053295,0.99975586,359.24743652,258.98840332, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(978,1644.19555664,1048.58435059,10.66053295,0.99426270,359.24194336,215.31622314, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(978,1653.73779297,1050.98242188,10.66053295,358.73876953,359.02197266,175.61553955, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(979,1688.07910156,1040.43652344,10.56053448,0.00000000,0.00000000,63.24044800, -1, -1, -1, 300); //object(sub_roadleft)(11)
	CreateDynamicObject(979,1689.62634277,1049.82604980,10.56053448,0.00000000,0.00000000,94.99731445, -1, -1, -1, 300); //object(sub_roadleft)(12)
	CreateDynamicObject(979,1685.60595703,1059.53820801,10.56053448,0.00000000,0.00000000,128.73828125, -1, -1, -1, 300); //object(sub_roadleft)(13)
	CreateDynamicObject(979,1672.28771973,1070.84753418,10.66053295,0.00000000,359.98498535,158.51281738, -1, -1, -1, 300); //object(sub_roadleft)(14)
	CreateDynamicObject(979,1662.38281250,1073.97998047,10.66053295,0.00000000,0.23303223,166.45074463, -1, -1, -1, 300); //object(sub_roadleft)(15)
	CreateDynamicObject(981,1642.41040039,1058.80126953,10.62031937,0.00000000,0.00000000,359.00000000, -1, -1, -1, 300); //object(helix_barrier)(1)
	CreateDynamicObject(1237,1679.18847656,1068.43481445,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(1)
	CreateDynamicObject(1237,1681.24707031,1068.04052734,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(2)
	CreateDynamicObject(1237,1682.37353516,1064.93505859,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(3)
	CreateDynamicObject(1237,1682.19030762,1066.88598633,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(4)
	CreateDynamicObject(979,1586.13867188,1073.37756348,10.54663277,0.00000000,0.00000000,195.24496460, -1, -1, -1, 300); //object(sub_roadleft)(16)
	CreateDynamicObject(982,1589.80737305,996.29022217,10.42938137,0.00000000,0.00000000,359.75000000, -1, -1, -1, 300); //object(fenceshit)(1)
	CreateDynamicObject(1251,1669.26367188,943.17126465,9.62656212,0.00000000,89.74002075,269.17498779, -1, -1, -1, 300); //object(smashbar)(1)
	CreateDynamicObject(1251,1663.77758789,943.19482422,9.65155411,0.02999878,90.24002075,270.40551758, -1, -1, -1, 300); //object(smashbar)(2)
	CreateDynamicObject(1425,1679.37377930,974.64648438,10.22839165,0.00000000,0.00000000,166.74005127, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(1)
	CreateDynamicObject(1425,1676.20251465,975.21722412,10.22839165,0.00000000,0.00000000,166.73950195, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(2)
	CreateDynamicObject(1425,1659.57690430,976.05676270,10.22839165,0.00000000,0.00000000,158.79949951, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(3)
	CreateDynamicObject(1425,1644.83068848,1008.98120117,10.27280998,0.00000000,0.00000000,53.59136963, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(4)
	CreateDynamicObject(1425,1657.09472656,976.86425781,10.22839165,0.00000000,0.00000000,158.79638672, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(5)
	CreateDynamicObject(1425,1660.17382812,967.48126221,10.27280998,0.00000000,0.00000000,314.34130859, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(6)
	CreateDynamicObject(979,1579.54589844,1066.33984375,10.54663277,0.00000000,0.00000000,254.78942871, -1, -1, -1, 300); //object(sub_roadleft)(18)
	CreateDynamicObject(1422,1656.09289551,1075.61645508,10.23084354,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_5)(1)
	CreateDynamicObject(1422,1706.98571777,1001.51043701,10.18084431,0.00000000,0.00000000,254.79498291, -1, -1, -1, 300); //object(dyn_roadbarrier_5)(2)
	CreateDynamicObject(4526,1643.46948242,962.62353516,11.42118645,0.00000000,0.00000000,328.23678589, -1, -1, -1, 300); //object(sfse_roadblock5)(1)
	CreateDynamicObject(979,1657.77368164,948.56677246,10.41053677,0.00000000,359.75000000,95.28002930, -1, -1, -1, 300); //object(sub_roadleft)(19)
	CreateDynamicObject(979,1659.25683594,948.82977295,10.38553715,0.00000000,0.25000000,290.52392578, -1, -1, -1, 300); //object(sub_roadleft)(20)
	CreateDynamicObject(1228,1658.08374023,943.31597900,10.24144077,0.00000000,0.00000000,269.42498779, -1, -1, -1, 300); //object(roadworkbarrier1)(2)
	CreateDynamicObject(1228,1676.07519531,943.39947510,10.24144077,0.00000000,0.00000000,269.42321777, -1, -1, -1, 300); //object(roadworkbarrier1)(3)
	CreateDynamicObject(978,1677.52661133,949.39538574,10.65245056,0.00000000,0.00000000,89.07507324, -1, -1, -1, 300); //object(sub_roadright)(6)
	CreateDynamicObject(3666,1677.59545898,954.90136719,10.18945408,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(1)
	CreateDynamicObject(3666,1672.57812500,964.55822754,10.26302910,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(2)
	CreateDynamicObject(3666,1677.18994141,944.17822266,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(3)
	CreateDynamicObject(3666,1657.36804199,953.69635010,10.18556023,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(4)
	CreateDynamicObject(3666,1657.44763184,968.57464600,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(5)
	CreateDynamicObject(3666,1647.60424805,960.77246094,10.28679085,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(6)
	CreateDynamicObject(3666,1629.58728027,957.07702637,10.27086163,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(7)
	CreateDynamicObject(3666,1579.30578613,945.32269287,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(8)
	CreateDynamicObject(3666,1589.45898438,1002.96520996,10.25636482,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(9)
	CreateDynamicObject(3666,1589.35205078,988.30346680,10.25539780,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(10)
	CreateDynamicObject(3666,1577.95874023,1061.27893066,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(11)
	CreateDynamicObject(3666,1581.09045410,1071.50317383,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(12)
	CreateDynamicObject(3666,1667.37463379,1072.83593750,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(13)
	CreateDynamicObject(3666,1681.75720215,1067.47766113,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(14)
	CreateDynamicObject(3666,1680.04760742,1068.26159668,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(15)
	CreateDynamicObject(3666,1682.38793945,1066.02844238,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(16)
	CreateDynamicObject(3666,1678.04943848,1068.39697266,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(17)
	CreateDynamicObject(3666,1682.37036133,1063.91259766,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(20)
	CreateDynamicObject(3666,1688.92736816,1055.32495117,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(22)
	CreateDynamicObject(3666,1690.04516602,1044.90979004,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(23)
	CreateDynamicObject(3666,1648.81262207,1033.82922363,10.38374805,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(24)
	CreateDynamicObject(3666,1650.72692871,995.60870361,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(25)
	CreateDynamicObject(3666,1650.43798828,1035.81323242,10.38228512,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(26)
	CreateDynamicObject(3666,1686.61132812,1032.07739258,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(27)
	CreateDynamicObject(3666,1697.60571289,1031.10888672,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(28)
	CreateDynamicObject(3666,1707.29589844,1025.18725586,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(29)
	CreateDynamicObject(3666,1706.42309570,999.83435059,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(30)
	CreateDynamicObject(3666,1696.40063477,995.87847900,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(31)
	CreateDynamicObject(3666,1684.78784180,995.43847656,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(32)
	CreateDynamicObject(3666,1684.89086914,992.49243164,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(33)
	CreateDynamicObject(3666,1696.53332520,992.79431152,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(34)
	CreateDynamicObject(3666,1691.72314453,974.93066406,10.30083847,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(35)
	CreateDynamicObject(3666,1677.82824707,975.04632568,10.28879547,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(36)
	CreateDynamicObject(3666,1702.14624023,974.81048584,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(37)
	CreateDynamicObject(3666,1658.29833984,976.43566895,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(38)
	CreateDynamicObject(3666,1645.21301270,979.46899414,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(39)
	CreateDynamicObject(3666,1638.67126465,987.88208008,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(40)
	CreateDynamicObject(3666,1638.62268066,998.82739258,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(41)
	CreateDynamicObject(3666,1644.53234863,1007.96075439,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(42)
	CreateDynamicObject(3666,1646.18920898,1009.93426514,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(43)
	CreateDynamicObject(3666,1639.94433594,1025.59619141,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(44)
	CreateDynamicObject(3666,1638.12976074,1035.85546875,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(45)
	CreateDynamicObject(3666,1640.09472656,1045.87072754,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(46)
	CreateDynamicObject(3666,1648.43737793,1051.68127441,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(47)
	CreateDynamicObject(3666,1659.42614746,1050.97998047,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(48)
	CreateDynamicObject(3666,1757.25048828,978.34375000,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(49)
	CreateDynamicObject(3666,1756.34899902,917.19671631,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(50)
	CreateDynamicObject(3666,1745.35009766,914.55224609,10.26245213,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(51)
	CreateDynamicObject(3666,1725.31323242,931.25604248,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(52)
	CreateDynamicObject(3666,1719.03552246,922.65020752,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(53)
	CreateDynamicObject(3666,1726.53771973,884.33160400,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(54)
	CreateDynamicObject(3666,1658.67114258,896.66052246,10.27341461,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(55)
	CreateDynamicObject(3666,1668.75451660,891.67272949,10.23200226,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(56)
	CreateDynamicObject(3666,1651.12097168,914.96112061,10.18556023,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(57)
	CreateDynamicObject(3666,1640.02111816,925.33746338,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(58)
	CreateDynamicObject(3666,1641.33703613,931.13525391,10.27264118,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(59)
	CreateDynamicObject(3666,1641.19116211,937.23480225,10.23402023,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(60)
	CreateDynamicObject(979,1638.27954102,886.74786377,10.53363800,0.00000000,0.00000000,319.88998413, -1, -1, -1, 300); //object(sub_roadleft)(21)
	CreateDynamicObject(3666,1661.37426758,1012.50854492,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(62)
	CreateDynamicObject(3666,1672.75329590,1012.70538330,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(63)
	CreateDynamicObject(3666,1672.60913086,1014.33911133,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(64)
	CreateDynamicObject(3666,1661.24877930,1014.37908936,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(65)
	CreateDynamicObject(3666,1650.40039062,1032.08007812,10.38459873,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(67)
	CreateDynamicObject(3666,1650.57897949,991.91479492,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(68)
	CreateDynamicObject(3666,1648.83618164,993.78576660,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(69)
	CreateDynamicObject(18285,1703.57519531,949.79321289,9.88277626,0.00000000,359.50000000,302.74499512, -1, -1, -1, 300); //object(cw_trucklines)(1)
	CreateDynamicObject(3398,1696.49707031,995.02081299,8.75872612,0.00000000,0.00000000,183.33496094, -1, -1, -1, 300); //object(cxrf_floodlite_)(1)
	CreateDynamicObject(3398,1636.53417969,993.58264160,13.75872612,0.00000000,0.00000000,92.02355957, -1, -1, -1, 300); //object(cxrf_floodlite_)(2)
	CreateDynamicObject(3398,1696.74218750,994.02929688,8.75872612,0.00000000,0.00000000,356.74255371, -1, -1, -1, 300); //object(cxrf_floodlite_)(3)
	CreateDynamicObject(3398,1687.43505859,1035.18481445,13.75872612,0.00000000,0.00000000,297.19152832, -1, -1, -1, 300); //object(cxrf_floodlite_)(4)
	CreateDynamicObject(3398,1681.71972656,1067.41662598,13.75872612,0.00000000,0.00000000,327.20092773, -1, -1, -1, 300); //object(cxrf_floodlite_)(5)
	CreateDynamicObject(3398,1580.64599609,1073.16186523,13.75872612,0.00000000,0.00000000,50.56970215, -1, -1, -1, 300); //object(cxrf_floodlite_)(6)
	CreateDynamicObject(3398,1589.69775391,995.32977295,13.75872612,0.00000000,0.00000000,272.09954834, -1, -1, -1, 300); //object(cxrf_floodlite_)(7)
	CreateDynamicObject(3046,1727.05517578,932.58331299,12.00336456,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(1)
	CreateDynamicObject(3046,1731.82116699,932.82812500,10.70648956,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(2)
	CreateDynamicObject(3046,1753.34277344,979.36895752,11.87491894,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(3)
	CreateDynamicObject(3046,1743.56237793,986.84240723,12.49980068,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(4)
	CreateDynamicObject(3046,1746.04492188,987.08642578,12.49980068,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(5)
	CreateDynamicObject(3046,1633.78234863,1031.32189941,13.15500927,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(6)
	CreateDynamicObject(3046,1630.87255859,1030.97155762,13.15500927,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(7)
	CreateDynamicObject(3046,1652.86999512,1075.85571289,11.66095829,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(8)
	CreateDynamicObject(3046,1652.51721191,1077.85205078,11.65701962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(kb_barrel)(9)
	CreateDynamicObject(1425,1673.36560059,963.79766846,10.19428062,0.00000000,0.00000000,314.34082031, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(7)
	CreateDynamicObject(1425,1674.31127930,962.49902344,10.16883564,0.00000000,0.00000000,290.52099609, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(8)
	CreateDynamicObject(1425,1677.12048340,956.31591797,10.16883564,0.00000000,0.00000000,292.50195312, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(9)
	CreateDynamicObject(3666,1674.54113770,961.71148682,10.21585274,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(70)
	CreateDynamicObject(3666,1676.88745117,956.96496582,10.19267082,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(71)
	CreateDynamicObject(18451,1666.19763184,919.53814697,10.18409538,0.00000000,358.01501465,304.41998291, -1, -1, -1, 300); //object(cs_oldcarjmp)(1)
	CreateDynamicObject(3928,1659.85766602,911.90710449,9.70267487,0.00000000,359.75000000,322.28500366, -1, -1, -1, 300); //object(helipad)(1)
//Парковка (конец)

//Пирс в Аэропорту SF (начало)
	CreateDynamicObject(6189,-1123.32971191,94.16679382,-1.35724616,0.00000000,0.00000000,135.29998779, -1, -1, -1, 300); //object(gaz_pier1)(1)
	CreateDynamicObject(6189,-1031.40820312,187.05236816,-1.35724616,0.00000000,0.00000000,135.29663086, -1, -1, -1, 300); //object(gaz_pier1)(2)
	CreateDynamicObject(6189,-939.61126709,279.80706787,-1.35724616,0.00000000,0.00000000,135.29663086, -1, -1, -1, 300); //object(gaz_pier1)(3)
	CreateDynamicObject(6189,-847.82220459,372.58517456,-1.35724616,0.00000000,0.00000000,135.29663086, -1, -1, -1, 300); //object(gaz_pier1)(4)
	CreateDynamicObject(6189,-755.76800537,465.61740112,-1.35724616,0.00000000,0.00000000,135.29663086, -1, -1, -1, 300); //object(gaz_pier1)(5)
	CreateDynamicObject(6189,-663.92517090,558.37506104,-1.35724616,0.00000000,0.00000000,135.29663086, -1, -1, -1, 300); //object(gaz_pier1)(6)
	CreateDynamicObject(3578,-1208.44738770,62.94173431,13.91393375,0.00000000,0.00000000,316.56506348, -1, -1, -1, 300); //object(dockbarr1_la)(3)
	CreateDynamicObject(3620,-1200.27416992,54.72814941,26.23699760,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(redockrane_las)(1)
	CreateDynamicObject(14396,-1164.19628906,50.51367188,11.71571922,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(girders01)(1)
	CreateDynamicObject(14397,-1159.04211426,36.69674301,12.29845047,0.00000000,0.00000000,315.34500122, -1, -1, -1, 300); //object(girders07)(1)
	CreateDynamicObject(14397,-1170.43896484,47.96769714,12.29845047,0.00000000,0.00000000,315.34057617, -1, -1, -1, 300); //object(girders07)(2)
	CreateDynamicObject(3927,-1162.29187012,55.29459763,15.75187397,0.00000000,0.00000000,318.31506348, -1, -1, -1, 300); //object(d_sign01)(1)
	CreateDynamicObject(18285,-1208.89599609,47.99794006,13.21590805,0.00000000,0.00000000,340.14999390, -1, -1, -1, 300); //object(cw_trucklines)(1)
	CreateDynamicObject(3578,-1201.30578613,56.13609314,13.91874981,0.00000000,0.00000000,316.56005859, -1, -1, -1, 300); //object(dockbarr1_la)(4)
	CreateDynamicObject(3578,-1197.26086426,52.23368835,13.92647076,0.00000000,0.00000000,316.56005859, -1, -1, -1, 300); //object(dockbarr1_la)(5)
	CreateDynamicObject(3578,-1188.24658203,52.27532196,13.92647076,0.00000000,0.00000000,43.89941406, -1, -1, -1, 300); //object(dockbarr1_la)(6)
	CreateDynamicObject(10079,-1182.99511719,57.83248901,16.41017151,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(pyr_top_sfe)(1)
	CreateDynamicObject(1215,-1192.77453613,48.23962402,13.71276093,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight)(1)
	CreateDynamicObject(1238,-1157.76904297,34.03072357,13.46661758,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone)(1)
	CreateDynamicObject(1238,-1155.67614746,31.92723083,13.46661758,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone)(2)
	CreateDynamicObject(1238,-1156.70312500,32.96111298,13.46661758,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone)(3)
	CreateDynamicObject(1262,-1163.00585938,55.84912109,16.45011902,0.00000000,0.00000000,138.69689941, -1, -1, -1, 300); //object(mtraffic4)(1)
	CreateDynamicObject(996,-1168.84887695,48.58479691,13.89932156,0.00000000,0.00000000,46.64001465, -1, -1, -1, 300); //object(lhouse_barrier1)(1)
	CreateDynamicObject(1655,-628.03436279,606.96337891,14.45067787,0.00000000,0.00000000,315.10998535, -1, -1, -1, 300); //object(waterjumpx2)(1)
	CreateDynamicObject(1655,-616.80895996,595.46020508,14.25068092,359.50000000,359.50000000,315.10986328, -1, -1, -1, 300); //object(waterjumpx2)(2)
	CreateDynamicObject(1262,-1162.02490234,54.99489975,16.45011902,0.00000000,0.00000000,138.69689941, -1, -1, -1, 300); //object(mtraffic4)(1)
//Пирс в Аэропорту SF (конец)

//Взлётная полоса Аэропорта SF (начало)
CreateDynamicObject(8263, -1517.98035, -46.94743, 15.91860,   0.00000, 0.00000, 225.00999, -1, -1, -1, 300);
CreateDynamicObject(8263, -1540.08154, -25.76321, 15.91860,   0.00000, 0.00000, 45.00150, -1, -1, -1, 300);
CreateDynamicObject(8041, -1657.79700, -165.10686, 18.96529,   0.00000, 0.00000, 227.02502, -1, -1, -1, 300);
CreateDynamicObject(2932, -1116.66394, 376.00986, 14.60036,   0.00000, 0.00000, 314.34500, -1, -1, -1, 300);
CreateDynamicObject(8229, -1110.58655, 396.37109, 15.84967,   0.00000, 0.00000, 162.77002, -1, -1, -1, 300);
CreateDynamicObject(8229, -1096.58484, 382.55634, 15.84967,   0.00000, 0.00000, 108.42294, -1, -1, -1, 300);
CreateDynamicObject(8229, -1101.20813, 364.43369, 15.84967,   0.00000, 0.00000, 42.91357, -1, -1, -1, 300);
CreateDynamicObject(8229, -1128.60181, 391.44754, 15.84967,   0.00000, 0.00000, 230.00262, -1, -1, -1, 300);
CreateDynamicObject(3031, -1118.68042, 374.43729, 17.65753,   0.00000, 0.00000, 226.98996, -1, -1, -1, 300);
CreateDynamicObject(16052, -1686.59570, -163.30168, 17.71631,   0.00000, 0.00000, 43.67001, -1, -1, -1, 300);
CreateDynamicObject(8263, -1602.70178, -131.68559, 15.91860,   0.00000, 0.00000, 225.00999, -1, -1, -1, 300);
CreateDynamicObject(8263, -1624.81653, -110.48730, 15.91860,   0.00000, 0.00000, 45.00150, -1, -1, -1, 300);
CreateDynamicObject(8263, -1433.27368, 37.79456, 15.91860,   0.00000, 0.00000, 225.00999, -1, -1, -1, 300);
CreateDynamicObject(8263, -1455.35767, 58.95795, 15.91860,   0.00000, 0.00000, 45.00150, -1, -1, -1, 300);
CreateDynamicObject(8263, -1348.56824, 122.53325, 15.91860,   0.00000, 0.00000, 225.00999, -1, -1, -1, 300);
CreateDynamicObject(8263, -1370.62659, 143.68312, 15.91860,   0.00000, 0.00000, 45.00150, -1, -1, -1, 300);
CreateDynamicObject(8263, -1285.89673, 228.40488, 15.91860,   0.00000, 0.00000, 45.00150, -1, -1, -1, 300);
CreateDynamicObject(8263, -1263.86743, 207.26335, 15.91860,   0.00000, 0.00000, 225.00999, -1, -1, -1, 300);
CreateDynamicObject(8263, -1179.16785, 292.00339, 15.91860,   0.00000, 0.00000, 225.00999, -1, -1, -1, 300);
CreateDynamicObject(8263, -1201.16248, 313.13974, 15.91860,   0.00000, 0.00000, 45.00150, -1, -1, -1, 300);
//Взлётная полоса Аэропорта SF (конец)

//Спринт (начало)
CreateDynamicObject(18275, 2592.00, -2229.76, 14.09,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(18275, 2592.01, -2223.78, 14.09,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2564.49, -2232.01, 13.10,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2577.48, -2232.13, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2551.53, -2232.07, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2515.84, -2231.89, 13.10,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2528.57, -2231.92, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2502.78, -2232.03, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2495.81, -2221.52, 13.10,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2508.49, -2221.34, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2508.46, -2219.88, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2482.93, -2221.49, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2457.78, -2231.98, 13.10,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2470.64, -2232.08, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2444.86, -2232.12, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2442.82, -2221.47, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2455.78, -2221.53, 13.10,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2468.67, -2221.40, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2422.87, -2246.42, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2432.11, -2237.40, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2426.03, -2228.55, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2416.76, -2237.67, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2407.57, -2246.86, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2413.72, -2255.63, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2404.60, -2264.61, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2398.43, -2256.02, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2389.25, -2265.11, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2395.54, -2273.84, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2386.28, -2282.92, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2380.04, -2274.42, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2368.16, -2301.03, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2361.93, -2292.52, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2343.83, -2310.61, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2350.06, -2319.14, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2340.99, -2328.26, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2334.52, -2319.71, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2332.32, -2321.92, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2330.07, -2324.15, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2327.40, -2326.73, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1412, 2339.14, -2330.00, 12.49,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(1412, 2335.47, -2333.65, 12.49,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(1412, 2331.82, -2337.30, 12.49,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(1412, 2328.17, -2340.95, 12.49,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(1412, 2324.49, -2344.63, 12.49,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(1412, 2320.84, -2348.29, 12.49,   0.00, 0.00, -135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2333.80, -2335.62, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2319.05, -2350.25, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(4507, 2332.42, -2349.28, 15.01,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(4506, 2313.31, -2328.54, 15.01,   0.00, 0.00, -45.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2326.11, -2328.19, 13.12,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2323.62, -2330.71, 13.12,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2321.04, -2333.24, 13.12,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2318.48, -2335.81, 13.12,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2315.92, -2338.38, 13.12,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2313.34, -2340.92, 13.12,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2311.93, -2342.23, 12.36,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2302.99, -2351.41, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2309.85, -2359.35, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2291.73, -2377.43, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2284.92, -2369.50, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2266.81, -2387.63, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2273.64, -2395.53, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2255.52, -2413.62, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2248.74, -2405.73, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2236.33, -2418.15, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2245.33, -2423.79, 13.10,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2236.32, -2433.13, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2234.60, -2436.59, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2233.08, -2440.23, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2231.76, -2443.38, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.62, -2446.47, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2227.04, -2427.34, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2225.24, -2431.03, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2223.50, -2435.12, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2221.79, -2439.37, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2219.85, -2444.09, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.91, -2457.11, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.35, -2459.41, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.48, -2472.36, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2219.71, -2470.12, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.85, -2482.89, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.31, -2485.18, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2219.83, -2495.74, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.53, -2498.15, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.34, -2511.05, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.85, -2508.59, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2219.74, -2521.48, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.53, -2524.04, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2219.67, -2547.38, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.37, -2536.85, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.87, -2534.40, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.87, -2560.37, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.36, -2562.39, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.48, -2575.37, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.36, -2588.29, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.87, -2585.99, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.86, -2611.62, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.36, -2613.93, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.42, -2627.00, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2230.35, -2629.94, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.47, -2642.89, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, 2219.87, -2629.22, 13.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2219.77, -2642.18, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2220.22, -2647.54, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2221.65, -2652.38, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2224.36, -2657.38, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2227.75, -2661.42, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2232.80, -2665.26, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2237.40, -2667.38, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2242.49, -2668.58, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2231.72, -2648.59, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2233.26, -2651.37, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2235.21, -2653.59, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2238.20, -2655.88, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2240.84, -2657.04, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2243.83, -2657.79, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2230.81, -2645.67, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 2247.08, -2658.06, 13.18,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 2253.50, -2658.03, 13.18,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 2259.90, -2658.04, 13.18,   0.00, 0.00, 89.94, -1, -1, -1, 300);
CreateDynamicObject(1237, 2263.31, -2657.90, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2266.11, -2657.88, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2266.16, -2656.38, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 2245.84, -2668.39, 13.18,   0.00, 0.00, 89.94, -1, -1, -1, 300);
CreateDynamicObject(983, 2252.26, -2668.39, 13.18,   0.00, 0.00, 89.94, -1, -1, -1, 300);
CreateDynamicObject(983, 2258.65, -2668.40, 13.18,   0.00, 0.00, 89.94, -1, -1, -1, 300);
CreateDynamicObject(983, 2263.46, -2668.41, 13.18,   0.00, 0.00, 89.94, -1, -1, -1, 300);
CreateDynamicObject(1237, 2266.62, -2668.64, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, 2266.58, -2670.11, 12.51,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18275, 2380.66, -2660.01, 14.27,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(18275, 2380.68, -2666.04, 14.27,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(740, 2380.57, -2670.41, 11.71,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(740, 2380.71, -2655.82, 11.71,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(5170, 2341.16, -2662.98, 14.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, 2384.34, -2663.07, 13.06,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, 2390.78, -2663.09, 13.06,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(703, 2389.46, -2649.46, 12.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(703, 2404.76, -2649.52, 12.10,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 2381.27, -2663.11, 14.27,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 2381.23, -2657.12, 14.27,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 2381.23, -2669.09, 14.27,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(19129, 2390.35, -2663.31, 12.52,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16151, 2390.73, -2675.54, 12.97,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(1432, 2397.20, -2674.88, 12.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1432, 2401.26, -2674.95, 12.73,   0.00, 0.00, 0.18, -1, -1, -1, 300);
CreateDynamicObject(1432, 2399.14, -2671.77, 12.73,   0.00, 0.00, 0.18, -1, -1, -1, 300);
CreateDynamicObject(1432, 2388.31, -2670.98, 12.73,   0.00, 0.00, 0.18, -1, -1, -1, 300);
CreateDynamicObject(19127, 2400.34, -2668.48, 12.89,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19127, 2400.35, -2658.21, 12.89,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3819, 2599.66, -2214.34, 13.25,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3819, 2608.28, -2214.34, 13.25,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3819, 2616.90, -2214.37, 13.25,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3578, 2595.14, -2216.61, 12.42,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3578, 2605.39, -2216.62, 12.42,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3578, 2615.70, -2216.64, 12.42,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 2624.10, -2213.02, 12.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 2623.62, -2239.73, 12.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3578, 2592.21, -2237.84, 12.42,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3578, 2592.22, -2245.15, 12.42,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2592.26, -2234.99, 13.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2592.27, -2238.57, 13.79,   0.00, 0.00, 90.18, -1, -1, -1, 300);
CreateDynamicObject(3281, 2592.28, -2242.14, 13.79,   0.00, 0.00, 90.18, -1, -1, -1, 300);
CreateDynamicObject(3281, 2592.30, -2245.75, 13.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2593.95, -2247.64, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2597.53, -2247.65, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2601.15, -2247.62, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2604.79, -2247.57, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2608.40, -2247.54, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2612.03, -2247.48, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2615.63, -2247.47, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3281, 2619.25, -2247.44, 13.27,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(708, 2592.71, -2247.15, 12.17,   0.00, 0.00, 55.00, -1, -1, -1, 300);
CreateDynamicObject(994, 2596.19, -2227.33, 12.83,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 2592.55, -2232.82, 14.16,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 2592.60, -2226.85, 14.16,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, 2592.60, -2220.79, 14.16,   0.00, 0.00, -90.00, -1, -1, -1, 300);
//Спринт (конец)

//Сумо (начало)
	ObjGam[24] = CreateObject(13607, -429.460724, 2506.028809, 127.372597, 0, 0, 0);

//	CreateDynamicObject(13607, -429.460724, 2506.028809, 127.372597, 0, 0, 0, -1, -1, -1, 300);
	CreateDynamicObject(1655, -472.253296, 2521.357178, 124.883629, 0, 0, 67.7916, -1, -1, -1, 300);
	CreateDynamicObject(1655, -441.633270, 2462.473633, 124.790573, 0, 0, 166.6266, -1, -1, -1, 300);
	CreateDynamicObject(1655, -392.056885, 2481.023438, 124.733620, 0, 0, 237.1005, -1, -1, -1, 300);
	CreateDynamicObject(1655, -416.007263, 2548.595215, 124.815575, 0, 0, 346.249, -1, -1, -1, 300);
	CreateDynamicObject(971, -415.275391, 2551.625732, 130.185120, 0, 0, 347.1084, -1, -1, -1, 300);
	CreateDynamicObject(971, -475.061920, 2522.642090, 130.387924, 0, 0, 67.8955, -1, -1, -1, 300);
	CreateDynamicObject(971, -442.401428, 2459.557861, 129.959259, 0, 0, 347.1084, -1, -1, -1, 300);
	CreateDynamicObject(971, -389.564941, 2479.350586, 130.202225, 0, 0, 55.8634, -1, -1, -1, 300);
//Сумо (конец)

//Заброшенный Аэропорт (начало)
CreateDynamicObject(18858, 203.38000, 2523.75000, 24.41000,   0.00000, 0.00000, 90.36000, -1, -1, -1, 300);
CreateDynamicObject(18858, 203.28999, 2509.41992, 24.34000,   0.00000, 0.00000, 268.29999, -1, -1, -1, 300);
CreateDynamicObject(18858, 203.03999, 2495.37012, 24.23000,   0.00000, 0.00000, 268.63000, -1, -1, -1, 300);
CreateDynamicObject(18858, 202.88000, 2481.19995, 24.01000,   0.00000, 0.00000, 270.72000, -1, -1, -1, 300);
CreateDynamicObject(18780, 325.75000, 2575.81006, 26.94000,   0.00000, 0.00000, 89.64000, -1, -1, -1, 300);
CreateDynamicObject(18780, 325.97000, 2613.85010, 90.42000,   0.00000, -64.00000, 89.82000, -1, -1, -1, 300);
CreateDynamicObject(18780, 290.39999, 2574.72998, 27.37000,   0.00000, 0.00000, 90.68000, -1, -1, -1, 300);
CreateDynamicObject(18780, 289.89001, 2613.78003, 91.91000,   0.00000, -63.00000, 90.59000, -1, -1, -1, 300);
CreateDynamicObject(8355, 313.17001, 2470.68994, 19.31000,   0.00000, -26.00000, 269.75000, -1, -1, -1, 300);
CreateDynamicObject(8355, 175.06000, 2470.84009, 19.31000,   0.00000, 26.00000, 90.09000, -1, -1, -1, 300);
CreateDynamicObject(8355, 36.97000, 2470.61011, 19.31000,   0.00000, 26.00000, 90.08000, -1, -1, -1, 300);
CreateDynamicObject(8355, 484.54001, 2501.01001, 46.86000,   -29.00000, 0.00000, 88.96000, -1, -1, -1, 300);
CreateDynamicObject(8355, 603.40997, 2498.94995, 114.15000,   30.00000, 0.00000, 269.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 373.42001, 2442.61011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 390.09000, 2422.75000, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 390.10001, 2402.77002, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 390.14001, 2382.82007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 353.38000, 2442.62988, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 333.38000, 2442.65991, 25.61000,   0.00000, 0.00000, 359.89999, -1, -1, -1, 300);
CreateDynamicObject(18783, 370.07999, 2422.62012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 350.07999, 2422.62012, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 330.12021, 2422.69995, 25.61400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 370.16000, 2402.65991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 350.14999, 2402.65991, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 330.17001, 2402.72998, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 370.14999, 2382.80005, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 350.17001, 2382.80005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 330.20001, 2382.77002, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 410.09000, 2422.75000, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 410.10001, 2402.76001, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 410.10001, 2382.81006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 430.09000, 2422.69995, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 430.12000, 2402.84009, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 430.10999, 2382.89990, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 450.07001, 2422.76001, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 450.04001, 2402.86011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 450.04001, 2382.85010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18784, 470.04999, 2422.77002, 25.61000,   0.00000, 0.00000, 180.03000, -1, -1, -1, 300);
CreateDynamicObject(18784, 469.73001, 2402.79004, 25.61000,   0.00000, 0.00000, 179.30000, -1, -1, -1, 300);
CreateDynamicObject(18784, 470.03000, 2382.93994, 25.61000,   0.00000, 0.00000, 180.08000, -1, -1, -1, 300);
CreateDynamicObject(18783, 450.08496, 2362.94312, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 430.10999, 2362.94995, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 410.25000, 2363.02002, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 390.32999, 2363.03003, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 370.42999, 2363.03003, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 350.63000, 2363.08008, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 330.63000, 2363.11011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18784, 470.09000, 2362.97998, 25.61000,   0.00000, 0.00000, 180.22000, -1, -1, -1, 300);
CreateDynamicObject(18783, 400.66000, 2343.06006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 380.91000, 2343.08008, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 360.95999, 2343.06006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 341.06000, 2343.08008, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 321.26999, 2343.15991, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 379.10001, 2323.38989, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 359.09000, 2323.13989, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 339.23999, 2323.29004, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 319.38000, 2323.15991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 358.78000, 2303.22998, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 338.84000, 2303.32007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 319.40979, 2303.16260, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 332.81000, 2283.35010, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.47000, 2442.85010, 25.61200,   0.00000, 0.00000, 359.29001, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.37000, 2383.08008, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.37000, 2403.06006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.37000, 2423.07007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.34006, 2363.12988, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.47000, 2343.14990, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.34000, 2323.14990, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.38000, 2303.22998, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 313.39001, 2283.36011, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 436.22000, 2441.20996, 25.61400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 456.23999, 2441.20996, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 436.20999, 2461.19995, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 456.20999, 2461.19995, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18784, 476.20001, 2441.21997, 25.61000,   0.00000, 0.00000, 180.12000, -1, -1, -1, 300);
CreateDynamicObject(18784, 476.06000, 2461.21997, 25.61000,   0.00000, 0.00000, 180.06000, -1, -1, -1, 300);
CreateDynamicObject(18782, 152.50000, 2509.04004, 16.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18782, 252.36000, 2489.94995, 16.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18782, 345.76001, 2516.75000, 16.63000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.57999, 2442.95996, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.64001, 2442.94995, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 253.89000, 2443.01001, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.17000, 2443.02002, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.42999, 2443.07007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.66000, 2443.07007, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 175.23000, 2443.07007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.42999, 2443.13989, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.83000, 2443.12012, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 116.04000, 2443.10010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 96.41000, 2443.07007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 76.63000, 2443.04004, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 57.37000, 2443.06006, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 37.56000, 2443.02002, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 17.64000, 2443.01001, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2.01000, 2443.01001, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -21.98000, 2443.02002, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.44000, 2423.09009, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.45999, 2383.16992, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.45999, 2403.16992, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.53000, 2363.21997, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.51001, 2343.29004, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.57001, 2323.28003, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.57999, 2303.26001, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.57999, 2283.35010, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.60999, 2422.95996, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.67999, 2403.03003, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.67999, 2383.07007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.66000, 2363.12012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.64999, 2343.22998, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.75000, 2323.35010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.79001, 2303.40991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.87021, 2283.51733, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 273.89999, 2263.55005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 293.69000, 2263.62012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 306.29001, 2266.46997, 25.61400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.22000, 2423.08008, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.19000, 2423.09009, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.02000, 2423.95996, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 253.91000, 2423.63989, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 253.94000, 2403.82007, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.08000, 2404.08008, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.37000, 2404.11011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.45000, 2344.54004, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 254.14999, 2383.81006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.17000, 2384.31006, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.38000, 2384.33008, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.30000, 2364.48999, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 254.17999, 2343.97998, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 254.14990, 2363.94800, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.23000, 2364.48999, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.31000, 2344.52002, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 254.16000, 2324.06006, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.23000, 2324.50000, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.46001, 2324.81006, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 253.87000, 2304.70996, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.28000, 2304.65991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.46001, 2304.93994, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 254.00000, 2284.87012, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.25000, 2284.87988, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.47000, 2285.01001, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 253.91000, 2265.01001, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 234.49001, 2265.20996, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 214.62000, 2265.12012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.41000, 2423.19995, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 154.84000, 2423.33008, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.46001, 2403.10010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.56000, 2403.44995, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 154.85001, 2403.41992, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.49001, 2383.10010, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.59000, 2383.60010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.00000, 2383.43994, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.45000, 2363.23999, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.63000, 2363.61011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.03000, 2363.47998, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.49001, 2343.26001, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.71001, 2343.85010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.07001, 2343.84009, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.05000, 2423.28003, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.07001, 2403.29004, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.08000, 2383.35010, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.14999, 2363.42993, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.24000, 2423.19995, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.26000, 2403.20996, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.30000, 2383.36011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.13000, 2343.73999, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 95.44000, 2423.14990, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 95.41000, 2403.15991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.39000, 2343.79004, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.34000, 2363.54004, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 95.41000, 2383.42993, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 95.38000, 2363.58008, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 95.41000, 2343.87012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 75.46000, 2423.15991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 75.47000, 2403.30005, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 75.39000, 2383.44995, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 75.38000, 2363.62012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 75.46000, 2343.64990, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 55.65000, 2383.42993, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 55.57000, 2403.27002, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 55.57000, 2423.12012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 35.64000, 2423.30005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 35.73000, 2403.39990, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 56.01000, 2363.66992, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 56.03000, 2343.77002, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 35.67000, 2383.47998, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 36.20000, 2363.59009, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 36.13000, 2343.80005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.72000, 2323.33008, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.71001, 2303.46997, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.67000, 2283.57007, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.88000, 2323.94995, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.89000, 2304.00000, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.97000, 2284.04004, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.20000, 2284.39990, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.13000, 2304.21997, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.11000, 2324.03003, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.45000, 2323.80005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.42000, 2303.97998, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.44000, 2284.11011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 194.64999, 2263.71997, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 174.92999, 2264.04004, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 155.21001, 2264.72998, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 135.33000, 2264.70996, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.74000, 2323.87012, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.70000, 2303.88989, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.76000, 2284.09009, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 115.76000, 2264.30005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 96.11000, 2324.14990, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 96.14000, 2304.22998, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 96.12000, 2284.25000, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 76.18000, 2323.94995, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 76.33000, 2304.36011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 76.36000, 2284.38989, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 56.36000, 2323.80005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 56.39000, 2304.03003, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 56.37000, 2284.67993, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 36.36000, 2323.83008, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 36.37000, 2303.93994, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 36.38000, 2284.05005, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 15.88940, 2423.56323, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 15.86000, 2403.60010, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.90000, 2423.42993, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.70000, 2403.42993, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -21.91000, 2423.39990, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -21.84000, 2403.38989, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 16.19000, 2383.70996, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.59011, 2383.66187, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -21.79000, 2383.48999, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 16.34000, 2363.85010, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.41000, 2363.81006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -21.85000, 2363.55005, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.65000, 2343.90991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 16.17000, 2343.97998, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 16.68000, 2324.11011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 16.78000, 2304.28003, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -23.44000, 2343.95996, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 16.78000, 2285.90991, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.11000, 2324.11011, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -3.15000, 2304.41992, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2.95000, 2284.56006, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -23.01000, 2324.11011, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -22.97000, 2304.17993, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -22.95000, 2284.68994, 25.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -40.87000, 2442.98999, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -58.80000, 2442.98999, 16.05000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -40.89000, 2423.02002, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -40.83000, 2403.03003, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -40.82000, 2383.12012, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -40.59000, 2363.21997, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -42.36000, 2343.25000, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -42.02000, 2324.06006, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -41.98000, 2304.13989, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -42.01000, 2284.15991, 23.13000,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -58.79000, 2422.98999, 16.05000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -58.75000, 2382.98999, 16.05000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -58.82000, 2402.95996, 16.05000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -58.58000, 2363.21997, 16.05000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -60.24000, 2343.25000, 16.04000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -59.99000, 2323.36011, 16.14000,   0.00000, -28.00000, 360.00000, -1, -1, -1, 300);
CreateDynamicObject(18779, -24.02000, 2347.71997, 34.84000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -42.24000, 2468.11011, 14.59000,   -11.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18779, -31.66000, 2469.48999, 23.22000,   0.00000, 0.00000, 90.26000, -1, -1, -1, 300);
CreateDynamicObject(18779, -47.82000, 2469.16992, 23.33000,   0.00000, 0.00000, 104.72000, -1, -1, -1, 300);
CreateDynamicObject(18783, -41.04000, 2448.78003, 16.42000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 436.25000, 2469.78003, 17.91000,   -84.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 456.25000, 2469.64990, 17.87000,   -85.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 373.50000, 2450.33008, 25.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18750, 343.41000, 2296.87012, 46.29000,   -270.00000, 0.00000, 214.00000, -1, -1, -1, 300);
CreateDynamicObject(18750, 176.70000, 2258.86011, 46.09000,   90.00000, 0.00000, 178.00000, -1, -1, -1, 300);
CreateDynamicObject(18834, 384.44000, 2445.62988, 48.09000,   0.00000, 0.00000, 178.31000, -1, -1, -1, 300);
CreateDynamicObject(18829, 343.79999, 2445.96997, 65.00000,   0.00000, -88.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18829, 294.09000, 2445.76001, 66.51000,   0.00000, -88.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18829, 244.60001, 2445.77002, 68.13000,   0.00000, -88.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18829, 194.63000, 2445.75000, 69.86000,   0.00000, -88.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18829, 145.03000, 2445.68994, 71.47000,   0.00000, -88.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19005, 105.97000, 2445.67993, 70.51000,   0.00000, 0.00000, 89.59000, -1, -1, -1, 300);
CreateDynamicObject(18777, 180.53000, 2302.68994, 30.60000,   0.00000, 0.00000, 174.05000, -1, -1, -1, 300);
CreateDynamicObject(18777, 180.67999, 2303.39990, 56.52000,   0.00000, 0.00000, 175.69000, -1, -1, -1, 300);
CreateDynamicObject(18777, 180.56000, 2303.41992, 82.59000,   0.00000, 0.00000, 175.42999, -1, -1, -1, 300);
CreateDynamicObject(18801, 149.62000, 2303.78003, 128.81000,   0.00000, 0.00000, 272.69000, -1, -1, -1, 300);
CreateDynamicObject(18801, 129.96001, 2300.68994, 128.81000,   0.00000, 0.00000, 272.51001, -1, -1, -1, 300);
CreateDynamicObject(18781, 136.10001, 2379.62012, 38.82000,   0.00000, 0.00000, 112.53000, -1, -1, -1, 300);
CreateDynamicObject(18781, 101.94000, 2365.56006, 38.82000,   0.00000, 0.00000, 291.84000, -1, -1, -1, 300);
CreateDynamicObject(19005, 266.31000, 2263.55005, 30.74000,   0.00000, 0.00000, 184.10001, -1, -1, -1, 300);
CreateDynamicObject(18843, 267.10999, 2254.33008, 88.64000,   180.00000, 0.00000, 77.24000, -1, -1, -1, 300);
CreateDynamicObject(8493, 213.14999, 2360.57007, 45.63000,   0.00000, 0.00000, 97.74000, -1, -1, -1, 300);
CreateDynamicObject(18786, 222.06000, 2381.47998, 30.35000,   0.00000, 0.00000, 99.79000, -1, -1, -1, 300);
CreateDynamicObject(18786, 229.39999, 2343.91992, 30.35000,   0.00000, 0.00000, 278.20001, -1, -1, -1, 300);
CreateDynamicObject(18779, 388.29001, 2358.96997, 35.44000,   0.00000, 0.00000, 143.06000, -1, -1, -1, 300);
CreateDynamicObject(18779, 399.35999, 2350.61011, 54.09000,   0.00000, 48.00000, 143.00000, -1, -1, -1, 300);
CreateDynamicObject(18779, 395.84000, 2353.43994, 74.05000,   0.00000, 106.00000, 141.81000, -1, -1, -1, 300);
CreateDynamicObject(19005, 119.33000, 2286.60010, 109.07000,   0.00000, 0.00000, 176.03000, -1, -1, -1, 300);
CreateDynamicObject(19001, 440.23999, 2393.85010, 37.89000,   0.00000, 0.00000, 357.94000, -1, -1, -1, 300);
CreateDynamicObject(19005, 462.31000, 2404.91992, 29.76000,   0.00000, 0.00000, 266.39999, -1, -1, -1, 300);
CreateDynamicObject(19005, 476.12000, 2404.10010, 39.34000,   28.00000, 0.00000, 267.00000, -1, -1, -1, 300);
CreateDynamicObject(19005, 486.22000, 2403.59009, 57.76000,   47.00000, 0.00000, 266.98001, -1, -1, -1, 300);
CreateDynamicObject(18784, 219.66000, 2485.96997, 17.75000,   0.00000, 0.00000, 179.94000, -1, -1, -1, 300);
CreateDynamicObject(18784, 219.67000, 2505.90991, 17.75000,   0.00000, 0.00000, 179.85001, -1, -1, -1, 300);
CreateDynamicObject(18784, 219.66000, 2525.88989, 17.75000,   0.00000, 0.00000, 179.88000, -1, -1, -1, 300);
CreateDynamicObject(18784, 188.53000, 2485.69995, 17.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18784, 188.50000, 2505.57007, 17.75200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18784, 188.50000, 2525.51001, 17.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 418.78000, 2517.32007, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 418.76999, 2497.43994, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 418.72000, 2477.53003, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 398.95999, 2518.57007, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 398.95999, 2498.68994, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 398.95999, 2478.70996, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 379.07001, 2478.70996, 15.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6869, 32.27000, 2562.12012, -5.16000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8411, 171.53999, 2556.02002, -3.15000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18780, 246.92000, 2532.75000, 27.31000,   0.00000, 0.00000, 160.25999, -1, -1, -1, 300);
CreateDynamicObject(18786, 141.33000, 2555.53003, 63.76000,   0.00000, 0.00000, 0.60000, -1, -1, -1, 300);
CreateDynamicObject(18779, 522.13000, 2507.38989, 76.69000,   0.00000, -28.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18779, 521.52002, 2480.92993, 76.69000,   0.00000, -28.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18789, 404.89001, 2485.78003, 64.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18789, 404.89999, 2501.80005, 64.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18789, 404.85001, 2517.85010, 65.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18789, 255.05000, 2485.78003, 64.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18789, 254.95000, 2517.86011, 65.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18780, 227.16000, 2486.23999, 76.49000,   0.00000, 0.00000, 179.71001, -1, -1, -1, 300);
CreateDynamicObject(18780, 230.03999, 2518.07007, 76.49000,   0.00000, 0.00000, 179.71001, -1, -1, -1, 300);
CreateDynamicObject(18779, 318.48999, 2495.80005, 74.58000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18786, -22.43000, 2554.58008, 54.24000,   0.00000, 0.00000, 10.07000, -1, -1, -1, 300);
CreateDynamicObject(18783, 672.95001, 2468.18994, 146.24200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 672.90997, 2488.13989, 146.24001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 672.84998, 2508.10010, 146.24200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 672.87000, 2528.05005, 146.24001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 692.65997, 2527.96997, 146.24200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 692.64001, 2507.95996, 146.24001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 692.62000, 2488.04004, 146.24200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 692.91998, 2468.15991, 146.24001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 712.47998, 2527.94995, 146.24001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 712.42999, 2508.10010, 146.24200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 712.40997, 2488.13989, 146.24001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 712.46997, 2468.18994, 146.24200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18824, 55.36000, 2575.16992, 65.56000,   64.00000, -2.00000, 253.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 13.34000, 2564.54004, 81.72000,   62.00000, -58.00000, 0.84000, -1, -1, -1, 300);
CreateDynamicObject(18824, -17.69000, 2533.79004, 96.29000,   67.00000, 0.00000, 346.76999, -1, -1, -1, 300);
CreateDynamicObject(18809, -4.14000, 2490.08008, 107.43000,   85.00000, 0.00000, 30.69000, -1, -1, -1, 300);
CreateDynamicObject(18750, 44.01000, 2535.84009, 33.07000,   87.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18784, 18.75000, 2503.39990, 17.79000,   0.00000, 0.00000, 359.48999, -1, -1, -1, 300);
CreateDynamicObject(18846, 31.06000, 2503.58008, 20.12000,   0.00000, 0.00000, 179.49001, -1, -1, -1, 300);
CreateDynamicObject(18784, 42.95000, 2503.10010, 17.79000,   0.00000, 0.00000, 178.98000, -1, -1, -1, 300);
CreateDynamicObject(18846, 429.67999, 2479.12988, 20.02000,   0.00000, 0.00000, 262.22000, -1, -1, -1, 300);
CreateDynamicObject(18835, 28.63000, 2433.86011, 91.66000,   0.00000, 0.00000, 26.73000, -1, -1, -1, 300);
CreateDynamicObject(18830, -35.55000, 2403.07007, 34.28000,   0.00000, 220.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18846, 0.02000, 2298.05005, 32.96000,   0.00000, 0.00000, 150.11000, -1, -1, -1, 300);
CreateDynamicObject(18831, 29.88000, 2428.46997, 67.89000,   -4.00000, -47.00000, 291.56000, -1, -1, -1, 300);
CreateDynamicObject(18858, 150.47000, 2428.12012, 36.83000,   0.00000, 0.00000, 89.28000, -1, -1, -1, 300);
CreateDynamicObject(18858, 155.72000, 2427.79004, 36.83000,   0.00000, 0.00000, 88.84000, -1, -1, -1, 300);
CreateDynamicObject(18858, 160.64000, 2427.77002, 36.83000,   0.00000, 0.00000, 270.47000, -1, -1, -1, 300);
CreateDynamicObject(18858, 144.71001, 2427.61011, 36.83000,   0.00000, 0.00000, 88.90000, -1, -1, -1, 300);
CreateDynamicObject(18784, 173.02000, 2428.11011, 30.07000,   0.00000, 0.00000, 180.22000, -1, -1, -1, 300);
CreateDynamicObject(18784, 132.21001, 2427.09009, 30.07000,   0.00000, 0.00000, 1.77000, -1, -1, -1, 300);
//Заброшенный Аэропорт (конец)

//Гора Чиллиад (начало)
    CreateDynamicObject(1217,-2309.57006836,-1592.34704590,483.03799438,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel2) (2)
    CreateDynamicObject(3425,-2287.08007812,-1639.30395508,493.06698608,0.00000000,0.00000000,74.00000000, -1, -1, -1, 300); //object(nt_windmill) (1)
    CreateDynamicObject(6959,-2328.27709961,-1581.35705566,482.66799927,0.00000000,0.00000000,332.00000000, -1, -1, -1, 300); //object(vegasnbball1) (1)
    CreateDynamicObject(6959,-2292.77001953,-1600.18200684,482.64801025,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(vegasnbball1) (2)
    CreateDynamicObject(17575,-2322.21191406,-1574.20300293,486.36898804,0.00000000,0.00000000,242.00000000, -1, -1, -1, 300); //object(burgho01_lae2) (1)
    CreateDynamicObject(17575,-2307.82495117,-1547.97204590,486.25601196,0.00000000,0.00000000,241.99584961, -1, -1, -1, 300); //object(burgho01_lae2) (2)
    CreateDynamicObject(1217,-2310.25097656,-1592.01696777,483.03799438,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel2) (3)
    CreateDynamicObject(6959,-2278.62915039,-1573.64001465,482.64199829,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(vegasnbball1) (4)
    CreateDynamicObject(6959,-2314.19995117,-1554.61096191,482.55499268,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(vegasnbball1) (5)
    CreateDynamicObject(705,-2256.20703125,-1568.84802246,482.59100342,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (1)
    CreateDynamicObject(705,-2284.76904297,-1623.00500488,482.61700439,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (2)
    CreateDynamicObject(705,-2338.93188477,-1578.85498047,482.63699341,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (3)
    CreateDynamicObject(705,-2283.41992188,-1553.88000488,482.59100342,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (4)
    CreateDynamicObject(705,-2321.91796875,-1530.48706055,483.50201416,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (5)
    CreateDynamicObject(3877,-2277.79907227,-1614.86303711,484.28298950,0.00000000,0.00000000,332.00000000, -1, -1, -1, 300); //object(sf_rooflite) (6)
    CreateDynamicObject(3877,-2274.92895508,-1609.69702148,484.28298950,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (7)
    CreateDynamicObject(3877,-2272.05200195,-1604.31494141,484.28298950,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (8)
    CreateDynamicObject(3877,-2269.08105469,-1598.52294922,484.28298950,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (9)
    CreateDynamicObject(3877,-2266.32202148,-1593.26599121,484.28298950,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (10)
    CreateDynamicObject(3877,-2263.44995117,-1588.01794434,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (11)
    CreateDynamicObject(3877,-2260.89208984,-1582.97705078,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (12)
    CreateDynamicObject(3877,-2257.76000977,-1577.19799805,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (13)
    CreateDynamicObject(3877,-2254.78906250,-1571.64099121,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (14)
    CreateDynamicObject(3877,-2258.62207031,-1562.10705566,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (15)
    CreateDynamicObject(3877,-2263.55102539,-1559.45605469,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (16)
    CreateDynamicObject(3877,-2269.18701172,-1556.45898438,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (17)
    CreateDynamicObject(3877,-2274.08398438,-1553.87902832,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (18)
    CreateDynamicObject(3877,-2280.16699219,-1550.62304688,484.27700806,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (19)
    CreateDynamicObject(3877,-2300.22900391,-1539.90405273,484.18899536,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (20)
    CreateDynamicObject(3877,-2305.18310547,-1537.22094727,484.18899536,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (21)
    CreateDynamicObject(3877,-2333.35009766,-1547.47094727,484.18899536,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (22)
    CreateDynamicObject(3877,-2335.31494141,-1551.21203613,484.18899536,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (23)
    CreateDynamicObject(3877,-2330.98095703,-1543.06799316,484.18899536,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (24)
    CreateDynamicObject(3877,-2328.83398438,-1539.12402344,484.18899536,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (25)
    CreateDynamicObject(1217,-2310.16894531,-1592.71704102,483.03799438,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel2) (4)
    CreateDynamicObject(1217,-2287.90600586,-1557.68994141,483.03201294,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel2) (5)
    CreateDynamicObject(3877,-2280.66894531,-1620.39001465,484.28298950,0.00000000,0.00000000,331.99584961, -1, -1, -1, 300); //object(sf_rooflite) (26)
    CreateDynamicObject(18368,-2281.33911133,-1650.69104004,477.19900513,0.00000000,0.00000000,346.00000000, -1, -1, -1, 300); //object(cs_mountplat) (1)
    CreateDynamicObject(705,-2288.59692383,-1671.01000977,481.57901001,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (6)
    CreateDynamicObject(705,-2285.26806641,-1677.62402344,481.08300781,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (7)
    CreateDynamicObject(705,-2280.27905273,-1683.29101562,480.31698608,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (8)
    CreateDynamicObject(705,-2275.06591797,-1688.60095215,479.71899414,0.00000000,0.00000000,343.49853516, -1, -1, -1, 300); //object(sm_veg_tree7vbig) (9)
    CreateDynamicObject(17575,-2349.10107422,-1657.32897949,486.43499756,0.00000000,0.00000000,235.99584961, -1, -1, -1, 300); //object(burgho01_lae2) (5)
//Гора Чиллиад (конец)

//Дрифт трасса (начало)
	ObjGam[25] = CreateObject(8171, -789.17999, 1957.78003, 3.00500,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(8171, -709.26001, 1961.38000, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -709.27002, 1823.21997, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -669.37000, 1956.57996, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -629.42999, 1956.57996, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -669.41998, 1818.31995, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -629.39001, 1818.31006, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -749.23999, 1957.77002, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//	CreateDynamicObject(8171, -789.17999, 1957.78003, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -749.21997, 1819.54004, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -789.15997, 1819.52002, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -789.12000, 1681.29004, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -749.19000, 1681.40002, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -709.25000, 1685.04004, 3.00250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -669.34998, 1680.03003, 3.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -629.41998, 1680.10999, 3.00500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -796.63000, 1929.81006, 3.31000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -789.08002, 1916.59998, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -803.71002, 1916.89001, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4004, -708.52002, 1893.82996, 14.73000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -791.07001, 1862.34998, 3.62000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -791.07001, 1862.34998, 4.79000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -764.20001, 1871.12000, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -778.29999, 1849.53003, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -764.21997, 1845.47998, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -772.52002, 1822.91003, 3.62000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -787.66998, 1827.93994, 3.62000,   0.00000, 0.00000, -47.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -797.02002, 1806.39001, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -780.77002, 1800.39001, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -780.79999, 1774.81995, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -797.03003, 1780.72998, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -797.06000, 1755.13000, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -790.15002, 1731.72998, 3.62000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -773.75000, 1751.21997, 3.62000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -781.33002, 1740.89001, 3.62000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -781.31000, 1740.97998, 4.81000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -783.09998, 1708.06995, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -766.84003, 1727.84998, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -766.87000, 1702.28003, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -783.15002, 1682.50000, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -770.46997, 1669.67004, 3.62000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.66998, 1682.46997, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.63000, 1708.08997, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.60999, 1733.66003, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.62000, 1759.30005, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.54999, 1784.90002, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.53003, 1810.46997, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -757.57001, 1836.10999, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -754.40997, 1848.93005, 3.55000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -747.97998, 1848.92004, 3.55000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -760.96997, 1867.91003, 3.55000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -754.48999, 1867.73999, 3.55000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -743.26001, 1867.77002, 3.55000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -736.89001, 1867.80005, 3.55000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -733.71997, 1870.95996, 3.55000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -733.71997, 1877.31006, 3.55000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -733.75000, 1883.71997, 3.55000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -744.77002, 1836.12000, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -733.64001, 1854.88000, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -733.66998, 1829.28003, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -744.71997, 1810.57996, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -733.65997, 1803.68005, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -744.69000, 1785.03003, 3.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -741.42999, 1772.20996, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -735.01001, 1772.20996, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -730.46002, 1790.82996, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -724.06000, 1790.81995, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -728.63000, 1772.20996, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -717.66998, 1790.83997, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -714.46997, 1787.67004, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -714.46002, 1781.29004, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -714.46002, 1774.88000, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -714.46997, 1768.50000, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -714.47998, 1762.09998, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -717.67999, 1758.89001, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -724.08002, 1758.92004, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -730.53003, 1758.84998, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -733.67999, 1755.70996, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -744.67999, 1759.38000, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -744.69000, 1743.32996, 3.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -741.51001, 1740.14001, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -735.09998, 1740.16003, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -728.65997, 1740.16003, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -730.46997, 1752.40002, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -724.12000, 1752.46997, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -717.71997, 1752.53003, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -722.28003, 1740.16003, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -715.90002, 1740.10999, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -711.34003, 1752.47998, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -704.92999, 1752.46997, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -698.51001, 1752.43005, 3.65000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -712.71002, 1727.31006, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -695.32001, 1739.59998, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -682.60999, 1726.85999, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -699.88000, 1714.54004, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -675.73999, 1708.52002, 3.64000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -641.76001, 1701.46997, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -641.78003, 1726.45996, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.59998, 1714.06995, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.64001, 1739.56006, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -669.77002, 1739.65002, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -669.82001, 1765.26001, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.60999, 1765.16003, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.59003, 1790.80005, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -682.60999, 1778.02002, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -667.40997, 1803.65002, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -695.52002, 1790.80005, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -680.21997, 1816.43994, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -695.51001, 1816.43994, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -695.57001, 1842.06995, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -667.46997, 1829.26001, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -682.71997, 1854.83997, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.65002, 1842.08997, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -669.92999, 1867.63000, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -669.90997, 1893.15002, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.60999, 1867.66003, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.63000, 1893.28003, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.65002, 1918.88000, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -670.13000, 1918.84998, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -670.15997, 1944.43005, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.59003, 1944.47998, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -654.54999, 1969.97998, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -667.31000, 1982.65002, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -683.15997, 1957.18005, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -708.88000, 1957.18005, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -692.90997, 1982.68994, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -718.42999, 1982.60999, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -744.13000, 1982.62000, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -734.48999, 1957.18005, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -760.14001, 1957.18005, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -769.77002, 1982.63000, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -795.37000, 1982.64001, 3.64000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -789.09003, 1933.60999, 3.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -789.04999, 1940.02002, 3.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -789.03003, 1946.39001, 3.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -789.01001, 1952.75000, 3.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -773.03003, 1954.07996, 3.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -785.81000, 1955.90002, 3.34000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -782.62000, 1952.71997, 3.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -803.51001, 1943.55005, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -803.52002, 1969.13000, 3.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -803.48999, 1982.06006, 3.91000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -788.73999, 1955.78003, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -782.67999, 1955.94995, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -773.19000, 1957.19995, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -803.50000, 1862.63000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -778.31000, 1862.20996, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -778.58002, 1837.09998, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -764.29999, 1832.68994, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -780.71997, 1813.08997, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -797.00000, 1819.14001, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -788.40997, 1751.95996, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -780.78998, 1761.93994, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -797.08002, 1743.27002, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -783.23999, 1721.13000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -766.79999, 1740.55005, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -766.87000, 1689.85999, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -757.77002, 1670.00000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -783.08002, 1669.73999, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -757.54999, 1848.81006, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -744.84003, 1848.81995, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -751.40997, 1867.68005, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -746.31000, 1867.58997, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -733.76001, 1790.93005, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -725.38000, 1772.47998, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -733.51001, 1758.73999, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -733.53003, 1752.48999, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -712.78998, 1740.12000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -695.75000, 1752.38000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -695.28998, 1726.79004, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -712.70001, 1714.66003, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -687.15002, 1714.56995, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -664.33002, 1702.70996, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -654.60999, 1701.41003, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -659.62000, 1702.13000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -654.62000, 1726.69995, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -669.87000, 1727.06995, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -669.78998, 1778.25000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -654.62000, 1803.59998, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -680.22998, 1803.73999, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -695.34003, 1778.07996, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -679.97998, 1829.21997, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -695.40997, 1854.75000, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -669.84998, 1854.82996, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -654.63000, 1829.30005, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -670.20001, 1957.06006, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -654.60999, 1982.70996, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -705.65997, 1982.68994, 4.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -692.82001, 1955.44995, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -671.44000, 1955.22998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -682.04999, 1956.30005, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -703.34998, 1956.40002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -713.39001, 1956.43005, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -723.92999, 1956.20996, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -736.12000, 1956.38000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -747.89001, 1956.52002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -759.03998, 1956.37000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -771.53003, 1956.56006, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -783.78003, 1955.17004, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -787.81000, 1954.98999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -788.28998, 1945.05005, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -788.44000, 1932.22998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -788.46997, 1939.15002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -788.32001, 1950.67004, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -787.90002, 1918.32996, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -787.98999, 1926.28003, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -788.20001, 1910.65002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -781.14001, 1861.21997, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -787.34998, 1861.34998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -793.78003, 1861.69995, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -800.10999, 1861.67004, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -780.79999, 1835.88000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -785.20001, 1831.22998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -789.73999, 1827.06995, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -793.97998, 1822.96997, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -798.06000, 1805.17004, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -797.90997, 1792.43994, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -797.96997, 1774.93994, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -798.00000, 1759.23999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -798.57001, 1743.63000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -774.33002, 1730.40002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.32001, 1738.08997, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.71002, 1745.98999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.92999, 1752.97998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.94000, 1759.90002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.96997, 1768.85999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.65997, 1777.80005, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.78003, 1787.47998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.69000, 1796.18994, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.97998, 1808.88000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.87000, 1820.65002, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.84998, 1831.37000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -756.84998, 1846.06006, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -745.48999, 1845.37000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4021, -683.91998, 1868.96997, 9.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4048, -711.67999, 1823.97998, 14.85000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4123, -720.15997, 1684.07996, 14.15000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4178, -661.96997, 1691.31995, 6.69000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4193, -637.19000, 1746.95996, 16.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5060, -665.72998, 1815.94995, 5.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -678.83002, 1825.93994, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -668.82001, 1827.72998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -673.96997, 1827.33997, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -672.21002, 1857.47998, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -692.87000, 1857.06995, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.35999, 1764.04004, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.48999, 1770.60999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.40002, 1776.94995, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.41998, 1782.75000, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.47998, 1787.85999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.45001, 1792.91003, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.15997, 1798.01001, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -652.10999, 1802.70996, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(710, -659.15997, 1804.43994, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -652.37000, 1844.68005, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -652.46002, 1877.17004, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -652.51001, 1909.06995, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -652.65997, 1942.47998, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -671.58002, 1940.02002, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -671.56000, 1909.72998, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -652.53003, 1971.56995, 3.68000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -669.35999, 1983.93994, 3.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -699.65002, 1984.06006, 3.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -729.90997, 1984.08997, 3.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -760.67999, 1984.06006, 3.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -791.46002, 1983.96997, 3.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -790.78998, 1931.00000, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -792.07001, 1930.66003, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -793.57001, 1930.64001, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -795.00000, 1930.66003, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -796.56000, 1930.71997, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -798.04999, 1930.68994, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -799.53998, 1930.69995, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -801.03998, 1930.73999, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -802.50000, 1930.69995, 10.82000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//Дрифт трасса (конец)

//Аквапарк (начало)
CreateDynamicObject(10830, 284.9931640625, -1918.3466796875, 7.6481990814209, 0.000000, 0.000000, 45.653686523438, -1, -1, -1, 300); //
CreateDynamicObject(12990, 273.66497802734, -1908.5860595703, 0.51075863838196, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(12990, 273.65176391602, -1926.0572509766, 0.51075863838196, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(12990, 297.65835571289, -1912.4631347656, 0.51075863838196, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(12990, 297.66110229492, -1925.6450195313, 0.51075863838196, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1655, 343.93222045898, -1998.0827636719, 0, 0.000000, 0.000000, 274.64501953125, -1, -1, -1, 300); //
CreateDynamicObject(1655, 350.8408203125, -1997.4837646484, 4, 13.89501953125, 0.000000, 274.64172363281, -1, -1, -1, 300); //
CreateDynamicObject(7392, 359.36172485352, -2009.6839599609, 10.806011199951, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(9958, 281.7529296875, -2030.919921875, 5, 0.000000, 0.000000, 268.68713378906, -1, -1, -1, 300); //
CreateDynamicObject(1217, 271.89260864258, -1940.4819335938, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 272.71200561523, -1940.5122070313, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 273.71118164063, -1940.5493164063, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 274.71020507813, -1940.5864257813, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 275.45941162109, -1940.6141357422, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 295.99096679688, -1940.1346435547, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 296.98950195313, -1940.1713867188, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 297.98852539063, -1940.2084960938, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1217, 299.23736572266, -1940.2550048828, 1.3635343313217, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 200.54063415527, -1932.0745849609, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 195.10371398926, -1928.9919433594, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 190.53700256348, -1926.4020996094, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 186.18707275391, -1923.935546875, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 182.05491638184, -1921.5930175781, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 176.51434326172, -1930.8048095703, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 180.45526123047, -1933.4681396484, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 183.45434570313, -1935.2724609375, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 188.38146972656, -1938.2373046875, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 193.73669433594, -1941.4599609375, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 190.95129394531, -1939.7841796875, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1243, 197.30651855469, -1930.1872558594, -4, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1655, 178.35285949707, -1925.5388183594, 0, 0.000000, 0.000000, 63.52001953125, -1, -1, -1, 300); //
CreateDynamicObject(1655, 172.95930480957, -1922.9093017578, 3.5, 15.880004882813, 0.000000, 63.517456054688, -1, -1, -1, 300); //
CreateDynamicObject(16401, 270.17697143555, -2014.2465820313, -0.5, 0.000000, 0.000000, 274.64501953125, -1, -1, -1, 300); //
CreateDynamicObject(621, 311.49691772461, -1940.3773193359, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 259.0703125, -1941.0439453125, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 232.86763000488, -1982.3492431641, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 242.01570129395, -2036.3444824219, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 335.8356628418, -2028.8540039063, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 297.61773681641, -1972.6936035156, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 343.64874267578, -1966.15234375, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(621, 325.49591064453, -2070.2836914063, -1.25, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1631, 290.42764282227, -2012.4133300781, 0, 3.9700012207031, 3.9700012207031, 159.51495361328, -1, -1, -1, 300); //
CreateDynamicObject(13641, 220.59117126465, -2014.2547607422, 1.5, 0.000000, 0.000000, 219.06494140625, -1, -1, -1, 300); //
CreateDynamicObject(13641, 201.26342773438, -2030.8168945313, 1.5, 0.000000, 0.000000, 36.441833496094, -1, -1, -1, 300); //
CreateDynamicObject(18451, 175.13934326172, -1966.9759521484, 0.5, 0.000000, 0.000000, 91.310028076172, -1, -1, -1, 300); //
CreateDynamicObject(3472, 269.58004760742, -1892.8092041016, 0.087422847747803, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3472, 301.24853515625, -1896.1701660156, 0.087422847747803, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 308.89416503906, -1894.544921875, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 308.83602905273, -1900.5510253906, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 309.04443359375, -1907.5257568359, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 309.29107666016, -1915.5114746094, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 309.20889282227, -1925.2607421875, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 309.17639160156, -1932.2607421875, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 309.05178833008, -1940.5026855469, 12.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 299.68939208984, -1940.8402099609, 13.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 291.8525390625, -1940.9462890625, 15.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 285.16323852539, -1940.9477539063, 16.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 278.82562255859, -1941.0574951172, 15.600082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 271.99639892578, -1940.7154541016, 14.350082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 263.77386474609, -1941.0402832031, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 261.41595458984, -1932.8197021484, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 260.84887695313, -1925.302734375, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 261.42129516602, -1918.5758056641, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 260.24996948242, -1911.6995849609, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 260.38714599609, -1904.1823730469, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3877, 260.41879272461, -1897.9105224609, 13.100082397461, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(7073, 156.33325195313, -1943.2507324219, 21.154449462891, 0.000000, 0.000000, 13.894989013672, -1, -1, -1, 300); //
CreateDynamicObject(1225, 207.68855285645, -2018.3127441406, 11.400457382202, 0.000000, 91.310028076172, 316.33001708984, -1, -1, -1, 300); //
CreateDynamicObject(1225, 214.29539489746, -2026.7896728516, 11.400457382202, 0.000000, 91.307373046875, 316.32934570313, -1, -1, -1, 300); //
CreateDynamicObject(13593, 269.39590454102, -2046.5411376953, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 272.21667480469, -2046.4251708984, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 274.96951293945, -2046.3627929688, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 277.72494506836, -2046.1916503906, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 280.21765136719, -2046.2473144531, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 282.73458862305, -2046.2333984375, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 285.23693847656, -2046.1729736328, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 287.73449707031, -2046.2668457031, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 290.08059692383, -2046.1121826172, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 292.83258056641, -2046.05078125, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(13593, 295.08041381836, -2045.9661865234, 0.5, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.74078369141, -1991.0008544922, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.8225402832, -1991.7456054688, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.9045715332, -1992.4907226563, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.9866027832, -1993.2358398438, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.08374023438, -2003.1767578125, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.1653137207, -2003.9223632813, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.2473449707, -2004.6674804688, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.3293762207, -2005.4125976563, -0.14404273033142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.3291015625, -2005.412109375, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.2467956543, -2004.6665039063, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.1637878418, -2003.9204101563, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 344.0807800293, -2003.1743164063, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.740234375, -1991, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.822265625, -1991.7451171875, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.904296875, -1992.490234375, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(1554, 342.986328125, -1993.2353515625, 0.85595726966858, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300); //
CreateDynamicObject(3080, 393.64077758789, -1988.8846435547, 0.75, 0.000000, 0.000000, 91.310028076172, -1, -1, -1, 300); //
CreateDynamicObject(3080, 393.56997680664, -1984.9058837891, 0.75, 0.000000, 0.000000, 91.307373046875, -1, -1, -1, 300); //
CreateDynamicObject(3080, 393.49569702148, -1981.4185791016, 0.75, 0.000000, 0.000000, 91.307373046875, -1, -1, -1, 300); //
CreateDynamicObject(3080, 388.490234375, -1981.5213623047, 3.75, 13.894989013672, 0.000000, 91.307373046875, -1, -1, -1, 300); //
CreateDynamicObject(3080, 388.52264404297, -1985.5202636719, 3.75, 13.892211914063, 0.000000, 91.301879882813, -1, -1, -1, 300); //
CreateDynamicObject(3080, 388.66128540039, -1989.2738037109, 3.75, 13.892211914063, 0.000000, 91.301879882813, -1, -1, -1, 300); //
CreateDynamicObject(1655, 165.59939575195, -2008.5631103516, 0.84112739562988, 0.000000, 0.000000, 99.250061035156, -1, -1, -1, 300); //
CreateDynamicObject(1655, 164.40719604492, -2000.8874511719, 0.84112739562988, 0.000000, 0.000000, 99.244964599609, -1, -1, -1, 300); //
CreateDynamicObject(1655, 159.71360778809, -2001.5721435547, 3.5911273956299, 15.880004882813, 0.000000, 99.244964599609, -1, -1, -1, 300); //
CreateDynamicObject(1655, 160.89616394043, -2009.3630371094, 3.5911273956299, 15.875244140625, 0.000000, 99.239501953125, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.61796569824, -1991.6928710938, 1, 0.000000, 0.000000, 276.62994384766, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 3.75, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 6.75, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 9.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 12.25, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 15, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 17.75, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 20.75, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.17135620117, -2021.5192871094, 20.75, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.16720581055, -2021.51953125, 18, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1669921875, -2021.51953125, 15, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1669921875, -2021.51953125, 12, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1669921875, -2021.51953125, 9, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1669921875, -2021.51953125, 6.25, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1669921875, -2021.51953125, 3.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1669921875, -2021.51953125, 0.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 152.89767456055, -2011.5847167969, 0.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 152.8974609375, -2011.583984375, 3.25, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 152.8974609375, -2011.583984375, 5.25, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 151.72708129883, -2001.6511230469, 5.25, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 151.7265625, -2001.650390625, 2.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 151.7265625, -2001.650390625, 0.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 23.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 150.6171875, -1991.6923828125, 26.25, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1708984375, -2021.5185546875, 23.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 154.1708984375, -2021.5185546875, 26.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 152.96543884277, -2011.3372802734, 26.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 151.7755279541, -2001.6588134766, 26.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 151.775390625, -2001.658203125, 23.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
CreateDynamicObject(1684, 152.96484375, -2011.3369140625, 23.5, 0.000000, 0.000000, 276.62475585938, -1, -1, -1, 300); //
//Аквапарк (конец)

//Драг LS (начало)
	CreateDynamicObject(18275,366.80700683594,-2012.7091064453,8.9200439453125,0,0,0, -1, -1, -1, 300);
	CreateDynamicObject(18275,372.81622314453,-2012.6921386719,8.9200439453125,0,0,0, -1, -1, -1, 300);
	CreateDynamicObject(18275,369.93725585938,-1671.8353271484,34.049488067627,0,0,0, -1, -1, -1, 300);
	CreateDynamicObject(983,363.7685546875,-1672.2802734375,32.493637084961,0,1.99951171875,270, -1, -1, -1, 300);
	CreateDynamicObject(983,376.54296875,-1671.283203125,32.519493103027,0,1.99951171875,269.98901367188, -1, -1, -1, 300);
	CreateDynamicObject(983,376.5546875,-1672.2529296875,32.495964050293,0,1.99951171875,269.98901367188, -1, -1, -1, 300);
	CreateDynamicObject(983,363.75775146484,-1671.4215087891,32.519493103027,0,1.99951171875,269.99450683594, -1, -1, -1, 300);
	CreateDynamicObject(1262,369.74896240234,-2013.2019042969,9.2343168258667,0,0,182, -1, -1, -1, 300);
	CreateDynamicObject(1262,363.67953491211,-2013.2017822266,9.0701608657837,0,0,181.99951171875, -1, -1, -1, 300);
	CreateDynamicObject(1262,375.76617431641,-2013.1843261719,9.1551818847656,0,0,181.99951171875, -1, -1, -1, 300);
//Драг LS (конец)

//Взлётная полоса Аэропорта LV (начало)
CreateDynamicObject(978, 1457.39661, 1455.41382, 10.66053,   0.00000, 0.00000, 269.99997, -1, -1, -1, 300);
CreateDynamicObject(978, 1457.30811, 1464.34460, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1457.29443, 1472.11853, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1457.30017, 1480.43848, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1457.43616, 1446.62732, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1457.53308, 1681.78955, 10.65272,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1456.85706, 1690.67822, 10.66053,   0.00000, 0.00000, 277.99445, -1, -1, -1, 300);
CreateDynamicObject(978, 1454.35645, 1699.17749, 10.66053,   0.00000, 0.00000, 295.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1448.84302, 1706.06433, 10.66053,   0.00000, 0.00000, 321.99219, -1, -1, -1, 300);
CreateDynamicObject(978, 1440.73157, 1710.63184, 10.66053,   0.00000, 0.00000, 339.98730, -1, -1, -1, 300);
CreateDynamicObject(978, 1431.96094, 1711.38013, 10.66053,   0.00000, 0.00000, 9.98291, -1, -1, -1, 300);
CreateDynamicObject(978, 1422.94910, 1708.55383, 10.66053,   0.00000, 0.00000, 25.98108, -1, -1, -1, 300);
CreateDynamicObject(978, 1416.03967, 1703.49463, 10.66053,   0.00000, 0.00000, 45.97717, -1, -1, -1, 300);
CreateDynamicObject(978, 1411.65845, 1696.10779, 10.66053,   0.00000, 0.00000, 69.97229, -1, -1, -1, 300);
CreateDynamicObject(978, 1409.92615, 1687.22791, 10.66053,   0.00000, 0.00000, 87.97192, -1, -1, -1, 300);
CreateDynamicObject(978, 1453.33301, 1748.38403, 10.66053,   0.00000, 0.00000, 341.99365, -1, -1, -1, 300);
CreateDynamicObject(978, 1444.90112, 1750.97510, 10.66053,   0.00000, 0.00000, 345.99341, -1, -1, -1, 300);
CreateDynamicObject(978, 1435.60193, 1752.61414, 10.66053,   0.00000, 0.00000, 355.99243, -1, -1, -1, 300);
CreateDynamicObject(978, 1426.33301, 1752.30725, 10.66053,   0.00000, 0.00000, 7.98999, -1, -1, -1, 300);
CreateDynamicObject(978, 1417.28076, 1750.26941, 10.66053,   0.00000, 0.00000, 15.98706, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.92395, 1747.49182, 10.66053,   0.00000, 0.00000, 19.98706, -1, -1, -1, 300);
CreateDynamicObject(978, 1400.87524, 1743.62195, 10.66053,   0.00000, 0.00000, 31.98413, -1, -1, -1, 300);
CreateDynamicObject(978, 1393.11304, 1738.54810, 10.66053,   0.00000, 0.00000, 33.98120, -1, -1, -1, 300);
CreateDynamicObject(978, 1386.58777, 1733.04578, 10.66053,   0.00000, 0.00000, 43.98071, -1, -1, -1, 300);
CreateDynamicObject(978, 1380.60852, 1726.31213, 10.66053,   0.00000, 0.00000, 53.97827, -1, -1, -1, 300);
CreateDynamicObject(978, 1376.01208, 1718.81921, 10.66053,   0.00000, 0.00000, 63.97583, -1, -1, -1, 300);
CreateDynamicObject(978, 1372.54468, 1710.37122, 10.66053,   0.00000, 0.00000, 71.97339, -1, -1, -1, 300);
CreateDynamicObject(978, 1370.46851, 1702.15295, 10.66053,   0.00000, 0.00000, 79.97144, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.87732, 1446.97766, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.91589, 1456.15479, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.95789, 1465.35925, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.94360, 1474.52881, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.91699, 1483.71497, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1369.56213, 1303.64783, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1369.85779, 1294.40784, 10.65318,   0.00000, 0.00000, 273.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1370.87390, 1288.20276, 10.66053,   0.00000, 0.00000, 289.98962, -1, -1, -1, 300);
CreateDynamicObject(978, 1373.43420, 1280.94885, 10.66053,   0.00000, 0.00000, 289.98962, -1, -1, -1, 300);
CreateDynamicObject(978, 1377.47754, 1272.68530, 10.66053,   0.00000, 0.00000, 301.98962, -1, -1, -1, 300);
CreateDynamicObject(978, 1385.60254, 1261.50525, 10.66053,   0.00000, 0.00000, 313.98669, -1, -1, -1, 300);
CreateDynamicObject(978, 1380.77051, 1267.26855, 10.66053,   0.00000, 359.99902, 305.98022, -1, -1, -1, 300);
CreateDynamicObject(978, 1391.47668, 1255.46948, 10.66053,   0.00000, 0.00000, 313.98376, -1, -1, -1, 300);
CreateDynamicObject(978, 1397.40771, 1250.88660, 10.66053,   0.00000, 0.00000, 331.98376, -1, -1, -1, 300);
CreateDynamicObject(978, 1405.61707, 1246.44360, 10.66053,   0.00000, 0.00000, 331.97937, -1, -1, -1, 300);
CreateDynamicObject(978, 1411.40076, 1244.16846, 10.66053,   0.00000, 0.00000, 341.97937, -1, -1, -1, 300);
CreateDynamicObject(978, 1420.29102, 1242.02771, 10.66053,   0.00000, 0.00000, 349.97693, -1, -1, -1, 300);
CreateDynamicObject(978, 1429.07800, 1240.53271, 10.66053,   0.00000, 0.00000, 349.97498, -1, -1, -1, 300);
CreateDynamicObject(978, 1438.13794, 1240.28113, 10.66053,   0.00000, 0.00000, 5.97498, -1, -1, -1, 300);
CreateDynamicObject(978, 1445.04846, 1240.98889, 10.66053,   0.00000, 0.00000, 5.97107, -1, -1, -1, 300);
CreateDynamicObject(978, 1453.45483, 1243.36218, 10.66053,   0.00000, 0.00000, 25.97107, -1, -1, -1, 300);
CreateDynamicObject(978, 1408.81091, 1308.14722, 10.66053,   0.00000, 0.00000, 273.99353, -1, -1, -1, 300);
CreateDynamicObject(978, 1409.69873, 1300.50391, 10.66053,   0.00000, 0.00000, 277.99353, -1, -1, -1, 300);
CreateDynamicObject(978, 1412.52100, 1292.16003, 10.66053,   0.00000, 0.00000, 297.99255, -1, -1, -1, 300);
CreateDynamicObject(978, 1418.26233, 1286.12000, 10.66053,   0.00000, 0.00000, 325.98767, -1, -1, -1, 300);
CreateDynamicObject(978, 1426.02795, 1281.83411, 10.66053,   0.00000, 0.00000, 335.98633, -1, -1, -1, 300);
CreateDynamicObject(978, 1434.57886, 1280.65698, 10.66053,   0.00000, 0.00000, 5.98389, -1, -1, -1, 300);
CreateDynamicObject(978, 1443.08496, 1282.66199, 10.66053,   0.00000, 0.00000, 23.98206, -1, -1, -1, 300);
CreateDynamicObject(978, 1449.77124, 1287.68579, 10.66053,   0.00000, 0.00000, 47.97766, -1, -1, -1, 300);
CreateDynamicObject(978, 1454.41736, 1295.28088, 10.66053,   0.00000, 0.00000, 71.97729, -1, -1, -1, 300);
CreateDynamicObject(18275, 1464.94324, 1222.70520, 12.06848,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18275, 1489.91785, 1222.71277, 12.06848,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1473.21509, 1223.21887, 10.66053,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1481.73242, 1223.25879, 10.66053,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1472.94739, 1222.72974, 10.66053,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1481.73779, 1222.77002, 10.66053,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1457.34045, 1240.54199, 10.66053,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1457.30566, 1231.44092, 10.66053,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(979, 1458.87854, 1226.01233, 10.66053,   0.00000, 0.00000, 303.99451, -1, -1, -1, 300);
CreateDynamicObject(979, 1498.09924, 1223.29846, 10.64538,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1507.41199, 1223.25928, 10.64538,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1516.56104, 1223.23511, 10.64538,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1525.31006, 1223.30103, 10.65272,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1534.46790, 1223.36902, 10.65272,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 1539.20618, 1223.40564, 10.65272,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1461.88123, 1222.21240, 12.43255,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1492.88843, 1222.21899, 12.30711,   0.00000, 0.00000, 173.99597, -1, -1, -1, 300);
CreateDynamicObject(1262, 1486.85022, 1222.21912, 12.24594,   0.00000, 0.00000, 173.99597, -1, -1, -1, 300);
CreateDynamicObject(1262, 1467.88025, 1222.21228, 12.29459,   0.00000, 0.00000, 173.99597, -1, -1, -1, 300);
//Взлётная полоса Аэропорта LV (конец)

//Дрифт SF (начало)
CreateDynamicObject(8171, -1396.80, 355.06, 6.15,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, -1258.87, 434.54, 6.15,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, -1397.17, 434.53, 6.15,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8150, -1662.75, 260.52, 6.92,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(8150, -1539.75, 260.42, 6.93,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1476.80, 260.66, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1445.01, 260.25, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1473.24, 260.44, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1466.84, 260.40, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1460.44, 260.43, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1454.05, 260.43, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1447.61, 260.42, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1444.79, 263.75, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1444.77, 270.16, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1444.75, 276.54, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1444.74, 282.90, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1444.72, 289.20, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1431.92, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1406.31, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1461.22, 260.42, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1444.84, 278.10, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1339.76, 294.73, 6.85,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1334.99, 299.30, 6.85,   0.00, 0.00, 132.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1330.27, 303.79, 6.85,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1329.58, 360.49, 6.85,   0.00, 0.00, 28.00, -1, -1, -1, 300);
CreateDynamicObject(987, -1389.28, 370.39, 5.84,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -1430.31, 370.37, 5.84,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -1419.43, 411.59, 5.84,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(987, -1378.63, 411.58, 5.84,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1470.17, 416.31, 6.92,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1469.77, 425.58, 6.92,   0.00, 0.00, -95.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1467.01, 434.32, 6.92,   0.00, 0.00, -120.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1460.06, 439.35, 6.92,   0.00, 0.00, -168.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1471.17, 401.29, 6.92,   0.00, 0.00, -96.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1471.66, 391.97, 6.92,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1471.41, 382.60, 6.92,   0.00, 0.00, -87.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1470.65, 373.34, 6.92,   0.00, 0.00, -84.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1469.75, 364.02, 6.92,   0.00, 0.00, -85.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1467.59, 355.05, 6.92,   0.00, 0.00, -68.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1462.69, 347.32, 6.92,   0.00, 0.00, -47.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1455.36, 341.88, 6.92,   0.00, 0.00, -25.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1459.42, 343.96, 6.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1465.74, 350.90, 6.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1469.24, 359.62, 6.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1469.69, 370.17, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 300);
CreateDynamicObject(1237, -1462.28, 370.25, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 300);
CreateDynamicObject(3877, -1468.58, 370.36, 10.63,   0.00, 84.00, -91.00, -1, -1, -1, 300);
CreateDynamicObject(3877, -1463.22, 370.26, 10.63,   0.00, 84.00, -91.00, -1, -1, -1, 300);
CreateDynamicObject(3877, -1465.94, 370.35, 10.63,   0.00, 84.00, -91.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1224.75, 438.44, 6.83,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1224.75, 458.14, 6.83,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1324.98, 434.09, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3877, -1338.09, 434.07, 7.83,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3877, -1338.09, 435.52, 7.83,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3877, -1338.09, 436.96, 7.83,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1299.37, 434.09, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1273.76, 434.10, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1257.73, 434.14, 6.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1254.49, 434.17, 6.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1232.35, 478.79, 6.83,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(8150, -1443.91, 481.75, 7.59,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1505.07, 461.16, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1531.55, 461.07, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1537.61, 449.77, 6.86,   0.00, 0.00, 153.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1543.48, 438.15, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1558.39, 416.87, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.13, 352.16, 6.78,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.18, 326.58, 6.78,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.20, 300.97, 6.78,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.13, 352.16, 8.02,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.13, 352.16, 9.29,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.18, 326.58, 8.03,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.18, 326.58, 9.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.20, 300.97, 8.01,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1637.20, 300.97, 9.34,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1601.17, 306.99, 6.86,   0.00, 0.00, 38.00, -1, -1, -1, 300);
CreateDynamicObject(3749, -1639.07, 278.48, 11.46,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(987, -1637.36, 260.74, 5.78,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3281, -1562.66, 281.34, 7.03,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3281, -1562.67, 262.56, 7.03,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1469.22, 260.42, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1453.12, 260.35, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1444.84, 269.00, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1444.84, 287.51, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1250.67, 434.53, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1251.19, 434.16, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1250.66, 433.84, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(987, -1721.57, 260.64, 6.18,   0.00, 0.00, 156.00, -1, -1, -1, 300);
CreateDynamicObject(8150, -1318.00, 481.74, 7.59,   0.00, 0.00, 180.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1582.49, 283.50, 6.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1590.67, 293.55, 6.86,   0.00, 0.00, 38.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1566.38, 283.23, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1572.76, 283.23, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1579.17, 283.23, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1528.17, 461.24, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1550.95, 427.55, 6.86,   0.00, 0.00, 145.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1566.80, 406.91, 6.86,   0.00, 0.00, 140.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1575.13, 396.94, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1583.66, 387.16, 6.86,   0.00, 0.00, 139.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1599.41, 369.05, 6.86,   0.00, 0.00, 139.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1607.94, 359.51, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1608.59, 359.51, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1325.31, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1312.27, 416.00, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1299.34, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1286.29, 416.00, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1273.28, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1247.22, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1260.23, 416.01, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1231.70, 418.45, 6.83,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1234.14, 416.02, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1227.18, 422.97, 6.83,   0.00, 0.00, 135.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1224.77, 425.39, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1224.74, 471.07, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1247.60, 481.37, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1234.59, 481.30, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1227.83, 474.28, 6.83,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1223.33, 469.75, 6.83,   0.00, 0.00, 45.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1380.73, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1355.13, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1342.22, 292.36, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1328.02, 318.87, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1328.02, 344.46, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1328.06, 357.48, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1331.24, 363.46, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1334.17, 365.22, 6.85,   0.00, 0.00, 60.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1337.76, 366.32, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1337.07, 366.32, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1336.39, 366.32, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1460.74, 401.32, 6.92,   0.00, 0.00, 96.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1462.10, 405.73, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 300);
CreateDynamicObject(979, -1460.26, 391.98, 6.92,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(979, -1460.75, 382.63, 6.92,   0.00, 0.00, 84.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1461.32, 377.69, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 300);
CreateDynamicObject(1237, -1461.42, 377.02, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 300);
CreateDynamicObject(1237, -1461.58, 376.37, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 300);
CreateDynamicObject(711, -1332.62, 301.54, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(711, -1337.57, 297.12, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(16092, -1561.91, 271.96, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1262, -1562.92, 272.03, 14.20,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, -1562.92, 269.01, 14.20,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(1262, -1562.92, 275.07, 14.20,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(705, -1205.74, 424.77, 5.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(705, -1205.74, 443.93, 5.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//Дрифт SF (конец)

//Клуб Джиззи (начало)
CreateDynamicObject(3809, -2622.86133, 1413.07910, 9.26600,   0.00000, 0.00000, 281.99158, -1, -1, -1, 300);
CreateDynamicObject(3809, -2626.34277, 1412.17480, 9.26600,   0.00000, 0.00000, 301.99768, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.23438, 1385.33594, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71484, 1389.36328, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71484, 1390.46289, 6.55200,   90.00000, 180.68665, 179.30237, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71509, 1391.56104, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71484, 1392.61035, 6.55200,   90.00000, 180.68665, 179.30237, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71606, 1393.70898, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71899, 1394.78796, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71875, 1395.83789, 6.55200,   90.00000, 180.68665, 179.30237, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1396.93994, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1398.04004, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71802, 1399.11597, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71802, 1400.21704, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.72095, 1401.29395, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1402.39600, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1403.49695, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1404.59705, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1405.69800, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1406.77295, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71973, 1407.84863, 6.55200,   90.00000, 180.68665, 179.30237, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1408.94995, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1409.97498, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1410.97595, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1412.02698, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1413.05200, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1413.52698, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1414.42700, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71997, 1415.22803, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.71509, 1388.28699, 6.55200,   90.00000, 180.68665, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.70996, 1387.40002, 6.56000,   91.00000, 180.68604, 179.30786, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.70996, 1386.40002, 6.59000,   90.99976, 180.68115, 179.30237, -1, -1, -1, 300);
CreateDynamicObject(2432, -2625.70996, 1385.31995, 6.61500,   90.98999, 181.00000, 179.30237, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.25781, 1387.26660, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.25879, 1389.18555, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.28394, 1391.11902, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.29004, 1393.04602, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.29590, 1394.94897, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.30200, 1396.85095, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.30688, 1398.75305, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.32007, 1400.67603, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.33105, 1402.59302, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.33789, 1404.51904, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.36401, 1406.43103, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.38110, 1408.35999, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.39893, 1410.28894, 6.70000,   359.69788, 0.00000, 0.49988, -1, -1, -1, 300);
CreateDynamicObject(1892, -2625.18994, 1384.42505, 6.21000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.16504, 1385.18066, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.15405, 1387.09705, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.16602, 1389.02405, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.16699, 1390.95203, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.16089, 1392.86694, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.17310, 1394.79504, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.16089, 1396.72205, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.15503, 1398.64697, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.16895, 1400.56799, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.15991, 1402.49500, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.17310, 1404.41394, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.18604, 1406.34094, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.19702, 1408.26904, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2626.20190, 1410.19397, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2773, -2623.41211, 1412.22302, 6.70000,   359.69788, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2669.18701, 1361.03796, 13.53400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2689.10693, 1361.02795, 13.54400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2694.00293, 1361.04700, 13.53400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2694.10303, 1341.32703, 13.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2669.19189, 1341.26001, 13.54400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2669.18262, 1315.52637, 13.54400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2688.49512, 1315.53406, 13.53400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2694.12500, 1315.54980, 13.54400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2694.15698, 1325.20496, 13.53400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2678.48096, 1326.12500, 13.55400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2669.20093, 1325.76904, 13.53400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, -2659.21289, 1315.47803, 6.01300,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, -2669.23999, 1305.56995, 5.96300,   0.00000, 90.00000, 269.99829, -1, -1, -1, 300);
CreateDynamicObject(19129, -2689.15894, 1305.57202, 5.96300,   0.00000, 90.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(19129, -2694.18188, 1305.52002, 5.96300,   0.00000, 90.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(19129, -2704.14307, 1315.50098, 5.98800,   0.00000, 90.00000, 179.99359, -1, -1, -1, 300);
CreateDynamicObject(19129, -2704.11401, 1335.42896, 5.98800,   0.00000, 90.00000, 179.98901, -1, -1, -1, 300);
CreateDynamicObject(19129, -2704.17407, 1355.34900, 5.98800,   0.00000, 90.00000, 179.98901, -1, -1, -1, 300);
CreateDynamicObject(19129, -2659.18604, 1335.43298, 6.01300,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, -2659.20703, 1355.41504, 6.01300,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2921, -2628.55200, 1409.87598, 10.11400,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
CreateDynamicObject(2921, -2622.28491, 1413.77502, 10.11400,   0.00000, 0.00000, 123.99939, -1, -1, -1, 300);
CreateDynamicObject(2921, -2631.94604, 1400.94995, 10.11400,   0.00000, 12.00000, 157.99719, -1, -1, -1, 300);
CreateDynamicObject(2921, -2660.49194, 1361.09302, 19.97100,   0.00000, 354.00000, 156.00000, -1, -1, -1, 300);
CreateDynamicObject(2921, -2700.08301, 1361.98096, 19.97100,   0.00000, 7.99756, 167.99963, -1, -1, -1, 300);
CreateDynamicObject(13749, -2652.91406, 1348.60706, 9.34100,   0.00000, 0.00000, 55.99780, -1, -1, -1, 300);
CreateDynamicObject(1227, -2653.63403, 1359.92603, 6.91300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1235, -2626.98999, 1411.84204, 6.59700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1359, -2656.92798, 1360.67102, 16.69900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3433, -2624.37793, 1412.51904, 9.66600,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
CreateDynamicObject(8854, -2641.87305, 1397.48206, 6.33400,   0.00000, 0.00000, 284.99634, -1, -1, -1, 300);
CreateDynamicObject(8854, -2662.33789, 1392.02600, 6.33400,   0.00000, 0.00000, 284.99634, -1, -1, -1, 300);
CreateDynamicObject(18783, -2675.82910, 1343.00806, 13.52400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3657, -2633.34399, 1398.38696, 6.62000,   0.00000, 0.00000, 15.00000, -1, -1, -1, 300);
CreateDynamicObject(3657, -2648.32788, 1394.31494, 6.62000,   0.00000, 0.00000, 14.99634, -1, -1, -1, 300);
CreateDynamicObject(3657, -2640.89600, 1396.35706, 6.62000,   0.00000, 0.00000, 14.99634, -1, -1, -1, 300);
CreateDynamicObject(3657, -2655.34912, 1392.47302, 6.62000,   0.00000, 0.00000, 14.99634, -1, -1, -1, 300);
CreateDynamicObject(3657, -2669.89111, 1388.48401, 6.62000,   0.00000, 0.00000, 14.99634, -1, -1, -1, 300);
CreateDynamicObject(3657, -2662.42896, 1390.56104, 6.62000,   0.00000, 0.00000, 14.99634, -1, -1, -1, 300);
CreateDynamicObject(2802, -2694.84204, 1366.20496, 16.36400,   0.00000, 0.00000, 92.00000, -1, -1, -1, 300);
CreateDynamicObject(2802, -2667.80811, 1365.95898, 16.36400,   0.00000, 0.00000, 91.99951, -1, -1, -1, 300);
CreateDynamicObject(2802, -2681.32007, 1365.66394, 16.36400,   0.00000, 0.00000, 91.99951, -1, -1, -1, 300);
CreateDynamicObject(2802, -2674.06812, 1365.66895, 16.36400,   0.00000, 0.00000, 91.99951, -1, -1, -1, 300);
CreateDynamicObject(2802, -2688.31201, 1365.89905, 16.36400,   0.00000, 0.00000, 91.99951, -1, -1, -1, 300);
CreateDynamicObject(642, -2694.85205, 1366.19104, 17.45700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(642, -2688.35303, 1365.87500, 17.45700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(642, -2681.35107, 1365.65698, 17.45700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(642, -2674.12988, 1365.65906, 17.45700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(642, -2667.85303, 1365.93994, 17.45700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2661.77905, 1330.89600, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.79907, 1329.91199, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2661.80396, 1336.18298, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2661.78101, 1341.95496, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2661.78198, 1347.49194, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2702.08594, 1352.53003, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.82202, 1335.19202, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.78906, 1340.99902, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.77100, 1346.53101, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.07593, 1351.55396, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.74609, 1331.96106, 16.68000,   0.00000, 0.00000, 179.99994, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.76611, 1337.26099, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.76001, 1342.96106, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2808, -2661.77905, 1348.46106, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.05493, 1353.51196, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2762, -2702.14795, 1345.46497, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2702.22607, 1337.99194, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2762, -2702.33911, 1331.06604, 16.43900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.09302, 1346.48206, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.19604, 1339.02295, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.36304, 1332.13794, 16.68000,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.11206, 1344.52600, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.26392, 1337.02002, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2808, -2702.40088, 1330.03894, 16.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, -2681.53101, 1337.59705, 15.78400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2850, -2688.35889, 1365.91101, 16.74000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2869, -2702.02905, 1352.54895, 16.85700,   0.00000, 0.00000, 326.00000, -1, -1, -1, 300);
CreateDynamicObject(2869, -2702.22412, 1337.97998, 16.85700,   0.00000, 0.00000, 319.99731, -1, -1, -1, 300);
CreateDynamicObject(16151, -2698.98096, 1364.88599, 16.35900,   0.00000, 0.00000, 179.99994, -1, -1, -1, 300);
CreateDynamicObject(1668, -2694.89111, 1366.44995, 16.85900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1668, -2681.54712, 1365.66602, 16.85900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1668, -2668.01611, 1365.86206, 16.85900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1668, -2661.53906, 1341.91394, 17.00900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1669, -2661.87207, 1347.48096, 17.02400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1669, -2661.42700, 1331.03601, 17.02400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1669, -2702.48096, 1331.26794, 17.02400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2702.68311, 1330.93201, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2702.04102, 1331.09204, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2702.44507, 1338.33105, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2702.41211, 1337.73206, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2702.62793, 1352.39404, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2701.92896, 1352.45801, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2701.92871, 1352.45801, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2694.84399, 1366.00195, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2694.55103, 1366.06201, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2688.30005, 1365.46204, 16.79600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2681.31909, 1365.37000, 16.94600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2674.31909, 1365.43396, 16.79600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1667, -2674.05005, 1365.48804, 16.79600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1665, -2694.99097, 1366.05701, 16.72800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1665, -2681.38208, 1365.64795, 16.70300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1665, -2698.06592, 1361.65405, 17.00300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1545, -2700.05396, 1366.10706, 17.45500,   0.00000, 0.00000, 269.99997, -1, -1, -1, 300);
CreateDynamicObject(18070, -2681.44922, 1331.68262, 18.78400,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(19129, -2681.51367, 1337.61621, 18.23800,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(2422, -2698.72510, 1361.69897, 16.96400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(14820, -2680.68311, 1333.42395, 19.40400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(14820, -2681.96606, 1333.42200, 19.40400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19121, -2671.45605, 1327.67603, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2671.40210, 1329.47595, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19123, -2671.42505, 1331.56006, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2671.40991, 1333.48401, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, -2671.39404, 1335.56104, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19126, -2671.39893, 1337.57703, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19127, -2671.43506, 1339.57202, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19121, -2671.41602, 1341.44202, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2671.41992, 1343.58496, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19123, -2671.41406, 1345.50806, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2671.46191, 1347.66602, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, -2673.63501, 1347.71497, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19126, -2675.56396, 1347.71802, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19127, -2677.63208, 1347.71704, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19121, -2679.55908, 1347.70703, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2681.63989, 1347.71802, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19123, -2683.56396, 1347.70105, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2685.64307, 1347.72400, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, -2687.55005, 1347.73206, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19126, -2689.46411, 1347.70605, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19127, -2691.61499, 1347.69495, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19121, -2691.67505, 1345.50500, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2691.65601, 1343.55798, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19123, -2691.66992, 1341.48096, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2691.69092, 1339.57104, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, -2691.69189, 1337.48499, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19126, -2691.67896, 1335.55701, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19127, -2691.66602, 1333.48096, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19121, -2691.69189, 1331.56995, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2691.66797, 1329.56995, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19123, -2691.65698, 1327.62305, 16.59800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18653, -2671.84302, 1347.13794, 18.30800,   0.00000, 0.00000, 38.00000, -1, -1, -1, 300);
CreateDynamicObject(18653, -2672.04297, 1328.01099, 18.30800,   0.00000, 0.00000, 313.99622, -1, -1, -1, 300);
CreateDynamicObject(18653, -2691.01709, 1328.24902, 18.30800,   0.00000, 0.00000, 223.99475, -1, -1, -1, 300);
CreateDynamicObject(18653, -2691.08594, 1347.21301, 18.30800,   0.00000, 0.00000, 147.99475, -1, -1, -1, 300);
CreateDynamicObject(14416, -2681.52295, 1349.46997, 15.08400,   0.00000, 0.00000, 179.99994, -1, -1, -1, 300);
CreateDynamicObject(18655, -2675.26294, 1347.28198, 18.30800,   0.00000, 0.00000, 87.99500, -1, -1, -1, 300);
CreateDynamicObject(18655, -2687.75903, 1347.20300, 18.30800,   0.00000, 0.00000, 87.99500, -1, -1, -1, 300);
CreateDynamicObject(18653, -2672.01904, 1337.63794, 18.30800,   0.00000, 0.00000, 359.99622, -1, -1, -1, 300);
CreateDynamicObject(18653, -2691.02905, 1337.63098, 18.30800,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(18653, -2678.94312, 1347.20703, 18.30800,   0.00000, 0.00000, 85.99622, -1, -1, -1, 300);
CreateDynamicObject(18653, -2683.98706, 1347.20605, 18.30800,   0.00000, 0.00000, 91.99548, -1, -1, -1, 300);
CreateDynamicObject(18655, -2671.79590, 1343.87695, 18.30800,   0.00000, 0.00000, 359.99500, -1, -1, -1, 300);
CreateDynamicObject(18655, -2671.82397, 1340.70203, 18.30800,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
CreateDynamicObject(18655, -2671.87988, 1334.50000, 18.30800,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
CreateDynamicObject(18655, -2672.01392, 1331.36499, 18.30800,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
CreateDynamicObject(18655, -2690.98608, 1331.38196, 18.30800,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(18655, -2690.98291, 1334.49194, 18.30800,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(18655, -2690.93091, 1340.77905, 18.30800,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(18655, -2690.98389, 1343.86597, 18.30800,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(18654, -2685.11011, 1334.17505, 18.25300,   0.00000, 0.00000, 135.99997, -1, -1, -1, 300);
CreateDynamicObject(18654, -2677.80688, 1334.17395, 18.30300,   0.00000, 0.00000, 45.99976, -1, -1, -1, 300);
CreateDynamicObject(18654, -2677.81201, 1329.29895, 18.25300,   0.00000, 0.00000, 327.99976, -1, -1, -1, 300);
CreateDynamicObject(18654, -2685.09692, 1329.19897, 18.25300,   0.00000, 0.00000, 221.99683, -1, -1, -1, 300);
CreateDynamicObject(2232, -2678.34497, 1334.53198, 18.90600,   0.00000, 0.00000, 181.99997, -1, -1, -1, 300);
CreateDynamicObject(2232, -2684.72803, 1334.54395, 18.90600,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2229, -2679.19800, 1334.32800, 18.30300,   0.00000, 0.00000, 182.00000, -1, -1, -1, 300);
CreateDynamicObject(2229, -2684.50098, 1334.38696, 18.30300,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2229, -2684.15088, 1334.39795, 18.30300,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2229, -2683.80200, 1334.40796, 18.30300,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2229, -2679.55396, 1334.31396, 18.30300,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2229, -2679.90405, 1334.30396, 18.30300,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2232, -2682.97510, 1334.56006, 18.90600,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(2232, -2680.12012, 1334.52100, 18.90600,   0.00000, 0.00000, 181.99951, -1, -1, -1, 300);
CreateDynamicObject(982, -2704.15601, 1318.38098, 16.71800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, -2704.16211, 1343.95398, 16.71800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, -2704.16797, 1359.94995, 16.67600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, -2671.91895, 1305.54504, 16.71800,   0.00000, 0.00000, 269.99997, -1, -1, -1, 300);
CreateDynamicObject(982, -2659.13794, 1318.36304, 16.71800,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
CreateDynamicObject(982, -2659.13208, 1343.94995, 16.71800,   0.00000, 0.00000, 359.98901, -1, -1, -1, 300);
CreateDynamicObject(983, -2659.13892, 1355.09998, 16.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1597, -2629.09106, 1406.21594, 8.75100,   0.00000, 0.00000, 340.00000, -1, -1, -1, 300);
CreateDynamicObject(3532, -2634.19702, 1399.78894, 7.01400,   0.00000, 0.00000, 284.00000, -1, -1, -1, 300);
CreateDynamicObject(3532, -2637.97803, 1398.93005, 7.01400,   0.00000, 0.00000, 283.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2642.48804, 1397.74304, 7.01400,   0.00000, 0.00000, 283.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2646.88892, 1396.73596, 7.01400,   0.00000, 0.00000, 283.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2649.54590, 1395.90100, 7.01400,   0.00000, 0.00000, 283.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2654.87793, 1394.53406, 7.01400,   0.00000, 0.00000, 283.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2658.33496, 1393.49304, 7.01400,   0.00000, 0.00000, 283.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2662.67212, 1392.37695, 7.01400,   0.00000, 0.00000, 287.99658, -1, -1, -1, 300);
CreateDynamicObject(3532, -2664.37891, 1391.98901, 7.01400,   0.00000, 0.00000, 287.99561, -1, -1, -1, 300);
CreateDynamicObject(3532, -2669.99609, 1390.30005, 7.01400,   0.00000, 0.00000, 287.99561, -1, -1, -1, 300);
CreateDynamicObject(3532, -2667.24292, 1391.05298, 7.01400,   0.00000, 0.00000, 287.99561, -1, -1, -1, 300);
CreateDynamicObject(6965, -2586.03906, 1375.06299, 9.80300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, -2691.11304, 1305.55005, 16.71800,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(9833, -2586.46289, 1375.08997, 9.47200,   0.00000, 0.00000, 344.00000, -1, -1, -1, 300);
CreateDynamicObject(18720, -2586.01611, 1374.20898, 13.32000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18720, -2586.81592, 1375.20300, 13.32000,   0.00000, 0.00000, 132.00000, -1, -1, -1, 300);
CreateDynamicObject(18720, -2585.45703, 1375.90906, 13.32000,   0.00000, 0.00000, 131.99524, -1, -1, -1, 300);
CreateDynamicObject(6964, -2586.10889, 1375.04504, 5.77400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2595.46094, 1379.61096, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2588.33398, 1385.31006, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2579.51196, 1383.28699, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2575.53198, 1375.06995, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2579.53394, 1366.82300, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2588.43896, 1364.82397, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, -2595.52490, 1370.48596, 6.65200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2583.68604, 1385.29700, 6.66200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2576.57300, 1379.59998, 6.66200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2576.56104, 1370.55798, 6.66200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2583.74512, 1364.81604, 6.66200,   0.00000, 0.00000, 332.00000, -1, -1, -1, 300);
CreateDynamicObject(19124, -2592.57788, 1366.80298, 6.66200,   0.00000, 0.00000, 359.99585, -1, -1, -1, 300);
CreateDynamicObject(19124, -2596.55396, 1375.06799, 6.66200,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
CreateDynamicObject(19124, -2592.59009, 1383.27795, 6.66200,   0.00000, 0.00000, 359.99451, -1, -1, -1, 300);
CreateDynamicObject(1958, -2683.91602, 1332.54895, 19.34400,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(1958, -2683.93604, 1332.12195, 19.34400,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(1958, -2683.93091, 1331.69397, 19.34400,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(2780, -2585.85840, 1375.12695, 6.16300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//Клуб Джиззи (конец)

//Дрифт LV (начало)
   CreateDynamicObject(984,1910.00000000,1963.00000000,7.19999981,0.00000000,0.00000000,90.00000000, -1, -1, -1, 300); //object(fenceshit2) (1)
   CreateDynamicObject(1237,1903.09997559,1962.90002441,6.59999990,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (1)
   CreateDynamicObject(982,1902.50000000,1975.80004883,7.30000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit) (1)
   CreateDynamicObject(983,1902.50000000,1990.19995117,7.30000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit3) (1)
   CreateDynamicObject(984,1860.09997559,1995.30004883,7.19999981,0.00000000,0.00000000,274.00000000, -1, -1, -1, 300); //object(fenceshit2) (2)
   CreateDynamicObject(1237,1853.59997559,1994.90002441,6.59999990,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (2)
   CreateDynamicObject(984,1910.09997559,1960.30004883,7.19999981,0.00000000,0.00000000,90.00000000, -1, -1, -1, 300); //object(fenceshit2) (3)
   CreateDynamicObject(1237,1903.19995117,1960.30004883,6.59999990,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (3)
   CreateDynamicObject(984,1908.90002441,2009.59997559,13.39999962,0.00000000,0.00000000,267.99902344, -1, -1, -1, 300); //object(fenceshit2) (4)
   CreateDynamicObject(1237,1915.50000000,2009.40002441,12.80000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (4)
   CreateDynamicObject(982,1902.50000000,1975.80004883,13.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit) (3)
   CreateDynamicObject(983,1902.50000000,1990.19995117,13.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit3) (2)
   CreateDynamicObject(984,1860.30004883,1960.09997559,13.39999962,0.00000000,0.00000000,267.99499512, -1, -1, -1, 300); //object(fenceshit2) (6)
   CreateDynamicObject(1237,1853.80004883,1960.30004883,12.80000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (5)
   CreateDynamicObject(984,1860.30004883,1943.50000000,7.19999981,0.00000000,0.00000000,90.00000000, -1, -1, -1, 300); //object(fenceshit2) (7)
   CreateDynamicObject(1237,1853.80004883,1943.59997559,6.59999990,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (6)
   CreateDynamicObject(979,1921.59997559,1962.69995117,7.40000010,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(sub_roadleft) (2)
   CreateDynamicObject(979,1926.50000000,1958.00000000,7.40000010,0.00000000,0.00000000,274.00000000, -1, -1, -1, 300); //object(sub_roadleft) (3)
   CreateDynamicObject(979,1927.09997559,1948.80004883,7.40000010,0.00000000,0.00000000,273.99902344, -1, -1, -1, 300); //object(sub_roadleft) (4)
   CreateDynamicObject(707,1924.80004883,1942.30004883,6.69999981,0.00000000,0.00000000,354.57824707, -1, -1, -1, 300); //object(sm_bushvbig) (1)
   CreateDynamicObject(707,1924.40002441,1950.19995117,6.59999990,0.00000000,0.00000000,354.57824707, -1, -1, -1, 300); //object(sm_bushvbig) (2)
   CreateDynamicObject(707,1924.59997559,1957.40002441,6.59999990,0.00000000,0.00000000,354.57824707, -1, -1, -1, 300); //object(sm_bushvbig) (3)
   CreateDynamicObject(984,1879.50000000,1790.19995117,12.39999962,0.00000000,0.00000000,90.00000000, -1, -1, -1, 300); //object(fenceshit2) (8)
   CreateDynamicObject(1237,1886.00000000,1790.09997559,11.69999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (7)
   CreateDynamicObject(982,1954.80004883,1774.69995117,12.39999962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit) (4)
   CreateDynamicObject(983,1954.80004883,1760.30004883,12.39999962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit3) (3)
   CreateDynamicObject(984,1961.90002441,1757.90002441,12.39999962,0.00000000,0.00000000,88.00000000, -1, -1, -1, 300); //object(fenceshit2) (9)
   CreateDynamicObject(1237,1955.59997559,1757.90002441,11.69999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (8)
   CreateDynamicObject(1237,1955.00000000,1757.90002441,11.69999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (9)
   CreateDynamicObject(984,1922.09997559,1797.40002441,12.39999962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit2) (10)
   CreateDynamicObject(1237,1922.09997559,1790.80004883,11.80000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (10)
   CreateDynamicObject(984,2096.60009766,1863.80004883,10.30000019,0.00000000,0.00000000,354.00000000, -1, -1, -1, 300); //object(fenceshit2) (11)
   CreateDynamicObject(1237,2097.30004883,1870.19995117,10.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (11)
   CreateDynamicObject(1237,2097.39990234,1870.90002441,10.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (12)
   CreateDynamicObject(994,2106.50000000,1975.80004883,9.69999981,0.00000000,0.00000000,274.00000000, -1, -1, -1, 300); //object(lhouse_barrier2) (1)
   CreateDynamicObject(994,2107.00000000,1968.80004883,9.69999981,0.00000000,0.00000000,273.99902344, -1, -1, -1, 300); //object(lhouse_barrier2) (2)
   CreateDynamicObject(11500,2079.19995117,1854.30004883,9.89999962,0.00000000,0.00000000,356.00000000, -1, -1, -1, 300); //object(des_skelsignbush_) (1)
   CreateDynamicObject(16090,2098.80004883,1975.40002441,9.69999981,0.00000000,0.00000000,274.00000000, -1, -1, -1, 300); //object(des_pipestrut03) (1)
   CreateDynamicObject(1238,2096.50000000,1868.50000000,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (1)
   CreateDynamicObject(1238,2095.69995117,1869.69995117,10.19999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (2)
   CreateDynamicObject(1238,2094.80004883,1870.50000000,10.39999962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (3)
   CreateDynamicObject(1238,2093.89990234,1871.59997559,10.39999962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (4)
   CreateDynamicObject(1238,1915.59997559,2022.19995117,6.90000010,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
   CreateDynamicObject(1238,1915.00000000,2023.09997559,6.90000010,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (6)
   CreateDynamicObject(1238,1914.19995117,2024.00000000,6.90000010,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (7)
   CreateDynamicObject(1238,1913.30004883,2024.90002441,6.90000010,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (8)
   CreateDynamicObject(1238,1913.50000000,2008.90002441,13.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (9)
   CreateDynamicObject(1238,1914.40002441,2007.59997559,13.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (10)
   CreateDynamicObject(1238,1915.59997559,2006.00000000,13.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (11)
   CreateDynamicObject(1232,1917.40002441,1976.69995117,9.19999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1) (1)
   CreateDynamicObject(1232,1914.90002441,1961.80004883,9.19999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1) (2)
   CreateDynamicObject(1232,1910.00000000,1961.50000000,9.19999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1) (3)
   CreateDynamicObject(1232,1905.40002441,1961.40002441,9.19999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1) (4)
   CreateDynamicObject(1262,2098.39990234,1974.59997559,17.20000076,0.00000000,0.00000000,190.00000000, -1, -1, -1, 300); //object(mtraffic4) (1)
//Дрифт LV (конец)

//Склад Симметрия (начало)
	CreateDynamicObject(982,1603.55773926,719.30615234,10.50386715,0.00000000,0.00000000,88.32501221, -1, -1, -1, 300); //object(fenceshit)(1)
	CreateDynamicObject(982,1640.71337891,677.59112549,10.50386715,0.00000000,0.00000000,89.57458496, -1, -1, -1, 300); //object(fenceshit)(2)
	CreateDynamicObject(982,1657.67968750,718.69281006,10.50386715,0.00000000,0.00000000,89.57153320, -1, -1, -1, 300); //object(fenceshit)(3)
	CreateDynamicObject(982,1685.49584961,718.94677734,10.50386715,0.00000000,0.00000000,91.07153320, -1, -1, -1, 300); //object(fenceshit)(4)
	CreateDynamicObject(982,1712.49914551,719.04016113,10.50386715,0.00000000,0.00000000,89.32116699, -1, -1, -1, 300); //object(fenceshit)(5)
	CreateDynamicObject(982,1695.58520508,709.03045654,10.50386715,0.00000000,0.00000000,179.63122559, -1, -1, -1, 300); //object(fenceshit)(6)
	CreateDynamicObject(982,1700.11511230,761.94671631,10.50386715,0.00000000,0.00000000,90.30145264, -1, -1, -1, 300); //object(fenceshit)(7)
	CreateDynamicObject(982,1738.58837891,720.02716064,10.50386715,0.00000000,358.01501465,178.90887451, -1, -1, -1, 300); //object(fenceshit)(10)
	CreateDynamicObject(982,1634.59167480,731.52990723,10.50386715,0.00000000,0.00000000,179.62646484, -1, -1, -1, 300); //object(fenceshit)(11)
	CreateDynamicObject(982,1634.53845215,706.04016113,10.50386715,0.00000000,0.00000000,179.62646484, -1, -1, -1, 300); //object(fenceshit)(12)
	CreateDynamicObject(982,1695.81933594,734.78417969,10.50386715,0.00000000,0.00000000,179.62646484, -1, -1, -1, 300); //object(fenceshit)(13)
	CreateDynamicObject(982,1674.52294922,761.77612305,10.47886753,0.00000000,0.00000000,90.29663086, -1, -1, -1, 300); //object(fenceshit)(14)
	CreateDynamicObject(982,1630.64355469,718.79296875,10.50386715,0.00000000,0.00000000,89.57153320, -1, -1, -1, 300); //object(fenceshit)(15)
	CreateDynamicObject(982,1621.48425293,677.69824219,10.50386715,0.00000000,0.00000000,89.57153320, -1, -1, -1, 300); //object(fenceshit)(16)
	CreateDynamicObject(982,1590.45581055,737.48339844,10.50386715,0.00000000,0.00000000,130.00958252, -1, -1, -1, 300); //object(fenceshit)(17)
	CreateDynamicObject(982,1589.53161621,701.87341309,10.50386715,0.00000000,0.00000000,62.51669312, -1, -1, -1, 300); //object(fenceshit)(18)
	CreateDynamicObject(1237,1590.72900391,719.73004150,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(1)
	CreateDynamicObject(1237,1634.53588867,718.75665283,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(2)
	CreateDynamicObject(1237,1634.51501465,693.13775635,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(3)
	CreateDynamicObject(1237,1644.19812012,718.80462646,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(4)
	CreateDynamicObject(1237,1695.66821289,719.12017822,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(5)
	CreateDynamicObject(1237,1695.45080566,696.19885254,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(6)
	CreateDynamicObject(1237,1699.01098633,719.26263428,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(7)
	CreateDynamicObject(1237,1725.25036621,718.87451172,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(8)
	CreateDynamicObject(1237,1734.57763672,729.31341553,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(9)
	CreateDynamicObject(1237,1731.77563477,731.47045898,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(10)
	CreateDynamicObject(1237,1736.93664551,727.25061035,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(11)
	CreateDynamicObject(1237,1737.13818359,712.65313721,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(12)
	CreateDynamicObject(1237,1734.55432129,710.34515381,9.82031155,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(13)
	CreateDynamicObject(1237,1732.11010742,708.10241699,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(14)
	CreateDynamicObject(1237,1710.10986328,733.45690918,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(15)
	CreateDynamicObject(1237,1695.84558105,747.66491699,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(16)
	CreateDynamicObject(1237,1691.97167969,718.98150635,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(17)
	CreateDynamicObject(1237,1709.34191895,707.64923096,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(18)
	CreateDynamicObject(1237,1680.18212891,706.91235352,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(19)
	CreateDynamicObject(1237,1678.88549805,756.06079102,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(20)
	CreateDynamicObject(1237,1680.30078125,757.44464111,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(21)
	CreateDynamicObject(1237,1681.93725586,759.27978516,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(22)
	CreateDynamicObject(1237,1705.25427246,760.87500000,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(23)
	CreateDynamicObject(1237,1707.13061523,758.91204834,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(24)
	CreateDynamicObject(1237,1709.27697754,757.36785889,9.82031441,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(25)
	CreateDynamicObject(1237,1672.62731934,718.54089355,9.82031345,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(26)
	CreateDynamicObject(1237,1670.54565430,718.51672363,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(27)
	CreateDynamicObject(1237,1624.98437500,718.70092773,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(28)
	CreateDynamicObject(1237,1617.09729004,718.66931152,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(29)
	CreateDynamicObject(1237,1651.55212402,718.59259033,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(30)
	CreateDynamicObject(1237,1649.32763672,686.22595215,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(31)
	CreateDynamicObject(1237,1647.01000977,683.94238281,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(32)
	CreateDynamicObject(1237,1644.34082031,680.29797363,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(33)
	CreateDynamicObject(1237,1627.63940430,679.17346191,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(34)
	CreateDynamicObject(1237,1624.71362305,681.57696533,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(35)
	CreateDynamicObject(1237,1621.60107422,683.49768066,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(36)
	CreateDynamicObject(1237,1648.91809082,706.47406006,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(37)
	CreateDynamicObject(1237,1621.61352539,707.12951660,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(38)
	CreateDynamicObject(1237,1648.25878906,732.77880859,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(39)
	CreateDynamicObject(1237,1621.68273926,734.11608887,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(40)
	CreateDynamicObject(1237,1625.69360352,762.99853516,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(41)
	CreateDynamicObject(1237,1623.74145508,760.18243408,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(42)
	CreateDynamicObject(1237,1621.59631348,757.21350098,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(43)
	CreateDynamicObject(1237,1643.34704590,762.05419922,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(44)
	CreateDynamicObject(1237,1645.41540527,758.53094482,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(45)
	CreateDynamicObject(1237,1648.25097656,755.71209717,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(46)
	CreateDynamicObject(1237,1634.55212402,744.38116455,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(47)
	CreateDynamicObject(1237,1701.79467773,683.12005615,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(48)
	CreateDynamicObject(1237,1704.83203125,684.16790771,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(49)
	CreateDynamicObject(1237,1704.83203125,684.16699219,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(50)
	CreateDynamicObject(1237,1707.66271973,685.51953125,9.82031059,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(51)
	CreateDynamicObject(1237,1709.94714355,688.09863281,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(52)
	CreateDynamicObject(1237,1688.37963867,683.73095703,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(53)
	CreateDynamicObject(1237,1685.46020508,684.28125000,9.82031441,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(54)
	CreateDynamicObject(1237,1682.39160156,685.92065430,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(55)
	CreateDynamicObject(1237,1679.57666016,688.29522705,9.82031250,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01)(56)
	CreateDynamicObject(1425,1589.31701660,719.63000488,10.27280998,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(1)
	CreateDynamicObject(1425,1587.93151855,719.63885498,10.27280998,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(2)
	CreateDynamicObject(1425,1589.33654785,720.22338867,10.27280998,0.00000000,0.00000000,181.34996033, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(3)
	CreateDynamicObject(1425,1587.90991211,720.17150879,10.27280998,0.00000000,0.00000000,181.34582520, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(4)
	CreateDynamicObject(3472,1634.60131836,718.76843262,9.97953987,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(circuslampost03)(1)
	CreateDynamicObject(3472,1695.74133301,719.11334229,9.32815647,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(circuslampost03)(2)
	CreateDynamicObject(1232,1634.51037598,693.16534424,11.47041130,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(1)
	CreateDynamicObject(1232,1634.52197266,744.27838135,11.70534897,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(2)
	CreateDynamicObject(1232,1695.85498047,747.59338379,11.71399117,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(3)
	CreateDynamicObject(1232,1695.37976074,696.21295166,11.71419907,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(4)
	CreateDynamicObject(1232,1725.24072266,718.82977295,11.46805382,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(5)
	CreateDynamicObject(1232,1590.66088867,719.63220215,11.75154686,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(streetlamp1)(6)
	CreateDynamicObject(3666,1648.12927246,684.97851562,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(1)
	CreateDynamicObject(3666,1645.47106934,681.78350830,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(2)
	CreateDynamicObject(3666,1643.54382324,678.79760742,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(3)
	CreateDynamicObject(3666,1626.01806641,679.95758057,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(4)
	CreateDynamicObject(3666,1622.83935547,681.94641113,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(5)
	CreateDynamicObject(3666,1620.35534668,683.77825928,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(6)
	CreateDynamicObject(3666,1629.06689453,678.42956543,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(7)
	CreateDynamicObject(3666,1649.96899414,687.45349121,10.42871952,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(8)
	CreateDynamicObject(3666,1649.69909668,706.07501221,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(9)
	CreateDynamicObject(3666,1624.57434082,761.76385498,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(10)
	CreateDynamicObject(3666,1622.65136719,758.82641602,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(11)
	CreateDynamicObject(3666,1620.66931152,756.30639648,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(12)
	CreateDynamicObject(3666,1644.42041016,760.45727539,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(13)
	CreateDynamicObject(3666,1647.02502441,757.71795654,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(14)
	CreateDynamicObject(3666,1648.91638184,733.41247559,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(15)
	CreateDynamicObject(3666,1679.53393555,756.73278809,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(16)
	CreateDynamicObject(3666,1680.67639160,758.79522705,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(17)
	CreateDynamicObject(3666,1682.59143066,760.16821289,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(18)
	CreateDynamicObject(3666,1706.10534668,759.94775391,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(19)
	CreateDynamicObject(3666,1708.26159668,758.19244385,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(20)
	CreateDynamicObject(3666,1710.19555664,756.63867188,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(21)
	CreateDynamicObject(3666,1730.37231445,732.97888184,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(22)
	CreateDynamicObject(3666,1733.29479980,730.60314941,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(23)
	CreateDynamicObject(3666,1736.13806152,728.65234375,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(24)
	CreateDynamicObject(3666,1735.98229980,711.45971680,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(25)
	CreateDynamicObject(3666,1733.47326660,709.29211426,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(26)
	CreateDynamicObject(3666,1709.78588867,707.14190674,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(27)
	CreateDynamicObject(3666,1709.09130859,686.62786865,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(28)
	CreateDynamicObject(3666,1706.16076660,684.89672852,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(29)
	CreateDynamicObject(3666,1703.30688477,683.64489746,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(30)
	CreateDynamicObject(3666,1686.78955078,683.71520996,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(31)
	CreateDynamicObject(3666,1683.83471680,684.95275879,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(32)
	CreateDynamicObject(3666,1681.09729004,686.95001221,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(33)
	CreateDynamicObject(3666,1689.70642090,683.53466797,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(34)
	CreateDynamicObject(3666,1671.64099121,718.69293213,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(35)
	CreateDynamicObject(3666,1620.78295898,706.84863281,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(36)
	CreateDynamicObject(3666,1679.30297852,706.39355469,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(37)
	CreateDynamicObject(3666,1710.64550781,733.67669678,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(38)
	CreateDynamicObject(3666,1621.14428711,734.50036621,10.33399773,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(airuntest_las)(39)
	CreateDynamicObject(1425,1578.66113281,718.43945312,10.26662540,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_3)(5)
//Склад Симметрия (конец)

//Парковка LV (начало)
    CreateDynamicObject(1237,2301.69995117,1514.69995117,10.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (4)
    CreateDynamicObject(3578,2302.39990234,1383.50000000,10.60000038,0.00000000,0.00000000,179.00000000, -1, -1, -1, 300); //object(dockbarr1_la) (1)
    CreateDynamicObject(3578,2312.30004883,1383.50000000,10.60000038,0.00000000,0.00000000,180.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (2)
    CreateDynamicObject(983,2302.10009766,1520.00000000,10.69999981,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit3) (1)
    CreateDynamicObject(983,2298.89990234,1523.19995117,10.69999981,0.00000000,0.00000000,89.99499512, -1, -1, -1, 300); //object(fenceshit3) (6)
    CreateDynamicObject(18275,2312.60009766,1514.80004883,12.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cw2_mtbfinish) (1)
    CreateDynamicObject(18275,2305.60009766,1514.80004883,12.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cw2_mtbfinish) (2)
    CreateDynamicObject(983,2316.19995117,1518.30004883,10.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit3) (7)
    CreateDynamicObject(983,2316.19995117,1519.90002441,10.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(fenceshit3) (8)
    CreateDynamicObject(983,2319.39990234,1523.19995117,10.50000000,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(fenceshit3) (9)
    CreateDynamicObject(1237,2316.39990234,1514.80004883,9.80000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (12)
    CreateDynamicObject(1262,2309.80004883,1515.30004883,14.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (1)
    CreateDynamicObject(1262,2309.30004883,1515.30004883,14.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (2)
    CreateDynamicObject(1262,2308.80004883,1515.30004883,14.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (3)
    CreateDynamicObject(1262,2302.69995117,1515.30004883,14.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (4)
    CreateDynamicObject(1262,2315.69995117,1515.30004883,14.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(mtraffic4) (5)
    CreateDynamicObject(1215,2312.39990234,1384.09997559,10.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (1)
    CreateDynamicObject(1215,2297.19995117,1384.00000000,10.39999962,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (2)
    CreateDynamicObject(1238,2309.10009766,1516.00000000,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (1)
    CreateDynamicObject(1238,2309.19995117,1517.40002441,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (2)
    CreateDynamicObject(1238,2309.30004883,1518.80004883,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (3)
    CreateDynamicObject(1238,2309.39990234,1520.09997559,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (4)
    CreateDynamicObject(1238,2309.50000000,1521.40002441,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (5)
    CreateDynamicObject(1238,2309.60009766,1522.69995117,10.10000038,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (6)
    CreateDynamicObject(3578,2302.80004883,1502.50000000,17.00000000,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (3)
    CreateDynamicObject(3578,2312.19995117,1502.30004883,17.00000000,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (4)
    CreateDynamicObject(3578,2302.30004883,1404.19995117,23.39999962,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (5)
    CreateDynamicObject(3578,2311.60009766,1404.00000000,23.39999962,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (6)
    CreateDynamicObject(3578,2312.30004883,1502.30004883,29.79999924,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (7)
    CreateDynamicObject(3578,2303.19995117,1502.50000000,29.79999924,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (8)
    CreateDynamicObject(3578,2311.69995117,1404.09997559,36.20000076,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (9)
    CreateDynamicObject(3578,2302.69995117,1404.30004883,36.20000076,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (10)
    CreateDynamicObject(3578,2351.60009766,1427.59997559,42.59999847,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (11)
    CreateDynamicObject(3578,2341.39990234,1427.80004883,42.59999847,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (12)
    CreateDynamicObject(3578,2303.30004883,1428.40002441,42.59999847,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (13)
    CreateDynamicObject(3578,2313.60009766,1428.19995117,42.59999847,0.00000000,0.00000000,178.99475098, -1, -1, -1, 300); //object(dockbarr1_la) (14)
    CreateDynamicObject(18275,2322.19995117,1428.30004883,44.09999847,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cw2_mtbfinish) (3)
    CreateDynamicObject(18275,2332.69995117,1428.19995117,44.09999847,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cw2_mtbfinish) (4)
    CreateDynamicObject(1238,2312.50000000,1394.80004883,10.30000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (7)
    CreateDynamicObject(1238,2315.00000000,1392.59997559,10.30000019,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(trafficcone) (8)
    CreateDynamicObject(983,2326.00000000,1428.59997559,42.50000000,90.00000000,0.00000000,268.00000000, -1, -1, -1, 300); //object(fenceshit3) (10)
    CreateDynamicObject(983,2328.60009766,1428.59997559,42.50000000,90.00000000,0.00000000,267.99499512, -1, -1, -1, 300); //object(fenceshit3) (11)
    CreateDynamicObject(983,2327.30004883,1428.59997559,42.50000000,90.00000000,0.00000000,267.99499512, -1, -1, -1, 300); //object(fenceshit3) (12)
    CreateDynamicObject(1215,2337.80004883,1427.90002441,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (3)
    CreateDynamicObject(1215,2340.19995117,1427.80004883,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (4)
    CreateDynamicObject(1215,2342.50000000,1427.80004883,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (5)
    CreateDynamicObject(1215,2344.50000000,1427.80004883,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (6)
    CreateDynamicObject(1215,2346.69995117,1427.69995117,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (7)
    CreateDynamicObject(1215,2348.80004883,1427.69995117,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (8)
    CreateDynamicObject(1215,2351.10009766,1427.69995117,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (9)
    CreateDynamicObject(1215,2353.50000000,1427.59997559,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (10)
    CreateDynamicObject(1215,2356.50000000,1427.50000000,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (11)
    CreateDynamicObject(1215,2315.69995117,1428.19995117,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (12)
    CreateDynamicObject(1215,2313.30004883,1428.19995117,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (13)
    CreateDynamicObject(1215,2311.10009766,1428.19995117,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (14)
    CreateDynamicObject(1215,2308.89990234,1428.30004883,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (15)
    CreateDynamicObject(1215,2306.60009766,1428.40002441,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (16)
    CreateDynamicObject(1215,2304.50000000,1428.40002441,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (17)
    CreateDynamicObject(1215,2301.39990234,1428.50000000,43.90000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(bollardlight) (18)
    CreateDynamicObject(13363,2341.60009766,1415.80004883,42.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(ce_photoblock) (1)
    CreateDynamicObject(12951,2304.39990234,1423.30004883,41.79999924,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(sw_shopflat01) (1)
    CreateDynamicObject(12951,2304.00000000,1406.90002441,41.79999924,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(sw_shopflat01) (2)
    CreateDynamicObject(8167,2309.89990234,1397.90002441,43.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(apgate1_vegs01) (1)
    CreateDynamicObject(8167,2309.89990234,1390.50000000,43.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(apgate1_vegs01) (2)
    CreateDynamicObject(8167,2309.89990234,1386.80004883,43.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(apgate1_vegs01) (3)
//Парковка LV (конец)

//Автосалон SF (начало)
    CreateDynamicObject(1459,-1633.80004883,579.50000000,40.00000000,0.00000000,0.00000000,314.00000000, -1, -1, -1, 300); //object(dyn_roadbarrier_6) (2)
    CreateDynamicObject(10975,-2039.09997559,263.89999390,43.50000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(shoppie6_sfs01) (1)
    CreateDynamicObject(3749,-2004.69995117,307.29998779,39.79999924,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(clubgate01_lax) (1)
    CreateDynamicObject(979,-1991.80004883,310.60000610,35.00000000,0.00000000,0.00000000,18.00000000, -1, -1, -1, 300); //object(sub_roadleft) (2)
    CreateDynamicObject(979,-1982.80004883,311.10000610,35.00000000,0.00000000,0.00000000,347.99560547, -1, -1, -1, 300); //object(sub_roadleft) (3)
    CreateDynamicObject(979,-2018.50000000,307.70001221,35.22999954,0.00000000,0.00000000,17.99560547, -1, -1, -1, 300); //object(sub_roadleft) (4)
    CreateDynamicObject(3749,-2006.69995117,118.69999695,32.40000153,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(clubgate01_lax) (2)
    CreateDynamicObject(979,-2020.59997559,118.59999847,27.50000000,0.00000000,0.00000000,157.99194336, -1, -1, -1, 300); //object(sub_roadleft) (5)
    CreateDynamicObject(3749,-1998.59997559,106.90000153,32.40000153,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(clubgate01_lax) (3)
    CreateDynamicObject(979,-1992.50000000,97.19999695,27.50000000,0.00000000,0.00000000,177.98889160, -1, -1, -1, 300); //object(sub_roadleft) (6)
    CreateDynamicObject(979,-1983.40002441,96.90000153,27.50000000,0.00000000,0.00000000,177.98498535, -1, -1, -1, 300); //object(sub_roadleft) (7)
    CreateDynamicObject(979,-1978.59997559,101.40000153,27.50000000,0.00000000,0.00000000,267.98400879, -1, -1, -1, 300); //object(sub_roadleft) (8)
    CreateDynamicObject(979,-1978.40002441,106.50000000,27.50000000,0.00000000,0.00000000,267.98400879, -1, -1, -1, 300); //object(sub_roadleft) (9)
    CreateDynamicObject(11417,-2020.80004883,195.89999390,31.79999924,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(xenonsign2_sfse) (1)
    CreateDynamicObject(979,-2048.60009766,118.69999695,28.79999924,0.00000000,0.00000000,177.98400879, -1, -1, -1, 300); //object(sub_roadleft) (10)
    CreateDynamicObject(979,-2057.50000000,119.00000000,29.00000000,0.00000000,0.00000000,177.98400879, -1, -1, -1, 300); //object(sub_roadleft) (11)
    CreateDynamicObject(17575,-2003.69995117,367.00000000,37.70000076,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(burgho01_lae2) (1)
    CreateDynamicObject(17575,-2003.80004883,384.60000610,37.70000076,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(burgho01_lae2) (2)
    CreateDynamicObject(17575,-2003.69995117,402.29998779,37.70000076,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(burgho01_lae2) (3)
    CreateDynamicObject(17575,-2003.69995117,420.50000000,37.70000076,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(burgho01_lae2) (4)
    CreateDynamicObject(17575,-2003.80004883,438.20001221,37.70000076,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(burgho01_lae2) (5)
    CreateDynamicObject(978,-2011.89002441,355.70001221,35.00000000,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(sub_roadright) (2)
    CreateDynamicObject(978,-2011.90002441,347.60000610,35.00000000,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(sub_roadright) (3)
    CreateDynamicObject(978,-2011.89002441,339.29998779,35.00000000,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(sub_roadright) (4)
    CreateDynamicObject(978,-2011.90002441,334.50000000,35.00000000,0.00000000,0.00000000,270.00000000, -1, -1, -1, 300); //object(sub_roadright) (5)
    CreateDynamicObject(978,-2016.50000000,329.89999390,35.00000000,0.00000000,0.00000000,180.00000000, -1, -1, -1, 300); //object(sub_roadright) (6)
    CreateDynamicObject(1237,-2021.19995117,330.10000610,34.29999924,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(strtbarrier01) (1)
    CreateDynamicObject(672,-2014.59997559,333.29998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (1)
    CreateDynamicObject(672,-2014.40002441,339.79998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (2)
    CreateDynamicObject(672,-2014.50000000,344.29998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (3)
    CreateDynamicObject(672,-2014.40002441,349.29998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (4)
    CreateDynamicObject(672,-2014.30004883,353.89999390,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (5)
    CreateDynamicObject(672,-2013.69995117,454.50000000,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (6)
    CreateDynamicObject(672,-2013.50000000,464.70001221,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (7)
    CreateDynamicObject(672,-1994.69995117,453.39999390,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (8)
    CreateDynamicObject(672,-1994.80004883,462.29998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (9)
    CreateDynamicObject(672,-2013.09997559,476.39999390,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (10)
    CreateDynamicObject(672,-2013.19995117,488.70001221,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (11)
    CreateDynamicObject(672,-1994.80004883,470.79998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (12)
    CreateDynamicObject(672,-1995.09997559,478.29998779,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (13)
    CreateDynamicObject(672,-1995.00000000,486.50000000,34.20000076,0.00000000,0.00000000,94.02099609, -1, -1, -1, 300); //object(sm_veg_tree5) (14)
//Автосалон SF (конец)

//Пещера (начало)
   CreateDynamicObject(11496,-413.76501465,1235.61499023,0.16300011,0.00000000,0.00000000,186.00000000, -1, -1, -1, 300); //object(des_wjetty) (1)
   CreateDynamicObject(11496,-412.21301270,1221.03894043,0.13000000,0.00000000,0.00000000,185.99853516, -1, -1, -1, 300); //object(des_wjetty) (2)
   CreateDynamicObject(669,-412.95800781,1242.99804688,-1.00000000,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(sm_veg_tree4) (1)
   CreateDynamicObject(1225,-417.83599854,1242.40905762,0.76899999,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel4) (1)
   CreateDynamicObject(1225,-418.48699951,1242.04797363,0.76899999,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel4) (2)
   CreateDynamicObject(1225,-417.83099365,1241.69799805,0.76899999,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(barrel4) (3)
   CreateDynamicObject(2780,-394.97100830,1243.83703613,4.61399984,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cj_smoke_mach) (1)
   CreateDynamicObject(2780,-444.11700439,1442.86096191,19.23699951,0.00000000,0.00000000,0.00000000, -1, -1, -1, 300); //object(cj_smoke_mach) (2)
   CreateDynamicObject(3524,-399.76199341,1241.84094238,7.34800005,0.00000000,0.00000000,350.00000000, -1, -1, -1, 300); //object(skullpillar01_lvs) (1)
   CreateDynamicObject(3524,-393.42498779,1237.84802246,7.32700014,0.00000000,0.00000000,347.99487305, -1, -1, -1, 300); //object(skullpillar01_lvs) (2)
   CreateDynamicObject(3524,-452.13299561,1441.33203125,22.84499931,0.00000000,0.00000000,241.99194336, -1, -1, -1, 300); //object(skullpillar01_lvs) (3)
   CreateDynamicObject(3524,-447.93301392,1449.41101074,23.27400017,0.00000000,0.00000000,241.99035645, -1, -1, -1, 300); //object(skullpillar01_lvs) (4)
//Пещера (конец)

//Дрифт SF 2 (начало)
    CreateDynamicObject(987, -1474.59, 287.56, 52.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1474.57, 299.47, 52.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1474.55, 311.36, 52.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1474.53, 323.29, 52.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1474.54, 335.18, 52.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1474.60, 342.14, 52.81,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1474.55, 354.20, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1486.47, 354.19, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1504.90, 354.30, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1516.82, 354.34, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1528.70, 354.35, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1540.59, 354.41, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1552.59, 354.42, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1555.62, 354.38, 52.81,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.57, 354.45, 52.81,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.64, 342.49, 52.81,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.56, 330.51, 52.81,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.53, 318.57, 52.81,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.52, 306.64, 52.81,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.53, 299.38, 52.81,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1567.58, 287.40, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1555.62, 287.37, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1543.67, 287.36, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1531.76, 287.30, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1519.82, 287.33, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1508.01, 287.25, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1496.05, 287.25, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(987, -1486.33, 287.30, 52.81,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1498.39, 354.32, 53.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1498.39, 354.32, 54.42,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1498.39, 354.32, 55.47,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1498.39, 354.32, 56.54,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1498.39, 354.32, 57.56,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1504.83, 354.35, 53.35,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1504.83, 354.35, 54.46,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1504.83, 354.35, 55.49,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1504.83, 354.35, 56.59,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1504.83, 354.35, 57.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(10245, -1501.19, 366.78, 48.69,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(10245, -1500.87, 381.44, 40.85,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(10245, -1481.03, 361.21, 37.53,   0.00, 0.00, -135.00, -1, -1, -1, 300);
    CreateDynamicObject(10245, -1466.09, 361.44, 29.78,   0.00, 0.00, -135.00, -1, -1, -1, 300);
    CreateDynamicObject(8150, -1406.39, 335.08, 31.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(8150, -1342.93, 390.34, 31.09,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(8150, -1406.10, 446.83, 31.09,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3749, -1476.34, 447.38, 34.25,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(18768, -1476.66, 456.91, 29.32,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.45, 449.80, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.43, 456.17, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.47, 462.55, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.44, 468.93, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.41, 469.95, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.62, 473.15, 30.58,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1470.03, 473.15, 30.58,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1476.46, 473.12, 30.58,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1482.89, 473.11, 30.58,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1489.33, 473.07, 30.58,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1492.56, 469.90, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1492.56, 463.48, 30.58,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(18769, -1476.53, 431.11, 28.68,   4.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.60, 437.78, 29.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.59, 431.36, 29.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.59, 431.36, 30.53,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.60, 437.76, 30.53,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.47, 440.96, 30.53,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.47, 440.96, 29.25,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.25, 444.17, 29.26,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1460.25, 444.17, 30.52,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.37, 428.14, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1456.97, 428.17, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.45, 417.73, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1450.67, 417.74, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1479.41, 369.73, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1479.41, 369.73, 30.93,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1457.05, 417.76, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.64, 414.50, 29.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1444.40, 418.57, 29.70,   0.00, 0.00, 105.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1444.31, 428.94, 29.70,   0.00, 0.00, 105.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1438.35, 420.68, 29.70,   0.00, 0.00, 113.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1438.31, 431.06, 29.70,   0.00, 0.00, 113.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1432.65, 433.91, 29.70,   0.00, 0.00, 120.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1432.67, 423.52, 29.70,   0.00, 0.00, 120.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1427.23, 426.88, 29.70,   0.00, 0.00, 124.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1422.06, 430.70, 29.70,   0.00, 0.00, 129.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1427.45, 437.54, 29.70,   0.00, 0.00, 129.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1424.12, 442.69, 29.70,   0.00, 0.00, 165.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1417.08, 434.72, 29.70,   0.00, 0.00, 129.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1411.46, 436.74, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1405.06, 436.76, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1398.69, 436.77, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1382.71, 436.77, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1367.08, 435.25, 29.70,   0.00, 0.00, 62.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1361.38, 432.25, 29.70,   0.00, 0.00, 62.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1355.75, 429.20, 29.70,   0.00, 0.00, 62.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.88, 424.53, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.87, 418.14, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.87, 411.74, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.90, 405.35, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.87, 398.97, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.88, 392.57, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.89, 386.17, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.86, 379.77, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1356.09, 376.56, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1362.46, 376.53, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.81, 366.59, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1356.08, 369.77, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1365.64, 373.36, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1359.21, 366.54, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1365.65, 366.99, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1365.67, 360.60, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1359.17, 360.14, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.82, 360.22, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1365.64, 354.21, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1359.16, 353.77, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1352.82, 353.77, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1356.06, 350.60, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1368.87, 351.02, 29.70,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1384.89, 350.98, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1410.54, 350.95, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1436.18, 350.93, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.44, 356.51, 29.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.48, 350.14, 29.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.41, 343.85, 29.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1463.47, 337.47, 29.68,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1446.69, 365.82, 29.68,   0.00, 0.00, -46.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1461.56, 365.82, 29.68,   0.00, 0.00, -33.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1457.44, 370.70, 29.68,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1452.76, 375.03, 29.68,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1442.08, 370.22, 29.68,   0.00, 0.00, -46.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1448.10, 379.44, 29.68,   0.00, 0.00, -46.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1444.69, 382.70, 29.68,   0.00, 0.00, -46.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1439.20, 384.86, 29.68,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1436.62, 372.40, 29.68,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1430.25, 372.39, 29.68,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1432.79, 384.89, 29.68,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1426.42, 384.87, 29.68,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1414.30, 372.47, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1410.43, 384.83, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(982, -1388.72, 372.50, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1397.65, 388.06, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1375.89, 375.77, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1375.92, 388.52, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1375.92, 394.93, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1375.96, 401.32, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1388.89, 405.27, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1410.46, 391.32, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1409.92, 405.28, 29.69,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1435.07, 392.03, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1435.04, 393.33, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1435.05, 394.62, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1435.04, 395.89, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1435.00, 397.14, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1434.99, 398.43, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1434.92, 399.69, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1434.97, 400.93, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1434.98, 402.18, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1434.98, 403.43, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(982, -1434.95, 404.66, 31.38,   11.00, 90.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(983, -1375.99, 402.09, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1466.79, 417.73, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1466.79, 417.73, 30.15,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1466.48, 428.00, 28.99,   0.00, 0.00, 0.30, -1, -1, -1, 300);
CreateDynamicObject(1237, -1466.48, 428.00, 30.04,   0.00, 0.00, 0.30, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.38, 417.74, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 428.25, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1435.48, 432.49, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1429.85, 425.07, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1425.00, 439.65, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1423.21, 445.97, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1414.54, 436.72, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1369.95, 436.62, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1353.14, 427.65, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1353.04, 376.73, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1352.85, 369.75, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1359.26, 369.66, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1365.79, 376.56, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1365.62, 350.99, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1359.18, 350.76, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1352.90, 350.56, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(1237, -1448.97, 351.01, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1463.27, 359.54, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1463.22, 363.28, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1448.92, 363.62, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1459.88, 368.42, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1439.71, 372.34, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1442.43, 385.00, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1397.74, 384.90, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1397.78, 391.19, 28.99,   0.00, 0.00, 3.78, -1, -1, -1, 300);
CreateDynamicObject(1237, -1422.88, 405.23, 28.99,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1423.33, 391.30, 28.99,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 33.51,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 32.46,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 31.60,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 30.80,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 30.02,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 29.28,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.57, 391.33, 28.81,   0.00, 0.00, 3.96, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 33.51,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 32.59,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 31.71,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 30.88,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 29.99,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 29.13,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(1237, -1447.43, 405.33, 28.54,   0.00, 0.00, 4.02, -1, -1, -1, 300);
CreateDynamicObject(18646, -1447.43, 405.29, 34.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18646, -1447.56, 391.29, 34.80,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(18850, -1493.60, 310.06, 48.06,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(10245, -1483.58, 335.29, 55.32,   0.00, 0.00, -47.00, -1, -1, -1, 300);
CreateDynamicObject(19129, -1476.58, 379.47, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(19129, -1476.43, 419.28, 29.07,   0.00, 0.00, -0.24, -1, -1, -1, 300);
CreateDynamicObject(19129, -1486.32, 419.32, 31.63,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(19129, -1486.37, 399.35, 31.63,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(19129, -1486.42, 379.39, 31.63,   90.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(700, -1466.11, 439.66, 29.21,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(700, -1465.73, 434.15, 29.21,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(700, -1465.85, 429.29, 29.21,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(700, -1465.99, 416.94, 29.21,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(700, -1455.28, 416.63, 29.21,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(700, -1454.43, 429.33, 29.21,   0.00, 0.00, -0.54, -1, -1, -1, 300);
CreateDynamicObject(700, -1441.57, 430.74, 29.21,   0.00, 0.00, -0.54, -1, -1, -1, 300);
CreateDynamicObject(700, -1438.18, 419.95, 29.21,   0.00, 0.00, -0.54, -1, -1, -1, 300);
CreateDynamicObject(8171, -1410.84, 352.95, 29.11,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, -1412.41, 390.60, 29.11,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(8171, -1410.72, 428.91, 29.11,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1413.29, 435.30, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1398.29, 435.40, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1384.12, 435.43, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1371.42, 435.36, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1353.93, 425.76, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1354.06, 410.20, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1354.06, 395.16, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1354.19, 378.09, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1364.69, 377.80, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1355.98, 368.27, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1355.93, 360.06, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1356.05, 352.24, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1368.32, 352.10, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1384.02, 352.04, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1398.48, 352.10, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1412.79, 352.08, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1429.32, 351.97, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1447.05, 352.03, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1464.46, 337.33, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1464.47, 344.29, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1464.50, 350.86, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1464.59, 356.67, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1464.63, 365.77, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1457.60, 373.47, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1450.19, 380.08, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1443.58, 386.87, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1443.55, 389.04, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1435.02, 388.91, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1426.82, 389.04, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1418.02, 388.69, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1410.22, 389.06, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1402.43, 389.26, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1434.98, 386.77, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1426.78, 386.88, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1418.04, 386.87, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1410.23, 386.90, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(718, -1402.46, 387.13, 28.86,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3443, -1391.84, 421.73, 32.00,   0.00, 0.00, -90.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1371.23, 426.76, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1371.76, 418.94, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1371.54, 411.31, 28.98,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(716, -1379.01, 408.01, 28.92,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1411.15, 417.60, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1411.34, 407.90, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1407.71, 390.50, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1427.24, 390.51, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1407.82, 386.45, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1427.44, 386.23, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1429.63, 371.66, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1410.00, 371.67, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1390.52, 371.64, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1375.41, 371.63, 30.62,   0.00, 0.00, 0.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1366.87, 360.84, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1357.61, 360.24, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1356.17, 360.22, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1354.13, 360.23, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1358.65, 360.26, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1366.92, 382.06, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1354.12, 386.42, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1354.11, 405.99, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3660, -1354.10, 417.95, 30.62,   0.00, 0.00, 90.00, -1, -1, -1, 300);
CreateDynamicObject(3761, -1374.08, 432.24, 31.09,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3761, -1374.22, 424.75, 31.09,   0.00, 0.00, 0.54, -1, -1, -1, 300);
    CreateDynamicObject(3763, -1364.10, 409.28, 62.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1356.99, 423.60, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1356.98, 415.02, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1356.95, 406.42, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1356.99, 397.87, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1356.97, 389.29, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1356.96, 380.75, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1369.87, 366.14, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1369.77, 355.60, 29.95,   0.00, 0.00, 180.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1373.43, 376.85, 29.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1373.45, 385.42, 29.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1373.46, 394.04, 29.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3819, -1373.45, 402.63, 29.95,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1371.23, 407.32, 29.29,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1370.85, 398.29, 29.29,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1370.91, 389.74, 29.29,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1370.89, 381.22, 29.29,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1370.84, 372.59, 29.29,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3281, -1448.83, 358.26, 29.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(3281, -1448.86, 361.85, 29.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(3281, -1448.83, 354.69, 29.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(3281, -1448.87, 352.87, 29.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(3281, -1463.28, 361.31, 29.79,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(3287, -1470.85, 344.05, 33.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3287, -1470.46, 354.45, 33.69,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(11417, -1489.37, 457.39, 46.67,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(3443, -1456.20, 402.70, 32.00,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.57, 372.97, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.54, 379.35, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.56, 385.73, 29.70,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.54, 385.72, 30.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.54, 385.72, 32.16,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(983, -1466.55, 379.33, 30.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(19129, -1505.69, 446.22, 41.59,   0.00, 0.00, -0.24, -1, -1, -1, 300);
    CreateDynamicObject(19129, -1496.95, 426.76, 41.51,   0.00, 0.00, -0.12, -1, -1, -1, 300);
    CreateDynamicObject(3443, -1506.31, 440.12, 44.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(19129, -1514.33, 426.86, 41.52,   0.00, 0.00, -0.12, -1, -1, -1, 300);
    CreateDynamicObject(19129, -1514.41, 407.11, 41.33,   0.00, 0.00, -0.06, -1, -1, -1, 300);
    CreateDynamicObject(19129, -1496.97, 407.08, 41.32,   0.00, 0.00, -0.06, -1, -1, -1, 300);
    CreateDynamicObject(700, -1493.96, 397.03, 41.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1517.71, 396.99, 41.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1510.73, 397.06, 41.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1502.42, 396.96, 41.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1498.00, 396.85, 41.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(700, -1514.39, 397.02, 41.44,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1466.51, 427.94, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1466.89, 417.80, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1447.51, 417.85, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1447.44, 428.26, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1429.94, 425.05, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1435.52, 432.37, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1424.98, 439.62, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1423.23, 445.92, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1414.63, 436.73, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1398.64, 436.75, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1384.20, 436.76, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1369.97, 436.71, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1353.21, 427.76, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1352.89, 414.93, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1352.84, 402.30, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1352.84, 389.33, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1352.96, 376.67, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1352.78, 369.69, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1359.18, 369.63, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1365.63, 376.59, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1352.80, 350.60, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1365.70, 350.88, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1359.28, 350.61, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1375.40, 350.96, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1391.51, 350.95, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1405.80, 350.98, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1420.75, 350.96, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1438.85, 350.97, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1449.06, 350.92, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1449.06, 363.71, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1439.91, 372.42, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1442.45, 384.72, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1459.78, 368.44, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1463.23, 359.53, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1463.14, 363.25, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1397.77, 391.25, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1397.70, 384.88, 31.24,   0.00, 0.00, 1.02, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1423.22, 391.33, 31.24,   0.00, 0.00, 1.02, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1422.76, 405.28, 31.24,   0.00, 0.00, 1.02, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1447.32, 405.33, 36.70,   0.00, 0.00, 1.02, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1447.52, 391.28, 36.70,   0.00, 0.00, 1.02, -1, -1, -1, 300);
    CreateDynamicObject(1255, -1421.79, 426.86, 29.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1255, -1421.83, 424.92, 29.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1255, -1421.72, 428.63, 29.72,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1257, -1433.06, 436.22, 30.29,   0.00, 0.00, 120.00, -1, -1, -1, 300);
    CreateDynamicObject(1280, -1404.11, 425.90, 29.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1280, -1404.15, 429.78, 29.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1280, -1404.11, 433.94, 29.41,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1281, -1411.73, 421.53, 29.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1281, -1416.94, 424.99, 29.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1281, -1410.34, 427.91, 29.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1281, -1414.93, 432.36, 29.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1281, -1408.34, 434.46, 29.90,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1346, -1400.77, 424.39, 30.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1443, -1400.86, 424.33, 32.38,   0.00, 0.00, 273.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1410.95, 421.89, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1410.97, 421.59, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1410.78, 421.78, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1409.79, 427.80, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1416.43, 424.89, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1416.28, 425.13, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1417.29, 424.68, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1543, -1416.95, 424.72, 29.87,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1544, -1417.90, 425.03, 29.89,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1544, -1417.83, 424.87, 29.89,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1550, -1413.51, 422.34, 29.43,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1583, -1393.81, 419.75, 30.16,   0.00, 0.00, -90.00, -1, -1, -1, 300);
    CreateDynamicObject(1597, -1426.92, 420.29, 31.61,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1598, -1420.63, 418.71, 29.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1598, -1419.78, 418.72, 29.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1598, -1417.47, 418.74, 29.45,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1676, -1418.89, 408.13, 30.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1676, -1411.09, 408.17, 30.63,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2858, -1414.48, 432.38, 29.92,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2858, -1415.63, 432.37, 29.92,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2896, -1428.30, 422.67, 29.64,   0.00, 0.00, 90.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1423.46, 424.24, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1419.41, 424.23, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1415.38, 424.22, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1411.26, 424.21, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1407.35, 424.22, 29.11,   0.00, 0.00, 0.12, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1406.35, 424.21, 29.11,   0.00, 0.00, 0.12, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1410.38, 429.64, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1406.34, 429.62, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1414.47, 429.63, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1406.29, 433.99, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1410.11, 433.96, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1413.15, 433.94, 29.11,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1415.71, 433.31, 29.11,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1419.22, 430.21, 29.11,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1422.95, 426.78, 29.11,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1417.69, 427.56, 29.11,   0.00, 0.00, -47.00, -1, -1, -1, 300);
    CreateDynamicObject(1237, -1453.89, 428.13, 28.99,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(1232, -1453.81, 428.15, 31.24,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1483.64, 406.85, 29.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1483.63, 402.30, 29.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1483.65, 396.96, 29.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
    CreateDynamicObject(2898, -1483.63, 391.73, 29.07,   0.00, 0.00, 0.00, -1, -1, -1, 300);
//Дрифт SF 2 (конец)

//Stunt LS (начало)
CreateDynamicObject(9833, 1903.18506, -2291.19189, 9.29900,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
CreateDynamicObject(9833, 1921.51904, -2289.32202, 9.34800,   0.00000, 0.00000, 5.99854, -1, -1, -1, 300);
CreateDynamicObject(9833, 1918.17200, -2274.20093, 9.32400,   0.00000, 0.00000, 5.99854, -1, -1, -1, 300);
CreateDynamicObject(9833, 1901.90002, -2277.44702, 9.34900,   0.00000, 0.00000, 5.99854, -1, -1, -1, 300);
CreateDynamicObject(9833, 1917.86694, -2261.51099, 9.32400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(9833, 1904.08704, -2261.36011, 9.34900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3524, 1903.68005, -2269.38794, 15.43200,   0.00000, 0.00000, 88.75000, -1, -1, -1, 300);
CreateDynamicObject(3524, 1903.40698, -2284.13501, 15.43200,   0.00000, 0.00000, 88.74756, -1, -1, -1, 300);
CreateDynamicObject(3524, 1919.14001, -2273.96704, 15.43200,   0.00000, 0.00000, 272.74756, -1, -1, -1, 300);
CreateDynamicObject(3524, 1919.87402, -2283.91089, 15.43200,   0.00000, 0.00000, 272.74658, -1, -1, -1, 300);
CreateDynamicObject(8483, 1893.06104, -2275.22412, 18.25300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8483, 1891.60596, -2291.72510, 18.25300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8483, 1932.48499, -2256.94507, 18.20300,   0.00000, 0.00000, 180.25000, -1, -1, -1, 300);
CreateDynamicObject(8483, 1932.98096, -2274.14307, 18.30300,   0.00000, 0.00000, 179.99854, -1, -1, -1, 300);
CreateDynamicObject(8483, 1933.66199, -2292.39795, 18.12800,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(8483, 1913.71301, -2249.08594, 18.45300,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(8483, 1894.46301, -2258.03906, 18.37800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1927.97498, -2281.41797, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1926.58105, -2261.52490, 14.30300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1926.82397, -2267.86401, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1902.23401, -2254.41797, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1922.78406, -2253.37598, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1900.84900, -2264.31006, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1898.87000, -2270.54199, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1900.04602, -2281.08789, 14.86300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1897.80103, -2287.53394, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1897.86096, -2297.73193, 14.21300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(9833, 1910.94604, -2260.55493, 9.32400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(9833, 1919.70203, -2280.41699, 9.27400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(9833, 1903.35095, -2268.90405, 9.34900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 1908.52600, -2260.81006, 12.49900,   0.00000, 0.00000, 0.25000, -1, -1, -1, 300);
CreateDynamicObject(19129, 1926.05396, -2260.67212, 12.55500,   0.00000, 359.75000, 0.25000, -1, -1, -1, 300);
CreateDynamicObject(19129, 1923.44495, -2280.34399, 12.49400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19129, 1903.75000, -2280.31494, 12.48900,   0.00000, 0.00000, 0.25000, -1, -1, -1, 300);
CreateDynamicObject(18805, 1857.86499, -2458.96191, 12.10600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18805, 1705.45703, -2459.57007, 10.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19003, 1779.31396, -2460.47510, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19003, 1934.72302, -2450.99390, 12.53900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19003, 1946.43701, -2452.79712, 12.53900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19003, 1944.66992, -2464.56641, 12.53900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19003, 1937.36304, -2464.74097, 12.24500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19005, 1590.68945, -2459.48438, 16.02800,   2.24670, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19005, 1590.59399, -2439.55200, 33.53900,   32.00000, 0.00000, 0.25000, -1, -1, -1, 300);
CreateDynamicObject(19005, 1590.59204, -2433.48291, 59.16900,   69.99771, 0.00000, 0.24719, -1, -1, -1, 300);
CreateDynamicObject(19005, 1590.68396, -2443.54810, 83.21700,   74.00000, 180.00000, 180.24719, -1, -1, -1, 300);
CreateDynamicObject(18780, 1847.48401, -2596.28809, 14.92100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18780, 1933.23096, -2594.58911, 15.04700,   0.00000, 0.00000, 182.75000, -1, -1, -1, 300);
CreateDynamicObject(18833, 1889.91296, -2531.18408, 30.85200,   359.06116, 62.01447, 271.76599, -1, -1, -1, 300);
CreateDynamicObject(18985, 1890.65405, -2604.33398, 37.85200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18823, 1878.27795, -2670.83911, 35.29300,   83.67657, 341.52634, 152.36877, -1, -1, -1, 300);
CreateDynamicObject(18823, 1838.34399, -2673.29102, 35.83500,   293.19666, 299.73639, 351.85974, -1, -1, -1, 300);
CreateDynamicObject(18821, 1817.10596, -2643.78711, 59.67700,   15.19238, 326.69397, 277.76953, -1, -1, -1, 300);
CreateDynamicObject(18831, 1806.71594, -2628.36890, 90.07700,   358.82458, 54.01663, 123.61829, -1, -1, -1, 300);
CreateDynamicObject(18809, 1789.05701, -2596.81006, 90.57500,   65.30450, 283.21225, 105.26102, -1, -1, -1, 300);
CreateDynamicObject(18824, 1758.31396, -2564.46899, 83.45000,   74.79214, 156.51727, 98.74524, -1, -1, -1, 300);
CreateDynamicObject(18809, 1714.80200, -2573.05200, 70.41800,   64.41016, 132.72418, 163.57056, -1, -1, -1, 300);
CreateDynamicObject(18824, 1672.85901, -2578.00391, 53.37800,   64.11432, 336.56244, 89.30685, -1, -1, -1, 300);
CreateDynamicObject(18824, 1660.12500, -2542.37695, 36.95000,   64.77451, 19.05499, 314.64233, -1, -1, -1, 300);
CreateDynamicObject(18822, 1695.98901, -2530.42090, 22.32700,   78.00000, 0.00000, 254.00000, -1, -1, -1, 300);
CreateDynamicObject(18855, 1463.88794, -2421.05908, 17.52200,   90.00000, 180.00000, 89.99994, -1, -1, -1, 300);
CreateDynamicObject(18780, 1959.92505, -2360.93799, 24.12200,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1930.26294, -2465.61011, 15.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1930.00305, -2452.36792, 15.25300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1779.60840, -2451.83887, 14.48600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1779.81995, -2466.23291, 15.06100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1634.44104, -2452.99707, 14.22000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1634.62000, -2466.03394, 14.22000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, 1461.26697, -2559.62891, 13.20700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, 1461.26697, -2548.48389, 13.20700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, 1461.14404, -2537.25098, 13.17200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19122, 1461.14404, -2526.36890, 13.17200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3524, 1906.87903, -2260.49390, 15.44000,   0.00000, 0.00000, 38.74756, -1, -1, -1, 300);
CreateDynamicObject(3524, 1919.49805, -2260.55811, 15.48300,   0.00000, 0.00000, 328.74329, -1, -1, -1, 300);
CreateDynamicObject(19129, 1903.12695, -2292.35205, 12.50900,   0.00000, 0.00000, 0.24719, -1, -1, -1, 300);
CreateDynamicObject(19129, 1922.83801, -2292.33008, 12.50400,   0.00000, 0.00000, 0.24720, -1, -1, -1, 300);
CreateDynamicObject(18985, 2025.53894, -2621.94604, 17.57200,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(18985, 1925.85303, -2621.97607, 17.59700,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(18985, 1825.92603, -2621.82593, 17.57200,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(18855, 1745.21301, -2593.21411, 32.36400,   296.27765, 2.82437, 2.53290, -1, -1, -1, 300);
CreateDynamicObject(18984, 1825.83496, -2564.78198, 45.74000,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
CreateDynamicObject(18821, 1897.18701, -2564.31299, 53.82700,   359.78671, 295.24918, 181.54771, -1, -1, -1, 300);
CreateDynamicObject(18824, 1939.71204, -2563.94092, 73.51900,   0.00000, 94.99994, 179.75000, -1, -1, -1, 300);
CreateDynamicObject(18809, 1981.79700, -2564.11206, 53.80100,   0.00000, 310.25000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18822, 2021.40198, -2564.07202, 26.87700,   0.00000, 292.74994, 359.99997, -1, -1, -1, 300);
CreateDynamicObject(19003, 1634.41895, -2466.47803, 12.51700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19003, 1631.31104, -2453.34497, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1847.01001, -2451.20703, 24.22700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1849.11902, -2466.74609, 24.26100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1708.71106, -2451.79004, 23.03300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3877, 1709.56104, -2467.39111, 23.14800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, 1897.78101, -2303.00098, 13.11100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, 1899.60803, -2303.04395, 13.11100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, 1926.71899, -2302.93701, 13.11100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19125, 1928.42200, -2302.82202, 13.11100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1578.35400, -2487.28101, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1577.63574, -2507.18945, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1452.13904, -2482.00391, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1452.03894, -2502.18604, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1637.01501, -2443.56396, 12.59100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1622.60205, -2444.46997, 12.77300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1622.54004, -2469.62793, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1639.00098, -2469.35791, 13.59300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18782, 1831.73096, -2535.13403, 13.88300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18782, 1775.67505, -2561.29712, 13.88300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1855.59998, -2512.70605, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1817.34705, -2512.15405, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1785.47998, -2512.28711, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1755.43701, -2512.49707, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1725.45300, -2512.32202, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1694.09900, -2512.41309, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1665.87598, -2512.44702, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1639.82300, -2512.28589, 12.55500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1611.96899, -2512.59497, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18783, 1977.40405, -2543.14209, 15.03900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18786, 1997.47498, -2543.11011, 15.04700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18786, 1957.38098, -2543.19312, 15.04700,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(18786, 1977.35803, -2523.15308, 15.04700,   0.00000, 0.00000, 89.99451, -1, -1, -1, 300);
CreateDynamicObject(3505, 1966.34705, -2531.38110, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1988.07605, -2531.70898, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18786, 1977.37195, -2563.15088, 15.04700,   0.00000, 0.00000, 269.99451, -1, -1, -1, 300);
CreateDynamicObject(3505, 1966.89795, -2553.79297, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1988.09900, -2554.24805, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1480.40295, -2577.72803, 13.23000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1454.78796, -2577.75098, 13.23000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1505.99597, -2577.71899, 13.23000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(978, 1454.26294, -2578.12305, 13.38700,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(978, 1476.57800, -2577.95703, 13.38700,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(978, 1497.27698, -2577.95605, 13.38700,   0.00000, 0.00000, 179.99451, -1, -1, -1, 300);
CreateDynamicObject(3505, 1518.88098, -2577.46094, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1441.70605, -2577.37793, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1460.29395, -2560.69409, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3505, 1460.05505, -2525.08398, 12.54700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//Stunt LS (конец)

//Дрифт-спираль (начало)
ObjGam[26] = CreateObject(8040, -2970.482, -5914.829, 590.3666,   0.00000, 0.00000, -91.00000);

CreateDynamicObject(8838, -2971.74, -6004.88, 588.075,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2976.74, -6004.93, 588.08,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2966.74, -6004.82, 588.08,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(3437, -2977.558, -5989.358, 595.47,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
CreateDynamicObject(3437, -2966.037, -5989.199, 595.47,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
//CreateDynamicObject(8040, -2970.482, -5914.829, 590.3666,   0.00000, 0.00000, -91.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2971.53, -5971.44, 588.08,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2976.91, -6033.96, 578.15,   0.00000, 37.77230, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2981.43, -6039.81, 574.15,   0.00000, 38.00000, -74.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2984.99, -6046.59, 570.15,   0.00000, 38.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2987.773, -6054.241, 566.15,   0.00000, 38.00000, -54.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2988.8, -6061.81, 562.15,   0.00000, 38.00000, -46.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2988.6, -6069.46, 558.15,   0.00000, 38.00000, -34.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2987.54, -6076.89, 554.15,   0.00000, 38.00000, -24.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2985.01, -6083.91, 550.15,   0.00000, 38.00000, -16.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2981.7, -6090.48, 546.15,   0.00000, 38.00000, -8.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2977.23, -6096.33, 542.15,   0.00000, 38.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2972.36, -6101.77, 538.15,   0.00000, 38.00000, 8.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2966.77, -6106.3, 534.15,   0.00000, 38.00000, 14.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2960.54, -6110.07, 530.15,   0.00000, 38.00000, 22.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2953.64, -6112.9, 526.15,   0.00000, 38.00000, 28.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2946.36, -6115.05, 522.15,   0.00000, 38.00000, 36.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2938.97, -6116.03, 518.15,   0.00000, 38.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2931.73, -6115.74, 514.15,   0.00000, 38.00000, 52.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2924.55, -6114.52, 510.15,   0.00000, 38.00000, 62.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2917.28, -6112.39, 506.15,   0.00000, 38.00000, 68.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2910.57, -6109.28, 502.15,   0.00000, 38.00000, 78.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2904.38, -6105.18, 498.15,   0.00000, 38.00000, 86.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2898.73, -6100.34, 494.15,   0.00000, 38.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2893.98, -6094.96, 490.15,   0.00000, 38.00000, 102.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2889.885, -6088.711, 486.15,   0.00000, 38.00000, 106.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2886.78, -6082.37, 482.15,   0.00000, 38.00000, 118.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2884.7, -6075.41, 478.15,   0.00000, 38.00000, 126.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2883.62, -6068.33, 474.15,   0.00000, 38.00000, 134.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2883.7, -6061.13, 470.15,   0.00000, 38.00000, 140.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2884.51, -6053.82, 466.15,   0.00000, 38.00000, 144.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2885.92, -6046.86, 462.15,   0.00000, 38.00000, 154.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2888.56, -6040.34, 458.15,   0.00000, 38.00000, 160.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2891.91, -6034.08, 454.15,   0.00000, 38.00000, 166.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2895.78, -6028.79, 450.15,   0.00000, 38.00000, -182.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2900.51, -6023.56, 446.15,   0.00000, 38.00000, -171.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2906.34, -6019.23, 442.15,   0.00000, 38.00000, -162.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2912.88, -6015.98, 438.15,   0.00000, 38.00000, -154.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2919.7, -6013.81, 434.15,   0.00000, 38.00000, -146.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2926.744, -6012.659, 430.15,   0.00000, 38.00000, -137.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2934.12, -6012.75, 426.15,   0.00000, 38.00000, -127.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2941.35, -6014.17, 422.15,   0.00000, 38.00000, -115.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2947.56, -6017.09, 418.15,   0.00000, 38.00000, -102.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2953.74, -6021.24, 414.15,   0.00000, 38.00000, -95.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2959.05, -6026.19, 410.15,   0.00000, 38.00000, -84.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2963.18, -6031.9, 406.15,   0.00000, 38.00000, -73.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2966.47, -6038.38, 402.15,   0.00000, 38.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2916.68, -6100.63, 259.53,   0.00000, 0.00000, -48.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2962.66, -6027.88, 270.15,   0.00000, 38.00000, -76.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2945.45, -6015.45, 282.15,   0.00000, 38.00000, -115.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2964.44, -6056.12, 259.58,   0.00000, 0.00000, -46.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2931.15, -6013.74, 290.15,   0.00000, 38.00000, -135.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2965.71, -6034.16, 266.15,   0.00000, 38.00000, -60.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2916.77, -6017.1, 298.15,   0.00000, 38.00000, -155.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2980.65, -6048.45, 266.15,   0.00000, 38.00000, -36.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2958.03, -6022.54, 274.15,   0.00000, 38.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2952.32, -6018.14, 278.15,   0.00000, 38.00000, -100.00000, -1, -1, -1, 300);
CreateDynamicObject(3437, -2945.45, -6059.46, 266.96,   0.00000, 0.00000, 38.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2968.74, -6045.13, 398.15,   0.00000, 38.00000, -50.00000, -1, -1, -1, 300);
CreateDynamicObject(3437, -2954.71, -6068.93, 266.96,   0.00000, 0.00000, 48.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2938.36, -6014.01, 286.15,   0.00000, 38.00000, -127.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2969.63, -6052.56, 394.15,   0.00000, 38.00000, -44.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2968.69, -6036.02, 266.15,   0.00000, 38.00000, -56.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2971.91, -6038.41, 266.15,   0.00000, 38.00000, -50.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2975.03, -6041.34, 266.15,   0.00000, 38.00000, -46.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2969.19, -6059.7, 390.15,   0.00000, 38.00000, -32.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2967.33, -6066.77, 386.15,   0.00000, 38.00000, -24.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2955.95, -6047.96, 259.57,   0.00000, 0.00000, -52.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2964.34, -6073.52, 382.15,   0.00000, 38.00000, -12.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2960.1, -6078.95, 378.15,   0.00000, 38.00000, -2.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2955, -6083.59, 374.15,   0.00000, 38.00000, 9.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2938.82, -6076.09, 259.53,   0.00000, 0.00000, -48.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2948.99, -6087.48, 370.15,   0.00000, 38.00000, -343.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2923.79, -6014.84, 294.15,   0.00000, 38.00000, -145.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2977.927, -6044.865, 266.15,   0.00000, 38.00000, -42.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2942.61, -6090.38, 366.15,   0.00000, 38.00000, -332.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2959.2, -6050.74, 259.55,   0.00000, 0.00000, -50.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2962.25, -6053.72, 259.56,   0.00000, 0.00000, -48.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2935.71, -6091.78, 362.15,   0.00000, 38.00000, -320.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2966.25, -6058.51, 259.57,   0.00000, 0.00000, -38.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2928.84, -6092.41, 358.15,   0.00000, 38.00000, -310.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2904.51, -6024.82, 306.15,   0.00000, 38.00000, -175.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2921.72, -6091.5, 354.15,   0.00000, 38.00000, -302.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2915.12, -6089.5, 350.15,   0.00000, 38.00000, -295.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2910.24, -6020.65, 302.15,   0.00000, 38.00000, -166.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2909.03, -6086.5, 346.15,   0.00000, 38.00000, -281.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2903.42, -6082.18, 342.15,   0.00000, 38.00000, -273.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2898.45, -6077.16, 338.15,   0.00000, 38.00000, -259.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2899.55, -6030.54, 310.15,   0.00000, 38.00000, -186.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2895, -6071.14, 334.15,   0.00000, 38.00000, -248.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2892.81, -6064.54, 330.15,   0.00000, 38.00000, -236.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2893.36, -6043.51, 318.15,   0.00000, 38.00000, -205.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2891.68, -6057.31, 326.15,   0.00000, 38.00000, -228.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2891.86, -6050.24, 322.15,   0.00000, 38.00000, -217.00000, -1, -1, -1, 300);
CreateDynamicObject(8838, -2896.06, -6036.78, 314.15,   0.00000, 38.00000, -200.00000, -1, -1, -1, 300);
CreateDynamicObject(8040, -2878.673, -6142.638, 261.8308,   0.00000, 0.00000, 132.00000, -1, -1, -1, 300);
//Дрифт-спираль (конец)

//Дрифт-восьмёрка (начало) - by EBGEHbI4)
CreateDynamicObject(1238, -2044.38367, -205.72964, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2044.05249, -206.50833, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2043.42285, -207.09596, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2042.47217, -207.56944, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2041.38306, -207.73181, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2040.56372, -207.56769, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2039.70435, -207.22359, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.99170, -206.39113, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.50623, -205.43025, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.33911, -204.59387, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.48657, -203.72079, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.94324, -202.64986, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2039.61719, -201.85287, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2040.55054, -201.42043, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2041.46863, -201.22919, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2042.55212, -201.53438, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2043.47900, -202.05029, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2044.10559, -202.74638, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2044.52441, -203.53554, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2044.71497, -204.61981, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2050.33936, -211.52399, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2048.29028, -213.36711, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2044.93750, -215.20416, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2041.02795, -215.72836, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.13904, -215.30672, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2035.31824, -213.86000, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2032.59094, -211.20662, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2030.84033, -207.94293, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2030.33105, -204.83620, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2030.73926, -201.87190, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2032.28271, -198.25375, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2034.95178, -195.41948, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2038.02686, -193.91670, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2041.05725, -193.35703, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2050.18701, -197.18921, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2045.05408, -194.02658, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2048.47827, -195.88889, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2065.31470, -201.00156, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2065.44360, -200.25768, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2065.93628, -199.19562, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2066.71509, -198.44304, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2067.62695, -198.00493, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2068.52148, -197.83823, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2069.61499, -197.99406, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2070.65210, -198.62357, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2071.27246, -199.19183, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2071.62988, -199.98253, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2071.76587, -201.16408, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2071.55762, -202.28352, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2071.09644, -203.02309, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2070.56738, -203.59708, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2069.56909, -204.13181, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2068.46948, -204.23366, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2067.55664, -204.07721, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2066.82568, -203.73517, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2066.01221, -202.99361, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2065.64526, -202.12798, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2059.45996, -194.62633, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2062.14795, -191.84897, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2065.17993, -190.35153, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2068.25659, -189.86362, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2072.30273, -190.46829, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2075.85571, -192.52405, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2077.75537, -194.60385, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2079.26074, -197.34361, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2079.81665, -201.57198, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2078.93823, -205.38379, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2077.30396, -208.03773, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2075.43750, -209.95383, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2071.90820, -211.68130, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2068.08032, -212.29791, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2065.11206, -211.72060, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2062.29004, -210.33444, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2059.45386, -208.09940, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.67578, -211.69644, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.57764, -214.87498, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.46411, -218.12871, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.35400, -221.34276, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.79248, -221.19957, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.71924, -217.98540, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.70825, -214.75769, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.63135, -211.59828, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2058.25220, -208.37907, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.81885, -195.97734, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.91040, -192.76907, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.86572, -189.41977, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.82935, -183.09431, 34.31664,   0.00000, 0.00000, 0.30000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.81250, -186.33238, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.90967, -179.86693, 34.31664,   0.00000, 0.00000, 0.30000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.63281, -194.41551, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.58789, -191.19368, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.47949, -184.88419, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.57227, -188.04497, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.48071, -181.72627, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.46875, -183.29930, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.45483, -180.05922, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.56689, -189.56776, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2043.08398, -193.64429, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2058.21387, -195.24628, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.78101, -194.34056, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.87817, -187.88683, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.90063, -191.09818, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.80371, -184.74046, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.83447, -181.43817, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.81836, -209.90457, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.68237, -213.19139, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.72559, -216.43201, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.77856, -219.61664, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.68945, -210.18427, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.58594, -213.35918, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.48218, -216.53416, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.39844, -219.73691, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.54053, -186.45631, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2057.62378, -192.73532, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2060.59937, -192.96159, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2063.52368, -190.98834, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2066.61670, -190.00328, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2070.19873, -190.04752, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2074.13989, -191.21895, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2079.76855, -199.57536, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2078.66772, -195.87560, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2076.82861, -193.42329, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2079.62158, -203.44305, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2078.43701, -206.79196, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2076.41675, -209.10988, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2073.79761, -211.14096, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2069.97070, -212.33856, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2066.50610, -212.18822, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2060.73657, -208.96593, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.19995, -210.21098, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2049.52710, -212.53560, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2046.85254, -214.43352, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2043.06946, -215.75415, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2039.49475, -215.60963, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2036.53064, -214.70526, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2033.78235, -212.60771, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2031.50159, -209.66141, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2030.38599, -206.36850, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2030.37646, -203.13568, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2031.41162, -200.04330, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2033.46350, -196.51634, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2036.58789, -194.34433, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2039.47095, -193.57349, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2046.88745, -194.66826, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1238, -2051.33179, -197.54384, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(19960, -2058.02515, -194.40402, 34.31295,   0.00000, 0.00000, 162.23993, -1, -1, -1, 300);
CreateDynamicObject(19966, -2057.49487, -180.06670, 34.31664,   0.00000, 0.00000, 181.44017, -1, -1, -1, 300);
CreateDynamicObject(19966, -2057.80347, -221.07724, 34.31664,   0.00000, 0.00000, 177.24016, -1, -1, -1, 300);
CreateDynamicObject(11387, -2072.19409, -145.44960, 37.63080,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(11391, -2089.74414, -137.68761, 35.50840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(11389, -2081.68799, -129.57390, 37.51640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(11388, -2081.82129, -129.59740, 41.08330,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1676, -2060.14526, -143.15680, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 300);
CreateDynamicObject(1676, -2060.05713, -140.36380, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 300);
CreateDynamicObject(1676, -2059.88306, -138.32750, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 300);
CreateDynamicObject(1676, -2059.93994, -135.74139, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 300);
CreateDynamicObject(11393, -2077.07983, -134.82730, 35.87380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(11360, -2072.05005, -125.81754, 36.33140,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(11359, -2086.05103, -145.68469, 36.34080,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//Дрифт-восьмёрка (конец) - by EBGEHbI4)

//трубы на ухе (начало)
CreateDynamicObject(18838, -182.34000, 1329.19995, 72.98000,   -97.00000, 0.00000, 2.40400, -1, -1, -1, 300);
CreateDynamicObject(18840, -153.21001, 1348.57996, 72.78000,   -92.03900, 0.00000, 139.84399, -1, -1, -1, 300);
CreateDynamicObject(18841, -112.42000, 1311.06995, 73.14070,   -87.15600, 0.00000, 187.61000, -1, -1, -1, 300);
CreateDynamicObject(18809, -180.59000, 1541.60999, 69.96000,   98.66300, 0.00000, 95.52100, -1, -1, -1, 300);
CreateDynamicObject(18842, -149.50000, 1323.46997, 73.13790,   -88.16700, 0.00000, 94.46500, -1, -1, -1, 300);
CreateDynamicObject(18842, -144.42999, 1288.71997, 73.25380,   -91.59900, 0.00000, 102.35100, -1, -1, -1, 300);
CreateDynamicObject(18842, -233.28000, 1368.12000, 73.63000,   0.00000, 89.46800, 111.05000, -1, -1, -1, 300);
CreateDynamicObject(18836, -216.66000, 1325.87000, 73.15000,   0.67400, 0.00000, 21.96100, -1, -1, -1, 300);
CreateDynamicObject(18840, -191.80000, 1285.37000, 72.75000,   270.32599, 0.00000, 63.53200, -1, -1, -1, 300);
CreateDynamicObject(18822, -29.66000, 1483.18994, 77.80000,   96.59600, 0.00000, 181.78000, -1, -1, -1, 300);
CreateDynamicObject(18822, -45.54000, 1440.72998, 83.43000,   97.11700, 0.00000, 137.28400, -1, -1, -1, 300);
CreateDynamicObject(18818, -132.82001, 1539.28003, 66.80000,   -92.40100, 0.00000, 7.63800, -1, -1, -1, 300);
CreateDynamicObject(18822, -209.42999, 1449.63000, 82.59000,   79.61000, 0.00000, 63.81900, -1, -1, -1, 300);
CreateDynamicObject(18822, -126.37000, 1499.55005, 69.62000,   84.83000, 0.00000, 15.69900, -1, -1, -1, 300);
CreateDynamicObject(19005, -216.96001, 1537.89001, 65.38000,   -19.76600, -3.00000, -86.00000, -1, -1, -1, 300);
CreateDynamicObject(18822, -163.78999, 1445.20996, 88.82000,   85.53200, 0.00000, 105.00000, -1, -1, -1, 300);
CreateDynamicObject(18826, -124.71000, 1446.58997, 92.38000,   96.24800, 0.00000, 216.67700, -1, -1, -1, 300);
CreateDynamicObject(18822, -86.05000, 1549.56006, 67.85000,   93.27300, 0.00000, 262.75500, -1, -1, -1, 300);
CreateDynamicObject(18826, -130.59000, 1429.81006, 71.75000,   93.97800, 0.00000, 270.63800, -1, -1, -1, 300);
CreateDynamicObject(18822, -99.26000, 1462.98999, 72.06000,   89.26500, 0.00000, 57.39800, -1, -1, -1, 300);
CreateDynamicObject(18836, -146.11000, 1396.38000, 72.05000,   -3.45400, 0.00000, 0.61000, -1, -1, -1, 300);
CreateDynamicObject(18826, -123.22000, 1408.76001, 92.34000,   96.43200, 0.00000, 34.53200, -1, -1, -1, 300);
CreateDynamicObject(18822, -45.70000, 1526.92004, 72.15000,   97.03900, 0.00000, 218.58200, -1, -1, -1, 300);
CreateDynamicObject(18824, -104.04000, 1400.59998, 71.34000,   93.75500, 0.00000, 41.40400, -1, -1, -1, 300);
CreateDynamicObject(18811, -84.69000, 1413.18994, 88.47200,   94.94700, 0.00000, 118.83300, -1, -1, -1, 300);
CreateDynamicObject(18824, -65.40000, 1397.89001, 70.94000,   87.38700, 0.00000, 130.34801, -1, -1, -1, 300);
CreateDynamicObject(18824, -60.64000, 1437.10999, 72.16000,   89.48200, 0.00000, 215.74100, -1, -1, -1, 300);
//трубы на ухе (конец)

//DM зона 8 (начало)
CreateDynamicObject(11088,11.39355469,1530.79785156,17.10690498,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(cf_ext_dem_sfs) (1)
CreateDynamicObject(11425,-24.13992882,1519.40429688,13.37168884,0.00000000,0.00000000,268.00000000,-1,-1,-1,500); //object(des_adobehooses1) (1)
CreateDynamicObject(11427,-59.27343750,1519.42480469,18.83986282,0.00000000,0.00000000,169.99694824,-1,-1,-1,500); //object(des_adobech) (1)
CreateDynamicObject(11440,-46.85805130,1498.24853516,11.12500954,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo1) (1)
CreateDynamicObject(11444,-32.66200256,1485.78649902,11.67500114,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo2) (1)
CreateDynamicObject(11425,-1.71582031,1483.81250000,13.37168884,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_adobehooses1) (2)
CreateDynamicObject(11428,-45.53079224,1535.68383789,17.65346909,0.00000000,0.00000000,129.99572754,-1,-1,-1,500); //object(des_indruin02) (1)
CreateDynamicObject(11440,-39.58090973,1513.20678711,11.13103104,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo1) (2)
CreateDynamicObject(11440,52.89167786,1501.13549805,11.10000992,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo1) (3)
CreateDynamicObject(11442,-17.90039825,1478.49487305,11.67500114,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo3) (1)
CreateDynamicObject(11445,40.55740738,1483.58935547,11.67500114,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo06) (1)
CreateDynamicObject(11492,48.60552597,1554.99243164,11.47500420,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_rshed1_) (1)
CreateDynamicObject(11459,61.71430969,1539.36999512,11.50602341,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo11) (1)
CreateDynamicObject(11457,51.78515625,1534.22851562,11.27500725,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo09) (1)
CreateDynamicObject(11440,22.22757149,1558.66735840,11.28103065,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo1) (4)
CreateDynamicObject(11442,-20.48148918,1568.88269043,11.62500191,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo3) (2)
CreateDynamicObject(3279,-28.39682579,1557.54248047,11.70000076,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (1)
CreateDynamicObject(3279,-60.76557159,1505.33789062,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (2)
CreateDynamicObject(3279,18.64076233,1504.20581055,11.76966381,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (3)
CreateDynamicObject(3279,-5.64424324,1486.77783203,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (4)
CreateDynamicObject(3279,66.15112305,1516.88757324,11.75000191,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (6)
CreateDynamicObject(3279,14.76146889,1550.64758301,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (7)
CreateDynamicObject(3279,-5.80990791,1572.52343750,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (8)
CreateDynamicObject(3279,-21.24704742,1603.67138672,24.71391487,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (9)
CreateDynamicObject(3279,23.27245522,1617.66064453,23.98921585,358.09793091,341.98974609,299.38174438,-1,-1,-1,500); //object(a51_spottower) (10)
CreateDynamicObject(3279,42.10429001,1598.32043457,27.29174042,0.00000000,0.00000000,62.00000000,-1,-1,-1,500); //object(a51_spottower) (11)
CreateDynamicObject(3279,-74.14198303,1573.16857910,20.07663345,0.00000000,0.00000000,50.00000000,-1,-1,-1,500); //object(a51_spottower) (12)
CreateDynamicObject(3279,-64.16227722,1608.24414062,21.68597603,12.00000000,0.00000000,100.00000000,-1,-1,-1,500); //object(a51_spottower) (13)
CreateDynamicObject(3279,95.37085724,1532.01867676,14.36106682,0.00000000,0.00000000,300.00000000,-1,-1,-1,500); //object(a51_spottower) (14)
CreateDynamicObject(3279,-29.48935699,1449.12023926,9.98191643,352.12231445,349.90374756,288.60198975,-1,-1,-1,500); //object(a51_spottower) (15)
CreateDynamicObject(3279,26.78252411,1446.37817383,11.11869812,0.00000000,342.00000000,290.00000000,-1,-1,-1,500); //object(a51_spottower) (16)
CreateDynamicObject(3279,73.21582031,1472.51562500,9.29774284,341.99890137,0.00000000,339.99938965,-1,-1,-1,500); //object(a51_spottower) (17)
CreateDynamicObject(3279,114.59971619,1581.14538574,28.50854683,24.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(a51_spottower) (18)
CreateDynamicObject(3279,91.98788452,1606.44238281,26.94906807,8.00000000,0.00000000,32.00000000,-1,-1,-1,500); //object(a51_spottower) (19)
CreateDynamicObject(11446,44.35117340,1564.66076660,11.60000229,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo07) (1)
CreateDynamicObject(11445,39.60933685,1570.75427246,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo06) (2)
CreateDynamicObject(11444,52.36035919,1569.13293457,11.60000229,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo2) (2)
CreateDynamicObject(11446,29.57835770,1571.51342773,11.75000000,0.00000000,0.00000000,32.00000000,-1,-1,-1,500); //object(des_pueblo07) (2)
CreateDynamicObject(11428,8.28795242,1573.21289062,16.95950317,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_indruin02) (2)
CreateDynamicObject(11427,-28.22853851,1530.19030762,18.79588699,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_adobech) (2)
CreateDynamicObject(11442,-18.97460556,1513.83178711,11.50000381,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo3) (3)
CreateDynamicObject(11443,-32.63393402,1495.09729004,11.27500534,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo4) (1)
CreateDynamicObject(11441,20.58934021,1490.01818848,11.62500191,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (1)
CreateDynamicObject(11441,22.13263512,1480.44055176,11.65000153,0.00000000,0.00000000,240.00000000,-1,-1,-1,500); //object(des_pueblo5) (2)
CreateDynamicObject(11442,47.78327179,1491.02539062,11.50000381,0.00000000,0.00000000,320.00000000,-1,-1,-1,500); //object(des_pueblo3) (4)
CreateDynamicObject(11441,66.77010345,1505.24853516,11.75602341,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (3)
CreateDynamicObject(11441,64.51130676,1526.04516602,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (4)
CreateDynamicObject(11441,65.49880981,1531.64807129,11.75000000,0.00000000,0.00000000,152.00000000,-1,-1,-1,500); //object(des_pueblo5) (5)
CreateDynamicObject(11440,93.26179504,1546.68359375,15.28085136,0.00000000,0.00000000,50.00000000,-1,-1,-1,500); //object(des_pueblo1) (5)
CreateDynamicObject(11428,90.00682831,1500.34033203,16.51323891,3.73709106,4.76013184,347.68649292,-1,-1,-1,500); //object(des_indruin02) (3)
CreateDynamicObject(11426,100.79296875,1515.11035156,11.18389034,9.50000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_adobe03) (1)
CreateDynamicObject(11442,115.94517517,1502.31250000,9.26373100,0.00000000,0.00000000,30.00000000,-1,-1,-1,500); //object(des_pueblo3) (5)
CreateDynamicObject(11442,51.34179688,1455.78027344,12.51997185,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo3) (6)
CreateDynamicObject(11440,-3.92187500,1441.15527344,11.34714508,0.00000000,0.00000000,305.99670410,-1,-1,-1,500); //object(des_pueblo1) (6)
CreateDynamicObject(11445,15.29546547,1440.98681641,12.82229424,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo06) (3)
CreateDynamicObject(11446,-16.90917969,1446.00195312,11.95339298,0.00000000,0.00000000,189.99755859,-1,-1,-1,500); //object(des_pueblo07) (3)
CreateDynamicObject(11447,-17.53456879,1455.63061523,12.92852211,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo08) (1)
CreateDynamicObject(11445,-66.03710938,1482.62792969,12.34497643,0.24987793,358.24996948,0.00762939,-1,-1,-1,500); //object(des_pueblo06) (4)
CreateDynamicObject(11428,-81.13378906,1498.07421875,16.62991524,1.96655273,349.99145508,16.34216309,-1,-1,-1,500); //object(des_indruin02) (4)
CreateDynamicObject(11440,-83.66142273,1553.80969238,17.32989311,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo1) (7)
CreateDynamicObject(11440,-77.87735748,1590.42907715,19.03844070,0.00000000,0.00000000,6.00000000,-1,-1,-1,500); //object(des_pueblo1) (8)
CreateDynamicObject(11445,-45.58261108,1607.33105469,24.33002663,0.00000000,0.00000000,142.00000000,-1,-1,-1,500); //object(des_pueblo06) (5)
CreateDynamicObject(11446,-10.69552994,1602.50842285,25.07114601,0.00000000,0.00000000,30.00000000,-1,-1,-1,500); //object(des_pueblo07) (4)
CreateDynamicObject(11445,5.53906250,1602.32031250,25.70122910,353.50000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo06) (6)
CreateDynamicObject(11446,17.22632217,1601.77978516,26.95508957,0.00000000,0.00000000,60.00000000,-1,-1,-1,500); //object(des_pueblo07) (5)
CreateDynamicObject(11443,28.90039062,1598.58300781,27.38588524,0.00000000,0.00000000,309.99572754,-1,-1,-1,500); //object(des_pueblo4) (2)
CreateDynamicObject(11442,57.23560333,1592.57531738,27.19487572,0.00000000,0.00000000,296.00000000,-1,-1,-1,500); //object(des_pueblo3) (7)
CreateDynamicObject(11441,82.84088135,1598.48876953,25.89921379,0.00000000,0.00000000,294.00000000,-1,-1,-1,500); //object(des_pueblo5) (6)
CreateDynamicObject(11440,69.62695312,1603.51660156,24.93751335,353.00000000,0.00000000,19.99511719,-1,-1,-1,500); //object(des_pueblo1) (9)
CreateDynamicObject(11427,44.07421875,1618.33203125,30.19685745,356.08395386,11.77789307,60.81219482,-1,-1,-1,500); //object(des_adobech) (3)
CreateDynamicObject(11425,-1.57910156,1614.93066406,24.93722725,346.26055908,357.68151855,359.44674683,-1,-1,-1,500); //object(des_adobehooses1) (3)
CreateDynamicObject(11428,-42.89648438,1621.94042969,26.92713737,0.00000000,12.00000000,103.99658203,-1,-1,-1,500); //object(des_indruin02) (5)
CreateDynamicObject(11440,-57.18069458,1574.85205078,19.40796852,6.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo1) (10)
CreateDynamicObject(11441,-54.45557404,1533.12768555,11.75000000,0.00000000,0.00000000,46.00000000,-1,-1,-1,500); //object(des_pueblo5) (7)
CreateDynamicObject(11441,-62.18692017,1529.86535645,11.75000000,0.00000000,0.00000000,56.00000000,-1,-1,-1,500); //object(des_pueblo5) (8)
CreateDynamicObject(11441,-49.04937363,1540.17077637,11.75000000,0.00000000,0.00000000,104.00000000,-1,-1,-1,500); //object(des_pueblo5) (9)
CreateDynamicObject(11441,-43.06010437,1488.75097656,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (10)
CreateDynamicObject(11441,-35.55252838,1502.16796875,11.75000000,0.00000000,0.00000000,74.00000000,-1,-1,-1,500); //object(des_pueblo5) (11)
CreateDynamicObject(11442,60.44181061,1474.94616699,12.33252144,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo3) (8)
CreateDynamicObject(11442,-76.29003906,1513.47949219,12.63221169,359.26782227,12.50103760,0.16235352,-1,-1,-1,500); //object(des_pueblo3) (9)
CreateDynamicObject(11442,-49.41210938,1473.76171875,12.48012352,355.25000000,0.00000000,69.99938965,-1,-1,-1,500); //object(des_pueblo3) (10)
CreateDynamicObject(11443,-36.94380951,1462.24096680,12.74638176,0.00000000,0.00000000,100.00000000,-1,-1,-1,500); //object(des_pueblo4) (3)
CreateDynamicObject(11444,15.96977234,1457.49438477,13.41581345,0.00000000,0.00000000,290.00000000,-1,-1,-1,500); //object(des_pueblo2) (3)
CreateDynamicObject(11443,5.97363281,1466.96484375,12.91345787,0.24176025,345.24987793,260.06057739,-1,-1,-1,500); //object(des_pueblo4) (4)
CreateDynamicObject(11442,32.36718750,1462.89257812,13.74642372,0.00000000,0.00000000,149.99633789,-1,-1,-1,500); //object(des_pueblo3) (11)
CreateDynamicObject(11442,80.06347656,1528.43164062,13.74084282,359.00213623,3.75057983,240.06176758,-1,-1,-1,500); //object(des_pueblo3) (12)
CreateDynamicObject(11442,94.65917969,1584.24609375,27.23160934,0.00000000,349.99694824,317.99926758,-1,-1,-1,500); //object(des_pueblo3) (13)
CreateDynamicObject(11441,29.07385635,1547.61376953,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (12)
CreateDynamicObject(11441,34.69346237,1561.28076172,11.75602341,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (13)
CreateDynamicObject(11441,41.99515915,1543.19824219,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (14)
CreateDynamicObject(11441,45.86892319,1520.63171387,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (15)
CreateDynamicObject(11441,59.58566284,1517.99230957,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (16)
CreateDynamicObject(11441,52.33769226,1544.25354004,11.75000000,0.00000000,0.00000000,46.00000000,-1,-1,-1,500); //object(des_pueblo5) (17)
CreateDynamicObject(11441,69.56905365,1492.93310547,12.73072720,0.00000000,0.00000000,44.00000000,-1,-1,-1,500); //object(des_pueblo5) (18)
CreateDynamicObject(11441,48.27575302,1472.55615234,13.37082195,0.00000000,0.00000000,40.00000000,-1,-1,-1,500); //object(des_pueblo5) (19)
CreateDynamicObject(11441,33.38951874,1490.32580566,11.75000000,0.00000000,0.00000000,72.00000000,-1,-1,-1,500); //object(des_pueblo5) (20)
CreateDynamicObject(11441,5.45251083,1488.54125977,11.75000000,0.00000000,0.00000000,64.00000000,-1,-1,-1,500); //object(des_pueblo5) (21)
CreateDynamicObject(11441,-8.94433594,1467.77734375,13.16621590,356.00976562,355.99026489,359.72052002,-1,-1,-1,500); //object(des_pueblo5) (22)
CreateDynamicObject(11441,-23.55170631,1466.76770020,12.96571255,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (23)
CreateDynamicObject(11441,-17.29100418,1497.94079590,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (24)
CreateDynamicObject(11441,-35.45489883,1476.61669922,11.91085625,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (25)
CreateDynamicObject(11441,-54.07519531,1489.38476562,12.58029556,8.22735596,14.65414429,49.85531616,-1,-1,-1,500); //object(des_pueblo5) (26)
CreateDynamicObject(11441,-60.07324219,1474.58886719,11.88917255,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (27)
CreateDynamicObject(11441,-45.60073471,1457.64282227,12.07471657,0.00000000,0.00000000,120.00000000,-1,-1,-1,500); //object(des_pueblo5) (28)
CreateDynamicObject(11441,-20.56054688,1440.52539062,11.32461166,0.00000000,0.00000000,159.99938965,-1,-1,-1,500); //object(des_pueblo5) (29)
CreateDynamicObject(11441,-6.41503906,1431.59570312,11.24961281,0.00000000,0.00000000,159.99389648,-1,-1,-1,500); //object(des_pueblo5) (30)
CreateDynamicObject(11441,22.41894531,1430.97851562,11.92216110,1.74938965,1.50070190,359.95416260,-1,-1,-1,500); //object(des_pueblo5) (31)
CreateDynamicObject(11441,41.06640625,1439.30664062,12.68830490,359.25033569,1.75015259,52.02120972,-1,-1,-1,500); //object(des_pueblo5) (32)
CreateDynamicObject(11441,56.03125000,1444.46777344,11.79400063,357.00482178,3.25445557,300.16839600,-1,-1,-1,500); //object(des_pueblo5) (33)
CreateDynamicObject(11441,-64.08876038,1464.36901855,10.70021057,0.00000000,0.00000000,120.00000000,-1,-1,-1,500); //object(des_pueblo5) (34)
CreateDynamicObject(11442,-61.89074326,1555.21826172,18.08532333,0.00000000,0.00000000,30.00000000,-1,-1,-1,500); //object(des_pueblo3) (14)
CreateDynamicObject(11442,-76.27956390,1621.37145996,20.69282532,0.00000000,0.00000000,316.00000000,-1,-1,-1,500); //object(des_pueblo3) (15)
CreateDynamicObject(11442,108.32519531,1597.19238281,28.66092682,358.50000000,0.00000000,29.99816895,-1,-1,-1,500); //object(des_pueblo3) (16)
CreateDynamicObject(11442,115.27014160,1529.81335449,13.16141891,0.00000000,0.00000000,84.00000000,-1,-1,-1,500); //object(des_pueblo3) (17)
CreateDynamicObject(11446,-19.72596169,1547.25671387,11.75602150,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo07) (6)
CreateDynamicObject(11446,22.63277054,1469.83300781,12.62115574,350.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo07) (7)
CreateDynamicObject(11446,73.35941315,1542.99060059,13.22923851,354.52038574,335.88284302,359.55212402,-1,-1,-1,500); //object(des_pueblo07) (8)
CreateDynamicObject(695,35.61067200,1613.51452637,30.15418816,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_scabtg) (1)
CreateDynamicObject(694,-90.88413239,1582.47875977,23.45396423,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_redwoodgrp) (1)
CreateDynamicObject(694,-67.69046783,1647.33715820,19.50544357,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_redwoodgrp) (2)
CreateDynamicObject(689,-43.02234650,1426.95935059,9.09030151,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_copse1) (1)
CreateDynamicObject(689,-29.84834290,1429.69433594,8.94030380,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_copse1) (2)
CreateDynamicObject(683,145.01171875,1585.92578125,33.02599716,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (1)
CreateDynamicObject(683,70.16210938,1461.53808594,11.21506691,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (2)
CreateDynamicObject(683,78.36768341,1515.49926758,11.74015617,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (3)
CreateDynamicObject(683,-49.65624237,1600.74365234,24.00297928,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (4)
CreateDynamicObject(683,-17.94304848,1560.71105957,11.75000000,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (5)
CreateDynamicObject(683,-2.44773865,1506.28283691,11.76315308,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (6)
CreateDynamicObject(683,-4.43457031,1462.32128906,13.64342117,2.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_group) (7)
CreateDynamicObject(838,76.07701874,1448.21960449,12.65692329,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(dead_tree_9) (1)
CreateDynamicObject(839,83.85203552,1457.48986816,11.21940804,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(dead_tree_11) (1)
CreateDynamicObject(843,77.57162476,1495.67272949,13.39622879,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(dead_tree_15) (1)
CreateDynamicObject(844,92.39669800,1519.38720703,13.46102619,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(dead_tree_16) (1)
CreateDynamicObject(846,106.29631042,1541.58105469,15.98761749,6.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(dead_tree_18) (1)
CreateDynamicObject(847,99.37926483,1496.53930664,12.71765518,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(dead_tree_19) (1)
CreateDynamicObject(12807,-123.15187073,1424.55187988,11.98972130,9.75000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sw_logs4) (1)
CreateDynamicObject(18273,-0.03754874,1529.37023926,31.69785309,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(cw2_weefirz08) (1)
CreateDynamicObject(790,-2.42152786,1629.34863281,20.66007996,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sm_fir_tallgroup) (1)
CreateDynamicObject(864,-52.66627121,1464.24243164,11.94914436,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(sand_combush1) (1)
CreateDynamicObject(11442,-32.86594009,1582.40222168,15.98803902,359.03411865,15.00219727,359.75885010,-1,-1,-1,500); //object(des_pueblo3) (18)
CreateDynamicObject(11441,-47.47829437,1565.41357422,18.15082550,0.00000000,18.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (35)
CreateDynamicObject(11441,-18.94961929,1581.87133789,11.74999809,0.00000000,0.00000000,230.00000000,-1,-1,-1,500); //object(des_pueblo5) (36)
CreateDynamicObject(11441,45.34637070,1556.23657227,11.75602341,0.00000000,0.00000000,300.00000000,-1,-1,-1,500); //object(des_pueblo5) (37)
CreateDynamicObject(11441,32.04117966,1534.20507812,11.76966476,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (38)
CreateDynamicObject(11443,1.24387169,1533.09960938,11.76966667,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo4) (5)
CreateDynamicObject(11441,30.27392387,1522.16723633,11.76315498,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (39)
CreateDynamicObject(11441,-9.96101761,1473.97595215,11.75602436,0.00000000,0.00000000,90.00000000,-1,-1,-1,500); //object(des_pueblo5) (40)
CreateDynamicObject(11441,6.91229057,1504.02563477,11.76966381,0.00000000,0.00000000,52.00000000,-1,-1,-1,500); //object(des_pueblo5) (41)
CreateDynamicObject(11441,-62.97911072,1541.55847168,14.68398857,0.00000000,55.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (42)
CreateDynamicObject(11444,-51.09960938,1550.50878906,15.99558258,3.53259277,38.33496094,325.95999146,-1,-1,-1,500); //object(des_pueblo2) (4)
CreateDynamicObject(11441,-48.92210770,1587.20788574,21.34633827,358.05941772,14.00820923,0.48403931,-1,-1,-1,500); //object(des_pueblo5) (43)
CreateDynamicObject(11441,-31.83277130,1597.92041016,24.49545479,0.00000000,0.00000000,230.00000000,-1,-1,-1,500); //object(des_pueblo5) (44)
CreateDynamicObject(11441,-5.95905304,1549.68750000,11.76315498,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (45)
CreateDynamicObject(11441,10.36285210,1557.18591309,11.75000000,0.00000000,0.00000000,60.00000000,-1,-1,-1,500); //object(des_pueblo5) (46)
CreateDynamicObject(11441,70.65429688,1565.67187500,13.87289333,359.75000000,0.00000000,0.00000000,-1,-1,-1,500); //object(des_pueblo5) (47)
CreateDynamicObject(3279,9.19628906,1590.90429688,17.50793076,0.00000000,319.99877930,90.00000000,-1,-1,-1,500); //object(a51_spottower) (20)
CreateDynamicObject(1225,-17.44799232,1597.39318848,25.67115784,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (1)
CreateDynamicObject(1225,-38.87304688,1610.82873535,24.96720505,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (2)
CreateDynamicObject(1225,-26.17926025,1545.33996582,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (3)
CreateDynamicObject(1225,-13.46191406,1581.17187500,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (4)
CreateDynamicObject(1225,-53.71972656,1562.23632812,19.57032013,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (5)
CreateDynamicObject(1225,-40.91076660,1469.71691895,13.77743244,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (6)
CreateDynamicObject(1225,-34.29492188,1521.99609375,12.16177845,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (7)
CreateDynamicObject(1225,-20.10839844,1494.00781250,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (8)
CreateDynamicObject(1225,-2.03710938,1477.54003906,12.16177845,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (9)
CreateDynamicObject(1225,27.08591461,1455.54016113,14.12065220,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (10)
CreateDynamicObject(1225,38.53022385,1488.50341797,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (11)
CreateDynamicObject(1225,67.95399475,1483.63061523,13.05847454,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (12)
CreateDynamicObject(1225,53.25002289,1532.02172852,14.78232479,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (13)
CreateDynamicObject(1225,56.44824219,1511.28906250,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (14)
CreateDynamicObject(1225,19.92583847,1551.74462891,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (15)
CreateDynamicObject(1225,47.10937500,1550.72460938,12.15575504,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (16)
CreateDynamicObject(1225,-6.58227348,1557.38732910,12.16891003,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (17)
CreateDynamicObject(1225,31.03171539,1516.20556641,12.16891003,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (18)
CreateDynamicObject(1225,-7.61621094,1558.25683594,12.16891003,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (19)
CreateDynamicObject(1225,-9.79492188,1528.62207031,12.16891003,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (20)
CreateDynamicObject(1225,30.06347656,1531.10351562,12.16891003,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (21)
CreateDynamicObject(1225,6.97558594,1519.94531250,12.17541981,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (22)
CreateDynamicObject(1225,-4.75747252,1458.71899414,14.41119862,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (23)
CreateDynamicObject(1225,11.17187500,1501.76855469,12.16891003,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(barrel4) (24)
CreateDynamicObject(1395,29.94042778,1481.84606934,44.28005981,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(twrcrane_l_03) (1)
CreateDynamicObject(1384,29.87783813,1481.90197754,96.83226013,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(twrcrane_m_01) (1)
CreateDynamicObject(11400,29.88260078,1531.04260254,99.67449188,0.00000000,0.00000000,90.00000000,-1,-1,-1,500); //object(acwinch1b_sfs02) (1)
CreateDynamicObject(3287,-30.93980217,1614.37329102,29.17645073,0.00000000,0.00000000,0.00000000,-1,-1,-1,500); //object(cxrf_oiltank) (1)
//DM зона 8 (конец)

//трубы LV (начало)
	CreateDynamicObject(18822,2054.1589355,1055.2239990,29.1050014,90.0000000,0.0000000,334.0000000,-1,-1,-1,500); //object(tube50mglass45bend1) (1)
	CreateDynamicObject(18818,2045.9169922,958.9337158,29.2299995,90.0000000,0.0000000,264.0000000,-1,-1,-1,500); //object(tube50mglasst1) (1)
	CreateDynamicObject(18826,2223.9755859,952.9960938,21.8759995,59.9963379,173.9959717,353.9959717,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18809,2186.1784668,944.1009521,29.2390003,90.0000000,0.0000000,84.0000000,-1,-1,-1,500); //object(tube50mglass1) (2)
	CreateDynamicObject(18809,2137.0268555,949.2769775,29.1998005,90.0000000,0.0000000,83.9959717,-1,-1,-1,500); //object(tube50mglass1) (3)
	CreateDynamicObject(18809,2087.9003906,954.4479980,29.2000046,90.0000000,0.0000000,83.9959717,-1,-1,-1,500); //object(tube50mglass1) (4)
	CreateDynamicObject(18809,2043.3486328,1009.2851562,29.1450005,90.0000000,0.0000000,173.9959717,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,2084.2011719,1093.7760010,29.0860004,90.0000000,0.0000000,135.9959717,-1,-1,-1,500); //object(tube50mglass1) (6)
	CreateDynamicObject(18822,2113.4189453,1132.5540771,29.0000000,90.0000000,0.0000000,155.9953613,-1,-1,-1,500); //object(tube50mglass45bend1) (2)
	CreateDynamicObject(18822,2113.3857422,1178.6025391,28.9390011,90.0000000,0.0000000,203.9941406,-1,-1,-1,500); //object(tube50mglass45bend1) (3)
	CreateDynamicObject(18822,2089.0039062,1221.0870361,28.9920006,90.0000000,0.0000000,23.9941406,-1,-1,-1,500); //object(tube50mglass45bend1) (4)
	CreateDynamicObject(18809,2081.4309082,1268.9250488,28.9569988,90.0000000,0.0000000,179.9959717,-1,-1,-1,500); //object(tube50mglass1) (7)
	CreateDynamicObject(18809,2081.4011230,1318.6101074,28.8999729,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (8)
	CreateDynamicObject(18809,2081.3991699,1368.1959229,28.8869991,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (9)
	CreateDynamicObject(18809,2081.3999023,1417.7309570,28.8790016,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (10)
	CreateDynamicObject(18809,2081.4069824,1466.6350098,28.8640003,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (11)
	CreateDynamicObject(18809,2081.4121094,1516.4060059,28.8800468,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (12)
	CreateDynamicObject(18809,2081.3984375,1564.7304688,28.8659992,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (15)
	CreateDynamicObject(18809,2081.4311523,1613.5329590,28.8439999,90.0000000,0.0000000,179.9945068,-1,-1,-1,500); //object(tube50mglass1) (16)
	CreateDynamicObject(18822,2076.3000488,1661.2419434,28.8290005,90.0000000,0.0000000,197.9941406,-1,-1,-1,500); //object(tube50mglass45bend1) (5)
	CreateDynamicObject(18822,2045.0870361,1694.8149414,28.8000507,90.0000000,0.0000000,247.9901123,-1,-1,-1,500); //object(tube50mglass45bend1) (6)
	CreateDynamicObject(18809,1996.3950195,1702.4530029,28.7479992,90.0000000,0.0000000,267.9945068,-1,-1,-1,500); //object(tube50mglass1) (17)
	CreateDynamicObject(18809,1946.5000000,1704.0920410,28.7660007,90.0000000,0.0000000,267.9895020,-1,-1,-1,500); //object(tube50mglass1) (18)
	CreateDynamicObject(18809,1896.7989502,1705.8559570,28.7819996,90.0000000,0.0000000,267.9895020,-1,-1,-1,500); //object(tube50mglass1) (19)
	CreateDynamicObject(18809,1847.1490479,1707.5429688,28.7500000,90.0000000,0.0000000,267.9895020,-1,-1,-1,500); //object(tube50mglass1) (20)
	CreateDynamicObject(18809,1797.5129395,1709.3029785,28.7589989,90.0000000,0.0000000,267.9895020,-1,-1,-1,500); //object(tube50mglass1) (21)
	CreateDynamicObject(18809,1747.8489990,1711.0729980,28.6999493,90.0000000,0.0000000,267.9895020,-1,-1,-1,500); //object(tube50mglass1) (22)
	CreateDynamicObject(18822,1699.0179443,1707.6199951,28.6998997,90.0000000,0.0000000,285.9888916,-1,-1,-1,500); //object(tube50mglass45bend1) (7)
	CreateDynamicObject(18809,1656.3070068,1683.9539795,28.6989994,90.0000000,0.0000000,305.9895020,-1,-1,-1,500); //object(tube50mglass1) (23)
	CreateDynamicObject(18809,1616.1419678,1654.7810059,28.6310005,90.0000000,0.0000000,305.9895020,-1,-1,-1,500); //object(tube50mglass1) (24)
	CreateDynamicObject(18822,1573.4449463,1630.6319580,19.9909992,70.0000000,0.0000000,105.9851685,-1,-1,-1,500); //object(tube50mglass45bend1) (9)
	CreateDynamicObject(18826,2020.6409912,927.0469971,37.6919975,59.9963379,173.9959717,267.9959717,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18809,2010.8520508,963.9993286,45.0600014,90.0000000,0.0000000,173.9959717,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18826,2001.8549805,1000.9909058,53.5699997,300.0091553,173.9959717,73.9949951,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18826,1971.5469971,985.4280396,69.3639984,59.9908447,173.9959717,267.9949951,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18809,1961.8509521,1022.5399780,76.6259995,90.0000000,0.0000000,173.9959717,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1967.1040039,1072.1059570,76.6470032,90.0000000,0.0000000,173.9959717,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1972.3089600,1121.6639404,76.6439972,90.0000000,0.0000000,173.9959717,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18822,1972.2719727,1170.2239990,76.5999374,90.0000000,0.0000000,191.9941406,-1,-1,-1,500); //object(tube50mglass45bend1) (3)
	CreateDynamicObject(18822,1947.5579834,1209.9510498,76.5340042,90.0000000,0.0000000,231.9915771,-1,-1,-1,500); //object(tube50mglass45bend1) (3)
	CreateDynamicObject(18809,1904.0250244,1230.3879395,76.4998016,90.0000000,0.0000000,251.9959717,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1856.9470215,1245.7059326,76.4409943,90.0000000,0.0000000,251.9934082,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1810.3879395,1260.8349609,76.4360046,90.0000000,0.0000000,251.9934082,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1763.7939453,1275.9934082,76.4270020,90.0000000,0.0000000,251.9934082,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1717.0460205,1291.2059326,76.3991013,90.0000000,0.0000000,251.9934082,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1670.4229736,1306.3599854,76.4000015,90.0000000,0.0000000,251.9934082,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18809,1622.5830078,1321.9938965,76.4999008,90.0000000,0.0000000,251.9934082,-1,-1,-1,500); //object(tube50mglass1) (5)
	CreateDynamicObject(18826,1583.8649902,1321.2110596,69.1100006,59.9908447,173.9959717,161.9949951,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18826,1603.7590332,1311.4500732,53.2849998,59.9853516,173.9959717,335.9934082,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18826,1585.5980225,1324.3669434,37.3079987,59.9798584,173.9959717,143.9893799,-1,-1,-1,500); //object(tube50mglass180bend) (1)
	CreateDynamicObject(18826,1601.2159424,1307.7760010,21.4829998,59.9743652,173.9959717,313.9868164,-1,-1,-1,500); //object(tube50mglass180bend) (1)
//трубы LV (конец)

//трасса аэро SF - пляж LS (начало)
CreateDynamicObject(18841, -1115.76001, -305.16000, 1.59000,   0.00000, -90.00000, -87.00000, -1, -1, -1, 300);
CreateDynamicObject(3472, -1125.20996, -290.45001, 12.16000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3472, -1124.67004, -320.45001, 12.16000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18841, -1115.73999, -305.16000, 22.07000,   0.00000, 90.00000, -87.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, -1109.96997, -297.97000, 14.95000,   0.00000, -90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, -1111.06006, -313.26001, 14.95000,   0.00000, -90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, -1098.47998, -297.95001, 14.95000,   0.00000, -90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, -1099.76001, -313.26199, 14.95000,   0.00000, -90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, -1087.14001, -297.94000, 14.95000,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, -1088.39001, -313.25000, 14.95000,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16358, -998.38000, -305.32001, 12.78000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16358, -758.51001, -305.32001, 12.78000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16358, -520.33002, -318.04001, 12.78200,   0.00000, 0.00000, -5.98500, -1, -1, -1, 300);
CreateDynamicObject(18449, -366.01001, -340.72000, 12.85000,   0.00000, 0.00000, -15.00670, -1, -1, -1, 300);
CreateDynamicObject(18449, -292.92999, -367.45001, 12.85200,   0.00000, 0.00000, -25.16210, -1, -1, -1, 300);
CreateDynamicObject(18449, -230.37000, -410.91000, 12.85000,   0.00000, 0.00000, -44.38570, -1, -1, -1, 300);
CreateDynamicObject(18449, -183.71001, -471.35999, 12.85200,   0.00000, 0.00000, -60.17290, -1, -1, -1, 300);
CreateDynamicObject(18449, -152.46001, -539.27002, 12.85000,   0.00000, 0.00000, -69.93350, -1, -1, -1, 300);
CreateDynamicObject(18449, -139.75999, -612.70001, 12.85200,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(18449, -139.59000, -692.52002, 12.85000,   0.00000, 0.00000, 90.24190, -1, -1, -1, 300);
CreateDynamicObject(18449, -139.52000, -772.03998, 8.01000,   0.00000, 6.95760, -90.13300, -1, -1, -1, 300);
CreateDynamicObject(18449, -127.70000, -846.50000, 3.35000,   0.00000, 0.00000, -72.00000, -1, -1, -1, 300);
CreateDynamicObject(18791, -88.13000, -909.20001, 3.35200,   0.00000, 0.00000, -32.97590, -1, -1, -1, 300);
CreateDynamicObject(18449, -16.03000, -913.34998, 3.40000,   0.00000, 0.00000, 15.48130, -1, -1, -1, 300);
CreateDynamicObject(18791, 53.82000, -920.71997, 3.34000,   0.00000, 0.00000, 141.78720, -1, -1, -1, 300);
CreateDynamicObject(18449, 72.19000, -985.21997, 3.33000,   0.00000, 0.00000, 81.13550, -1, -1, -1, 300);
CreateDynamicObject(18449, 66.39000, -1062.93994, 3.33200,   0.00000, 0.00000, 90.24190, -1, -1, -1, 300);
CreateDynamicObject(18449, 75.64000, -1139.04004, 3.33000,   0.00000, 0.00000, 103.63840, -1, -1, -1, 300);
CreateDynamicObject(18791, 79.59000, -1214.79004, 3.30000,   0.00000, 0.00000, 71.28180, -1, -1, -1, 300);
CreateDynamicObject(18791, 40.24916, -1283.42578, 1.87000,   0.00000, 2.11970, -108.50790, -1, -1, -1, 300);
CreateDynamicObject(18449, 35.80000, -1345.41003, 0.34000,   0.00000, 0.00000, 90.62760, -1, -1, -1, 300);
CreateDynamicObject(18449, 40.45000, -1424.43005, 0.34200,   0.00000, 0.00000, 96.11970, -1, -1, -1, 300);
CreateDynamicObject(18449, 48.46000, -1503.69995, 0.34000,   0.00000, 0.00000, 95.33250, -1, -1, -1, 300);
CreateDynamicObject(18449, 56.31000, -1580.75000, 0.34200,   0.00000, 0.00000, 96.41730, -1, -1, -1, 300);
CreateDynamicObject(18449, 61.92000, -1659.47998, 0.34000,   0.00000, 0.00000, 91.69660, -1, -1, -1, 300);
CreateDynamicObject(18449, 60.89000, -1738.56995, 0.34200,   0.00000, 0.00000, 86.89360, -1, -1, -1, 300);
CreateDynamicObject(18791, 48.92000, -1816.56006, 0.34000,   0.00000, 0.00000, 64.36160, -1, -1, -1, 300);
CreateDynamicObject(18449, -2.61000, -1876.19995, 0.34200,   0.00000, 0.00000, 45.27930, -1, -1, -1, 300);
CreateDynamicObject(18791, -53.24000, -1935.64001, 0.34000,   0.00000, 0.00000, -115.10640, -1, -1, -1, 300);
CreateDynamicObject(18449, -64.93000, -2012.44995, 0.29000,   0.00000, 0.00000, 86.67830, -1, -1, -1, 300);
CreateDynamicObject(18449, -68.78000, -2091.88989, 0.29200,   0.00000, 0.00000, 87.77390, -1, -1, -1, 300);
CreateDynamicObject(18449, -68.84000, -2170.31006, 0.29000,   0.00000, 0.00000, 92.13550, -1, -1, -1, 300);
CreateDynamicObject(18449, -66.58000, -2249.71997, 0.29200,   0.00000, 0.00000, 91.11970, -1, -1, -1, 300);
CreateDynamicObject(18791, -58.22000, -2328.03003, 0.25000,   0.00000, 0.00000, -67.82460, -1, -1, -1, 300);
CreateDynamicObject(18449, -4.96000, -2384.18994, 0.25200,   0.00000, 0.00000, -36.33500, -1, -1, -1, 300);
CreateDynamicObject(18449, 60.95000, -2428.12988, 0.25000,   0.00000, 0.00000, -30.94680, -1, -1, -1, 300);
CreateDynamicObject(18449, 123.33000, -2465.80005, 2.97000,   0.00000, 4.09310, 148.69160, -1, -1, -1, 300);
CreateDynamicObject(18449, 191.44000, -2507.05005, 5.74000,   0.00000, 0.10640, -31.00000, -1, -1, -1, 300);
CreateDynamicObject(18791, 261.98999, -2542.03003, 5.66000,   0.00000, 0.00000, -10.42560, -1, -1, -1, 300);
CreateDynamicObject(18791, 338.10001, -2526.92993, 5.66200,   0.00000, 0.00000, 32.85620, -1, -1, -1, 300);
CreateDynamicObject(18449, 392.91760, -2472.36011, 5.69000,   0.00000, 0.00000, 45.74730, -1, -1, -1, 300);
CreateDynamicObject(18449, 447.75000, -2415.37012, 5.69200,   0.00000, 0.00000, 46.50540, -1, -1, -1, 300);
CreateDynamicObject(18449, 503.17001, -2357.79004, 5.69000,   0.00000, 0.00000, 45.68080, -1, -1, -1, 300);
CreateDynamicObject(18791, 561.88000, -2305.22998, 5.71000,   0.00000, 0.00000, -153.20200, -1, -1, -1, 300);
CreateDynamicObject(18449, 639.62000, -2294.92993, 5.74000,   0.00000, 0.00000, -0.43890, -1, -1, -1, 300);
CreateDynamicObject(18449, 719.45001, -2294.97998, 5.74200,   0.00000, 0.00000, 0.35910, -1, -1, -1, 300);
CreateDynamicObject(18791, 796.96997, -2285.84009, 5.76000,   0.00000, 0.00000, 24.27930, -1, -1, -1, 300);
CreateDynamicObject(18791, 849.08002, -2232.37988, 5.75000,   0.00000, 0.00000, 67.18620, -1, -1, -1, 300);
CreateDynamicObject(18449, 853.81000, -2154.59009, 6.52000,   0.00000, -1.11970, 94.61430, -1, -1, -1, 300);
CreateDynamicObject(18449, 848.28003, -2106.94995, 8.85000,   0.00000, 3.96010, -82.34580, -1, -1, -1, 300);
CreateDynamicObject(18825, 844.52002, -2076.29004, 1.41000,   0.00000, -90.00000, 9.00000, -1, -1, -1, 300);
CreateDynamicObject(18825, 844.70001, -2076.15991, 21.52000,   0.00000, 90.00000, 9.00000, -1, -1, -1, 300);
CreateDynamicObject(3472, 835.38000, -2068.87012, 11.72000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3472, 850.59003, -2068.26001, 11.72000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, 835.46997, -2069.03003, 13.39000,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
CreateDynamicObject(3552, 850.64001, -2068.37012, 13.39000,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
//трасса аэро SF - пляж LS (конец)

//драг 2 (начало)
ObjGam[27] = CreateObject(8040, -6662.7, -3009.6, 7.12,   0.00000, 0.00000, 0.00000);

CreateDynamicObject(976, -5381.59, -3004.26, 6.33,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(976, -5381.53, -3013.21, 6.33,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(976, -5381.53, -3022.1, 6.33,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(8390, -5451.46, -3012.27, 25.63,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -5563.57, -3025.49, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -5566.66, -2994.71, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5558.3, -3010.17, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -5586.41, -3010.06, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5588.55, -3010.2, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5619.12, -3010.16, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5649.3, -3010.11, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5680.11, -3010.04, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -5726.33, -3025.45, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -5729.48, -2994.78, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5710.85, -3009.98, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -5724.69, -3010.05, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5740.78, -3009.98, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5771.76, -3010.06, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5801.94, -3010.06, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5833.27, -3010.1, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -5862.95, -3010.08, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5864.31, -3010.03, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -5888.87, -3025.45, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -5892.28, -2994.85, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5894.53, -3010.11, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5924.82, -3010.14, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5955.82, -3010.01, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -5986.29, -3010.18, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -6001.25, -3010.12, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6016.4, -3010.15, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6051.66, -3025.44, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6055.16, -2994.83, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6046.56, -3010.13, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6076.98, -3010.18, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6107.87, -3010.19, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -6139.54, -3010.13, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6138.48, -3010.02, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6169.33, -3009.99, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6214.43, -3025.43, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6217.92, -2994.79, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6199.47, -3010.09, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6229.83, 2722.14, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6260.19, -3010.25, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -6277.82, -3010.14, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6290.38, -3010.19, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6321.22, -3010.18, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6351.76, -3010.18, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6377.22, -3025.36, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6380.72, -2994.77, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6382.76, -3010.22, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -6416.07, -3010.14, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6413.38, -3010.22, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6443.85, -3010.25, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6474.18, -3010.26, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6504.88, -3010.21, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6539.87, -3025.36, 9.92,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(5005, -6543.39, -2994.81, 9.92,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6535.45, -3010.12, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8171, -6554.35, -3010.16, 6.37,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(981, -6566.47, -3010.12, 7.29,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1352, -6604.49, -3022.22, 6.37,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(1352, -6604.41, -3010.35, 6.37,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(1352, -6604.51, -2998.22, 6.37,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
//CreateDynamicObject(8040, -6662.7, -3009.6, 7.12,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7033, -6594.47, -3010.12, 10.88,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(1290, -6643.21, -3009.59, 12.55,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1290, -6652.88, -3009.27, 12.55,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1290, -6662.53, -3009.57, 12.55,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1290, -6672.17, -3009.32, 12.55,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1290, -6681.68, -3009.53, 12.55,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
//драг 2 (конец)

//дрифт островок 2 (начало)
ObjGam[28] = CreateObject(16109, -5969.49023, 2928.33008, 23.25000,   0.00000, 0.00000, 178.63840);

CreateDynamicObject(16192, -6032.83008, 3117.67993, 41.00000,   0.00000, 0.00000, -104.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6091.25000, 3097.04004, 16.45000,   0.00000, 0.00000, 113.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6164.81006, 3158.56006, 42.23520,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6059.64990, 3231.17993, 14.58000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5944.64014, 3152.13989, 58.39000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5872.77002, 3151.80005, 41.69529,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5861.16992, 3185.60010, 2.87000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5905.08984, 3268.65991, 18.79000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -6037.24902, 2857.45996, 28.35930,   13.00000, 0.00000, 185.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5999.23389, 2856.02588, 46.86000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5982.35498, 2820.22412, 36.75000,   0.00000, 0.00000, -12.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5987.07178, 2849.06812, 46.41050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5954.43018, 2817.46997, 8.31000,   0.00000, 0.00000, 40.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5926.36377, 2862.18701, 33.89987,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5872.63086, 2836.90308, 4.37237,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5906.43018, 2860.70996, 4.46000,   0.00000, 0.00000, 89.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5903.66699, 2870.08691, 7.74720,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5874.87500, 2887.43799, 7.68642,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5869.35986, 2900.46997, 4.52000,   0.00000, 0.00000, 40.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5894.31006, 2907.86011, 6.80000,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5847.98096, 2895.38501, 34.02479,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//CreateDynamicObject(16109, -5969.49023, 2928.33008, 23.25000,   0.00000, 0.00000, 178.63840, -1, -1, -1, 300);
CreateDynamicObject(16097, -5943.62988, 2936.82007, 6.97000,   0.00000, 0.00000, 265.00000, -1, -1, -1, 300);
CreateDynamicObject(16147, -5926.81787, 2950.17700, 20.04000,   0.00000, -8.00000, 181.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -6008.32275, 2913.22803, 44.87000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(750, -6005.39990, 2920.22998, 44.21109,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5971.99414, 2973.82324, 26.05000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(750, -5977.37988, 2995.63989, 25.33793,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16147, -5944.69385, 3015.76807, 32.49000,   0.00000, 0.00000, 239.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -6026.08008, 2944.25000, 44.26000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(5409, -6011.87988, 3025.68994, 30.44000,   -1.00000, 1.00000, -8.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -6027.64404, 2995.52588, 28.14000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -6046.27588, 3009.92505, 37.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6007.20020, 2842.76001, 60.61000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6007.20996, 2842.72998, 56.74000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -6010.65186, 2789.86890, 38.37000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6013.50000, 2842.76001, 60.08000,   0.00000, -14.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6013.47998, 2842.72998, 59.00000,   0.00000, 14.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6013.18018, 2842.73999, 57.45000,   0.00000, -28.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16771, -6013.64990, 2821.02002, 54.93000,   -1.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6018.89014, 2842.75000, 60.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6019.02979, 2842.72998, 56.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6034.77002, 2724.32007, 30.71570,   0.00000, 0.00000, 71.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5993.93018, 2795.11011, 27.72000,   0.00000, 0.00000, 113.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6016.66992, 2842.69995, 58.42000,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -6034.99805, 2839.87891, 44.72450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6110.20020, 2736.18994, 32.62000,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -6043.91211, 2811.25098, 36.42000,   0.00000, 0.00000, -2.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5900.08984, 2755.64990, -15.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5848.64014, 2799.85010, 17.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5835.42920, 2936.71094, 40.40760,   0.00000, 2.00000, 273.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5799.85010, 2905.64990, 42.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16109, -5806.27002, 2830.61011, 23.25000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(750, -5794.41699, 2761.80591, 25.75446,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5801.39551, 2785.50610, 26.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5825.10400, 2765.46289, 22.17990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5843.08008, 2726.54004, 19.28000,   0.00000, 0.00000, -16.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5840.12988, 2745.90991, -23.27000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5900.08984, 2755.64990, -15.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5781.00000, 2942.06006, 39.96000,   0.00000, 20.00000, 162.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5792.47998, 2950.27002, 29.08000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5770.39014, 2847.59009, 44.33000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5914.66016, 3057.00000, 30.28000,   0.00000, 0.00000, 229.00000, -1, -1, -1, 300);
CreateDynamicObject(1686, -5989.74121, 3020.77808, 25.67000,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5978.27002, 3023.89990, 25.06000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1225, -5987.39014, 3019.77393, 25.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1225, -5985.21484, 3020.24805, 25.62490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1225, -5982.88086, 3020.42505, 25.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1225, -5980.33398, 3020.72705, 25.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5769.95801, 2956.93311, 48.73697,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5800.60986, 2987.98999, 26.27000,   0.00000, 0.00000, 178.00000, -1, -1, -1, 300);
CreateDynamicObject(3286, -5773.18994, 2759.00000, 31.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5848.64014, 9200.15039, 17.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5804.39990, 2733.78003, 15.60000,   0.00000, 0.00000, 236.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5748.79980, 2847.22998, 45.67000,   0.00000, 0.00000, 215.00000, -1, -1, -1, 300);
CreateDynamicObject(750, -5795.35010, 2671.11011, 25.94000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5753.70996, 2722.44995, -18.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5776.95996, 2741.71997, 25.75947,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5669.91016, 2733.83008, 39.88000,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5723.52002, 2941.37012, 52.49000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5678.41016, 2909.42993, 33.73000,   0.00000, 0.00000, -21.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5739.24805, 2942.37402, 52.58000,   0.00000, 0.00000, 181.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5715.81006, 2899.68994, -3.65000,   0.00000, 0.00000, 142.00000, -1, -1, -1, 300);
CreateDynamicObject(16169, -5721.45020, 2869.66992, 1.01000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5869.03613, 2884.26392, 8.30790,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5771.02002, 3049.02002, 49.76000,   0.00000, 0.00000, 204.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5749.66016, 2979.22998, 75.06000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5683.77979, 3030.79004, 84.93000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16109, -5681.18994, 2991.12988, 64.30000,   0.46800, 0.00000, 59.77140, -1, -1, -1, 300);
CreateDynamicObject(652, -5741.20020, 3024.02002, 78.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5779.10986, 3115.84009, 66.02270,   10.00000, -9.00000, 295.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5772.29980, 3122.92993, 38.49000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(652, -5737.35010, 3062.33008, 89.65998,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3927, -5713.12012, 3053.38989, 89.84000,   0.00000, 0.00000, 65.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5641.45020, 3031.66992, 85.28000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5605.81494, 3018.32593, 74.08982,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3337, -5625.47998, 2987.69995, 68.67000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(713, -5597.14990, 2949.90991, 64.85685,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5538.68994, 2987.40991, 51.26000,   0.00000, 0.00000, 40.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5571.85010, 2877.61011, 32.62000,   0.00000, 0.00000, -113.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5546.18018, 2895.61011, 24.30000,   0.00000, -12.00000, 157.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5483.31006, 3012.40991, 28.73000,   0.00000, 0.00000, -69.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5653.37988, 3129.54004, 53.44000,   0.00000, -6.00000, -109.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5586.56982, 3092.61011, 54.00000,   0.00000, -8.00000, 244.00000, -1, -1, -1, 300);
CreateDynamicObject(774, -5721.12012, 3039.17993, 83.56000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5863.18018, 2941.58008, 26.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -6035.95117, 2876.75610, 44.72450,   0.00000, 4.00000, 4.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -6043.26611, 2905.56006, 44.72450,   0.00000, 2.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -6050.74512, 2935.38501, 44.72450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -6050.52881, 2967.06396, 44.72450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1686, -5989.24219, 3023.95996, 25.61000,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
CreateDynamicObject(1686, -5988.62402, 3028.10498, 25.53000,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
CreateDynamicObject(1686, -5988.22705, 3030.91089, 25.47000,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6001.76807, 2842.76001, 58.44590,   0.00000, 70.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6000.28223, 2842.76001, 58.44590,   0.00000, -70.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6004.55811, 2842.69189, 58.43270,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6007.20020, 2842.76001, 58.57970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6010.83301, 2842.72998, 58.45270,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6020.87598, 2842.69995, 58.42000,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6022.04199, 2842.69995, 58.42000,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6024.13379, 2842.69995, 58.42000,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6023.11377, 2842.69995, 58.42000,   0.00000, 118.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6025.87891, 2842.69995, 58.42000,   0.00000, 70.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6028.09424, 2842.69995, 58.42000,   0.00000, 120.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(2960, -6027.15820, 2842.69995, 58.34000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5791.94678, 3260.71191, 18.79000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5545.70459, 2748.38794, 39.46670,   0.00000, 0.00000, -89.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5690.28711, 2695.59912, 29.38912,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5825.82617, 2638.79810, 29.38912,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5938.02002, 2672.74805, 29.38910,   4.00000, 0.00000, 98.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -5918.57715, 2678.85303, 29.38910,   0.00000, 0.00000, 66.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6103.40186, 2663.37988, 29.38912,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
CreateDynamicObject(16192, -6153.84277, 3036.53589, 35.17816,   0.00000, 0.00000, 37.00000, -1, -1, -1, 300);
CreateDynamicObject(16097, -5825.73193, 2989.48193, 46.04025,   0.00000, 8.00000, 135.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5744.25781, 2927.45605, 44.20845,   0.00000, 20.00000, 174.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5733.27783, 2918.58203, 44.20845,   0.00000, 20.00000, 174.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -6052.09912, 2837.08911, 36.42000,   0.00000, 0.00000, -44.00000, -1, -1, -1, 300);
CreateDynamicObject(16133, -5979.71289, 2837.14307, 32.64191,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
//дрифт островок 2 (конец)

//дрифт трасса 5 (начало)
ObjGam[29] = CreateObject(8040, 3451.22998, 3413.04004, 6.80000,   0.00000, 0.00000, -90.00000);

CreateDynamicObject(18809, 2571.33008, 3029.89990, 67.33000,   97.24000, 134.28000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18822, 2467.13013, 2928.67188, 47.72000,   0.00000, 63.00000, 45.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2607.50342, 3064.81885, 69.56000,   90.00000, 134.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2643.39990, 3099.44995, 69.56000,   90.00000, 134.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2679.11011, 3133.92993, 69.56000,   90.00000, 134.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2714.96997, 3168.56006, 69.56000,   90.00000, 134.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2535.87988, 2995.60010, 62.98000,   97.24000, 134.28000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2500.14990, 2961.12012, 58.61000,   97.24000, 134.28000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18822, 2439.22217, 2900.76440, 23.00500,   180.00000, 116.56210, 45.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2750.82813, 3203.15771, 69.56000,   90.00000, 134.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2786.64990, 3237.76001, 69.56000,   90.00000, 134.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18824, 2813.04004, 3274.57007, 60.31040,   40.08000, 135.24001, 45.08000, -1, -1, -1, 300);
CreateDynamicObject(18824, 2812.25000, 3309.42993, 30.28120,   39.85620, -45.28000, 45.03740, -1, -1, -1, 300);
CreateDynamicObject(18809, 2838.40991, 3346.11011, 21.09000,   90.00000, 134.25999, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2874.14990, 3380.94995, 21.09000,   90.00000, 134.25999, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18822, 2913.41992, 3410.27002, 21.16000,   90.08000, -66.80000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 2961.50000, 3417.51001, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3011.38989, 3417.42993, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3061.25000, 3417.46997, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3111.12988, 3417.45996, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3161.05005, 3417.51001, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3210.95996, 3417.51001, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3260.93994, 3417.30005, 21.09000,   90.00000, 90.04000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3310.97998, 3417.30005, 18.91000,   0.00000, 94.86000, -0.04000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3358.85010, 3417.22998, 14.74000,   0.00000, 95.10000, -0.14000, -1, -1, -1, 300);
CreateDynamicObject(18809, 3408.11011, 3417.17505, 12.84400,   0.00000, 89.41230, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18778, 3436.93994, 3417.70996, 6.51000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3424.28149, 3438.84912, 3.94000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//CreateDynamicObject(8040, 3451.22998, 3413.04004, 6.80000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3475.43384, 3393.28296, 3.94000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(4002, 3613.25000, 3317.80005, 26.01000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3609.70996, 3299.64990, 7.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4002, 3511.95996, 3317.18994, 26.01000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3853, 3458.45996, 3373.07007, 9.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3476.76440, 3366.66797, 3.94000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3476.95776, 3341.40747, 3.94000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3423.77637, 3395.87524, 3.94000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3406.30005, 3221.07007, 34.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3432.22998, 3235.20996, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3471.59009, 3214.06006, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3471.12988, 3345.53003, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3517.45996, 3260.00195, 7.45200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 3452.10010, 3267.65991, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3432.23999, 3327.72998, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3516.44092, 3033.01392, 6.00000,   90.00000, 0.00000, 24.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3527.03760, 3040.26855, 6.00000,   90.00000, 0.00000, 47.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3476.23999, 3096.63989, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3564.51001, 3026.38989, 6.00200,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3471.58008, 3142.58008, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3432.21997, 3142.68994, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3497.71997, 3134.13989, 34.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3406.25000, 3140.40991, 34.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3424.98999, 3084.56006, 11.46000,   0.00000, 0.00000, -77.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3437.77002, 3053.97998, 11.46000,   0.00000, 0.00000, -49.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3462.14990, 3031.77002, 11.46000,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3492.36011, 3024.03003, 11.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(4002, 3524.53003, 3009.69995, 26.01000,   0.00000, 0.00000, 51.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3569.32007, 2887.35010, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3566.11230, 2925.89697, 16.47000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3569.33008, 2979.97998, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3608.13989, 2982.43994, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3498.62012, 3071.85010, 6.68000,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3497.66992, 3205.23999, 34.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3507.10010, 3074.11011, 6.68000,   0.00000, 0.00000, 211.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3514.12988, 3079.88989, 6.68000,   0.00000, 0.00000, 228.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3512.83008, 3093.08008, 11.46000,   0.00000, 0.00000, -155.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3548.10010, 3099.34009, 11.46000,   0.00000, 0.00000, 183.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3580.18286, 3089.78979, 11.46000,   0.00000, 0.00000, 155.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3604.72998, 3067.86011, 11.46000,   0.00000, 0.00000, 131.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3615.14990, 3039.78003, 11.46000,   0.00000, 0.00000, 103.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3732.19238, 2959.19922, 7.28000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3691.07007, 2956.03003, 11.46000,   0.00000, 0.00000, 209.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3667.37988, 2940.58008, 11.46000,   0.00000, 0.00000, -127.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 3588.96997, 2860.94995, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.65015, 2861.56885, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.67920, 2803.85327, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.67651, 2745.06689, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3569.35010, 2794.66992, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.39673, 2804.02563, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3608.14990, 2797.54004, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3632.10010, 2739.87012, 40.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3696.62012, 2697.79004, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3613.13989, 2711.18994, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7184, 3701.62012, 2638.37988, 1.35000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3602.93628, 2659.75952, 18.58000,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.30981, 2689.75537, 16.47000,   0.00000, 0.00000, -68.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3577.63477, 2665.64233, 16.47000,   0.00000, 0.00000, -52.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.06812, 2703.73853, 16.47000,   0.00000, 0.00000, -68.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3610.35742, 2607.26709, 18.58000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3614.10986, 2641.78711, 18.58000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 3677.15991, 2757.73999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3747.62988, 2883.16992, 5.99800,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3696.62988, 2833.23999, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3722.25000, 2848.53003, 40.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3652.13452, 2906.48877, 7.28000,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3730.95996, 2902.38989, 11.46000,   0.00000, 0.00000, -2.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3760.65991, 2902.38989, 11.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3790.04004, 2901.37012, 11.46000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3696.61011, 2790.23999, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3712.69995, 2960.55127, 11.46000,   0.00000, 0.00000, 183.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3717.50000, 2907.89990, 6.00800,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3649.98804, 2882.91284, 7.28000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3648.04980, 2908.68457, 7.28000,   0.00000, 0.00000, 34.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3880.51001, 3008.43994, 11.46000,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3880.09009, 2974.61011, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3870.97998, 2940.08008, 11.46000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3826.43994, 2955.73999, 6.00600,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3847.18994, 2913.43994, 11.46000,   0.00000, 0.00000, 41.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3722.35010, 2724.06006, 40.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3819.14990, 2900.32007, 11.46000,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
CreateDynamicObject(8421, 3830.45996, 3096.44995, 29.88000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3923.03003, 3130.19995, 40.04000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3890.14990, 3062.83008, 6.00400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3885.63989, 3033.82007, 11.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3874.98511, 3064.08936, 6.01000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(3724, 3874.34009, 3178.87012, 21.69000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3968.21997, 3119.77002, 6.00000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3999.13989, 3094.62988, 6.00800,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(8344, 3903.43994, 3027.73999, 6.00200,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 4042.00000, 3148.86011, 7.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3920.43994, 3033.81006, 11.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3956.27148, 3035.42188, 11.46000,   0.00000, 0.00000, 8.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3990.53003, 3041.55005, 11.46000,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 4017.69995, 3052.50000, 11.46000,   0.00000, 0.00000, 40.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 4042.28003, 3080.78003, 11.46000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 4041.98999, 3241.42993, 7.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 3995.84009, 3251.06006, 6.00400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 4042.02002, 3308.17993, 7.45200,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 4023.19336, 3248.95972, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3913.46997, 3357.65991, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3977.12012, 3341.04004, 11.46000,   0.00000, 0.00000, -114.27930, -1, -1, -1, 300);
CreateDynamicObject(7317, 4053.13672, 3362.33154, 11.46000,   0.00000, 0.00000, 79.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 4055.02319, 3391.97510, 11.46000,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 4048.17725, 3413.16064, 11.46000,   0.00000, 0.00000, 127.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 4029.01514, 3434.67993, 11.46000,   0.00000, 0.00000, 142.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 4006.88281, 3447.72729, 11.46000,   0.00000, 0.00000, 169.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3992.14990, 3387.94995, 11.46000,   0.00000, 0.00000, 276.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3939.40601, 3453.39600, 11.46000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 4005.70996, 3368.82007, 6.62000,   0.00000, 0.00000, 246.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 4007.81006, 3377.70996, 6.62000,   0.00000, 0.00000, -92.61430, -1, -1, -1, 300);
CreateDynamicObject(979, 4006.75000, 3386.77002, 6.62000,   0.00000, 0.00000, -74.00830, -1, -1, -1, 300);
CreateDynamicObject(7317, 3906.60010, 3294.94995, 11.46000,   0.00000, 0.00000, 76.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3990.40991, 3361.80005, 11.46000,   0.00000, 0.00000, 234.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3912.95996, 3323.05005, 11.46000,   0.00000, 0.00000, 88.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3859.60010, 3303.51001, 6.00000,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3873.57007, 3431.02002, 11.46000,   0.00000, 0.00000, -126.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3903.24292, 3451.49316, 11.46000,   0.00000, 0.00000, 207.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3972.49048, 3452.38232, 11.46000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3859.13989, 3405.63989, 11.46000,   0.00000, 0.00000, -105.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3999.89990, 3399.50000, 6.00000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3907.70996, 3399.73999, 6.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3854.44434, 3376.75488, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3770.66992, 3299.70996, 7.45200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3805.90991, 3299.67993, 7.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3850.82007, 3250.82007, 11.46000,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3885.87012, 3266.16992, 11.46000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3915.67993, 3371.73999, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3913.33008, 3368.27002, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3917.65991, 3375.31006, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3815.27563, 3249.90601, 11.46000,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 3751.30005, 3280.17993, 6.00000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(4002, 3647.31006, 3241.73999, 26.01000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3702.43994, 3260.03809, 7.45200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(3620, 3736.00000, 3292.62988, 18.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3702.20996, 3299.67993, 7.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3609.90991, 3260.00000, 7.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(8357, 3539.04004, 3280.10010, 6.00000,   -0.01330, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3517.08008, 3299.65210, 7.45200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(6863, 3405.41992, 3331.39990, 34.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3489.52417, 3073.13159, 6.68000,   0.00000, 0.00000, 165.00000, -1, -1, -1, 300);
CreateDynamicObject(3853, 3443.02441, 3373.30664, 9.75000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3481.33887, 3077.11499, 6.68000,   0.00000, 0.00000, 143.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3475.12207, 3083.77905, 6.68000,   0.00000, 0.00000, 123.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 3471.95386, 3092.23975, 6.68000,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3566.18872, 2908.11792, 16.47000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3566.05200, 2887.18457, 16.47000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3566.01392, 2872.97632, 16.47000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.59229, 2841.41968, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.65991, 2822.10669, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.66260, 2786.69580, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.67627, 2765.85791, 16.47000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3567.59839, 2716.73755, 16.47000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3569.06348, 2677.68164, 16.47000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3586.91187, 2654.73340, 16.47000,   0.00000, 0.00000, -44.00000, -1, -1, -1, 300);
CreateDynamicObject(6931, 3626.77759, 2604.46606, 18.58000,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3608.13989, 2890.00879, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(987, 3569.62939, 3026.27368, 5.80720,   0.00000, 0.00000, 116.00000, -1, -1, -1, 300);
CreateDynamicObject(987, 3564.42261, 3036.98047, 5.80720,   0.00000, 0.00000, 148.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3522.16187, 3036.07642, 6.00000,   90.00000, 0.00000, 32.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3531.36060, 3044.13086, 6.00000,   90.00000, 0.00000, 35.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3536.42822, 3047.09619, 6.00000,   90.00000, 0.00000, 23.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3541.67969, 3048.74365, 6.00000,   90.00000, 0.00000, 9.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3536.27979, 3043.06860, 6.00000,   90.00000, 0.00000, 23.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3532.14355, 3039.99146, 6.00000,   90.00000, 0.00000, 33.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3526.86108, 3037.29272, 6.00000,   90.00000, 0.00000, 47.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3529.20215, 3034.01831, 6.00000,   90.00000, 0.00000, 47.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3524.49536, 3032.69312, 6.00000,   90.00000, 0.00000, 32.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3518.85596, 3030.88818, 6.00000,   90.00000, 0.00000, 32.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3548.31055, 3048.34009, 6.00000,   90.00000, 0.00000, -11.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3553.66821, 3046.41113, 6.00000,   90.00000, 0.00000, -27.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3558.66260, 3043.29785, 6.00000,   90.00000, 0.00000, -39.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3562.43286, 3039.17554, 6.00000,   90.00000, 0.00000, -59.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3565.00586, 3033.88135, 6.00000,   90.00000, 0.00000, -71.00000, -1, -1, -1, 300);
CreateDynamicObject(974, 3566.47998, 3028.07373, 6.00000,   90.00000, 0.00000, -81.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3656.89478, 2830.48291, 7.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3645.43823, 2884.37964, 7.28000,   0.00000, 0.00000, 44.00000, -1, -1, -1, 300);
CreateDynamicObject(8343, 3811.15479, 2972.02466, 6.00200,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3737.23218, 2951.99902, 7.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3738.97998, 2959.06201, 7.28000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3759.76001, 2959.22510, 7.28000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3759.39844, 2961.69995, 7.28000,   0.00000, 0.00000, 79.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3774.54517, 2962.32056, 7.28000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3789.25000, 2961.66968, 7.28000,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3781.45996, 2962.42822, 7.28000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3792.82520, 2963.48828, 7.28000,   0.00000, 0.00000, 49.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3795.97363, 2965.61426, 7.28000,   0.00000, 0.00000, 53.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3807.23242, 2976.18701, 7.28000,   0.00000, 0.00000, 73.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3808.79932, 2978.75586, 7.28000,   0.00000, 0.00000, 83.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3810.30176, 2982.18701, 7.28000,   0.00000, 0.00000, 93.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3812.21289, 2998.94946, 7.28000,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3812.30005, 3003.53784, 7.28000,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3812.31323, 3008.16333, 7.28000,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3810.76855, 3024.53613, 7.28000,   0.00000, 0.00000, 125.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3809.58252, 3028.77197, 7.28000,   0.00000, 0.00000, 123.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3808.63599, 3033.72705, 7.28000,   0.00000, 0.00000, 119.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3808.29907, 3053.31226, 7.28000,   0.00000, 0.00000, 103.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3809.37256, 3058.34082, 7.28000,   0.00000, 0.00000, 97.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3805.16870, 3056.30249, 7.28000,   0.00000, 0.00000, 155.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3975.38110, 3184.22510, 7.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3975.38110, 3276.68799, 7.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(979, 4003.25854, 3393.76367, 6.62000,   0.00000, 0.00000, -56.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3854.45337, 3345.39209, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3853.44482, 3334.05200, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3851.33008, 3330.16333, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3849.23657, 3327.12476, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3846.86963, 3324.25342, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3854.12061, 3338.26074, 11.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3919.88452, 3378.48169, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3923.50513, 3381.41724, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3928.86255, 3383.65894, 11.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3937.57446, 3397.62939, 11.46000,   0.00000, 0.00000, -7.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3970.65381, 3394.53491, 11.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3974.21558, 3392.35645, 11.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7504, 3759.79834, 3260.04004, 7.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(7317, 3818.78394, 3235.23804, 11.46000,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3475.06226, 3420.63965, 3.94000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3475.66406, 3446.95020, 3.94000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3459.45117, 3460.73364, 3.94000,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3439.49731, 3460.61890, 3.94000,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.00000, 2833.56885, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.12158, 2864.79858, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.02832, 2895.90649, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.10840, 2926.45190, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.14380, 2956.20508, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.36914, 2985.38477, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3614.80078, 3014.78955, 7.28000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3968.68750, 3160.62769, 7.28000,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3968.25781, 3189.24878, 7.28000,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3968.68115, 3219.61572, 7.28000,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3968.38867, 3249.55029, 7.28000,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3968.64014, 3278.13501, 7.28000,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3968.25244, 3304.90723, 7.28000,   0.00000, 0.00000, -5.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3833.18701, 3307.20435, 7.28000,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3826.49121, 3307.13721, 7.28000,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3795.93286, 3253.22290, 7.28000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3788.49023, 3253.43311, 7.28000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3766.02881, 3253.36865, 7.28000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3758.82617, 3252.84106, 7.28000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3806.56934, 3307.06396, 7.28000,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
CreateDynamicObject(694, 3799.76709, 3307.32397, 7.28000,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
//дрифт трасса 5 (конец)

//парковка LV 2 (начало)
CreateDynamicObject(983, 1103.75000, 2283.40991, 10.50000,   0.00000, 0.00000, 85.42660, -1, -1, -1, 300);
CreateDynamicObject(983, 1108.27002, 2283.05005, 10.50000,   0.00000, 0.00000, 85.47980, -1, -1, -1, 300);
CreateDynamicObject(983, 1114.55005, 2281.88989, 10.50000,   0.00000, 0.00000, 73.73400, -1, -1, -1, 300);
CreateDynamicObject(983, 1119.21729, 2278.26001, 10.50000,   0.00000, 0.00000, 30.42560, -1, -1, -1, 300);
CreateDynamicObject(983, 1120.81006, 2272.32007, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1120.79004, 2265.94995, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1120.81995, 2259.60010, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1105.66003, 2298.32007, 10.50000,   0.00000, 0.00000, 90.90940, -1, -1, -1, 300);
CreateDynamicObject(983, 1111.69995, 2297.12012, 10.50000,   0.00000, 0.00000, 66.63840, -1, -1, -1, 300);
CreateDynamicObject(983, 1117.52002, 2294.43994, 10.50000,   0.00000, 0.00000, 63.92270, -1, -1, -1, 300);
CreateDynamicObject(983, 1122.88000, 2291.03003, 10.50000,   0.00000, 0.00000, 51.14630, -1, -1, -1, 300);
CreateDynamicObject(983, 1127.17004, 2286.33008, 10.50000,   0.00000, 0.00000, 33.94180, -1, -1, -1, 300);
CreateDynamicObject(983, 1130.13000, 2282.63989, 10.50000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1129.56995, 2282.84009, 10.50000,   0.00000, 0.00000, 33.38820, -1, -1, -1, 300);
CreateDynamicObject(983, 1130.18994, 2280.75000, 10.50000,   0.00000, 0.00000, 22.46550, -1, -1, -1, 300);
CreateDynamicObject(983, 1131.40002, 2276.89990, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1131.40002, 2260.89990, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1130.72998, 2244.40991, 10.50000,   0.00000, 0.00000, -12.26600, -1, -1, -1, 300);
CreateDynamicObject(983, 1127.66003, 2239.20996, 10.50000,   0.00000, 0.00000, 131.06650, -1, -1, -1, 300);
CreateDynamicObject(983, 1122.20996, 2236.08008, 10.50000,   0.00000, 0.00000, 108.76060, -1, -1, -1, 300);
CreateDynamicObject(982, 1104.69995, 2256.50000, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1088.69995, 2256.50000, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1080.75000, 2255.31006, 10.40000,   0.00000, 0.00000, -74.86700, -1, -1, -1, 300);
CreateDynamicObject(983, 1074.84998, 2252.97998, 10.40000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1104.69995, 2234.10010, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1096.69995, 2234.10010, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1065.84998, 2224.53003, 10.50000,   0.00000, 0.00000, 31.90690, -1, -1, -1, 300);
CreateDynamicObject(983, 1069.70996, 2219.53003, 10.50000,   0.00000, 0.00000, 43.46800, -1, -1, -1, 300);
CreateDynamicObject(983, 1074.77002, 2215.69995, 10.50000,   0.00000, 0.00000, 62.46800, -1, -1, -1, 300);
CreateDynamicObject(983, 1080.65002, 2213.29004, 10.50000,   0.00000, 0.00000, 73.24190, -1, -1, -1, 300);
CreateDynamicObject(982, 1098.30005, 2211.39990, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1114.30005, 2211.39990, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1122.09998, 2232.44995, 10.50000,   0.00000, 0.00000, 70.09310, -1, -1, -1, 300);
CreateDynamicObject(982, 1131.40002, 2235.30005, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1127.58997, 2229.34009, 10.50000,   0.00000, 0.00000, 50.66750, -1, -1, -1, 300);
CreateDynamicObject(983, 1130.73999, 2224.17993, 10.50000,   0.00000, 0.00000, 11.90690, -1, -1, -1, 300);
CreateDynamicObject(982, 1131.40002, 2209.69995, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1132.20996, 2202.52002, 10.50000,   0.00000, 0.00000, 14.65170, -1, -1, -1, 300);
CreateDynamicObject(983, 1130.52002, 2202.53003, 10.50000,   0.00000, 0.00000, -16.11970, -1, -1, -1, 300);
CreateDynamicObject(983, 1134.60999, 2196.69995, 10.50000,   0.00000, 0.00000, 29.96010, -1, -1, -1, 300);
CreateDynamicObject(983, 1128.12000, 2196.67993, 10.50000,   0.00000, 0.00000, -28.65420, -1, -1, -1, 300);
CreateDynamicObject(983, 1138.48999, 2191.64990, 10.50000,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1124.22998, 2191.62012, 10.50000,   0.00000, 0.00000, -46.22610, -1, -1, -1, 300);
CreateDynamicObject(983, 1137.57996, 2189.40991, 10.50000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1124.59998, 2189.19995, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1098.30005, 2189.10010, 10.90000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1080.95996, 2210.77002, 10.50000,   0.00000, 0.00000, 120.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1076.81006, 2208.35010, 10.50000,   0.00000, 0.00000, -59.22610, -1, -1, -1, 300);
CreateDynamicObject(983, 1072.00000, 2204.35010, 10.50000,   0.00000, 0.00000, -41.06900, -1, -1, -1, 300);
CreateDynamicObject(983, 1068.31006, 2199.16992, 10.50000,   0.00000, 0.00000, -29.60100, -1, -1, -1, 300);
CreateDynamicObject(983, 1065.87000, 2193.33008, 10.50000,   0.00000, 0.00000, -15.45220, -1, -1, -1, 300);
CreateDynamicObject(983, 1065.83997, 2187.17993, 10.50000,   0.00000, 0.00000, 15.06650, -1, -1, -1, 300);
CreateDynamicObject(983, 1068.26001, 2181.33008, 10.50000,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1072.15002, 2176.33008, 10.50000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1077.15002, 2172.41992, 10.50000,   0.00000, 0.00000, 58.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1083.01001, 2169.92993, 10.50000,   0.00000, 0.00000, 76.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1084.53003, 2169.50000, 10.50000,   0.00000, 0.00000, 77.67830, -1, -1, -1, 300);
CreateDynamicObject(983, 1127.84998, 2288.62988, 10.50000,   0.00000, 0.00000, 22.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1125.55005, 2294.60010, 10.50000,   0.00000, 0.00000, 20.22610, -1, -1, -1, 300);
CreateDynamicObject(983, 1123.62000, 2300.60010, 10.50000,   0.00000, 0.00000, 15.41480, -1, -1, -1, 300);
CreateDynamicObject(982, 1122.78003, 2316.47998, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1123.27002, 2326.68994, 10.51000,   0.00000, 0.00000, -13.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1124.81995, 2331.21997, 10.51000,   0.00000, 0.00000, -29.81380, -1, -1, -1, 300);
CreateDynamicObject(983, 1128.68994, 2336.21997, 10.51000,   0.00000, 0.00000, -45.78720, -1, -1, -1, 300);
CreateDynamicObject(983, 1133.71997, 2340.06006, 10.51000,   0.00000, 0.00000, -59.39650, -1, -1, -1, 300);
CreateDynamicObject(983, 1139.55005, 2342.46997, 10.51000,   0.00000, 0.00000, 104.38570, -1, -1, -1, 300);
CreateDynamicObject(983, 1148.48999, 2342.18994, 10.51000,   0.00000, 0.00000, 70.21530, -1, -1, -1, 300);
CreateDynamicObject(983, 1152.94995, 2340.22998, 10.51000,   0.00000, 0.00000, 59.50540, -1, -1, -1, 300);
CreateDynamicObject(983, 1156.22998, 2336.50000, 10.51000,   0.00000, 0.00000, 19.84290, -1, -1, -1, 300);
CreateDynamicObject(982, 1143.03003, 2316.20996, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1143.07996, 2308.20996, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1142.68994, 2291.44995, 10.50000,   0.00000, 0.00000, -19.27390, -1, -1, -1, 300);
CreateDynamicObject(983, 1140.55896, 2285.40210, 10.50000,   0.00000, 0.00000, -19.50000, -1, -1, -1, 300);
CreateDynamicObject(983, 1155.51001, 2180.93994, 16.40000,   0.00000, 0.00000, -32.27930, -1, -1, -1, 300);
CreateDynamicObject(983, 1151.71997, 2175.90991, 16.40000,   0.00000, 0.00000, -42.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1146.69995, 2172.00000, 16.40000,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1140.84998, 2169.59009, 16.40000,   0.00000, 0.00000, -73.26600, -1, -1, -1, 300);
CreateDynamicObject(983, 1134.13000, 2227.25000, 16.40000,   0.00000, 0.00000, 46.22610, -1, -1, -1, 300);
CreateDynamicObject(983, 1138.02002, 2222.25000, 16.40000,   0.00000, 0.00000, 29.38570, -1, -1, -1, 300);
CreateDynamicObject(982, 1139.59998, 2210.60010, 16.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1138.81006, 2207.46997, 16.40000,   0.00000, 0.00000, -14.34580, -1, -1, -1, 300);
CreateDynamicObject(983, 1139.59998, 2194.60010, 16.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1079.34998, 2169.56006, 16.40000,   0.00000, 0.00000, 74.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1073.52002, 2172.00000, 16.40000,   0.00000, 0.00000, 60.45220, -1, -1, -1, 300);
CreateDynamicObject(983, 1068.56995, 2175.88989, 16.40000,   0.00000, 0.00000, 43.41230, -1, -1, -1, 300);
CreateDynamicObject(983, 1064.70996, 2180.92993, 16.40000,   0.00000, 0.00000, 31.81380, -1, -1, -1, 300);
CreateDynamicObject(983, 1064.98999, 2199.62988, 16.40000,   0.00000, 0.00000, -30.41230, -1, -1, -1, 300);
CreateDynamicObject(983, 1068.80005, 2204.60010, 16.40000,   0.00000, 0.00000, -44.57190, -1, -1, -1, 300);
CreateDynamicObject(983, 1073.81995, 2208.47998, 16.40000,   0.00000, 0.00000, -60.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1079.68005, 2210.90991, 16.40000,   0.00000, 0.00000, 105.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1120.78625, 2189.25000, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1121.77783, 2190.11987, 16.40000,   0.00000, 0.00000, 105.90440, -1, -1, -1, 300);
CreateDynamicObject(983, 1127.56995, 2192.69995, 16.40000,   0.00000, 0.00000, 122.25270, -1, -1, -1, 300);
CreateDynamicObject(983, 1132.57996, 2196.55005, 16.40000,   0.00000, 0.00000, -47.22860, -1, -1, -1, 300);
CreateDynamicObject(983, 1136.48999, 2201.57007, 16.40000,   0.00000, 0.00000, -28.47880, -1, -1, -1, 300);
CreateDynamicObject(983, 1129.06995, 2231.07007, 16.40000,   0.00000, 0.00000, 59.41230, -1, -1, -1, 300);
CreateDynamicObject(983, 1123.22998, 2233.48999, 16.40000,   0.00000, 0.00000, 75.08230, -1, -1, -1, 300);
CreateDynamicObject(983, 1129.06006, 2237.61011, 16.40000,   0.00000, 0.00000, -60.78720, -1, -1, -1, 300);
CreateDynamicObject(983, 1123.18994, 2235.15991, 16.40000,   0.00000, 0.00000, -74.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1116.95996, 2234.33008, 16.40000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1100.90002, 2234.30005, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1086.50000, 2234.30005, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1106.69995, 2211.80005, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1101.90002, 2211.80005, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1095.18726, 2189.25000, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1085.95996, 2211.75000, 16.40000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1079.69995, 2212.51001, 16.40000,   0.00000, 0.00000, 76.29260, -1, -1, -1, 300);
CreateDynamicObject(983, 1073.88000, 2214.91992, 16.40000,   0.00000, 0.00000, 58.69410, -1, -1, -1, 300);
CreateDynamicObject(983, 1068.83997, 2218.80005, 16.40000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1064.98999, 2223.81006, 16.40000,   0.00000, 0.00000, 29.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1134.07996, 2241.46997, 16.40000,   0.00000, 0.00000, -44.22860, -1, -1, -1, 300);
CreateDynamicObject(983, 1137.93994, 2246.41992, 16.40000,   0.00000, 0.00000, -31.70740, -1, -1, -1, 300);
CreateDynamicObject(983, 1080.19995, 2256.69995, 16.40000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1091.40002, 2256.69995, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1107.40002, 2256.69995, 16.80000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1119.67004, 2267.81006, 16.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1119.45996, 2280.73999, 17.49000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1119.51001, 2286.73999, 17.49000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1119.54004, 2292.76001, 17.49000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(18275, 1120.04004, 2283.69995, 17.00000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(18275, 1120.06995, 2289.69995, 17.00000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1139.57996, 2286.35010, 16.40000,   0.00000, 0.00000, -4.26600, -1, -1, -1, 300);
CreateDynamicObject(983, 1119.59998, 2327.00000, 16.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1119.59998, 2311.00000, 16.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1119.59998, 2296.32617, 16.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1122.93005, 2292.36011, 16.40000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1126.10999, 2293.00000, 17.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1132.06995, 2292.87012, 17.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(1262, 1138.09998, 2292.98999, 17.40000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18275, 1129.02002, 2292.32007, 17.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(18275, 1135.03003, 2292.30005, 17.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1141.51001, 2292.23999, 16.40000,   0.00000, 0.00000, -32.01330, -1, -1, -1, 300);
CreateDynamicObject(983, 1140.75000, 2293.05005, 16.40000,   0.00000, 0.00000, -74.29260, -1, -1, -1, 300);
CreateDynamicObject(983, 1135.15002, 2300.03003, 19.30000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1135.14001, 2296.25000, 19.30000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1128.75000, 2300.04004, 19.30000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1128.77002, 2296.26001, 19.30000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1135.39001, 2299.44995, 18.70000,   0.00000, 90.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1135.40002, 2298.14990, 18.70000,   0.00000, 90.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1135.39001, 2296.93994, 18.70000,   0.00000, 90.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1128.98999, 2299.50000, 18.70000,   0.00000, 90.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1128.98999, 2298.23999, 18.70000,   0.00000, 90.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1129.00000, 2296.94995, 18.70000,   0.00000, 90.00000, 90.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1143.19995, 2306.10010, 16.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(982, 1143.19995, 2317.30005, 16.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
CreateDynamicObject(983, 1136.59521, 2190.33545, 16.80000,   0.00000, 0.00000, -70.43060, -1, -1, -1, 300);
//парковка LV 2 (конец)

//дрифт трасса 6 (начало)
	ObjGam[30] = CreateObject(6959, 2405.04004, -4115.22998, 12.72000,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(619, 2238.60010, -4423.79004, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(9907, 2369.38989, -4151.12988, -7.04000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2193.70996, -4353.20996, 12.68000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2193.63989, -4352.54980, 12.56000,   0.00000, 0.00000, 171.00000, -1, -1, -1, 300);
	CreateDynamicObject(5147, 2358.69995, -4189.97021, 22.50400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2445.39990, -4230.49023, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2465.00000, -4217.29004, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2203.21997, -4371.47998, 12.56000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2238.84009, -4468.43994, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2426.45996, -4216.89014, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2308.87012, -4502.81982, 12.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(972, 2394.71997, -4171.64014, 12.69000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, 2405.04004, -4155.22998, 12.72000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2463.35010, -3970.94995, 13.47000,   0.00000, 0.00000, 89.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2290.97998, -4494.70020, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(972, 2398.61011, -4098.62012, 12.69000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2220.55005, -4454.20020, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2465.05005, -4237.41016, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2204.53003, -4376.22998, 13.42000,   0.00000, 0.00000, -97.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2238.59009, -4491.72021, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2203.05005, -4437.10986, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2426.27002, -4236.04980, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2290.62012, -4520.56006, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2501.34009, -3900.14990, 13.47000,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2327.64990, -4548.25000, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.75000, -4458.47021, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2239.38989, -4508.62988, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2505.39990, -3936.21997, 13.47000,   0.00000, 0.00000, -7.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.42993, -4477.83008, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2291.40991, -4560.54980, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2239.22998, -4528.39990, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.91992, -4498.35010, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2238.87012, -4546.45996, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2167.58008, -4346.12988, 13.42000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2324.71997, -4610.33984, 13.47000,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2227.47998, -4338.06982, 13.42000,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2139.63989, -4348.64014, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2201.22998, -4515.04004, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2292.15991, -4598.02002, 13.47000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3516, 2434.20996, -4161.93994, 15.85000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2326.16992, -4616.00000, 12.56000,   0.00000, 0.00000, -52.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2322.21997, -4621.14014, 13.47000,   0.00000, 0.00000, 71.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2239.13013, -4567.39209, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(972, 2415.11011, -4098.64990, 12.69000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2224.47998, -4331.41016, 12.56000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2574.27002, -3907.75000, 12.56000,   0.00000, 0.00000, 25.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2277.23999, -4626.41016, 13.47000,   0.00000, 0.00000, -152.00000, -1, -1, -1, 300);
	CreateDynamicObject(9907, 2414.21851, -4102.12988, -40.37600,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.33008, -4535.87988, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2316.93994, -4633.08984, 13.47000,   0.00000, 0.00000, 57.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2284.84009, -4618.29004, 12.68500,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1263, 2426.64990, -4161.93994, 16.07000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2285.55005, -4619.56982, 13.47000,   0.00000, 0.00000, -129.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2121.21997, -4346.77002, 13.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2211.17993, -4322.66016, 13.42000,   0.00000, 0.00000, 147.00000, -1, -1, -1, 300);
	CreateDynamicObject(5532, 2407.33008, -4150.22021, 20.74000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2239.70996, -4590.37988, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(18452, 2413.10010, -4170.22021, 15.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1676, 2413.86011, -4173.12012, 14.47000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.10010, -4555.66992, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2093.80005, -4342.91992, 13.45000,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2308.98999, -4643.54004, 13.47000,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2295.56006, -4206.81982, 6.27000,   0.00000, 0.00000, -107.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2193.79004, -4312.12012, 12.56000,   0.00000, 0.00000, 28.00000, -1, -1, -1, 300);
	CreateDynamicObject(972, 2410.71997, -4171.64014, 12.69000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2162.85010, -4312.29004, 13.42000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(972, 2387.88989, -4146.18018, 12.56000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2271.65991, -4626.66992, 12.56000,   0.00000, 0.00000, 55.00000, -1, -1, -1, 300);
	CreateDynamicObject(16362, 2445.47998, -4145.60010, 15.69000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2081.88989, -4336.97021, 13.45000,   0.00000, 0.00000, -32.00000, -1, -1, -1, 300);
	CreateDynamicObject(9907, 2369.38989, -4102.12988, -7.04000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1263, 2445.43994, -4161.85010, 16.12000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2464.97998, -4261.22021, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2074.59009, -4334.79980, 12.56000,   0.00000, 0.00000, 193.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2425.90991, -4261.20996, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.54004, -4576.75000, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2271.43994, -4662.22021, 13.47000,   0.00000, 0.00000, 7.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2071.62305, -4328.99902, 13.45000,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2266.52002, -4629.27979, 13.47000,   0.00000, 0.00000, 182.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2243.76001, -4615.47021, 12.56000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2305.26001, -4649.81982, 12.56000,   0.00000, 0.00000, -86.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2465.14990, -4276.10010, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2678.13989, -4184.20020, 13.48000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2098.82007, -4306.16016, 13.45000,   0.00000, 0.00000, -215.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2255.61011, -4627.70996, 13.47000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2246.41992, -4621.91992, 13.47000,   0.00000, 0.00000, 137.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2062.92993, -4319.08008, 13.45000,   0.00000, 0.00000, -57.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2425.75000, -4277.50000, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2298.94995, -4651.83008, 13.47000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2193.52002, -4374.35986, 0.24000,   0.00000, 0.00000, -23.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2146.07007, -4215.00000, 2.77000,   0.00000, 0.00000, -107.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2202.68994, -4602.35010, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(9907, 2480.88989, -4151.12988, -7.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2056.27002, -4306.72998, 13.45000,   0.00000, 0.00000, -70.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2086.91992, -4287.95020, 13.45000,   0.00000, 0.00000, 97.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2464.82007, -4294.72998, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2089.50000, -4271.00000, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2087.56006, -4265.72998, 13.45000,   0.00000, 0.00000, 81.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2050.60010, -4286.31006, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2097.89990, -4264.81006, 0.02000,   0.00000, 0.00000, -24.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2052.81006, -4278.91992, 13.45000,   0.00000, 0.00000, -97.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2465.17993, -4309.16016, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2055.39990, -4266.16016, 13.45000,   0.00000, 0.00000, -106.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2425.63989, -4310.41992, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2091.15991, -4242.00977, 13.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2214.88989, -4208.58008, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2243.76001, -4208.41992, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2186.87988, -4208.87012, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2056.75000, -4255.64014, 13.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2263.37012, -4208.35986, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2392.84009, -4322.68994, -1.42000,   0.00000, 0.00000, -65.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2425.55005, -4328.47021, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2465.35010, -4329.81006, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2463.14990, -4341.72021, 13.46000,   0.00000, 0.00000, 86.42000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2203.70996, -4365.35986, 13.42000,   0.00000, 0.00000, -72.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2421.35010, -4347.79980, 12.68000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2093.48999, -4225.29004, 12.56000,   0.00000, 0.00000, -69.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2420.31006, -4350.37012, 13.46000,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2460.94995, -4350.62988, 13.46000,   0.00000, 0.00000, 65.84000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2363.89990, -4341.97998, 13.46000,   0.00000, 0.00000, 171.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2374.35010, -4344.87012, 13.46000,   0.00000, 0.00000, 158.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2093.05005, -4220.39990, 13.45000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2280.10010, -4196.72998, 13.63000,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2198.87012, -4355.89990, 13.42000,   0.00000, 0.00000, -51.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2353.36011, -4340.87012, 13.46000,   0.00000, 0.00000, 177.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2382.87988, -4351.33008, 13.46000,   0.00000, 0.00000, 137.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2343.13989, -4341.41992, 13.46000,   0.00000, 0.00000, 189.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2411.86011, -4356.35010, 13.46000,   0.00000, 0.00000, -154.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2336.11011, -4341.18018, 12.56000,   0.00000, 0.00000, 76.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2457.04004, -4359.00000, 13.46000,   0.00000, 0.00000, 64.08000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2399.12988, -4357.68994, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2392.12988, -4357.06982, 13.46000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2401.97998, -4358.75977, 13.46000,   0.00000, 0.00000, 182.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2333.27002, -4344.27979, 13.46000,   0.00000, 0.00000, 200.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2452.37988, -4366.68994, 13.46000,   0.00000, 0.00000, 53.50000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2301.05005, -4370.29980, 13.46000,   0.00000, 0.00000, -121.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2323.84009, -4348.58984, 13.46000,   0.00000, 0.00000, 209.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2262.42993, -4179.70020, 13.23000,   0.00000, 0.00000, 155.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2274.20996, -4181.47021, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2446.48999, -4373.89990, 13.46000,   0.00000, 0.00000, 48.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2057.31006, -4222.18994, 13.45000,   0.00000, 0.00000, -95.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2439.45996, -4379.68018, 13.46000,   0.00000, 0.00000, 30.84000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2291.91992, -4409.93018, 13.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2315.17993, -4354.41992, 13.46000,   0.00000, 0.00000, -141.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2431.76001, -4384.83008, 13.46000,   0.00000, 0.00000, 36.70000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2280.20996, -4172.83984, 10.02000,   0.00000, 0.00000, 65.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2169.12988, -4171.58984, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2356.50000, -4374.64990, 13.46000,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2059.94995, -4209.52002, 13.45000,   0.00000, 0.00000, -110.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2365.04175, -4377.41211, 13.46000,   0.00000, 0.00000, -26.84000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2061.39990, -4203.04004, 12.56000,   0.00000, 0.00000, 113.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2350.81006, -4375.20020, 12.56000,   0.00000, 0.00000, -104.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2423.58008, -4389.20996, 13.46000,   0.00000, 0.00000, 19.60000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2130.43994, -4167.75977, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2372.17993, -4383.08008, 13.46000,   0.00000, 0.00000, -50.08000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2073.57715, -4187.30518, 13.45000,   0.00000, 0.00000, -134.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2344.54004, -4375.72998, 13.46000,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2307.26001, -4361.72998, 13.46000,   0.00000, 0.00000, -133.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2414.65991, -4391.93018, 13.46000,   0.00000, 0.00000, 14.32000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2089.02002, -4173.62988, 12.56000,   0.00000, 0.00000, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(5333, 2584.01001, -4189.95020, 21.49000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2379.44995, -4388.43018, 13.46000,   0.00000, 0.00000, -22.60000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2405.83008, -4392.81982, 13.46000,   0.00000, 0.00000, -2.76000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2570.01001, -4046.17993, 13.48000,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2396.76001, -4392.22021, 13.46000,   0.00000, 0.00000, -4.80000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2711.20996, -4146.70996, 13.48000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2202.96997, -4630.54004, 13.44000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2286.60010, -4658.52002, 13.47000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2587.33008, -4064.82007, 12.56000,   0.00000, 0.00000, 191.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2279.31006, -4662.93994, 12.56000,   0.00000, 0.00000, -113.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2388.26001, -4391.06006, 13.46000,   0.00000, 0.00000, -10.66000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2336.67993, -4380.25000, 13.46000,   0.00000, 0.00000, 41.62000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2202.75000, -4641.77979, 13.44000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2258.89990, -4662.25977, 13.47000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2245.90991, -4659.62012, 13.47000,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(971, 2235.10010, -4657.00000, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2251.39990, -4662.95020, 12.56000,   0.00000, 0.00000, -149.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2332.94995, -4385.54980, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(971, 2226.35010, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2615.05005, -4036.37988, 13.48000,   0.00000, 0.00000, 169.00000, -1, -1, -1, 300);
	CreateDynamicObject(971, 2217.52002, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2330.53003, -4386.81006, 13.46000,   0.00000, 0.00000, 52.38000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2350.01001, -4393.50000, 3.78000,   0.00000, 0.00000, 66.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2202.52002, -4652.68018, 13.44000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(971, 2208.77002, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(971, 2205.27002, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2296.62988, -4379.91992, 13.46000,   0.00000, 0.00000, -111.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2705.37012, -4167.39990, 13.48000,   0.00000, 0.00000, -131.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2326.77002, -4394.89014, 13.46000,   0.00000, 0.00000, 77.28000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2664.35010, -4035.61011, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2710.12012, -4158.02002, 13.48000,   0.00000, 0.00000, -103.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2325.75000, -4404.06006, 13.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2293.60010, -4389.54980, 13.46000,   0.00000, 0.00000, -101.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2711.91992, -4135.27979, 13.48000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2716.73999, -4203.77979, 13.48000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2608.83008, -3957.17993, 13.46000,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2236.98999, -4358.18994, 13.42000,   0.00000, 0.00000, 105.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2700.34009, -4075.59009, 12.56000,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2681.89990, -4035.72998, 13.48000,   0.00000, 0.00000, 181.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2239.65991, -4362.72021, 12.56000,   0.00000, 0.00000, -25.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2292.12988, -4399.77979, 13.46000,   0.00000, 0.00000, -94.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2714.50000, -4112.45020, 13.48000,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2238.82007, -4369.00000, 13.42000,   0.00000, 0.00000, 96.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2701.26001, -4073.62012, 13.48000,   0.00000, 0.00000, -30.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2238.12988, -4380.93994, 13.42000,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2748.60010, -4101.89014, 13.48000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2728.14990, -4049.05005, 12.56000,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2734.37012, -4057.78003, 13.48000,   0.00000, 0.00000, 131.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2745.29004, -4076.65991, 13.48000,   0.00000, 0.00000, 108.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2748.68994, -4082.62012, 12.56000,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2740.47998, -4062.30005, 12.56000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2702.37012, -4075.92993, 12.68500,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2553.27002, -3939.17993, 13.46000,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2742.11011, -4171.62012, 13.48000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2700.36011, -4035.22998, 12.56000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2233.12012, -4347.68994, 13.42000,   0.00000, 0.00000, 115.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2446.22900, -4056.09009, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2238.87012, -4446.91016, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2562.82007, -3942.93994, 13.46000,   0.00000, 0.00000, -33.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2189.75000, -4349.02979, 13.42000,   0.00000, 0.00000, -24.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2744.77002, -4159.72998, 13.48000,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
//	CreateDynamicObject(6959, 2405.04004, -4115.22998, 12.72000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2706.98999, -4039.46997, 13.48000,   0.00000, 0.00000, 162.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2527.68994, -3903.68994, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2579.75000, -3912.76001, 13.46000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2327.19995, -4509.50977, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2541.45532, -3937.37891, 13.46000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2590.37988, -3920.62988, 13.46000,   0.00000, 0.00000, 136.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2537.08008, -3938.84009, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2553.54004, -3904.52002, 13.46000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2529.46997, -3936.80005, 13.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2203.85010, -4387.12988, 13.45000,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2727.34009, -4195.14014, 13.48000,   0.00000, 0.00000, 44.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2664.46997, -4199.47021, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2173.57007, -4348.16992, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2714.65991, -4101.75977, 13.48000,   0.00000, 0.00000, -93.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2599.12866, -3931.22900, 13.46000,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2515.65991, -3947.34009, 2.20000,   0.00000, 0.00000, 251.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2671.14990, -4181.24023, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2179.06006, -4346.52979, 13.42000,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2709.00000, -4080.35010, 13.48000,   0.00000, 0.00000, -53.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2495.03003, -3934.66992, 13.47000,   0.00000, 0.00000, -10.00000, -1, -1, -1, 300);
	CreateDynamicObject(3516, 2452.96997, -4161.87988, 15.85000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2488.00000, -3899.19995, 13.47000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2506.86011, -3940.25000, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2545.87988, -3902.77002, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2513.05005, -3903.33008, 13.47000,   0.00000, 0.00000, 161.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2517.67993, -3936.79004, 13.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2483.93994, -3934.95996, 13.47000,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2719.40991, -4204.56982, 12.56000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2463.91992, -3958.94995, 13.47000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2471.14990, -3944.70996, 12.69000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2693.64990, -4211.77002, 13.48000,   0.00000, 0.00000, -3.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2473.88989, -3940.51001, 13.47000,   0.00000, 0.00000, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2567.40991, -3907.32007, 13.46000,   0.00000, 0.00000, 162.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2223.25000, -4666.31006, 3.49000,   0.00000, 0.00000, -111.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2466.93994, -3949.06006, 13.47000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2476.43994, -3901.29004, 13.47000,   0.00000, 0.00000, 194.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2290.87012, -4609.87988, 13.47000,   0.00000, 0.00000, -106.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2465.98999, -3904.65991, 13.47000,   0.00000, 0.00000, -158.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2429.58008, -3968.11011, 13.47000,   0.00000, 0.00000, -86.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2456.39990, -3910.08008, 13.47000,   0.00000, 0.00000, -144.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2429.52002, -3957.18994, 13.47000,   0.00000, 0.00000, -95.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2447.84009, -3917.51001, 13.47000,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2269.88989, -4608.85986, 0.71000,   0.00000, 0.00000, 254.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2220.02002, -4329.77979, 13.42000,   0.00000, 0.00000, 136.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2431.37988, -3945.70996, 13.47000,   0.00000, 0.00000, -104.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2675.23999, -4202.25977, 13.48000,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2440.59009, -3925.89990, 13.47000,   0.00000, 0.00000, -126.00000, -1, -1, -1, 300);
	CreateDynamicObject(1676, 2413.34009, -4167.60986, 14.47000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2435.09009, -3935.21997, 13.47000,   0.00000, 0.00000, -115.00000, -1, -1, -1, 300);
	CreateDynamicObject(7520, 2397.87012, -4121.18018, 12.95000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2593.62988, -4015.79004, 13.48000,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2108.38989, -4346.14990, 13.45000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2597.14990, -3999.51001, 12.56000,   0.00000, 0.00000, -70.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2199.29004, -4316.08008, 13.42000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2610.16992, -4033.47998, 12.56000,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2187.11011, -4313.10010, 13.42000,   0.00000, 0.00000, 173.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2726.62012, -4050.03003, 13.48000,   0.00000, 0.00000, 139.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2748.18994, -4089.15991, 13.48000,   0.00000, 0.00000, 98.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2174.98999, -4312.18994, 13.42000,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2745.28003, -4146.87012, 13.48000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2693.09009, -4036.41992, 13.48000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2154.79004, -4310.31006, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2712.85010, -4095.96997, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2220.62988, -4592.39014, 12.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2667.59009, -4183.16016, 13.48000,   0.00000, 0.00000, 166.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2615.87988, -4071.75000, 13.48000,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2426.08008, -4341.47021, 13.46000,   0.00000, 0.00000, -111.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2119.46997, -4311.20020, 13.45000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2445.44067, -4092.33008, 12.69000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2240.78003, -4612.22998, 13.47000,   0.00000, 0.00000, 103.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2108.79004, -4310.20020, 13.45000,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2574.33008, -3958.94995, 13.46000,   0.00000, 0.00000, -79.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2573.09009, -3964.33008, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2097.19995, -4305.08008, 12.68500,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2095.40991, -4301.33008, 12.56000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2574.45996, -3968.91992, 13.46000,   0.00000, 0.00000, -97.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2687.89990, -4181.49023, 13.48000,   0.00000, 0.00000, 207.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2714.05005, -4090.68994, 13.48000,   0.00000, 0.00000, -77.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2091.01001, -4298.52002, 13.45000,   0.00000, 0.00000, 125.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2597.86011, -3994.47998, 13.48000,   0.00000, 0.00000, 49.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2086.57007, -4276.37988, 13.45000,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2053.13989, -4294.02002, 13.45000,   0.00000, 0.00000, -83.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2597.73999, -4025.56006, 13.48000,   0.00000, 0.00000, 121.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2656.27002, -4071.62988, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2565.11011, -3984.22998, 12.56000,   0.00000, 0.00000, 103.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2596.83008, -4020.04004, 12.56000,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2090.00000, -4254.00000, 13.45000,   0.00000, 0.00000, 79.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2640.82007, -4034.50000, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2605.14551, -4032.69897, 13.48000,   0.00000, 0.00000, 150.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2607.19995, -3985.01001, 12.56000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(972, 2387.88989, -4160.43018, 12.56000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2747.77002, -4152.83008, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2262.44995, -4205.50000, 13.45000,   0.00000, 0.00000, 36.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2155.73706, -4209.22266, 16.29000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2717.59009, -4043.89990, 13.48000,   0.00000, 0.00000, 153.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2091.13989, -4231.04980, 13.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2566.32007, -3948.44995, 12.56000,   0.00000, 0.00000, 172.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2134.64990, -4209.39014, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2609.18994, -3948.90991, 12.56000,   0.00000, 0.00000, -26.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2690.36011, -4176.68994, 12.56000,   0.00000, 0.00000, 65.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2270.65991, -4199.97021, 13.45000,   0.00000, 0.00000, 32.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2140.62012, -4206.16016, 13.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2746.62012, -4113.62012, 13.48000,   0.00000, 0.00000, 75.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2278.97998, -4199.75000, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2570.09009, -3949.65991, 13.46000,   0.00000, 0.00000, -53.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2129.90991, -4204.22998, 13.45000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2605.32007, -3943.29004, 13.46000,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2210.73999, -4190.00977, 12.68000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2055.08008, -4240.27002, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2604.41992, -4031.29004, 12.69000,   0.00000, 0.00000, 92.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2097.96997, -4213.16992, 12.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2607.03003, -3975.85010, 13.46000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2119.37012, -4202.20996, 13.45000,   0.00000, 0.00000, -2.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2710.36011, -4132.20020, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2099.67993, -4210.22998, 13.45000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2696.96997, -4175.39990, 13.48000,   0.00000, 0.00000, -141.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2107.38989, -4206.31982, 12.56000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2704.73999, -4167.39990, 12.69000,   0.00000, 0.00000, 180.44000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2108.65991, -4204.06006, 13.45000,   0.00000, 0.00000, 23.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2707.26001, -4162.04980, 12.56000,   0.00000, 0.00000, 91.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2271.92993, -4182.81006, 13.45000,   0.00000, 0.00000, 169.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2282.21997, -4183.93018, 13.66000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2253.27002, -4174.81006, 13.45000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2226.06006, -4171.12012, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2200.84009, -4171.64990, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2255.33008, -4172.87012, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2750.72998, -4096.37988, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2146.96997, -4172.77979, 13.45000,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2748.50000, -4113.58984, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2665.25000, -4197.72021, 13.48000,   0.00000, 0.00000, -10.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2136.62988, -4171.12988, 13.45000,   0.00000, 0.00000, 163.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2735.63989, -4184.72998, 13.48000,   0.00000, 0.00000, 57.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2065.47998, -4197.87988, 13.45000,   0.00000, 0.00000, -121.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2626.54004, -4036.91992, 13.48000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2735.80005, -4187.20020, 12.56000,   0.00000, 0.00000, -78.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2123.20996, -4167.93018, 13.45000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2713.87988, -4124.18018, 13.48000,   0.00000, 0.00000, -99.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2683.80005, -4208.06982, 13.48000,   0.00000, 0.00000, -32.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2108.95996, -4168.52979, 13.45000,   0.00000, 0.00000, 189.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2703.33008, -4126.18994, 9.05000,   0.00000, 0.00000, 158.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2083.46997, -4178.60986, 13.45000,   0.00000, 0.00000, -145.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2604.41992, -3985.44995, 13.46000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2096.41992, -4172.06982, 13.45000,   0.00000, 0.00000, -159.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2677.70996, -4071.32007, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2559.48999, -4028.58008, 12.56000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2563.42993, -4033.93994, 13.48000,   0.00000, 0.00000, -67.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2559.17993, -4021.52002, 13.48000,   0.00000, 0.00000, -79.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2579.62012, -4056.37988, 13.48000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2590.01001, -4063.75000, 13.48000,   0.00000, 0.00000, -31.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2558.43311, -4010.00488, 13.48000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2602.96997, -4069.37988, 13.48000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2561.53003, -3998.67993, 13.48000,   0.00000, 0.00000, -109.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2553.61011, -3989.62988, 7.55000,   0.00000, 0.00000, 131.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2626.60010, -4073.52002, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2656.69995, -4172.83984, 9.55000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2593.19995, -4004.45996, 13.48000,   0.00000, 0.00000, 80.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2571.48999, -3978.36011, 13.46000,   0.00000, 0.00000, -118.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2684.34058, -4210.91016, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 2563.55005, -3944.68994, 12.68500,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2705.03003, -4209.27979, 13.48000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2680.48999, -4069.68994, 13.48000,   0.00000, 0.00000, 4.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2617.12988, -3977.59009, 0.60000,   0.00000, 0.00000, -47.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2691.60010, -4070.15991, 13.48000,   0.00000, 0.00000, -10.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 2740.75000, -4066.34009, 13.48000,   0.00000, 0.00000, 121.00000, -1, -1, -1, 300);
	CreateDynamicObject(619, 2425.67383, -4295.05078, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 300);
	CreateDynamicObject(16121, 2678.83936, -4217.10400, 9.55000,   0.00000, 0.00000, -137.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 2566.13940, -3988.14404, 13.48000,   0.00000, 0.00000, -119.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, 2358.18652, -4182.56104, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, 2358.11621, -4197.12793, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, 2584.13501, -4182.55566, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19121, 2584.21362, -4197.12988, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//дрифт трасса 6 (конец)

//дрифт трасса 7 (начало)
	ObjGam[31] = CreateObject(8357, 9121.086, 3000.896, 10.19590,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(8357, 9200.926, 3000.896, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8357, 9161.028, 3000.896, 10.20590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//	CreateDynamicObject(8357, 9121.086, 3000.896, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8357, 9200.926, 2788.075, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16092, 9208.566, 2893.587, 10.78290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16092, 9193.426, 2893.591, 10.78290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9208.626, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9211.611, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9205.649, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9202.665, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9199.458, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9196.475, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9193.491, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 9190.485, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, 9225.166, 2616.854, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, 9313.605, 2546.352, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9357.161, 2437.153, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9449.787, 2432.568, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 9473.83, 2549.988, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9497.939, 2667.424, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9590.564, 2662.248, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9627.488, 2573.534, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9720.121, 2568.253, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 9744.167, 2685.664, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9768.291, 2803.097, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9856.998, 2840.448, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9861.575, 2933.073, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 9744.169, 2957.125, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9630.658, 2938.216, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9582.504, 2841.667, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9518.304, 2837.97, 10.20590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9480.968, 2926.674, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9415.187, 2922.958, 10.18590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9367.047, 2826.405, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9302.947, 2822.78, 10.20590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9307.97, 3128.246, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8357, 9283.865, 2973.555, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9400.604, 3122.95, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9454.898, 3065.642, 10.20590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9547.525, 3060.339, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9595.654, 3156.885, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9688.287, 3151.798, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9725.593, 3063.095, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9818.22, 3058.276, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 9842.26, 3175.693, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9823.277, 3289.222, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9726.729, 3337.37, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9689.267, 3426.078, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9596.642, 3431.106, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9548.465, 3334.558, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9455.833, 3339.249, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9418.746, 3427.956, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9326.11, 3432.972, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9277.961, 3336.439, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 9190.992, 3302.363, 10.20590,   0.00000, 0.00000, -7.00000, -1, -1, -1, 300);
	CreateDynamicObject(8357, 9161.028, 3153.941, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3980, 9061.878, 2958.007, 20.05450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3980, 9061.869, 3084.163, 20.07450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9116.242, 3124.294, 17.14070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5763, 9143.918, 2861.753, 10.05630,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9167.545, 2835.479, -21.68720,   0.00000, 0.00000, 99.70770, -1, -1, -1, 300);
	CreateDynamicObject(5763, 9072.545, 2861.768, 10.07630,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9124.121, 3156.428, 17.14070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9226.719, 3284.594, 20.59230,   0.00000, 0.00000, 154.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9236.512, 3282.678, 20.59230,   0.00000, 0.00000, 156.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9249.765, 3278.972, 20.59230,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9247.001, 3338.928, 15.40059,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9233.352, 3350.542, 15.40059,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9218.219, 3354.787, 15.40059,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9240.236, 3372.245, 15.50720,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9195.922, 3120.55, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9195.981, 3147.329, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9220.021, 3121.608, 13.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9193.686, 3176.292, 13.05400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9190.134, 3206.063, 13.19680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9191.35, 3237.614, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9126.104, 3188.682, 17.16170,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9126.173, 3222.791, 17.16170,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9125.314, 3255.816, 17.17170,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9129.255, 3287.266, 17.17170,   0.00000, 0.00000, 80.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9140.064, 3319.967, 17.17170,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9164.967, 3348.371, 17.17170,   0.00000, 0.00000, 34.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9235.738, 3093.914, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9235.785, 3067.129, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9231.213, 3036.492, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9235.842, 3006.128, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9231.281, 2975.719, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9231.287, 2941.602, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9235.698, 2911.281, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9235.553, 2884.675, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9235.268, 2858.036, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9235.426, 2831.389, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9235.335, 2804.73, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9235.768, 2778.107, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9231.25, 2747.523, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9235.552, 2717.149, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9231, 2686.526, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9235.537, 2656.045, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9328.692, 2617.259, 16.70050,   0.00000, 0.00000, -25.00000, -1, -1, -1, 300);
	CreateDynamicObject(3980, 9142.214, 2760.461, 20.05450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9166.25, 2671.174, -21.68720,   0.00000, 0.00000, 99.70770, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9165.905, 2633.006, -21.68720,   0.00000, 0.00000, 99.70770, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9175.326, 2611.105, 14.02070,   0.00000, 0.00000, 187.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9308.514, 2538.166, 13.94769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9180.988, 2590.077, 14.02070,   0.00000, 0.00000, 203.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9192.212, 2571.369, 14.02070,   0.00000, 0.00000, 219.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9208.973, 2556.765, 14.02070,   0.00000, 0.00000, 239.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9229.428, 2548.504, 14.02070,   0.00000, 0.00000, 257.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9277.598, 2524.52, 12.92678,   0.00000, 0.00000, 190.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9251.219, 2546.579, 14.02070,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9272.812, 2551.169, 14.02070,   0.00000, 0.00000, -69.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9309.42, 2506.445, 13.64200,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9303.636, 2451.322, 13.64200,   0.00000, 0.00000, 186.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9262.616, 2638.724, 12.92680,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9266.592, 2633.538, 12.94680,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9227.599, 2632.763, 14.02070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9349.365, 2590.716, 16.70050,   0.00000, 0.00000, 39.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9364.727, 2555.877, 16.70050,   0.00000, 0.00000, 9.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9367.311, 2521.031, 16.70050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9372.763, 2539.86, 10.07581,   0.00000, 0.00000, 189.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9361.063, 2578.429, 10.07580,   0.00000, 0.00000, 219.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9367.772, 2583.89, 10.07580,   0.00000, 0.00000, 219.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9272.219, 2611.96, 14.02070,   0.00000, 0.00000, 108.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9293.724, 2615.668, 14.02070,   0.00000, 0.00000, 92.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9300.839, 2609.623, 10.07580,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9312.357, 2606.75, 10.07580,   0.00000, 0.00000, 64.85600, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9309.479, 2487.352, 14.02070,   0.00000, 0.00000, 251.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9305.031, 2474.469, 14.03070,   0.00000, 0.00000, 253.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9313.266, 2421.547, 13.64200,   0.00000, 0.00000, 210.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9334.983, 2398.388, 13.64200,   0.00000, 0.00000, 236.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9364.604, 2387.013, 13.64200,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9389.061, 2379.713, 13.64200,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9195.421, 3351.498, 14.02070,   0.00000, 0.00000, 100.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9202.365, 3345.339, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9331.967, 3392.355, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9182.273, 3266.122, 10.07580,   0.00000, 0.00000, -96.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9192.746, 3272.498, 14.02070,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9194.979, 3286.198, 14.01070,   0.00000, 0.00000, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9194.86, 3304.245, 10.07580,   0.00000, 0.00000, -132.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9395.236, 2472.703, 12.92680,   0.00000, 0.00000, -15.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9413.031, 2468.635, 12.94680,   0.00000, 0.00000, 83.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9535.096, 2630.363, 12.94680,   0.00000, 0.00000, -103.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9552.602, 2625.118, 12.92680,   0.00000, 0.00000, -195.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9661.979, 2614.672, 12.92680,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9685.143, 2605.931, 12.94680,   0.00000, 0.00000, 79.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9807.362, 2768.329, 12.94680,   0.00000, 0.00000, -91.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9814.682, 2874.512, 12.92680,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9825.686, 2894.985, 12.94680,   0.00000, 0.00000, 177.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9668.713, 2902.885, 12.94680,   0.00000, 0.00000, -92.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9344.021, 3091.056, 12.94680,   0.00000, 0.00000, -98.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9369.649, 3080.929, 12.92680,   0.00000, 0.00000, 185.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9490.811, 3103.161, 12.92680,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9511.157, 3097.319, 12.94680,   0.00000, 0.00000, 81.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9630.764, 3118.824, 12.94680,   0.00000, 0.00000, -100.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9653.438, 3111.295, 12.92680,   0.00000, 0.00000, -185.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9762.885, 3102.733, 12.92680,   0.00000, 0.00000, -11.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9781.844, 3096.059, 12.94680,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9788.773, 3250.106, 12.94680,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9763.922, 3373.405, 12.94680,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9651.913, 3389.694, 12.94680,   0.00000, 0.00000, 172.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9633.379, 3394.581, 12.92680,   0.00000, 0.00000, -97.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9511.098, 3370.538, 12.92680,   0.00000, 0.00000, 85.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9492.701, 3376.273, 12.94680,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9380.34, 3392.839, 12.94680,   0.00000, 0.00000, 169.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9364.269, 3397.736, 12.92680,   0.00000, 0.00000, -93.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9330.646, 3356.673, 13.94770,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9307.219, 3297.264, 20.59230,   0.00000, 0.00000, -138.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9319.994, 3311.502, 20.59230,   0.00000, 0.00000, -124.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9268.639, 3386.53, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9268.913, 3400.374, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9269.998, 3415.312, 20.59230,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9294.559, 3475.615, 17.16170,   0.00000, 0.00000, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9282.438, 3450.939, 14.02070,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9327.729, 3493.201, 17.16170,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9366.592, 3491.126, 17.16170,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9454.864, 3467.009, 17.16170,   0.00000, 0.00000, -42.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9364.383, 2485.296, 13.94770,   0.00000, 0.00000, 172.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9377.262, 2504.162, 10.07580,   0.00000, 0.00000, 181.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9368.869, 2504.004, 10.07580,   0.00000, 0.00000, 181.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9481.795, 3397.418, -21.68720,   0.00000, 0.00000, -99.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9380.892, 3425.502, 13.94770,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9475.396, 3409.445, 14.02070,   0.00000, 0.00000, -86.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9472.427, 3426.157, 14.02070,   0.00000, 0.00000, -74.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9466.808, 3441.462, 14.02070,   0.00000, 0.00000, -66.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9421.819, 3484.662, 17.16170,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9374.895, 3470.051, 10.07580,   0.00000, 0.00000, 5.02960, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9395.029, 3481.252, 14.02070,   0.00000, 0.00000, 3.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9380.876, 3470.553, 10.07580,   0.00000, 0.00000, 5.02960, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9354.897, 3429.427, 14.02070,   0.00000, 0.00000, -194.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9401.816, 3367.215, 13.94770,   0.00000, 0.00000, -7.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9417.678, 3413.482, 15.40060,   0.00000, 0.00000, 100.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9418.305, 3407.274, 15.40060,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9415.771, 3399.567, 15.40060,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9409.68, 3392.763, 15.40060,   0.00000, 0.00000, 110.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9509.746, 3338.646, 13.94770,   0.00000, 0.00000, 261.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9484.873, 3342.398, 14.02070,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9462.468, 3372.686, 14.02070,   0.00000, 0.00000, -134.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9456.914, 3363.8, 14.01070,   0.00000, 0.00000, -110.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9445.132, 3360.125, 10.07580,   0.00000, 0.00000, -78.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9447.563, 3348.449, 10.07580,   0.00000, 0.00000, -48.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9408.145, 3328.891, 16.69050,   0.00000, 0.00000, 207.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9431.148, 3302.436, 13.22680,   0.00000, 0.00000, -127.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9461.499, 3286.219, 13.07400,   0.00000, 0.00000, -189.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9491.857, 3281.161, 12.72810,   0.00000, 0.00000, -91.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9530.653, 3274.919, 12.73030,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9560.214, 3287.182, 13.64200,   0.00000, 0.00000, -63.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9516.664, 3288.943, 10.07580,   0.00000, 0.00000, 157.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9398.93, 3343.416, 10.07580,   0.00000, 0.00000, 27.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9391.291, 3339.51, 10.07580,   0.00000, 0.00000, 27.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9417.905, 3309.001, 10.07580,   0.00000, 0.00000, 53.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9414.167, 3304.062, 10.07580,   0.00000, 0.00000, 53.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9446.102, 3289.161, 10.07580,   0.00000, 0.00000, 81.03440, -1, -1, -1, 300);
	CreateDynamicObject(987, 9475.708, 3279.962, 10.07580,   0.00000, 0.00000, 260.70001, -1, -1, -1, 300);
	CreateDynamicObject(987, 9477.642, 3291.742, 10.07580,   0.00000, 0.00000, 260.70001, -1, -1, -1, 300);
	CreateDynamicObject(987, 9478.394, 3296.352, 10.07580,   0.00000, 0.00000, 260.70001, -1, -1, -1, 300);
	CreateDynamicObject(987, 9505.555, 3293.541, 10.07580,   0.00000, 0.00000, 268.32401, -1, -1, -1, 300);
	CreateDynamicObject(987, 9505.202, 3281.614, 10.07580,   0.00000, 0.00000, 268.32401, -1, -1, -1, 300);
	CreateDynamicObject(987, 9505.099, 3278.049, 10.07580,   0.00000, 0.00000, 268.32401, -1, -1, -1, 300);
	CreateDynamicObject(987, 9551.277, 3272.697, 10.07580,   0.00000, 0.00000, 117.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9548.588, 3277.991, 10.07580,   0.00000, 0.00000, 117.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9544.195, 3272.719, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9543.574, 3284.622, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9604.107, 3314.285, 10.07580,   0.00000, 0.00000, -34.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9543.355, 3288.495, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9377.295, 2540.581, 10.07581,   0.00000, 0.00000, 189.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9317.412, 2617.55, 10.07580,   0.00000, 0.00000, 64.85600, -1, -1, -1, 300);
	CreateDynamicObject(987, 9321.276, 2625.797, 10.07580,   0.00000, 0.00000, 64.85600, -1, -1, -1, 300);
	CreateDynamicObject(987, 9300.408, 2520.917, 10.07580,   0.00000, 0.00000, 0.16800, -1, -1, -1, 300);
	CreateDynamicObject(987, 9293.28, 2464.812, 10.07580,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9295.907, 2465.076, 10.07580,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9298.258, 2429.64, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9302.681, 2432.193, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9317.984, 2399.116, 10.07580,   0.00000, 0.00000, 56.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9349.06, 2380.217, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9321.017, 2403.584, 10.07580,   0.00000, 0.00000, 56.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9349.871, 2385.891, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9380.554, 2447.948, -21.68720,   0.00000, 0.00000, 3.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9415.357, 2437.194, 14.02070,   0.00000, 0.00000, -12.48000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9559.196, 2652.718, -21.68720,   0.00000, 0.00000, 183.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9526.723, 2665.258, 15.40060,   0.00000, 0.00000, 172.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9642.286, 2578.604, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9656.258, 2582.898, -21.68720,   0.00000, 0.00000, 5.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9575.059, 2657.028, 15.40060,   0.00000, 0.00000, 156.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9580.665, 2655.669, 15.40060,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9585.553, 2652.218, 15.40060,   0.00000, 0.00000, 158.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9685.327, 2595.419, 20.59230,   0.00000, 0.00000, -69.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9636.158, 2580.648, 15.40060,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9850.203, 2893.84, -21.66720,   0.00000, 0.00000, 88.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9846.141, 2856.304, -21.68720,   0.00000, 0.00000, 96.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9850.731, 2848.404, 15.40060,   0.00000, 0.00000, 150.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9349.258, 3115.901, -21.66720,   0.00000, 0.00000, 177.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9612.732, 3154.936, 15.40060,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9374.688, 3101.1, -21.68720,   0.00000, 0.00000, 97.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9480.581, 3087.176, -21.68720,   0.00000, 0.00000, -80.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9504.307, 3073.338, -21.66720,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9605.564, 3105.901, 20.59230,   0.00000, 0.00000, -91.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9604.926, 3091.514, 20.59230,   0.00000, 0.00000, -91.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9603.638, 3075.934, 20.59230,   0.00000, 0.00000, -95.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9632.161, 3152.568, 13.94770,   0.00000, 0.00000, 79.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9657.646, 3148.356, 14.02070,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9670.624, 3147.003, 14.01070,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9679.687, 3143.657, 14.02070,   0.00000, 0.00000, 146.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9731.014, 3071.969, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9775.92, 3070.439, -21.66720,   0.00000, 0.00000, -1.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9738.897, 3076.323, -21.68720,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9735.729, 3069.663, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9740.617, 3067.597, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9747.955, 3067.23, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9637.745, 3420.312, -21.68720,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9600.986, 3405.405, 15.40060,   0.00000, 0.00000, -26.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9201.371, 3220.475, 10.07580,   0.00000, 0.00000, -179.16800, -1, -1, -1, 300);
	CreateDynamicObject(987, 9197.725, 3191.75, 10.07580,   0.00000, 0.00000, -2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9209.683, 3160.708, 10.07580,   0.00000, 0.00000, -84.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9229.068, 3107.278, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9238.71, 3107.273, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9238.748, 3019.368, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9238.591, 2924.52, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9238.425, 2730.506, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6391, 9662.178, 3405.569, -21.66720,   0.00000, 0.00000, 96.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9428.721, 2375.151, 13.07400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9405.64, 2380.262, 14.02070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9398.447, 2377.432, 10.07580,   0.00000, 0.00000, -92.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9457.889, 2377.765, 13.22120,   0.00000, 0.00000, -157.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9479.345, 2387.682, 16.69580,   0.00000, 0.00000, -141.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9408.025, 2393.551, 9.98270,   -90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9498.912, 2412.525, 17.16930,   0.00000, 0.00000, -117.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9504.338, 2448.339, 13.07400,   0.00000, 0.00000, -94.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9509.812, 2479.494, 17.16930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9501.932, 2508.983, 13.64200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9509.81, 2533.854, 16.69580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9505.465, 2559.794, 13.07400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9507.219, 2583.909, 13.64200,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9443.778, 2371.066, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9443.771, 2375.198, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9443.767, 2387.127, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9466.971, 2379.19, 10.07580,   0.00000, 0.00000, -67.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9462.305, 2390.188, 10.07580,   0.00000, 0.00000, -67.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9460.564, 2394.267, 10.07580,   0.00000, 0.00000, -67.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9490.288, 2390.536, 10.07580,   0.00000, 0.00000, -51.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9482.772, 2399.815, 10.07580,   0.00000, 0.00000, -51.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9477.482, 2406.308, 10.07580,   0.00000, 0.00000, -51.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9510.09, 2423.574, 10.07580,   0.00000, 0.00000, -27.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9499.49, 2429.002, 10.07580,   0.00000, 0.00000, -27.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9490.946, 2433.375, 10.07580,   0.00000, 0.00000, -27.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9502.959, 2432.71, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9509.385, 2463.036, 10.07580,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9497.494, 2463.861, 10.07580,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9492.827, 2464.183, 10.07580,   0.00000, 0.00000, -4.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9514.767, 2494.503, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9511.043, 2494.517, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9514.542, 2544.32, 10.07580,   0.00000, 0.00000, -2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9149.773, 3344.017, 10.07580,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9156.432, 3334.144, 10.07580,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9161.573, 3326.492, 10.07580,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9446.998, 3480.773, 10.07580,   0.00000, 0.00000, 48.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9439.009, 3471.904, 10.07580,   0.00000, 0.00000, 48.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9432.684, 3464.902, 10.07580,   0.00000, 0.00000, 48.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9408.432, 3493.084, 10.07580,   0.00000, 0.00000, 76.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9405.553, 3481.505, 10.07580,   0.00000, 0.00000, 76.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9403.175, 3471.968, 10.07580,   0.00000, 0.00000, 76.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9354.184, 3500.879, 10.07580,   0.00000, 0.00000, 70.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9350.117, 3489.687, 10.07580,   0.00000, 0.00000, 70.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9346.858, 3480.728, 10.07580,   0.00000, 0.00000, 70.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9312.005, 3494.334, 10.07580,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9314.884, 3482.767, 10.07580,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9317.193, 3473.504, 10.07580,   0.00000, 0.00000, 104.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9280.086, 3469.201, 10.07580,   0.00000, 0.00000, 132.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9288.076, 3460.34, 10.07580,   0.00000, 0.00000, 132.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9294.598, 3453.098, 10.07580,   0.00000, 0.00000, 132.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9129.008, 3308.656, 10.07580,   0.00000, 0.00000, 154.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9139.732, 3303.429, 10.07580,   0.00000, 0.00000, 154.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9147.574, 3299.606, 10.07580,   0.00000, 0.00000, 154.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9121.794, 3273.364, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9133.536, 3271.291, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9143.097, 3269.615, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9119.38, 3241.194, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9131.274, 3240.353, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9140.979, 3240.422, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9111.363, 3239.85, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9444.476, 2472.317, 13.94769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9444.472, 2507.311, 13.94769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9502.799, 2620.348, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9503.473, 2655.145, 14.02070,   0.00000, 0.00000, -116.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9444.98, 2653.97, 14.02070,   0.00000, 0.00000, -94.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9502.826, 2600.549, 14.00070,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9512.885, 2593.22, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9437.379, 2539.921, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9437.347, 2570.204, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9437.335, 2600.462, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9437.334, 2630.724, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9470.616, 2707.563, 13.07400,   0.00000, 0.00000, 40.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9447.988, 2670.666, 14.02070,   0.00000, 0.00000, -106.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9454.76, 2686.567, 14.02070,   0.00000, 0.00000, -120.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9494.234, 2719.73, 14.02070,   0.00000, 0.00000, -160.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9522.828, 2721.677, 13.94770,   0.00000, 0.00000, -94.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9501.895, 2646.344, 14.00070,   0.00000, 0.00000, -84.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9544.449, 2716.059, 14.02070,   0.00000, 0.00000, -209.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9563.623, 2713.688, 13.94770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9432.423, 2524.885, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9441.776, 2524.868, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9444.49, 2524.869, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9483.045, 2717.096, 10.07580,   0.00000, 0.00000, -50.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9456.553, 2701.025, 10.07580,   0.00000, 0.00000, 130.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9464.207, 2691.869, 10.07580,   0.00000, 0.00000, 130.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9467.251, 2688.236, 10.07580,   0.00000, 0.00000, 130.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9593.619, 2716.473, 13.22900,   0.00000, 0.00000, -15.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9618.678, 2701.464, 13.08100,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9640.844, 2681.269, 13.22900,   0.00000, 0.00000, -60.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9649.195, 2660.608, 13.22900,   0.00000, 0.00000, -76.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9644.225, 2629.175, 13.94770,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9630.826, 2691.575, 10.07580,   0.00000, 0.00000, -126.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9638.303, 2690.086, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9627.98, 2684.131, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9623.951, 2681.799, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9649.278, 2669.733, 10.07580,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9637.697, 2666.867, 10.07580,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9633.151, 2665.75, 10.07580,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9608.938, 2713.546, 10.07580,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9601.928, 2703.891, 10.07580,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9599.074, 2699.977, 10.07580,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9585.639, 2720.936, 10.07580,   0.00000, 0.00000, 75.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9582.552, 2709.417, 10.07580,   0.00000, 0.00000, 75.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9581.096, 2703.936, 10.07580,   0.00000, 0.00000, 75.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9573.563, 2603.777, 13.94770,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9578.669, 2565.092, 13.94770,   0.00000, 0.00000, 23.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9603.955, 2534.983, 13.94770,   0.00000, 0.00000, 57.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9640.84, 2522.668, 13.94770,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9673.551, 2519.961, 14.02070,   0.00000, 0.00000, -203.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9670.452, 2531.889, 10.07580,   0.00000, 0.00000, 183.11600, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9705.337, 2507.594, 13.64220,   0.00000, 0.00000, 183.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9695.22, 2521.378, 10.07580,   0.00000, 0.00000, 157.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9725.801, 2519.335, 14.02070,   0.00000, 0.00000, -68.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9744.729, 2530.729, 14.02070,   0.00000, 0.00000, -50.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9759.046, 2547.788, 14.02070,   0.00000, 0.00000, -30.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9767.24, 2568.037, 14.02070,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9772.733, 2596.871, 13.94770,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9773.036, 2632.038, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.049, 2625.615, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9725.747, 2587.878, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.061, 2636.161, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.121, 2646.39, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.145, 2656.816, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.111, 2709.318, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.121, 2719.928, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.152, 2730.322, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9710.25, 2740.879, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9713.133, 2795.229, 20.59230,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9716.637, 2806.653, 20.59230,   0.00000, 0.00000, 74.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9722.059, 2821.516, 20.59230,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9769.067, 2859.253, 20.59230,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9759.854, 2855.692, 20.59230,   0.00000, 0.00000, 22.00000, -1, -1, -1, 300);
	CreateDynamicObject(7238, 9784.553, 2861.446, 20.59230,   0.00000, 0.00000, 4.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9815.5, 2853.832, 15.40060,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9773.04, 2697.223, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9780.134, 2664.617, 17.17560,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9714.302, 2505.814, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9713.672, 2517.729, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9713.611, 2522.436, 10.07580,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9785.06, 2679.627, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9778.604, 2679.639, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9773.001, 2679.636, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9773.018, 2732.206, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9773.012, 2767.191, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9598.523, 3342.142, 13.94770,   0.00000, 0.00000, 171.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9591.599, 3304.611, 17.16460,   0.00000, 0.00000, -124.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9594.231, 3320.96, 10.07580,   0.00000, 0.00000, -34.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9586.098, 3326.445, 10.07580,   0.00000, 0.00000, -34.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9601.369, 3378.48, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9601.592, 3396.746, 15.40060,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9811.771, 2769.614, 12.92680,   0.00000, 0.00000, -91.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9673.447, 2904.431, 12.92680,   0.00000, 0.00000, -92.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9790.031, 3246.633, 12.92680,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9653.223, 3385.264, 12.92680,   0.00000, 0.00000, 172.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9762.675, 3376.941, 12.92680,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(6866, 9489.827, 3106.996, 12.94680,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9816.551, 2786.662, 14.02070,   0.00000, 0.00000, 165.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9844.938, 2786.567, 13.94770,   0.00000, 0.00000, 97.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9880.457, 2793.96, 12.73090,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9901.73, 2816.979, 12.73550,   0.00000, 0.00000, -31.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9911.937, 2841.354, 13.63800,   0.00000, 0.00000, -104.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9912.193, 2868.419, 13.08270,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9921.338, 2914.864, 13.22340,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
	CreateDynamicObject(3488, 9920.293, 2937.679, 16.69720,   0.00000, 0.00000, -74.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9903.444, 2965.399, 17.16640,   0.00000, 0.00000, -47.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9902.685, 2894.172, 10.07580,   0.00000, 0.00000, -109.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9907.354, 2905.164, 10.07580,   0.00000, 0.00000, -113.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9915.694, 2883.516, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9903.761, 2883.107, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9898.728, 2882.94, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9879.103, 2981.643, 13.22340,   0.00000, 0.00000, -26.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9763.447, 2989.165, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9793.403, 2985.638, 13.63800,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9823.122, 2989.158, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3444, 9853.701, 2989.446, 12.73550,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9732.509, 2989.156, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9701.58, 2989.156, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9916.261, 2849.402, 10.07580,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9904.672, 2852.296, 10.07580,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9911.144, 2827.011, 10.07580,   0.00000, 0.00000, -31.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9900.933, 2833.164, 10.07580,   0.00000, 0.00000, -31.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9896.022, 2836.106, 10.07580,   0.00000, 0.00000, -31.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9892.953, 2799.186, 10.07580,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9886.11, 2808.949, 10.07580,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9883.818, 2812.224, 10.07580,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9923.261, 2923.802, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9911.327, 2923.399, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9908.331, 2923.288, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9921.974, 2948.945, 10.07580,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9910.522, 2945.671, 10.07580,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9901.446, 2943.061, 10.07580,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9896.803, 2979.732, 10.07580,   0.00000, 0.00000, 43.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9888.083, 2971.604, 10.07580,   0.00000, 0.00000, 43.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9881.153, 2965.154, 10.07580,   0.00000, 0.00000, 43.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9872.157, 2987.518, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9866.928, 2976.803, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9864.984, 2972.801, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9840.787, 2994.167, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9839.124, 2982.37, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9807.557, 2993.16, 10.07580,   0.00000, 0.00000, 87.11600, -1, -1, -1, 300);
	CreateDynamicObject(987, 9686.642, 2993.138, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9686.631, 2981.204, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9686.613, 2974.355, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9674.97, 2976.907, 10.07580,   0.00000, 0.00000, -12.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9665.326, 2983.916, 10.07580,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9821.67, 2928.224, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9786.674, 2928.245, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9755.934, 2923.278, 12.73090,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9725.268, 2928.251, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9690.279, 2928.256, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3683, 9664.184, 2932.458, 15.40060,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9769.125, 2920.359, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9769.117, 2928.29, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9647.079, 2992.599, 13.94770,   0.00000, 0.00000, -86.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9610.242, 2979.896, 13.94770,   0.00000, 0.00000, -56.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9585.505, 2949.332, 13.94770,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9578.23, 2911.877, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9570.123, 2879.464, 17.16640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9577.209, 2857.192, 14.02070,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9565.248, 2864.459, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9567.244, 2864.446, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9527.741, 2844.905, 14.02070,   0.00000, 0.00000, -29.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9568.283, 2844.404, 13.98070,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9574.747, 2849.267, 14.00070,   0.00000, 0.00000, 55.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9635.918, 2896.548, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9635.283, 2861.211, 13.94770,   0.00000, 0.00000, 178.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9624.582, 2823.914, 13.94770,   0.00000, 0.00000, 150.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9596.715, 2796.542, 13.94770,   0.00000, 0.00000, 119.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9559.42, 2786.183, 13.94770,   0.00000, 0.00000, 92.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9456.645, 2851.11, 17.16640,   0.00000, 0.00000, 94.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9522.725, 2788.429, 13.94770,   0.00000, 0.00000, 81.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9487.311, 2805.321, 13.94770,   0.00000, 0.00000, 48.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9468.816, 2827.013, 14.02070,   0.00000, 0.00000, 115.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9452.8, 2835.797, 10.07580,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9464.697, 2836.62, 10.07580,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9474.102, 2837.28, 10.07580,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9546.961, 2842.547, 13.94770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9521.627, 2851.11, 14.00070,   0.00000, 0.00000, -62.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9520.008, 2859.445, 13.98070,   0.00000, 0.00000, -96.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9523.314, 2867.271, 14.02070,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9532.645, 2882.225, 14.02070,   0.00000, 0.00000, -114.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9535.327, 2911.269, 13.94770,   0.00000, 0.00000, 184.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9521.929, 2948.06, 13.94770,   0.00000, 0.00000, 216.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9490.793, 2971.941, 13.94770,   0.00000, 0.00000, -111.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9423.646, 2976.462, 13.94770,   0.00000, 0.00000, -81.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9456.742, 2981.598, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9441.814, 2985.64, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9441.799, 2973.71, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9388.246, 2959.566, 13.94770,   0.00000, 0.00000, -48.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9367.516, 2926.357, 13.94770,   0.00000, 0.00000, -16.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9355.108, 2891.894, 17.16640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9361.948, 2859.61, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9350.23, 2876.903, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9362.154, 2876.892, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9465.278, 2877.269, 14.02070,   0.00000, 0.00000, 73.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9473.979, 2893.611, 14.02070,   0.00000, 0.00000, 51.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9478.761, 2902.964, 14.00070,   0.00000, 0.00000, 75.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9478.49, 2911.475, 13.98070,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9473.457, 2918.569, 14.02070,   0.00000, 0.00000, 142.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9455.863, 2921.678, 13.94770,   0.00000, 0.00000, 88.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9433.066, 2921.167, 14.02070,   0.00000, 0.00000, -170.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9425.473, 2917.322, 14.00070,   0.00000, 0.00000, -136.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9421, 2909.599, 13.98070,   0.00000, 0.00000, -104.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9360.297, 2837.687, 14.02070,   0.00000, 0.00000, -106.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9419.512, 2887.238, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9419.518, 2852.249, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9412.235, 2814.776, 13.94770,   0.00000, 0.00000, 158.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9355.78, 2830.944, 14.00070,   0.00000, 0.00000, 38.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9316.173, 2828.756, 14.02070,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9338.184, 2827.861, 13.94770,   0.00000, 0.00000, -88.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9308.457, 2833.22, 14.00070,   0.00000, 0.00000, -46.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9304.611, 2840.809, 13.98070,   0.00000, 0.00000, -80.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9305.743, 2848.824, 14.02070,   0.00000, 0.00000, -116.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9311.258, 2876.67, 13.94770,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9387.483, 2784.217, 13.94770,   0.00000, 0.00000, 124.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9350.817, 2771.233, 13.94770,   0.00000, 0.00000, 95.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9314.065, 2771.56, 13.94770,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9277.674, 2785.525, 13.94770,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9260.36, 2821.523, 12.81000,   0.00000, 0.00000, 110.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.564, 2811.175, 12.85920,   0.00000, 0.00000, -58.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9257.707, 2832.7, 12.85920,   0.00000, 0.00000, -82.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9256.816, 2844.237, 12.81000,   0.00000, 0.00000, 88.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9268.711, 2805.013, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9261.762, 2817.094, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9258.525, 2825.788, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9256.313, 2839.596, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9256.677, 2848.87, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9259.702, 2862.758, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.379, 2869.71, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.134, 2883.873, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.19, 2893.208, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.173, 2907.297, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.194, 2916.544, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.164, 2930.554, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.088, 2939.81, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.043, 2954.019, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.118, 2963.253, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.09, 2977.28, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9258.602, 2855.762, 12.85920,   0.00000, 0.00000, -102.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9263.314, 2865.834, 12.81000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.798, 2876.876, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.689, 2900.327, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.58, 2923.627, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.489, 2946.933, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.507, 2970.316, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.701, 2888.5, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.67, 2911.967, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.522, 2935.197, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.499, 2958.627, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.606, 2981.879, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.103, 2986.49, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.121, 3000.597, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.093, 3009.873, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.133, 3024.019, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.074, 3033.283, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.047, 3056.417, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.141, 3047.219, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.021, 3070.522, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.111, 3079.764, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.106, 3093.918, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.536, 2993.615, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.559, 3016.982, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.458, 3040.338, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.485, 3063.511, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.506, 3086.854, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.634, 3005.293, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.566, 3028.715, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.546, 3051.842, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.551, 3075.237, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9265.512, 3098.572, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9264.981, 3103.09, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9265.58, 3117.204, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9266.53, 3126.376, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9271.348, 3139.705, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9276.26, 3147.589, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9265.589, 3110.194, 12.85920,   0.00000, 0.00000, -92.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9269.278, 3133.039, 12.85920,   0.00000, 0.00000, -109.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9281.173, 3152.839, 12.85920,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9266.313, 3121.802, 12.81000,   0.00000, 0.00000, 84.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9274.208, 3143.548, 12.81000,   0.00000, 0.00000, 58.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9285.479, 3158.263, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9297.765, 3176.063, 13.94770,   0.00000, 0.00000, -64.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.484, 2896.011, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.525, 2910.121, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.461, 2919.357, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.412, 2933.518, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.455, 2942.719, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.484, 2956.691, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.45, 2965.909, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.369, 2903.067, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.4, 2914.786, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.311, 2926.495, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.364, 2949.733, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.172, 2972.925, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.176, 2996.238, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.18, 3019.551, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.229, 3042.845, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.297, 3066.209, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.484, 2979.984, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.527, 2989.182, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.402, 3003.298, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.48, 3012.53, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.418, 3026.552, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.28, 2938.138, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.273, 2961.31, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.283, 2984.596, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.171, 3007.915, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.229, 3031.176, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.307, 3054.453, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.496, 3035.791, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.379, 3049.824, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.486, 3059.054, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.486, 3073.179, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.285, 3077.75, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.463, 3082.354, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9302.293, 3089.433, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.451, 3096.492, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9302.286, 3101.158, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9302.463, 3105.74, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9406.944, 3170.237, 13.94770,   0.00000, 0.00000, -109.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9325.191, 3184.835, 14.02070,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9343.871, 3180.859, 14.02070,   0.00000, 0.00000, -25.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9401.315, 3083.372, 14.02070,   0.00000, 0.00000, 185.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9346.516, 3168.851, 10.07580,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(7940, 9372.672, 3178.909, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9357.668, 3164.795, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9357.679, 3170.878, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9357.701, 3182.82, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9438.889, 3147.46, 13.94770,   0.00000, 0.00000, -142.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9454.113, 3111.582, 13.94770,   0.00000, 0.00000, 188.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9406.021, 3062.12, 14.02070,   0.00000, 0.00000, 200.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9416.948, 3042.813, 14.02070,   0.00000, 0.00000, -141.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9433.353, 3028.039, 14.02070,   0.00000, 0.00000, -123.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9453.688, 3019.202, 14.02070,   0.00000, 0.00000, -104.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9474.906, 3016.2, 14.02070,   0.00000, 0.00000, -92.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9494.456, 3015.013, 14.00070,   0.00000, 0.00000, -95.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9511.535, 3010.926, 14.02070,   0.00000, 0.00000, -112.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9534.311, 3007.734, 14.02070,   0.00000, 0.00000, -84.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9555.713, 3013.874, 14.02070,   0.00000, 0.00000, -64.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9573.845, 3026.098, 14.02070,   0.00000, 0.00000, -48.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9587.732, 3043.253, 14.02070,   0.00000, 0.00000, -30.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9543.321, 3091.524, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9543.328, 3126.52, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9553.128, 3145.305, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9554.516, 3152.308, 12.85920,   0.00000, 0.00000, -100.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9555.748, 3159.185, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9558.792, 3165.622, 12.85920,   0.00000, 0.00000, -114.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9561.398, 3172.154, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9565.869, 3177.828, 12.85920,   0.00000, 0.00000, -126.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9569.808, 3183.56, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9575.402, 3188.078, 12.85920,   0.00000, 0.00000, -139.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9580.581, 3192.728, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9590.997, 3214.665, 17.16640,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9575.198, 3214.466, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9579.082, 3203.186, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9582.221, 3194.05, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9611.993, 3203.424, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9619.202, 3202.991, 12.85920,   0.00000, 0.00000, 177.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9626.134, 3202.636, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9632.534, 3199.381, 12.85920,   0.00000, 0.00000, 153.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9638.924, 3196.405, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9645.821, 3194.878, 12.85920,   0.00000, 0.00000, 175.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9652.72, 3194.554, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3485, 9670.661, 3210.679, 17.16640,   0.00000, 0.00000, -3.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9655.924, 3216.385, 10.07580,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9655.29, 3204.481, 10.07580,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9654.767, 3194.841, 10.07580,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9686.159, 3193.135, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9692.916, 3190.623, 12.85920,   0.00000, 0.00000, 161.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9699.454, 3188.345, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9705.439, 3184.52, 12.85920,   0.00000, 0.00000, 148.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9711.359, 3180.884, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9716.292, 3175.778, 12.85920,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9721.289, 3170.887, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9725.164, 3164.825, 12.85920,   0.00000, 0.00000, 123.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9728.87, 3158.879, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9731.226, 3152.138, 12.85920,   0.00000, 0.00000, 110.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9733.49, 3145.427, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9734.355, 3138.428, 12.85920,   0.00000, 0.00000, 97.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9735.107, 3131.441, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9734.23, 3124.458, 12.85920,   0.00000, 0.00000, 83.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9733.365, 3117.335, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9730.971, 3110.728, 12.85920,   0.00000, 0.00000, 71.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9672.334, 3095.124, 13.94770,   0.00000, 0.00000, -10.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9676.447, 3056.19, 13.94770,   0.00000, 0.00000, 22.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9701.199, 3025.66, 13.94770,   0.00000, 0.00000, 56.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9732.865, 3021.924, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9744.762, 3021.097, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9756.683, 3021.099, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9768.615, 3021.103, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9779.889, 3017.22, 10.07580,   0.00000, 0.00000, 161.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9791.094, 3013.151, 10.07580,   0.00000, 0.00000, 160.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9803.064, 3012.955, 10.07580,   0.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9814.859, 3014.825, 10.07580,   0.00000, 0.00000, -171.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9826.007, 3019.122, 10.07580,   0.00000, 0.00000, -159.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9836.014, 3025.636, 10.07580,   0.00000, 0.00000, -147.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9844.733, 3033.778, 10.07580,   0.00000, 0.00000, -137.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9851.562, 3043.565, 10.07580,   0.00000, 0.00000, -125.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9856.203, 3054.553, 10.07580,   0.00000, 0.00000, -113.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9859.292, 3066.103, 10.07580,   0.00000, 0.00000, -105.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9860.32, 3077.996, 10.07580,   0.00000, 0.00000, -95.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9860.318, 3089.923, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5004, 9166.197, 2824.67, 9.92180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5004, 9153.141, 3206.397, 9.92740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.62, 3096.029, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.809, 3091.311, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9860.74, 3154.994, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.859, 3100.651, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.759, 3109.894, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.773, 3119.333, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.877, 3128.757, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.822, 3138.241, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.82, 3147.831, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.734, 3162.055, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.817, 3171.292, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.628, 3105.322, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.681, 3114.604, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.729, 3124.099, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.701, 3133.531, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.756, 3143.063, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.801, 3166.67, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.851, 3190.125, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.861, 3213.66, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9860.473, 3237.279, 12.81000,   0.00000, 0.00000, -84.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9868.565, 3258.58, 12.81000,   0.00000, 0.00000, -99.39200, -1, -1, -1, 300);
	CreateDynamicObject(980, 9860.787, 3178.364, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9860.779, 3201.921, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9860.848, 3225.422, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9863.765, 3248.073, 12.85920,   0.00000, 0.00000, 56.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.809, 3185.363, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.888, 3194.756, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.838, 3208.965, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.833, 3218.327, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.862, 3232.528, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9860.082, 3241.946, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9867.965, 3253.844, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9869.154, 3270.197, 12.85920,   0.00000, 0.00000, 91.76800, -1, -1, -1, 300);
	CreateDynamicObject(974, 9868.057, 3281.931, 12.81000,   0.00000, 0.00000, -78.72400, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9869.397, 3263.141, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9869.145, 3277.312, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9867.285, 3286.491, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9861.901, 3299.567, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9864.515, 3292.952, 12.85920,   0.00000, 0.00000, 112.58000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9851.928, 3312.388, 12.85920,   0.00000, 0.00000, 134.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9856.846, 3307.429, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9847.077, 3317.687, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9839.31, 3322.837, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9826.48, 3328.685, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9817.397, 3330.958, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9832.908, 3325.544, 12.85920,   0.00000, 0.00000, 155.53600, -1, -1, -1, 300);
	CreateDynamicObject(980, 9810.371, 3331.238, 12.85920,   0.00000, 0.00000, 175.81200, -1, -1, -1, 300);
	CreateDynamicObject(980, 9786.855, 3331.708, 12.85920,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9859.328, 3303.368, 12.81000,   0.00000, 0.00000, -58.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9843.215, 3320.082, 12.81000,   0.00000, 0.00000, -33.04400, -1, -1, -1, 300);
	CreateDynamicObject(974, 9822.037, 3329.62, 12.81000,   0.00000, 0.00000, -14.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9798.484, 3331.711, 12.81000,   0.00000, 0.00000, -1.16000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9803.111, 3332.052, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9793.768, 3332.025, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9779.614, 3331.968, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9770.236, 3331.976, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9775.034, 3331.689, 12.81000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(980, 9763.172, 3331.528, 12.85920,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 9755.977, 3331.944, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(974, 9751.468, 3331.919, 12.81000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9814.404, 3092.794, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9814.403, 3127.787, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3466, 9809.434, 3158.494, 12.73090,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9806.55, 3145.295, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9814.433, 3145.294, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9814.437, 3189.135, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9814.438, 3224.12, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9814.455, 3249.11, 14.02070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9786.559, 3284.759, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9751.571, 3284.765, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9714.038, 3292.73, 13.94770,   0.00000, 0.00000, 66.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9684.197, 3318.207, 13.94770,   0.00000, 0.00000, 33.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9672.443, 3355.47, 13.94770,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9675.034, 3383.755, 14.02070,   0.00000, 0.00000, 70.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9743.356, 3395.484, 13.94770,   0.00000, 0.00000, -188.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9737.914, 3434.256, 13.94770,   0.00000, 0.00000, -156.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9724.073, 3462.997, 13.63800,   0.00000, 0.00000, -40.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9614.183, 3491.074, 13.22340,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9718.723, 3470.384, 10.07580,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(3446, 9706.242, 3474.645, 13.63800,   0.00000, 0.00000, -26.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9711.051, 3461.242, 10.07580,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9708.977, 3458.77, 10.07580,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9699.347, 3480.547, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9694.11, 3469.827, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9692.244, 3465.972, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 300);
	CreateDynamicObject(8337, 9675.473, 3476.86, 13.94770,   0.00000, 0.00000, -94.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9645.652, 3468.091, 10.07580,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9634.612, 3472.563, 10.07580,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9623.543, 3477.02, 10.07580,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9592.269, 3487.339, 13.22340,   0.00000, 0.00000, 19.00000, -1, -1, -1, 300);
	CreateDynamicObject(3445, 9572.705, 3477.209, 13.22340,   0.00000, 0.00000, 36.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9561.989, 3457.112, 14.02070,   0.00000, 0.00000, 142.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9605.318, 3493.092, 10.07580,   0.00000, 0.00000, 91.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9605.509, 3481.162, 10.07580,   0.00000, 0.00000, 91.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9605.551, 3477.827, 10.07580,   0.00000, 0.00000, 91.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9583.199, 3486.564, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9587.067, 3475.275, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9588.178, 3471.996, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9564.346, 3473.744, 10.07580,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9571.351, 3464.1, 10.07580,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 9573.923, 3460.564, 10.07580,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9551.528, 3437.455, 14.02070,   0.00000, 0.00000, 162.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9547.387, 3416.205, 14.02070,   0.00000, 0.00000, 176.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9546.679, 3395.73, 14.02070,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9546.677, 3375.738, 14.02070,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8335, 9546.674, 3355.742, 14.02070,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
//дрифт трасса 7 (конец)

//дрифт трасса 8 (начало)
	ObjGam[32] = CreateObject(8357, -9272.914062, -6030.569335, 10.500410, 0.000000, 0.000000, 0.000000);

//	CreateDynamicObject(8357, -9272.914062, -6030.569335, 10.500410, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -9232.915039, -6030.569335, 10.500398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -9232.857421, -5817.744628, 10.500398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9208.802734, -5663.049316, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9120.106445, -5625.893554, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9071.931640, -5529.344238, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8983.218750, -5492.107421, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8809.431640, -5399.478027, 10.480400, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8922.552734, -5399.612792, 10.480400, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8814.871093, -5492.104492, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8903.579101, -5529.508300, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8907.646484, -5622.137695, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8815.144531, -5682.490722, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8939.465820, -5791.695312, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8826.339843, -5791.558105, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8976.821289, -5702.986816, 10.480400, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9069.455078, -5697.593750, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -9093.551757, -5815.028320, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9074.588867, -5928.533691, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8981.956054, -5933.239257, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8890.529296, -5929.050781, 10.500398, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8871.301757, -6078.132812, 28.981500, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8907.070312, -6227.149414, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9016.144531, -6214.740722, 47.444698, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9151.896484, -6046.645019, 47.444698, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9059.402343, -6105.529296, 47.444698, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8988.259765, -6058.415527, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9140.433593, -5937.580566, 47.444698, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9031.363281, -5949.211914, 47.444698, 0.000000, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8895.630859, -6063.689941, 47.444698, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8871.548828, -5910.624511, 65.944999, -10.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8891.176757, -5761.501953, 84.404197, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8983.800781, -5756.803710, 84.404197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9152.859375, -5892.577148, 84.404197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9043.650390, -5849.293945, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9158.331054, -5985.209472, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9065.837890, -6045.041992, 84.404197, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9022.659179, -6154.246093, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9050.297851, -6365.604980, 84.404197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8930.164062, -6213.212890, 84.404197, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8941.091796, -6322.290527, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9055.544921, -6458.236328, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8902.473632, -6482.447753, 65.944999, -10.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8749.406250, -6506.527832, 47.444698, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8755.043945, -6599.158203, 47.444698, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9028.999023, -6485.231445, 47.444698, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8985.986328, -6594.441406, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8868.544921, -6618.560546, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9121.498046, -6425.951171, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8966.823242, -6313.782226, 28.981500, -10.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9115.969726, -6333.317871, 47.444698, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8813.739257, -6337.875488, 10.500398, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8818.936523, -6430.508300, 10.500398, 0.000000, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -9232.981445, -6243.407226, 10.500398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8928.142578, -6473.251464, 10.500398, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8987.455078, -6565.748046, 10.500398, 0.000000, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9080.093750, -6560.181152, 10.500398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9215.519531, -6394.169921, 10.500398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9123.019531, -6450.975585, 10.500398, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.439453, -6123.736328, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.454101, -6098.166503, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.420898, -6072.558593, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.408203, -6046.989746, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.371093, -6021.435058, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.351562, -5995.835449, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.337890, -5970.259277, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9292.303710, -5944.670410, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9292.297851, -5931.074707, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9279.503906, -5924.695312, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9260.332031, -5924.730468, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -9255.474609, -5924.718750, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.261718, -5911.905273, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.239257, -5886.325195, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.248046, -5860.733398, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.232421, -5835.148437, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.238281, -5809.538085, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.224609, -5783.946289, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.197265, -5758.330078, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.186523, -5732.749511, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9252.173828, -5707.160156, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.682617, -5681.597656, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9246.441406, -5656.954101, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9232.742187, -5635.923828, 11.146598, 0.000000, 0.000000, -44.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9211.974609, -5621.956054, 11.146598, 0.000000, 0.000000, -68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9187.332031, -5617.418945, 11.146598, 0.000000, 0.000000, -91.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9168.780273, -5620.354003, 11.146598, 0.000000, 0.000000, 65.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9158.327148, -5627.411621, 11.146598, 0.000000, 0.000000, 47.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9147.485351, -5633.524902, 11.146598, 0.000000, 0.000000, 74.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9135.175781, -5633.623046, 11.146598, 0.000000, 0.000000, 105.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9123.894531, -5628.128417, 11.146598, 0.000000, 0.000000, 127.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9117.014648, -5618.118164, 11.146598, 0.000000, 0.000000, 164.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9115.271484, -5599.191406, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9115.232421, -5573.574218, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9114.760742, -5547.996582, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9109.505859, -5523.363281, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9095.673828, -5502.471679, 11.146598, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.759765, -5488.649902, 11.146598, 0.000000, 0.000000, -68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9050.130859, -5484.322753, 11.146598, 0.000000, 0.000000, -92.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9031.522460, -5487.387695, 11.146598, 0.000000, 0.000000, 66.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9020.807617, -5494.089355, 11.146598, 0.000000, 0.000000, 50.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9009.699218, -5499.750976, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8997.255859, -5499.855468, 11.146598, 0.000000, 0.000000, 103.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8986.484375, -5493.899902, 11.146598, 0.000000, 0.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8979.977539, -5483.314453, 11.146598, 0.000000, 0.000000, 162.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8978.006835, -5464.431640, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8978.550781, -5445.288085, 11.146598, 0.000000, 0.000000, 185.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8982.225585, -5426.517578, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8982.010742, -5401.740722, 11.146598, 0.000000, 0.000000, -15.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8970.284179, -5379.750000, 11.146598, 0.000000, 0.000000, -41.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8950.393554, -5364.494140, 11.146598, 0.000000, 0.000000, -64.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8926.134765, -5358.030761, 11.146598, 0.000000, 0.000000, -86.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8900.589843, -5356.688476, 11.146598, 0.000000, 0.000000, -88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8875.027343, -5356.259765, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8849.458984, -5356.287109, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8823.916992, -5357.192871, 11.146598, 0.000000, 0.000000, -94.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8799.660156, -5363.729492, 11.146598, 0.000000, 0.000000, -116.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8779.603515, -5378.867187, 11.146598, 0.000000, 0.000000, -138.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8767.110351, -5400.514160, 11.146598, 0.000000, 0.000000, -162.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8764.503906, -5425.364746, 11.146598, 0.000000, 0.000000, -6.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8769.181640, -5440.299316, 11.146598, 0.000000, 0.000000, -34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8772.294921, -5458.384765, 11.146598, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8773.850585, -5483.773437, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8782.443359, -5507.359375, 11.146598, 0.000000, 0.000000, -31.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8799.363281, -5525.843261, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8822.235351, -5536.028808, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8847.254882, -5536.035156, 11.146598, 0.000000, 0.000000, -102.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8864.464843, -5529.000000, 11.146598, 0.000000, 0.000000, 47.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8875.172851, -5522.529296, 11.146598, 0.000000, 0.000000, 71.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8887.531250, -5521.433593, 11.146598, 0.000000, 0.000000, 99.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8898.807617, -5526.445800, 11.146598, 0.000000, 0.000000, 129.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8906.170898, -5536.383789, 11.146598, 0.000000, 0.000000, 158.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8908.561523, -5555.084960, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8908.362304, -5574.275878, 11.146598, 0.000000, 0.000000, 182.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8911.447265, -5586.156250, 11.146598, 0.000000, 0.000000, 149.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8915.898437, -5597.923339, 11.146598, 0.000000, 0.000000, 170.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8914.830078, -5610.211914, 11.146598, 0.000000, 0.000000, 200.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8907.837890, -5620.409179, 11.146598, 0.000000, 0.000000, 229.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8896.819335, -5626.157714, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8877.824218, -5627.676269, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8858.750976, -5626.345703, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8846.667968, -5622.399414, 11.146598, 0.000000, 0.000000, 114.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8828.101562, -5621.113769, 11.146598, 0.000000, 0.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8804.309570, -5628.833984, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8785.727539, -5645.583007, 11.146598, 0.000000, 0.000000, 36.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8775.322265, -5668.401855, 11.146598, 0.000000, 0.000000, 13.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8772.004882, -5693.645507, 11.146598, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8771.555664, -5719.225585, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8771.802734, -5738.398437, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8769.849609, -5750.802246, 11.146598, 0.000000, 0.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8765.865234, -5769.461914, 11.146598, 0.000000, 0.000000, 8.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8768.669921, -5794.069824, 11.146598, 0.000000, 0.000000, -21.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8782.291015, -5815.059570, 11.146598, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8803.184570, -5828.903808, 11.146598, 0.000000, 0.000000, -68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8827.825195, -5834.147949, 11.146598, 0.000000, 0.000000, -88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8853.404296, -5834.587402, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8878.992187, -5834.591308, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8904.557617, -5834.599609, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8930.010742, -5832.833007, 11.146598, 0.000000, 0.000000, -98.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8953.765625, -5824.671875, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8972.705078, -5808.186523, 11.146598, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8983.666015, -5785.687011, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8984.085937, -5760.753906, 11.146598, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8977.133789, -5743.493164, 11.146598, 0.000000, 0.000000, -42.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8970.454101, -5732.831054, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8968.718750, -5720.549316, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8972.780273, -5708.794433, 11.146598, 0.000000, 0.000000, 32.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8981.977539, -5700.777343, 11.146598, 0.000000, 0.000000, 66.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9000.591796, -5698.183593, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9025.669921, -5694.655761, 11.146598, 0.000000, 0.000000, 74.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9044.169921, -5689.587402, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9056.404296, -5690.117675, 11.146598, 0.000000, 0.000000, 109.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9066.985351, -5696.714843, 11.146598, 0.000000, 0.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9073.168945, -5707.407714, 11.146598, 0.000000, 0.000000, 165.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.828125, -5726.368652, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.817382, -5751.965332, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.799804, -5777.554687, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.789062, -5803.136718, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.770507, -5828.722656, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9074.752929, -5854.290527, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9076.528320, -5879.746093, 11.146598, 0.000000, 0.000000, -8.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9080.820312, -5898.308105, 11.146598, 0.000000, 0.000000, -23.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9082.752929, -5910.567382, 11.146598, 0.000000, 0.000000, 5.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9078.627929, -5922.239746, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9069.309570, -5930.340332, 11.146598, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9050.786132, -5933.578125, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9025.605468, -5937.102539, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9006.877929, -5941.205566, 11.146598, 0.000000, 0.000000, 81.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8994.450195, -5940.323242, 11.146598, 0.000000, 0.000000, 107.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8983.971679, -5933.769531, 11.146598, 0.000000, 0.000000, 137.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8978.065429, -5922.897949, 11.146598, 0.000000, 0.000000, 166.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8976.551757, -5903.895996, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8976.566406, -5892.467773, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8963.776367, -5886.091308, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8938.200195, -5886.101074, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8912.623046, -5886.545410, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8887.678710, -5890.932617, 11.146598, 0.000000, 0.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8865.710937, -5903.083496, 11.146598, 0.000000, 0.000000, 50.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8850.505859, -5922.891601, 11.146598, 0.000000, 0.000000, 25.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8845.080078, -5947.270507, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8848.057617, -5965.685546, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8849.166015, -5967.752929, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.155273, -5985.987792, 13.400300, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.161132, -6011.196289, 17.851060, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.177734, -6036.401855, 22.292909, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.179687, -6061.605468, 26.730699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.183593, -6086.807617, 31.179000, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.199218, -6112.007812, 35.622100, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.208984, -6137.231445, 40.066699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.203125, -6162.428710, 44.510200, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8852.212890, -6176.712402, 47.037601, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8847.826171, -6194.915039, 48.119998, 0.000000, 0.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8845.886718, -6219.496582, 48.119998, 0.000000, 0.000000, -11.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8855.651367, -6242.544921, 48.119998, 0.000000, 0.000000, -35.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8873.833984, -6259.794433, 48.119998, 0.000000, 0.000000, -58.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8897.331054, -6268.375000, 48.119998, 0.000000, 0.000000, -82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8922.808593, -6270.169433, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8948.389648, -6270.152343, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8967.560546, -6270.602050, 48.119998, 0.000000, 0.000000, 94.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8986.235351, -6274.581054, 48.119998, 0.000000, 0.000000, 106.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9010.932617, -6274.993652, 48.119998, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9033.573242, -6264.186035, 48.119998, 0.000000, 0.000000, 53.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9049.984375, -6245.274414, 48.119998, 0.000000, 0.000000, 29.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9057.509765, -6221.347656, 48.119998, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9058.841796, -6195.827636, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9058.839843, -6170.230468, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9054.877929, -6145.260742, 48.119998, 0.000000, 0.000000, -18.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9050.932617, -6126.711914, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9053.628906, -6114.519531, 48.119998, 0.000000, 0.000000, 25.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9061.696289, -6105.245605, 48.119998, 0.000000, 0.000000, 57.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9073.422851, -6101.194335, 48.119998, 0.000000, 0.000000, 85.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9092.576171, -6100.183105, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9110.956054, -6102.820800, 48.119998, 0.000000, 0.000000, 119.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9129.226562, -6107.682617, 48.119998, 0.000000, 0.000000, 98.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9153.773437, -6104.655761, 48.119998, 0.000000, 0.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9174.832031, -6090.959960, 48.119998, 0.000000, 0.000000, 46.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9189.050781, -6070.291992, 48.119998, 0.000000, 0.000000, 23.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9194.720703, -6045.740722, 48.119998, 0.000000, 0.000000, 3.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9195.400390, -6020.169433, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9195.412109, -5994.578613, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9199.794921, -5969.750976, 48.119998, 0.000000, 0.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9201.287109, -5945.270019, 48.119998, 0.000000, 0.000000, -13.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9191.054687, -5922.321777, 48.119998, 0.000000, 0.000000, -35.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9172.734375, -5905.252929, 48.119998, 0.000000, 0.000000, -59.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9149.197265, -5896.468261, 48.119998, 0.000000, 0.000000, 100.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9123.791992, -5894.241699, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9098.208984, -5894.694824, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9079.087890, -5894.246582, 48.119998, 0.000000, 0.000000, 98.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9067.211914, -5890.157714, 48.119998, 0.000000, 0.000000, 120.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9048.902343, -5887.388671, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9024.612304, -5893.432617, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9004.559570, -5908.537109, 48.119998, 0.000000, 0.000000, 42.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8992.461914, -5930.339355, 48.119998, 0.000000, 0.000000, 16.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8988.486328, -5955.413085, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8988.027343, -5980.980957, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8988.923828, -6006.540039, 48.119998, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8992.907226, -6024.893066, 48.119998, 0.000000, 0.000000, -29.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8996.570312, -6036.856445, 48.119998, 0.000000, 0.000000, -5.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8994.520507, -6049.072753, 48.119998, 0.000000, 0.000000, 24.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8986.485351, -6058.311035, 48.119998, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8974.724609, -6062.587402, 48.119998, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8955.603515, -6063.462890, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8932.385742, -6067.848144, 48.119998, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8913.972656, -6072.001953, 48.119998, 0.000000, 0.000000, 92.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8902.270507, -6068.200683, 48.119998, 0.000000, 0.000000, 124.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8893.864257, -6059.019042, 48.119998, 0.000000, 0.000000, -29.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.750000, -6040.623046, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.736328, -6028.220214, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.750000, -6002.929199, 50.339298, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.767578, -5977.740722, 54.780101, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.774414, -5952.525390, 59.233600, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.778320, -5927.320312, 63.676700, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.783203, -5902.099121, 68.121002, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.793945, -5876.892578, 72.563499, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.806640, -5851.716308, 77.006103, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.818359, -5826.507812, 81.450698, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8890.822265, -5812.079101, 84.005699, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8887.990234, -5800.120117, 85.088302, 0.000000, 0.000000, -26.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8883.628906, -5788.174316, 85.088302, 0.000000, 0.000000, -14.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8883.400390, -5775.715332, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8889.165039, -5764.855957, 85.088302, 0.000000, 0.000000, 44.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8899.701171, -5758.274414, 85.088302, 0.000000, 0.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8918.587890, -5756.282714, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8943.559570, -5752.321289, 85.088302, 0.000000, 0.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8962.116210, -5748.135742, 85.088302, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8974.250000, -5750.726074, 85.088302, 0.000000, 0.000000, 116.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8983.670898, -5758.755859, 85.088302, 0.000000, 0.000000, -35.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8988.110351, -5770.347167, 85.088302, 0.000000, 0.000000, -7.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8989.324218, -5789.471191, 85.088302, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8986.867187, -5807.946289, 85.088302, 0.000000, 0.000000, 27.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8982.621093, -5826.328613, 85.088302, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8985.850585, -5850.993164, 85.088302, 0.000000, 0.000000, -21.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8999.475585, -5871.979980, 85.088302, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9020.199218, -5886.213867, 85.088302, 0.000000, 0.000000, -66.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9044.659179, -5891.879394, 85.088302, 0.000000, 0.000000, -88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9070.234375, -5892.321777, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9095.828125, -5892.337890, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9114.275390, -5889.342285, 85.088302, 0.000000, 0.000000, 62.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9126.119140, -5884.791015, 85.088302, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9138.579101, -5884.562011, 85.088302, 0.000000, 0.000000, 102.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9149.505859, -5890.224121, 85.088302, 0.000000, 0.000000, -47.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9156.251953, -5900.641113, 85.088302, 0.000000, 0.000000, -19.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9158.313476, -5919.481445, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9162.685546, -5944.290527, 85.088302, 0.000000, 0.000000, -20.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9167.625976, -5962.686523, 85.088302, 0.000000, 0.000000, -5.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9165.580078, -5974.897460, 85.088302, 0.000000, 0.000000, 24.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9157.942382, -5984.668945, 85.088302, 0.000000, 0.000000, 52.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9146.564453, -5989.491210, 85.088302, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9127.451171, -5990.812500, 85.088302, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9102.357421, -5987.718750, 85.088302, 0.000000, 0.000000, 106.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9077.280273, -5985.077148, 85.088302, 0.000000, 0.000000, -94.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9053.560546, -5992.570312, 85.088302, 0.000000, 0.000000, 59.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9035.262695, -6009.621582, 85.088302, 0.000000, 0.000000, 35.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9025.479492, -6032.640625, 85.088302, 0.000000, 0.000000, 11.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9023.042968, -6057.999023, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9023.033203, -6083.588867, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9026.119140, -6108.791992, 85.088302, 0.000000, 0.000000, -14.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9030.771484, -6127.403320, 85.088302, 0.000000, 0.000000, -14.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9030.994140, -6139.852050, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9025.305664, -6150.783203, 85.088302, 0.000000, 0.000000, 43.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9014.934570, -6157.643554, 85.088302, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8996.133789, -6159.818359, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8976.994140, -6159.046875, 85.088302, 0.000000, 0.000000, 97.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8965.172851, -6154.973144, 85.088302, 0.000000, 0.000000, 121.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8946.902343, -6151.669921, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8922.700195, -6157.468750, 85.088302, 0.000000, 0.000000, 63.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8903.068359, -6173.069824, 85.088302, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8891.531250, -6195.215820, 85.088302, 0.000000, 0.000000, 15.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8887.764648, -6220.346191, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8887.321289, -6245.924316, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8887.310546, -6265.153320, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8883.554687, -6283.132812, 85.088302, 0.000000, 0.000000, 36.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8879.333984, -6301.079589, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8883.880859, -6325.631347, 85.088302, 0.000000, 0.000000, -23.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8897.919921, -6346.447265, 85.088302, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8918.896484, -6360.078613, 85.088302, 0.000000, 0.000000, -69.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8943.607421, -6365.128417, 85.088302, 0.000000, 0.000000, -88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8969.180664, -6365.583007, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8994.759765, -6365.594726, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9012.940429, -6362.116210, 85.088302, 0.000000, 0.000000, 57.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9024.537109, -6357.301269, 85.088302, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9036.920898, -6357.834960, 85.088302, 0.000000, 0.000000, 107.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9047.650390, -6364.132324, 85.088302, 0.000000, 0.000000, -46.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9054.008789, -6374.713867, 85.088302, 0.000000, 0.000000, -16.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9055.758789, -6393.651367, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9056.433593, -6412.799316, 85.088302, 0.000000, 0.000000, -6.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9060.473632, -6424.552246, 85.088302, 0.000000, 0.000000, -32.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9064.304687, -6436.360351, 85.088302, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9062.142578, -6448.579589, 85.088302, 0.000000, 0.000000, 24.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9054.347656, -6458.177246, 85.088302, 0.000000, 0.000000, 54.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9042.810546, -6462.596191, 85.088302, 0.000000, 0.000000, -96.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9023.664062, -6463.270019, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9013.647460, -6463.285644, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8994.769531, -6463.270996, 82.892700, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8969.570312, -6463.284179, 78.449203, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8944.365234, -6463.292480, 74.007499, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8919.168945, -6463.300292, 69.564598, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8893.966796, -6463.316406, 65.118301, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8868.763671, -6463.331542, 60.676898, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8843.570312, -6463.325195, 56.227699, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8818.367187, -6463.339355, 51.782901, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8803.869140, -6463.343261, 49.189701, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8784.895507, -6463.329101, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8759.452148, -6465.087890, 48.119998, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8735.699218, -6473.253906, 48.119998, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8716.735351, -6489.714843, 48.119998, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8705.962890, -6512.248046, 48.119998, 0.000000, 0.000000, 13.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8707.233398, -6536.797363, 48.119998, 0.000000, 0.000000, -19.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8712.054687, -6561.673339, 48.119998, 0.000000, 0.000000, -3.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8713.823242, -6587.179687, 48.119998, 0.000000, 0.000000, -5.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8720.730468, -6611.319335, 48.119998, 0.000000, 0.000000, -27.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8736.477539, -6630.769042, 48.119998, 0.000000, 0.000000, -51.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8758.704101, -6642.359375, 48.119998, 0.000000, 0.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8783.301757, -6642.371582, 48.119998, 0.000000, 0.000000, 74.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8801.836914, -6637.504882, 48.119998, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8820.886718, -6636.605468, 48.119998, 0.000000, 0.000000, 92.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8846.461914, -6637.042480, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8872.042968, -6637.025390, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8897.640625, -6637.024414, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8923.234375, -6637.034667, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8948.824218, -6637.024902, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8974.337890, -6635.669921, 48.119998, 0.000000, 0.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8998.568359, -6628.708984, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9017.933593, -6613.011230, 48.119998, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9029.117187, -6590.557128, 48.119998, 0.000000, 0.000000, 15.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9028.678710, -6565.955078, 48.119998, 0.000000, 0.000000, -17.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9023.822265, -6547.420898, 48.119998, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9023.144531, -6528.339843, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9023.588867, -6502.759765, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9024.245117, -6483.608886, 48.119998, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9028.017578, -6471.641601, 48.119998, 0.000000, 0.000000, 29.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9036.699218, -6462.941894, 48.119998, 0.000000, 0.000000, 61.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9048.683593, -6459.953613, 48.119998, 0.000000, 0.000000, 91.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9060.779296, -6462.951171, 48.119998, 0.000000, 0.000000, 117.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9072.707031, -6467.285156, 48.119998, 0.000000, 0.000000, 103.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9091.734375, -6468.710449, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9117.035156, -6466.044433, 48.119998, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9140.021484, -6456.026367, 48.119998, 0.000000, 0.000000, 55.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9157.090820, -6437.715332, 48.119998, 0.000000, 0.000000, 31.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9165.672851, -6414.106933, 48.119998, 0.000000, 0.000000, 9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9162.667968, -6389.682128, 48.119998, 0.000000, 0.000000, -23.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9158.106445, -6365.097656, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9156.308593, -6339.710937, 48.119998, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9147.303710, -6316.259277, 48.119998, 0.000000, 0.000000, -32.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9129.914062, -6298.268066, 48.119998, 0.000000, 0.000000, -56.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9106.711914, -6288.896972, 48.119998, 0.000000, 0.000000, -80.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9083.730468, -6290.263183, 48.119998, 0.000000, 0.000000, 71.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9059.144531, -6294.409179, 45.933998, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9033.954101, -6294.403808, 41.489799, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9008.758789, -6294.395019, 37.051300, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8983.567382, -6294.399414, 32.614601, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8958.376953, -6294.375488, 28.177200, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8933.171875, -6294.385742, 23.732299, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8907.978515, -6294.387207, 19.284900, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8882.779296, -6294.374023, 14.843600, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8868.215820, -6294.390136, 12.252578, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8849.239257, -6294.360839, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8823.786132, -6296.131835, 11.146598, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8800.034179, -6304.289062, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8781.070312, -6320.740722, 11.146598, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8770.083984, -6343.226562, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8771.152343, -6367.734863, 11.146598, 0.000000, 0.000000, -19.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8775.537109, -6386.211914, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8776.192382, -6405.383789, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8780.166015, -6430.457031, 11.146598, 0.000000, 0.000000, -16.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8791.541992, -6452.838378, 11.146598, 0.000000, 0.000000, -38.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8810.803710, -6468.744628, 11.146598, 0.000000, 0.000000, -63.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8834.964843, -6475.453613, 11.146598, 0.000000, 0.000000, -86.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8851.813476, -6472.129394, 11.146598, 0.000000, 0.000000, -109.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8876.706054, -6467.966796, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8902.292968, -6467.971679, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8921.496093, -6467.977539, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8934.127929, -6469.301269, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8945.129882, -6474.897460, 11.146598, 0.000000, 0.000000, 132.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8952.167968, -6485.129882, 11.146598, 0.000000, 0.000000, -21.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8953.227539, -6497.374511, 11.146598, 0.000000, 0.000000, 11.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8949.304687, -6509.438964, 11.146598, 0.000000, 0.000000, 25.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8945.693359, -6527.974121, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8946.125000, -6553.458496, 11.146598, 0.000000, 0.000000, -6.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8953.255859, -6577.582519, 11.146598, 0.000000, 0.000000, -27.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8969.128906, -6596.861328, 11.146598, 0.000000, 0.000000, -52.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8991.438476, -6608.483398, 11.146598, 0.000000, 0.000000, -73.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9015.869140, -6608.279296, 11.146598, 0.000000, 0.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9034.352539, -6603.425292, 11.146598, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9053.477539, -6602.517578, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9078.687500, -6599.404785, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9101.033203, -6588.257324, 11.146598, 0.000000, 0.000000, 51.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9117.174804, -6569.017578, 11.146598, 0.000000, 0.000000, 29.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9124.257812, -6545.058593, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9120.351562, -6520.443847, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9116.447265, -6495.799804, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9117.317382, -6470.247558, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9117.770507, -6451.090820, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9120.994140, -6438.976074, 11.146598, 0.000000, 0.000000, 26.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9129.094726, -6429.646484, 11.146598, 0.000000, 0.000000, 56.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9140.742187, -6425.401367, 11.146598, 0.000000, 0.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9158.599609, -6430.328125, 11.146598, 0.000000, 0.000000, -64.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9182.891601, -6436.393066, 11.146598, 0.000000, 0.000000, 92.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9208.287109, -6434.605957, 11.146598, 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9231.738281, -6425.583496, 11.146598, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9249.743164, -6408.177734, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9259.542968, -6385.065429, 11.146598, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9256.993164, -6360.867675, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.783203, -6336.388183, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.757812, -6310.804687, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.741210, -6285.215332, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.727539, -6259.636230, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.727539, -6234.042480, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.727539, -6208.450683, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.728515, -6182.858398, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9251.727539, -6157.260253, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9251.730468, -6142.949707, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9264.527343, -6136.564941, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9279.656250, -6136.562011, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.162109, -6124.194335, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.169921, -6098.598144, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.180664, -6073.009765, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.188476, -6047.423339, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.191406, -6021.833496, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.201171, -5996.242675, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.203125, -5970.631835, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.201171, -5945.041015, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.208007, -5919.448242, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.219726, -5893.850097, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.228515, -5868.260742, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.249023, -5842.677246, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.254882, -5817.096191, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.263671, -5791.509765, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.272460, -5765.926757, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.281250, -5740.344726, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.287109, -5714.753906, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.304687, -5689.168457, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9212.003906, -5670.373535, 11.146598, 0.000000, 0.000000, -21.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9205.034179, -5660.020996, 11.146598, 0.000000, 0.000000, -47.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9194.101562, -5654.318359, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9181.733398, -5654.859863, 11.146598, 0.000000, 0.000000, 73.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9170.946289, -5661.074218, 11.146598, 0.000000, 0.000000, 47.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9154.042968, -5669.187500, 11.146598, 0.000000, 0.000000, 73.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9129.227539, -5670.505859, 11.146598, 0.000000, 0.000000, 101.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9106.185546, -5660.723144, 11.146598, 0.000000, 0.000000, -55.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9088.740234, -5642.641113, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9079.790039, -5619.271972, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9077.369140, -5593.861328, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9076.917968, -5568.279296, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9076.935546, -5549.091308, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9074.973632, -5536.625976, 11.146598, 0.000000, 0.000000, -18.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9068.018554, -5526.512207, 11.146598, 0.000000, 0.000000, -51.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9056.806640, -5521.148437, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9044.410156, -5521.601074, 11.146598, 0.000000, 0.000000, 74.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9033.517578, -5527.643066, 11.146598, 0.000000, 0.000000, 48.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9016.540039, -5535.660644, 11.146598, 0.000000, 0.000000, 73.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8991.794921, -5536.750488, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8968.789062, -5526.745117, 11.146598, 0.000000, 0.000000, -55.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8951.347656, -5508.675292, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8942.392578, -5485.296386, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8940.402343, -5459.852539, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8941.959960, -5440.863769, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8945.916015, -5428.758789, 11.146598, 0.000000, 0.000000, 22.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8947.413085, -5416.498535, 11.146598, 0.000000, 0.000000, 172.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8942.951171, -5404.867187, 11.146598, 0.000000, 0.000000, 146.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8933.540039, -5396.967285, 11.146598, 0.000000, 0.000000, 114.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8914.916992, -5394.356933, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8889.327148, -5394.367187, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8863.731445, -5394.376464, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8838.149414, -5394.377929, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8819.144531, -5395.940429, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8808.348632, -5401.928222, 11.146598, 0.000000, 0.000000, 46.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8801.783203, -5412.442382, 11.146598, 0.000000, 0.000000, 18.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8801.146484, -5424.764648, 11.146598, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8805.879882, -5436.438964, 11.146598, 0.000000, 0.000000, -32.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8809.255859, -5454.641601, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8809.395507, -5473.819335, 11.146598, 0.000000, 0.000000, -1.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8812.221679, -5486.000976, 11.146598, 0.000000, 0.000000, -25.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8820.043945, -5495.636230, 11.146598, 0.000000, 0.000000, -53.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8831.493164, -5500.395507, 11.146598, 0.000000, 0.000000, 98.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8843.838867, -5499.111328, 11.146598, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8854.613281, -5492.662597, 11.146598, 0.000000, 0.000000, 48.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8871.882812, -5485.732421, 11.146598, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8896.908203, -5485.744140, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8919.755859, -5495.928710, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8936.509765, -5514.510253, 11.146598, 0.000000, 0.000000, -30.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8944.691406, -5538.263183, 11.146598, 0.000000, 0.000000, -8.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8946.484375, -5563.717773, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8950.008789, -5588.818847, 11.146598, 0.000000, 0.000000, -16.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8951.333984, -5613.719238, 11.146598, 0.000000, 0.000000, 10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8941.976562, -5636.918945, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8923.984375, -5654.300781, 11.146598, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8900.470703, -5662.856933, 11.146598, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8875.017578, -5664.657714, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8850.104492, -5660.503417, 11.146598, 0.000000, 0.000000, -71.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8831.652343, -5657.109375, 11.146598, 0.000000, 0.000000, -97.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8820.151367, -5661.657226, 11.146598, 0.000000, 0.000000, 54.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8812.599609, -5671.346679, 11.146598, 0.000000, 0.000000, 22.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8810.193359, -5690.064453, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8810.191406, -5715.651855, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8808.862304, -5741.163574, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8804.336914, -5759.434082, 11.146598, 0.000000, 0.000000, 30.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8800.931640, -5771.362304, 11.146598, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8803.720703, -5783.386718, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8811.763671, -5792.974609, 11.146598, 0.000000, 0.000000, -52.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8829.597656, -5796.929687, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8855.184570, -5796.932617, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8880.775390, -5796.947265, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8906.373046, -5796.948242, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8925.528320, -5796.291503, 11.146598, 0.000000, 0.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8937.327148, -5792.236328, 11.146598, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8945.563476, -5783.082519, 11.146598, 0.000000, 0.000000, 26.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8948.369140, -5770.945312, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8941.411132, -5753.815429, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8932.452148, -5730.447753, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8934.191406, -5705.574218, 11.146598, 0.000000, 0.000000, 17.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8946.341796, -5683.693847, 11.146598, 0.000000, 0.000000, 41.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8966.135742, -5668.246093, 11.146598, 0.000000, 0.000000, 63.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8990.291992, -5661.549804, 11.146598, 0.000000, 0.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9012.312500, -5660.373046, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9036.962890, -5655.152832, 11.146598, 0.000000, 0.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9061.325195, -5653.022460, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9084.201171, -5663.184082, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9101.335937, -5681.537109, 11.146598, 0.000000, 0.000000, -32.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9110.339843, -5704.975097, 11.146598, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9112.574218, -5730.354492, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9112.578125, -5755.939453, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9112.583984, -5781.534667, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9112.588867, -5807.126953, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9112.600585, -5832.719726, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9112.603515, -5858.323730, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9112.622070, -5877.513671, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9116.993164, -5895.922363, 11.146598, 0.000000, 0.000000, -20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9118.734375, -5920.451171, 11.146598, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9108.933593, -5943.577148, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9090.707031, -5960.591796, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9067.035156, -5969.229980, 11.146598, 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9041.644531, -5971.460449, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9016.732421, -5975.625000, 11.146598, 0.000000, 0.000000, -109.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8991.994140, -5977.774902, 11.146598, 0.000000, 0.000000, -81.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8968.630859, -5968.800292, 11.146598, 0.000000, 0.000000, -57.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8950.939453, -5951.103515, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8942.884765, -5936.270019, 11.146598, 0.000000, 0.000000, -15.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8926.789062, -5923.906738, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8907.597656, -5923.910156, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8895.462890, -5926.716308, 11.146598, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8886.145507, -5934.814453, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8881.906250, -5946.463867, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8883.836914, -5958.666015, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8887.808593, -5967.580566, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.409179, -5985.987792, 13.400300, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.406250, -6011.196289, 17.851100, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.395507, -6036.401855, 22.292900, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.390625, -6061.605468, 26.730699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.394531, -6086.807617, 31.179000, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.396484, -6112.007812, 35.622100, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.397460, -6137.231445, 40.066699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8890.400390, -6162.428710, 44.510200, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8890.411132, -6176.712402, 47.037601, -10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8887.418945, -6188.541015, 48.119998, 0.000000, 0.000000, 28.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8882.660156, -6200.331542, 48.119998, 0.000000, 0.000000, 16.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8882.240234, -6212.735351, 48.119998, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8887.695312, -6223.881347, 48.119998, 0.000000, 0.000000, -40.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8897.892578, -6230.746093, 48.119998, 0.000000, 0.000000, -72.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8916.779296, -6232.722167, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8942.365234, -6232.725585, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8964.770507, -6232.733398, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8982.986328, -6236.124511, 48.119998, 0.000000, 0.000000, -58.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8994.808593, -6239.854980, 48.119998, 0.000000, 0.000000, 93.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9006.999023, -6237.487304, 48.119998, 0.000000, 0.000000, 65.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9017.003906, -6229.943847, 48.119998, 0.000000, 0.000000, 41.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9021.192382, -6212.326660, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9021.208984, -6186.752929, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9021.214843, -6161.159667, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9017.267578, -6136.180664, 48.119998, 0.000000, 0.000000, -18.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9015.996093, -6111.500000, 48.119998, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9026.536132, -6088.906250, 48.119998, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9045.492187, -6072.420410, 48.119998, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9069.240234, -6064.263183, 48.119998, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9094.685546, -6062.499023, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9113.011718, -6065.683105, 48.119998, 0.000000, 0.000000, -60.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9124.626953, -6070.848632, 48.119998, 0.000000, 0.000000, -72.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9136.992187, -6071.728027, 48.119998, 0.000000, 0.000000, -100.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9148.134765, -6066.432128, 48.119998, 0.000000, 0.000000, 49.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9155.264648, -6056.250976, 48.119998, 0.000000, 0.000000, 21.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9157.567382, -6037.490234, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9157.583007, -6011.901367, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9157.601562, -5992.717285, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9159.164062, -5980.116699, 48.119998, 0.000000, 0.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9163.512695, -5968.158691, 48.119998, 0.000000, 0.000000, 26.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9165.878906, -5956.023437, 48.119998, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9161.851562, -5944.329101, 48.119998, 0.000000, 0.000000, -34.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9152.837890, -5935.621093, 48.119998, 0.000000, 0.000000, -58.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9134.623046, -5932.248046, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9109.030273, -5932.242187, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9085.025390, -5932.240722, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9066.856445, -5928.749511, 48.119998, 0.000000, 0.000000, -57.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9055.156250, -5924.258789, 48.119998, 0.000000, 0.000000, -81.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9042.828125, -5925.452148, 48.119998, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9032.548828, -5932.380371, 48.119998, 0.000000, 0.000000, 42.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9026.933593, -5943.388671, 48.119998, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9025.619140, -5962.437500, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9025.630859, -5988.020019, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9025.642578, -6007.214843, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9030.013671, -6025.632324, 48.119998, 0.000000, 0.000000, -20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9032.181640, -6050.257812, 48.119998, 0.000000, 0.000000, 10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9022.458984, -6073.211914, 48.119998, 0.000000, 0.000000, 36.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9004.113281, -6090.353027, 48.119998, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8980.625000, -6099.145507, 48.119998, 0.000000, 0.000000, 81.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8955.194335, -6100.924316, 48.119998, 0.000000, 0.000000, 91.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8930.370117, -6105.073730, 48.119998, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8905.671875, -6107.653320, 48.119998, 0.000000, 0.000000, -82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8882.410156, -6098.712402, 48.119998, 0.000000, 0.000000, -56.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8864.639648, -6080.939453, 48.119998, 0.000000, 0.000000, -34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8855.041992, -6057.756835, 48.119998, 0.000000, 0.000000, -11.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.619140, -6032.408691, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8852.618164, -6021.821289, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.616210, -6002.929199, 50.339298, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.625000, -5977.740722, 54.780101, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.620117, -5952.525390, 59.233600, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.613281, -5927.320312, 63.676700, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.617187, -5902.099121, 68.121002, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.604492, -5876.892578, 72.563499, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.619140, -5851.716308, 77.006103, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8852.627929, -5826.507812, 81.450698, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8852.626953, -5812.079101, 84.005699, 10.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8848.673828, -5793.715820, 85.088302, 0.000000, 0.000000, -18.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8847.384765, -5769.032714, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8857.562500, -5746.171875, 85.088302, 0.000000, 0.000000, 36.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8876.177734, -5729.441894, 85.088302, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8899.857421, -5720.839355, 85.088302, 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8925.248046, -5719.073242, 85.088302, 0.000000, 0.000000, 92.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8949.921875, -5714.724121, 85.088302, 0.000000, 0.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8974.273437, -5712.593750, 85.088302, 0.000000, 0.000000, -78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8997.645507, -5722.022460, 85.088302, 0.000000, 0.000000, -58.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9015.276367, -5739.656250, 85.088302, 0.000000, 0.000000, -32.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9024.287109, -5763.102539, 85.088302, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9026.515625, -5788.505859, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9024.763671, -5807.463378, 85.088302, 0.000000, 0.000000, 16.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9020.615234, -5819.534667, 85.088302, 0.000000, 0.000000, 22.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9018.671875, -5831.828125, 85.088302, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9022.681640, -5843.499023, 85.088302, 0.000000, 0.000000, -34.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9031.892578, -5851.796875, 85.088302, 0.000000, 0.000000, -62.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9050.330078, -5854.797851, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9075.912109, -5854.788085, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9095.765625, -5854.791992, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9120.620117, -5850.413085, 85.088302, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9145.166992, -5848.713867, 85.088302, 0.000000, 0.000000, 102.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9168.143554, -5858.691406, 85.088302, 0.000000, 0.000000, -55.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9185.228515, -5876.989257, 85.088302, 0.000000, 0.000000, -31.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9193.828125, -5900.584472, 85.088302, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9195.396484, -5926.008300, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9199.751953, -5950.651855, 85.088302, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9202.343750, -5975.106933, 85.088302, 0.000000, 0.000000, 10.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9193.366210, -5998.556640, 85.088302, 0.000000, 0.000000, 32.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9175.987304, -6016.563476, 85.088302, 0.000000, 0.000000, 56.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9152.790039, -6025.956054, 85.088302, 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9127.401367, -6028.198730, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9108.457031, -6026.416015, 85.088302, 0.000000, 0.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9096.488281, -6022.038085, 85.088302, 0.000000, 0.000000, -66.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9084.249023, -6019.887207, 85.088302, 0.000000, 0.000000, -94.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9072.518554, -6023.818359, 85.088302, 0.000000, 0.000000, 57.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9064.044921, -6032.893066, 85.088302, 0.000000, 0.000000, 29.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9060.514648, -6051.265625, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9060.064453, -6076.837402, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9060.069335, -6097.166992, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9064.456054, -6121.977050, 85.088302, 0.000000, 0.000000, -20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9066.187500, -6146.519531, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9056.384765, -6169.644531, 85.088302, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9038.177734, -6186.655273, 85.088302, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9014.441406, -6194.849609, 85.088302, 0.000000, 0.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8988.976562, -6196.641113, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8970.426757, -6193.820800, 85.088302, 0.000000, 0.000000, -64.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8958.528320, -6189.254394, 85.088302, 0.000000, 0.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8946.083007, -6188.593750, 85.088302, 0.000000, 0.000000, -100.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8934.834960, -6193.733886, 85.088302, 0.000000, 0.000000, 51.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8927.173828, -6203.545898, 85.088302, 0.000000, 0.000000, 25.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8924.470703, -6222.139160, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8924.479492, -6247.725097, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8924.472656, -6269.591796, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8920.549804, -6287.435546, 85.088302, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8915.515625, -6298.760742, 85.088302, 0.000000, 0.000000, 10.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8916.791992, -6310.975097, 85.088302, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8923.635742, -6321.495117, 85.088302, 0.000000, 0.000000, -44.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8940.834960, -6326.989257, 85.088302, 0.000000, 0.000000, -86.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8966.414062, -6327.879394, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8992.007812, -6327.879882, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9016.914062, -6323.725097, 85.088302, 0.000000, 0.000000, 71.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9041.568359, -6322.019042, 85.088302, 0.000000, 0.000000, 101.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9064.837890, -6331.411132, 85.088302, 0.000000, 0.000000, -57.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9082.161132, -6349.340332, 85.088302, 0.000000, 0.000000, -31.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9090.762695, -6372.935058, 85.088302, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9092.773437, -6398.365234, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9097.156250, -6423.187988, 85.088302, 0.000000, 0.000000, -20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9099.758789, -6447.873046, 85.088302, 0.000000, 0.000000, 8.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9090.830078, -6471.156738, 85.088302, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9073.083007, -6488.931152, 85.088302, 0.000000, 0.000000, 56.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9049.965820, -6498.754394, 85.088302, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9024.665039, -6501.427734, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9013.643554, -6501.432128, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8994.769531, -6501.422363, 82.892700, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8969.570312, -6501.427246, 78.449203, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8944.365234, -6501.420410, 74.007499, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8919.168945, -6501.410644, 69.564598, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8893.966796, -6501.405761, 65.118301, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8868.763671, -6501.411132, 60.676898, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8843.570312, -6501.403320, 56.227699, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8818.367187, -6501.398925, 51.782901, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8803.869140, -6501.413574, 49.189701, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8784.884765, -6501.409667, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8765.716796, -6501.853027, 48.119998, 0.000000, 0.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8753.599609, -6505.115722, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8744.466796, -6513.347656, 48.119998, 0.000000, 0.000000, 32.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8740.641601, -6525.158691, 48.119998, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8742.798828, -6537.369140, 48.119998, 0.000000, 0.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8747.190429, -6555.876953, 48.119998, 0.000000, 0.000000, -8.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8748.981445, -6574.942382, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8750.308593, -6587.587402, 48.119998, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8755.750000, -6598.740722, 48.119998, 0.000000, 0.000000, -40.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8765.611328, -6606.424804, 48.119998, 0.000000, 0.000000, -64.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8777.709960, -6608.551269, 48.119998, 0.000000, 0.000000, -96.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8789.834960, -6605.092285, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8808.347656, -6601.403320, 48.119998, 0.000000, 0.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8833.900390, -6600.527832, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8859.493164, -6600.545410, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8885.088867, -6600.558105, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8910.687500, -6600.565429, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8936.276367, -6600.568359, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8961.859375, -6600.130859, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8980.437500, -6597.008300, 48.119998, 0.000000, 0.000000, 65.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8990.094726, -6589.207031, 48.119998, 0.000000, 0.000000, 37.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8994.726562, -6577.745605, 48.119998, 0.000000, 0.000000, 7.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8990.914062, -6559.445800, 48.119998, 0.000000, 0.000000, -21.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8986.350585, -6534.703613, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8986.365234, -6509.118652, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8987.269531, -6483.564941, 48.119998, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8993.384765, -6459.124023, 48.119998, 0.000000, 0.000000, 24.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9008.116210, -6438.881835, 48.119998, 0.000000, 0.000000, 48.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9029.799804, -6426.375000, 48.119998, 0.000000, 0.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9054.576171, -6424.659667, 48.119998, 0.000000, 0.000000, 100.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9068.973632, -6428.653320, 48.119998, 0.000000, 0.000000, -61.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9087.361328, -6431.758300, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9106.519531, -6431.103027, 48.119998, 0.000000, 0.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9118.516601, -6427.466796, 48.119998, 0.000000, 0.000000, 62.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9127.371093, -6418.935058, 48.119998, 0.000000, 0.000000, 30.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9130.796875, -6407.010253, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9126.429687, -6388.669921, 48.119998, 0.000000, 0.000000, -21.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9121.844726, -6363.924804, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9120.530273, -6344.870117, 48.119998, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9115.278320, -6333.578125, 48.119998, 0.000000, 0.000000, -38.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9105.416015, -6326.131347, 48.119998, 0.000000, 0.000000, -68.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9093.113281, -6324.294921, 48.119998, 0.000000, 0.000000, 85.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9081.065429, -6327.765625, 48.119998, 0.000000, 0.000000, 63.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9077.308593, -6329.687011, 48.119998, 0.000000, 0.000000, 63.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9059.144531, -6332.587890, 45.933998, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9033.954101, -6332.586914, 41.489799, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9008.758789, -6332.582519, 37.051300, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8983.567382, -6332.579101, 32.614601, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8958.376953, -6332.578613, 28.177200, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8933.171875, -6332.566894, 23.732299, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8907.978515, -6332.552246, 19.284900, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8882.779296, -6332.554687, 14.843600, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8868.215820, -6332.559082, 12.252598, 10.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8849.232421, -6332.548339, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8830.046875, -6333.007324, 11.146598, 0.000000, 0.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8818.027343, -6336.466308, 11.146598, 0.000000, 0.000000, 62.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8808.814453, -6344.781738, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8804.796875, -6356.458007, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8808.738281, -6374.844238, 11.146598, 0.000000, 0.000000, -20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8813.115234, -6399.649902, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8814.230468, -6418.746582, 11.146598, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8819.275390, -6430.068359, 11.146598, 0.000000, 0.000000, -38.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8829.059570, -6437.699218, 11.146598, 0.000000, 0.000000, -66.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8841.295898, -6439.875000, 11.146598, 0.000000, 0.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8859.708984, -6435.059570, 11.146598, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8884.524414, -6430.693847, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8910.111328, -6430.711914, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8935.548828, -6432.500000, 11.146598, 0.000000, 0.000000, -82.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8959.296875, -6440.674316, 11.146598, 0.000000, 0.000000, -60.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8977.900390, -6457.399414, 11.146598, 0.000000, 0.000000, -36.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8988.116210, -6480.279296, 11.146598, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8986.411132, -6504.815429, 11.146598, 0.000000, 0.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -8982.039062, -6529.629882, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8982.273437, -6548.822265, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8985.504882, -6560.858398, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8993.679687, -6570.258789, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9005.210937, -6574.672363, 11.146598, 0.000000, 0.000000, -84.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9023.447265, -6570.558105, 11.146598, 0.000000, 0.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9048.094726, -6565.776855, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9067.178710, -6564.688476, 11.146598, 0.000000, 0.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9078.652343, -6559.841308, 11.146598, 0.000000, 0.000000, 54.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9086.632812, -6550.340820, 11.146598, 0.000000, 0.000000, 26.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9088.992187, -6538.210937, 11.146598, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9084.575195, -6519.674804, 11.146598, 0.000000, 0.000000, -18.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9080.625976, -6494.695312, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9080.627929, -6469.108398, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9082.416015, -6443.633300, 11.146598, 0.000000, 0.000000, 8.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9090.607421, -6419.895996, 11.146598, 0.000000, 0.000000, 30.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9107.363281, -6401.294433, 11.146598, 0.000000, 0.000000, 54.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9130.242187, -6391.128417, 11.146598, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9154.337890, -6393.877441, 11.146598, 0.000000, 0.000000, -65.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9178.724609, -6399.266601, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9197.912109, -6399.048828, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9210.065429, -6396.032714, 11.146598, 0.000000, 0.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9219.760742, -6388.206542, 11.146598, 0.000000, 0.000000, 38.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9224.366210, -6376.795410, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9219.828125, -6358.738281, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -9214.196289, -6340.666015, 11.146598, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.134765, -6328.879882, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.135742, -6303.303710, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.132812, -6277.723144, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.141601, -6252.132812, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.157226, -6226.555664, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.153320, -6200.978027, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.158203, -6175.383300, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -9214.154296, -6149.786132, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8871.301757, -6078.132812, 28.941499, -10.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8871.548828, -5910.624511, 65.904998, -10.000000, 180.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8902.473632, -6482.447753, 65.904998, -10.000000, 180.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(8357, -8966.823242, -6313.782226, 28.941499, -10.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8866.308593, -6197.914062, 47.345798, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8868.196289, -6220.013671, 47.351799, 0.000000, 180.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8877.936523, -6238.326660, 47.357799, 0.000000, 180.000000, 52.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8890.598632, -6247.872558, 47.363800, 0.000000, 180.000000, 22.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8909.906250, -6251.542480, 47.369800, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8939.884765, -6251.520019, 47.375801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8966.447265, -6252.132324, 47.381801, 0.000000, 180.000000, 8.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8992.606445, -6257.141601, 47.387798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9012.105468, -6253.455078, 47.393798, 0.000000, 180.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9027.171875, -6243.117187, 47.399799, 0.000000, 180.000000, -47.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9037.469726, -6228.736328, 47.405799, 0.000000, 180.000000, -75.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9040.465820, -6206.074707, 47.399799, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9040.467773, -6176.083984, 47.393798, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9038.572265, -6149.207519, 47.387798, 0.000000, 180.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9035.505859, -6123.159667, 47.381801, 0.000000, 180.000000, -87.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9040.336914, -6103.898925, 47.375801, 0.000000, 180.000000, -65.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9050.209960, -6092.434082, 47.369800, 0.000000, 180.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9064.160156, -6082.742187, 47.363800, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9094.152343, -6082.757812, 47.357799, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9114.858398, -6086.346679, 47.351799, 0.000000, 180.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9133.980468, -6089.753417, 47.345798, 0.000000, 180.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9151.023437, -6084.708007, 47.339801, 0.000000, 180.000000, -30.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9165.838867, -6072.571777, 47.333801, 0.000000, 180.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9174.146484, -6054.320800, 47.327800, 0.000000, 180.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9177.017578, -6031.823242, 47.321800, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9177.021484, -6001.850585, 47.315799, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9179.201171, -5979.070312, 47.309799, 0.000000, 180.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9183.222656, -5956.680664, 47.303798, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9179.340820, -5938.919921, 47.297798, 0.000000, 180.000000, 64.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9167.646484, -5923.937988, 47.291801, 0.000000, 180.000000, 40.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9147.828125, -5914.110839, 47.285800, 0.000000, 180.000000, 22.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9127.255859, -5912.709472, 47.291801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9097.264648, -5912.717773, 47.297798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9073.246093, -5911.791992, 47.303798, 0.000000, 180.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9048.923828, -5907.324707, 47.309799, 0.000000, 180.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9032.098632, -5910.746582, 47.315799, 0.000000, 180.000000, -26.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9017.103515, -5922.456054, 47.321800, 0.000000, 180.000000, -50.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9008.252929, -5939.441894, 47.327800, 0.000000, 180.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9006.182617, -5962.258300, 47.333801, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9006.185546, -5992.238769, 47.339801, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9010.211914, -6019.445800, 47.345798, 0.000000, 180.000000, 84.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9011.571289, -6044.716796, 47.351799, 0.000000, 180.000000, -85.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9006.060546, -6061.947265, 47.357799, 0.000000, 180.000000, -59.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8994.547851, -6073.262207, 47.363800, 0.000000, 180.000000, -29.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8978.425781, -6081.930664, 47.369800, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8948.425781, -6081.925292, 47.375801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8924.014648, -6086.968750, 47.381801, 0.000000, 180.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8905.453125, -6088.258300, 47.387798, 0.000000, 180.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8889.960937, -6080.770507, 47.393798, 0.000000, 180.000000, 42.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8877.623046, -6066.647460, 47.399799, 0.000000, 180.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8871.982421, -6047.134765, 47.405799, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8871.970703, -6030.375488, 47.399799, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8868.015625, -5790.770507, 84.345497, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8868.092773, -5768.093261, 84.339500, 0.000000, 180.000000, -72.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8874.804687, -5754.155273, 84.333503, 0.000000, 180.000000, -50.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8887.138671, -5743.413574, 84.327499, 0.000000, 180.000000, -26.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8902.270507, -5737.922851, 84.321502, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8932.275390, -5736.420898, 84.315498, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8959.002929, -5732.176757, 84.309501, 0.000000, 180.000000, -6.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8976.318359, -5733.211425, 84.303497, 0.000000, 180.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8991.769531, -5741.662597, 84.297500, 0.000000, 180.000000, 44.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9002.727539, -5757.019042, 84.291496, 0.000000, 180.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9006.666992, -5776.263671, 84.285499, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9005.628906, -5801.636230, 84.279502, 0.000000, 180.000000, -80.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9002.196289, -5826.295898, 84.273498, 0.000000, 180.000000, -88.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9004.070312, -5843.652832, 84.267501, 0.000000, 180.000000, -114.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9014.974609, -5860.496093, 84.261497, 0.000000, 180.000000, -136.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9030.583007, -5870.295410, 84.255500, 0.000000, 180.000000, 19.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9051.787109, -5873.720214, 84.249496, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9081.766601, -5873.710449, 84.243499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9107.306640, -5872.033203, 84.237503, 0.000000, 180.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9132.707031, -5866.496582, 84.243499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9149.767578, -5869.648925, 84.249496, 0.000000, 180.000000, 28.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9165.495117, -5881.017089, 84.255500, 0.000000, 180.000000, 52.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9174.531250, -5897.939453, 84.261497, 0.000000, 180.000000, 76.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9176.490234, -5921.594726, 84.267501, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9179.046875, -5947.024902, 84.273498, 0.000000, 180.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9181.855468, -5970.604492, 84.279502, 0.000000, 180.000000, 94.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9176.903320, -5986.429687, 84.285499, 0.000000, 180.000000, -57.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9165.864257, -6000.643554, 84.291496, 0.000000, 180.000000, -29.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9148.298828, -6008.400390, 84.297500, 0.000000, 180.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9120.908203, -6009.613281, 84.303497, 0.000000, 180.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9096.493164, -6004.732421, 84.309501, 0.000000, 180.000000, 14.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9077.427734, -6003.697753, 84.315498, 0.000000, 180.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9060.113281, -6012.130371, 84.321502, 0.000000, 180.000000, -34.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9048.240234, -6025.980468, 84.327499, 0.000000, 180.000000, -60.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9042.225585, -6045.172363, 84.333503, 0.000000, 180.000000, -82.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9041.638671, -6071.688476, 84.339500, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9042.603515, -6098.608398, 84.345497, 0.000000, 180.000000, 83.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9046.881835, -6126.537109, 84.351501, 0.000000, 180.000000, 79.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9046.353515, -6144.197265, 84.357498, 0.000000, 180.000000, -74.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9038.035156, -6161.458496, 84.351501, 0.000000, 180.000000, -50.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9024.764648, -6172.662109, 84.345497, 0.000000, 180.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9005.164062, -6177.777343, 84.339500, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8978.600585, -6176.893554, 84.333503, 0.000000, 180.000000, 8.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8951.541992, -6171.271972, 84.327499, 0.000000, 180.000000, 2.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8933.685546, -6173.956054, 84.321502, 0.000000, 180.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8919.395507, -6185.102539, 84.315498, 0.000000, 180.000000, -50.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8909.427734, -6202.514160, 84.309501, 0.000000, 180.000000, -72.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8905.962890, -6224.117187, 84.303497, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8906.041992, -6254.096191, 84.297500, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8903.033203, -6279.554687, 84.291496, 0.000000, 180.000000, -80.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8902.816406, -6322.076171, 84.285499, 0.000000, 180.000000, 62.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8899.365234, -6304.529785, 84.279502, 0.000000, 180.000000, 89.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8914.691406, -6335.724609, 84.273498, 0.000000, 180.000000, 36.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8931.965820, -6344.151855, 84.267501, 0.000000, 180.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8956.628906, -6346.476074, 84.261497, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8986.653320, -6346.462890, 84.255500, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9012.062500, -6343.858398, 84.249496, 0.000000, 180.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9035.113281, -6341.436523, 84.243499, 0.000000, 180.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9052.402343, -6346.870605, 84.237503, 0.000000, 180.000000, 32.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9065.582031, -6359.284667, 84.243499, 0.000000, 180.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9072.500000, -6377.135742, 84.249496, 0.000000, 180.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9074.712890, -6405.249023, 84.255500, 0.000000, 180.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9079.661132, -6428.491699, 84.261497, 0.000000, 180.000000, 72.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9080.070312, -6445.791015, 84.267501, 0.000000, 180.000000, -80.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9072.956054, -6462.604492, 84.273498, 0.000000, 180.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9060.434570, -6474.811523, 84.279502, 0.000000, 180.000000, -26.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9040.409179, -6481.509277, 84.285499, 0.000000, 180.000000, -6.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9022.271484, -6482.345214, 84.291496, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8782.673828, -6482.614746, 47.345798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8758.102539, -6485.261718, 47.351799, 0.000000, 180.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8740.738281, -6492.988769, 47.357799, 0.000000, 180.000000, -36.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8728.161132, -6507.243164, 47.363800, 0.000000, 180.000000, -60.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8723.138671, -6524.531250, 47.369800, 0.000000, 180.000000, -86.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8727.125000, -6547.434570, 47.375801, 0.000000, 180.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8730.387695, -6573.630859, 47.381801, 0.000000, 180.000000, 86.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8734.486328, -6595.287109, 47.387798, 0.000000, 180.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8745.484375, -6611.832031, 47.393798, 0.000000, 180.000000, 46.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8760.819335, -6621.431640, 47.399799, 0.000000, 180.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8779.591796, -6624.167968, 47.405799, 0.000000, 180.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8807.657226, -6618.244140, 47.399799, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8837.614257, -6618.302734, 47.393798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8867.497070, -6618.321777, 47.387798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8897.470703, -6618.315917, 47.381801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8927.445312, -6618.296386, 47.375801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8956.520507, -6617.919433, 47.369800, 0.000000, 180.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8980.226562, -6615.281250, 47.363800, 0.000000, 180.000000, -16.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -8996.805664, -6605.782226, 47.357799, 0.000000, 180.000000, -40.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9008.101562, -6590.364257, 47.351799, 0.000000, 180.000000, -64.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9011.781250, -6573.751953, 47.345798, 0.000000, 180.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9006.812500, -6546.556640, 47.339801, 0.000000, 180.000000, 82.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9004.929687, -6520.145507, 47.333801, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9005.824218, -6491.928222, 47.327800, 0.000000, 180.000000, -86.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9010.289062, -6470.493652, 47.321800, 0.000000, 180.000000, -68.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9020.900390, -6454.726562, 47.315799, 0.000000, 180.000000, -44.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9035.708007, -6446.267089, 47.309799, 0.000000, 180.000000, -16.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9054.859375, -6443.752929, 47.303798, 0.000000, 180.000000, 8.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9083.448242, -6449.074707, 47.297798, 0.000000, 180.000000, 10.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9106.488281, -6448.405761, 47.291801, 0.000000, 180.000000, -6.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9125.553710, -6441.802246, 47.285800, 0.000000, 180.000000, -28.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9139.096679, -6430.047363, 47.291801, 0.000000, 180.000000, -54.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9146.247070, -6413.325195, 47.297798, 0.000000, 180.000000, -80.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9145.439453, -6392.294433, 47.303798, 0.000000, 180.000000, 80.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9140.379882, -6366.858886, 47.309799, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9137.597656, -6342.400878, 47.315799, 0.000000, 180.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9129.842773, -6325.079589, 47.321800, 0.000000, 180.000000, 54.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9116.139648, -6313.376464, 47.327800, 0.000000, 180.000000, 28.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9097.136718, -6307.661132, 47.333801, 0.000000, 180.000000, 6.000000, -1, -1, -1, 300);
	CreateDynamicObject(12814, -9086.636718, -6310.402832, 47.339801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9233.616210, -5927.097656, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9232.797851, -5801.858398, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9164.051757, -5644.359375, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9027.006835, -5510.061035, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8876.285156, -5375.725585, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8858.942382, -5509.839843, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8859.218750, -5645.634277, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8871.402343, -5815.404785, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9025.599609, -5678.410156, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9093.380859, -5884.832519, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8957.888671, -5888.518554, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8870.728515, -5971.078613, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8859.421875, -6313.975097, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8863.753906, -6449.312988, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9032.166015, -6584.404785, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9167.011718, -6418.254394, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9233.198242, -6256.115234, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9233.501953, -6133.371582, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9232.956054, -6042.848144, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9273.201171, -6133.347656, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9272.413085, -6042.824218, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9273.052734, -5927.929199, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8870.962890, -6185.534179, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9040.414062, -6149.821289, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9176.035156, -5981.259277, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9007.578125, -6013.593750, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8907.625000, -6020.204101, 37.617698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8835.511718, -6020.534179, 37.634700, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -8847.694335, -6020.235351, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -8838.699218, -6020.234863, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -8895.528320, -6020.140136, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -8904.523437, -6020.148925, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8871.764648, -5851.704589, 65.397903, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8863.285156, -5781.355468, 73.793098, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9007.618164, -5804.398925, 73.793098, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9159.598632, -5873.431152, 73.793098, 0.000000, 0.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9110.019531, -6009.337890, 73.793098, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8974.228515, -6178.253906, 73.793098, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9029.914062, -6284.267578, 74.596801, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9030.403320, -6373.985351, 74.580703, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.161132, -6361.780761, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.166992, -6370.776855, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.161132, -6314.486816, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.159179, -6305.485351, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.161132, -6296.490722, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.164062, -6287.494140, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.166992, -6458.494628, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9047.866210, -6517.135742, 74.580703, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.169921, -6449.494140, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.167968, -6440.490234, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.164062, -6431.490722, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.167968, -6422.494628, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.171875, -6413.498535, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.175781, -6404.499511, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.175781, -6395.497070, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.173828, -6386.495605, 84.671096, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9030.166992, -6379.773437, 84.631103, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9047.587890, -6504.946777, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3095, -9047.585937, -6513.942871, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8795.615234, -6482.440917, 36.852901, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8799.937500, -6618.936035, 36.852901, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9016.046875, -6456.444824, 36.852901, 0.000000, 0.000000, 45.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9128.895507, -6320.465820, 36.852901, 0.000000, 0.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9233.501953, -6133.393554, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9273.285156, -6133.373046, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9232.986328, -6042.894042, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9272.537109, -6042.850585, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9233.733398, -5927.179687, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9273.130859, -5927.965332, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9232.895507, -5801.948242, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9164.212890, -5644.473632, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9027.012695, -5510.178222, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8876.487304, -5375.784667, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8859.046875, -5509.860839, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8859.353515, -5645.653320, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9025.782226, -5678.528320, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8871.569335, -5815.507812, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8957.949218, -5888.404785, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8870.815429, -5970.926269, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9093.450195, -5884.678710, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9233.260742, -6256.020996, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8859.599609, -6313.981933, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8863.938476, -6449.353027, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9032.014648, -6584.491210, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9166.853515, -6418.415039, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8870.946289, -6185.294921, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9040.423828, -6149.742187, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9007.646484, -6013.557617, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9176.100585, -5981.244140, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9128.704101, -6320.455078, -92.932701, 0.000000, 180.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9016.250000, -6456.255371, -92.932701, 0.000000, 180.000000, 45.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8795.837890, -6482.525390, -92.932701, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8800.159179, -6618.952636, -92.932701, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8907.494140, -6020.382324, -92.187301, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8835.411132, -6020.615234, -92.187301, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8871.937500, -5851.886718, -64.413597, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8863.451171, -5781.490234, -56.009998, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9007.731445, -5804.549804, -56.009998, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9159.390625, -5873.430664, -56.009998, 0.000000, 180.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9109.937500, -6009.415527, -56.009998, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -8974.398437, -6178.280273, -56.009998, 0.000000, 180.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9029.926757, -6284.202148, -55.198501, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9030.557617, -6373.839843, -55.208499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -9047.918945, -6517.035156, -55.208499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -9251.354492, -5916.587402, 11.091500, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -9215.088867, -5916.587402, 11.091500, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -9224.199218, -5916.596191, 18.562000, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -9233.108398, -5916.586425, 18.562000, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -9233.316406, -5916.606445, 18.562000, 0.000000, -90.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -9242.233398, -5916.596191, 18.562000, 0.000000, -90.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(711, -9290.218750, -5926.697265, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(711, -9281.703125, -5926.541015, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(711, -9272.829101, -5926.475097, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(711, -9263.958984, -5926.489746, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(711, -9255.229492, -5926.404296, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9233.289062, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9227.208007, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9221.304687, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9239.360351, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9245.285156, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
//дрифт трасса 8 (конец)

//дрифт трасса 9 (начало)
	ObjGam[33] = CreateObject(6959, -5938.099609, -6139.700195, 9.399998, 0.000000, 0.000000, 359.978027);

	CreateDynamicObject(5184, -5894.827148, -6098.495117, 28.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5980.799804, -6098.500000, 28.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(5184, -6017.600097, -6060.899902, 28.100000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(5184, -6063.700195, -6018.600097, 28.000000, 0.000000, 0.000000, 269.989013, -1, -1, -1, 300);
	CreateDynamicObject(5184, -6141.500000, -5941.100097, 28.100000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(5184, -6141.500000, -5859.000000, 28.100000, 0.000000, 0.000000, 179.972534, -1, -1, -1, 300);
	CreateDynamicObject(5184, -6011.699218, -5859.100585, 28.100000, 0.000000, 0.000000, 179.961547, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5881.899414, -5859.100585, 28.100000, 0.000000, 0.000000, 179.950561, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5812.399902, -5901.299804, 28.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5853.700195, -6015.034179, 28.100000, 0.000000, 0.000000, 89.945098, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6185.799804, -5939.899902, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6185.799804, -5899.899902, 9.399998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6185.799804, -5860.000000, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(5184, -6141.500000, -5917.299804, 28.000000, 0.000000, 0.000000, 179.978027, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6144.500000, -5939.899902, 9.420000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6103.200195, -5939.899902, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6144.500000, -5899.899902, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6103.200195, -5899.899902, 9.399998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6144.500000, -5859.910156, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6103.200195, -5859.910156, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6061.899902, -5859.910156, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6061.899902, -5899.899902, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6061.899902, -5939.899902, 9.409998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6061.899414, -5979.800781, 9.420000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6020.700195, -5859.899902, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.399902, -5859.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5938.100097, -5859.899902, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.799804, -5859.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5855.500000, -5860.000488, 9.399998, 0.000000, 0.000000, 359.983489, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5814.200195, -5860.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5858.399902, -5859.000000, 28.100000, 0.000000, 0.000000, 179.950561, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5814.200195, -5900.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6061.899902, -6019.700195, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6061.899414, -6059.700195, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6020.599609, -6059.700195, 9.390000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.299804, -6059.700195, 9.420000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.299804, -6099.700195, 9.420000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.199218, -6139.600585, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5854.700195, -5981.200195, 27.979999, 0.000000, 0.000000, 359.945098, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5814.200195, -5940.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5814.200195, -5980.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5812.399902, -5935.100097, 27.989999, 0.000000, 0.000000, 89.945098, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5855.500000, -5980.000000, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5855.500000, -6020.000000, 9.399998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5855.500000, -6060.000000, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.799804, -6139.700195, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
//	CreateDynamicObject(6959, -5938.099609, -6139.700195, 9.399998, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5938.000000, -6099.700195, 9.399998, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5938.005859, -6059.701171, 9.399998, 0.000000, 0.000000, 359.977996, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.699218, -6099.700195, 9.409998, 0.000000, 0.000000, 359.983489, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.799804, -6059.700195, 9.409998, 0.000000, 0.000000, 359.977996, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.799804, -6019.700195, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.799804, -5979.700195, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5938.099609, -6019.800781, 9.390000, 0.000000, 0.000000, 359.983489, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.399902, -6019.799804, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6020.700195, -6019.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6020.700195, -5979.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6020.600097, -5939.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -6020.600097, -5899.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.399902, -5979.799804, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.299804, -5939.899902, 9.420000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5979.299804, -5899.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5938.000000, -5899.910156, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.700195, -5899.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5855.399902, -5900.000000, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5855.299804, -5940.000000, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5896.620117, -5939.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5937.950195, -5939.899902, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(6959, -5938.100097, -5979.810058, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -5999.800292, -6122.899902, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5999.800292, -6092.500000, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5999.800292, -6097.299804, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -6012.799804, -6079.700195, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -6038.399902, -6079.700195, 10.000000, 0.000000, 0.000000, 89.994506, -1, -1, -1, 300);
	CreateDynamicObject(982, -6064.000000, -6079.700195, 10.000000, 0.000000, 0.000000, 89.994506, -1, -1, -1, 300);
	CreateDynamicObject(982, -6068.799804, -6079.700195, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -6081.600097, -6066.899902, 10.000000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 300);
	CreateDynamicObject(982, -6081.600097, -6041.299804, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -6081.600097, -6015.700195, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -6081.600097, -5990.100097, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -6081.600097, -5972.500000, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -6094.399902, -5959.700195, 10.000000, 0.000000, 0.000000, 269.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -6120.000000, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6145.600097, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6171.200195, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6193.600097, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6206.399902, -5946.899902, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6206.399902, -5921.299804, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6206.399902, -5895.700195, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6206.399902, -5870.100097, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6206.399902, -5852.500000, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6193.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.983520, -1, -1, -1, 300);
	CreateDynamicObject(982, -6168.000000, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6142.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6116.799804, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6091.200195, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6065.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6040.000000, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6014.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5988.799804, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5963.200195, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5937.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5912.000000, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5886.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5860.799804, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5835.200195, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5809.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5806.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5852.500000, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5878.100097, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5903.700195, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5929.299804, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5954.899902, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5980.500000, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5793.600097, -5986.899902, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5806.399902, -5999.700195, 10.000000, 0.000000, 0.000000, 269.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5822.399902, -5999.700195, 10.000000, 0.000000, 0.000000, 269.972534, -1, -1, -1, 300);
	CreateDynamicObject(982, -5835.200195, -6012.500000, 10.000000, 0.000000, 0.000000, 359.972534, -1, -1, -1, 300);
	CreateDynamicObject(982, -5835.200195, -6038.100097, 10.000000, 0.000000, 0.000000, 359.972534, -1, -1, -1, 300);
	CreateDynamicObject(982, -5835.200195, -6063.700195, 10.000000, 0.000000, 0.000000, 359.972534, -1, -1, -1, 300);
	CreateDynamicObject(982, -5876.159667, -6095.696289, 10.000000, 0.000000, 0.000000, 359.972503, -1, -1, -1, 300);
	CreateDynamicObject(982, -5876.172851, -6121.272949, 10.000000, 0.000000, 0.000000, 359.972503, -1, -1, -1, 300);
	CreateDynamicObject(982, -5876.183593, -6146.868164, 10.000000, 0.000000, 0.000000, 359.972503, -1, -1, -1, 300);
	CreateDynamicObject(982, -5888.978515, -6159.691406, 10.000000, 0.000000, 0.000000, 269.967010, -1, -1, -1, 300);
	CreateDynamicObject(982, -5899.200195, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 300);
	CreateDynamicObject(982, -5924.799804, -6159.700195, 10.000000, 0.000000, 0.000000, 269.961547, -1, -1, -1, 300);
	CreateDynamicObject(982, -5950.399902, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 300);
	CreateDynamicObject(982, -5976.000000, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 300);
	CreateDynamicObject(982, -5987.200195, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 300);
	CreateDynamicObject(982, -5987.100097, -6079.700195, 10.000000, 0.000000, 0.000000, 89.989013, -1, -1, -1, 300);
	CreateDynamicObject(982, -5961.500000, -6079.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5935.899414, -6079.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5898.299804, -6079.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5999.807128, -6146.941894, 10.000000, 0.000000, 0.000000, 179.961547, -1, -1, -1, 300);
	CreateDynamicObject(8843, -5939.898437, -6064.657226, 9.399998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5872.700195, -6079.700195, 10.000000, 0.000000, 0.000000, 89.972526, -1, -1, -1, 300);
	CreateDynamicObject(982, -5847.100097, -6079.700195, 10.000000, 0.000000, 0.000000, 89.972526, -1, -1, -1, 300);
	CreateDynamicObject(1673, -5938.599609, -6070.000000, 13.100000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(1673, -5939.500000, -6069.299804, 13.100000, 0.000000, 0.000000, 89.994506, -1, -1, -1, 300);
	CreateDynamicObject(982, -5951.899414, -6059.600585, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5926.299804, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5977.500000, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6003.100097, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -6028.700195, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(983, -6044.500000, -6058.500000, 10.100000, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -6049.600097, -6054.899902, 10.100000, 0.000000, 0.000000, 39.993900, -1, -1, -1, 300);
	CreateDynamicObject(983, -6052.200195, -6049.299804, 10.100000, 0.000000, 0.000000, 9.984740, -1, -1, -1, 300);
	CreateDynamicObject(983, -6052.200195, -6043.000000, 10.100000, 0.000000, 0.000000, 349.975585, -1, -1, -1, 300);
	CreateDynamicObject(983, -6049.600097, -6037.399902, 10.100000, 0.000000, 0.000000, 319.969482, -1, -1, -1, 300);
	CreateDynamicObject(983, -6044.500000, -6033.899902, 10.100000, 0.000000, 0.000000, 288.965820, -1, -1, -1, 300);
	CreateDynamicObject(983, -6038.299804, -6033.399902, 10.100000, 0.000000, 0.000000, 259.956909, -1, -1, -1, 300);
	CreateDynamicObject(983, -6032.700195, -6036.000000, 10.100000, 0.000000, 0.000000, 229.947509, -1, -1, -1, 300);
	CreateDynamicObject(983, -6027.799804, -6040.100097, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 300);
	CreateDynamicObject(983, -6022.899902, -6044.200195, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 300);
	CreateDynamicObject(983, -6018.000000, -6048.299804, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 300);
	CreateDynamicObject(983, -6013.100097, -6052.399902, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 300);
	CreateDynamicObject(983, -6007.899902, -6056.100097, 10.100000, 0.000000, 0.000000, 239.193847, -1, -1, -1, 300);
	CreateDynamicObject(983, -6059.100097, -6079.100097, 10.100000, 0.000000, 0.000000, 79.984741, -1, -1, -1, 300);
	CreateDynamicObject(983, -6065.200195, -6077.500000, 10.100000, 0.000000, 0.000000, 69.974983, -1, -1, -1, 300);
	CreateDynamicObject(983, -6071.000000, -6074.799804, 10.100000, 0.000000, 0.000000, 59.971920, -1, -1, -1, 300);
	CreateDynamicObject(983, -6076.200195, -6071.200195, 10.100000, 0.000000, 0.000000, 49.968868, -1, -1, -1, 300);
	CreateDynamicObject(983, -6080.100097, -6066.200195, 10.100000, 0.000000, 0.000000, 25.960329, -1, -1, -1, 300);
	CreateDynamicObject(983, -6081.000000, -6030.200195, 10.100000, 0.000000, 0.000000, 349.949707, -1, -1, -1, 300);
	CreateDynamicObject(983, -6078.799804, -6024.299804, 10.100000, 0.000000, 0.000000, 327.947509, -1, -1, -1, 300);
	CreateDynamicObject(983, -6074.299804, -6020.000000, 10.100000, 0.000000, 0.000000, 299.947387, -1, -1, -1, 300);
	CreateDynamicObject(983, -6068.500000, -6017.299804, 10.100000, 0.000000, 0.000000, 289.943237, -1, -1, -1, 300);
	CreateDynamicObject(983, -6062.500000, -6015.100097, 10.100000, 0.000000, 0.000000, 289.934692, -1, -1, -1, 300);
	CreateDynamicObject(983, -6056.500000, -6012.899902, 10.100000, 0.000000, 0.000000, 289.934692, -1, -1, -1, 300);
	CreateDynamicObject(983, -6050.299804, -6011.299804, 10.100000, 0.000000, 0.000000, 279.184692, -1, -1, -1, 300);
	CreateDynamicObject(983, -6043.899902, -6010.799804, 10.100000, 0.000000, 0.000000, 269.934570, -1, -1, -1, 300);
	CreateDynamicObject(983, -6037.500000, -6010.799804, 10.100000, 0.000000, 0.000000, 269.934082, -1, -1, -1, 300);
	CreateDynamicObject(983, -6031.100097, -6011.399902, 10.100000, 0.000000, 0.000000, 259.434082, -1, -1, -1, 300);
	CreateDynamicObject(983, -6025.200195, -6013.600097, 10.100000, 0.000000, 0.000000, 239.675659, -1, -1, -1, 300);
	CreateDynamicObject(983, -6020.000000, -6017.299804, 10.100000, 0.000000, 0.000000, 229.666748, -1, -1, -1, 300);
	CreateDynamicObject(983, -6020.000000, -6017.300781, 10.100000, 0.000000, 0.000000, 229.908203, -1, -1, -1, 300);
	CreateDynamicObject(983, -6015.100097, -6021.399902, 10.100000, 0.000000, 0.000000, 229.899902, -1, -1, -1, 300);
	CreateDynamicObject(983, -6010.200195, -6025.500000, 10.100000, 0.000000, 0.000000, 229.899902, -1, -1, -1, 300);
	CreateDynamicObject(983, -6005.299804, -6029.600097, 10.100000, 0.000000, 0.000000, 229.899902, -1, -1, -1, 300);
	CreateDynamicObject(983, -6000.100097, -6033.299804, 10.100000, 0.000000, 0.000000, 239.899902, -1, -1, -1, 300);
	CreateDynamicObject(983, -5994.299804, -6036.000000, 10.100000, 0.000000, 0.000000, 249.897460, -1, -1, -1, 300);
	CreateDynamicObject(983, -5988.100097, -6037.600097, 10.100000, 0.000000, 0.000000, 261.145019, -1, -1, -1, 300);
	CreateDynamicObject(983, -5981.699218, -6038.100585, 10.100000, 0.000000, 0.000000, 270.137329, -1, -1, -1, 300);
	CreateDynamicObject(983, -6002.100097, -6058.600097, 10.100000, 0.000000, 0.000000, 255.188842, -1, -1, -1, 300);
	CreateDynamicObject(982, -5977.500000, -6059.600585, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5965.799804, -6038.200195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(982, -5948.200195, -6038.200195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(983, -5932.100097, -6038.200195, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5925.899902, -6037.100097, 10.000000, 0.000000, 0.000000, 289.994506, -1, -1, -1, 300);
	CreateDynamicObject(983, -5920.399902, -6033.899902, 10.000000, 0.000000, 0.000000, 309.989624, -1, -1, -1, 300);
	CreateDynamicObject(983, -5916.399902, -6029.100097, 10.000000, 0.000000, 0.000000, 329.979248, -1, -1, -1, 300);
	CreateDynamicObject(983, -5914.200195, -6023.200195, 10.000000, 0.000000, 0.000000, 349.968872, -1, -1, -1, 300);
	CreateDynamicObject(983, -5914.200195, -6016.899902, 10.000000, 0.000000, 0.000000, 9.958498, -1, -1, -1, 300);
	CreateDynamicObject(983, -5916.399902, -6011.000000, 10.000000, 0.000000, 0.000000, 30.448120, -1, -1, -1, 300);
	CreateDynamicObject(983, -5920.799804, -6006.600097, 10.000000, 0.000000, 0.000000, 59.937618, -1, -1, -1, 300);
	CreateDynamicObject(983, -5926.700195, -6004.399902, 10.000000, 0.000000, 0.000000, 79.930419, -1, -1, -1, 300);
	CreateDynamicObject(983, -5933.000000, -6004.399902, 10.000000, 0.000000, 0.000000, 99.925537, -1, -1, -1, 300);
	CreateDynamicObject(983, -5938.899902, -6006.500000, 10.000000, 0.000000, 0.000000, 119.915161, -1, -1, -1, 300);
	CreateDynamicObject(983, -5943.700195, -6010.500000, 10.000000, 0.000000, 0.000000, 139.904785, -1, -1, -1, 300);
	CreateDynamicObject(983, -5947.399902, -6015.700195, 10.000000, 0.000000, 0.000000, 149.899902, -1, -1, -1, 300);
	CreateDynamicObject(983, -5950.600097, -6021.200195, 10.000000, 0.000000, 0.000000, 149.891967, -1, -1, -1, 300);
	CreateDynamicObject(983, -5953.799804, -6026.700195, 10.000000, 0.000000, 0.000000, 149.886474, -1, -1, -1, 300);
	CreateDynamicObject(983, -5957.500000, -6031.899902, 10.000000, 0.000000, 0.000000, 139.386474, -1, -1, -1, 300);
	CreateDynamicObject(983, -5962.399902, -6035.899902, 10.000000, 0.000000, 0.000000, 117.878051, -1, -1, -1, 300);
	CreateDynamicObject(983, -5968.399902, -6037.799804, 10.000000, 0.000000, 0.000000, 97.372306, -1, -1, -1, 300);
	CreateDynamicObject(983, -5916.899902, -6058.500000, 10.000000, 0.000000, 0.000000, 289.989624, -1, -1, -1, 300);
	CreateDynamicObject(983, -5911.100097, -6055.799804, 10.000000, 0.000000, 0.000000, 299.989624, -1, -1, -1, 300);
	CreateDynamicObject(983, -5905.899902, -6052.200195, 10.000000, 0.000000, 0.000000, 309.981689, -1, -1, -1, 300);
	CreateDynamicObject(983, -5901.399902, -6047.700195, 10.000000, 0.000000, 0.000000, 319.973754, -1, -1, -1, 300);
	CreateDynamicObject(983, -5897.700195, -6042.500000, 10.000000, 0.000000, 0.000000, 329.971313, -1, -1, -1, 300);
	CreateDynamicObject(983, -5895.000000, -6036.700195, 10.000000, 0.000000, 0.000000, 339.963378, -1, -1, -1, 300);
	CreateDynamicObject(983, -5893.299804, -6030.500000, 10.000000, 0.000000, 0.000000, 349.955444, -1, -1, -1, 300);
	CreateDynamicObject(983, -5892.700195, -6024.200195, 10.000000, 0.000000, 0.000000, 359.953002, -1, -1, -1, 300);
	CreateDynamicObject(983, -5892.700195, -6017.799804, 10.000000, 0.000000, 0.000000, 359.945068, -1, -1, -1, 300);
	CreateDynamicObject(983, -5892.700195, -6011.399902, 10.000000, 0.000000, 0.000000, 359.945068, -1, -1, -1, 300);
	CreateDynamicObject(983, -5893.200195, -6005.100097, 10.000000, 0.000000, 0.000000, 9.684080, -1, -1, -1, 300);
	CreateDynamicObject(983, -5894.799804, -5998.899902, 10.000000, 0.000000, 0.000000, 19.673460, -1, -1, -1, 300);
	CreateDynamicObject(983, -5897.500000, -5993.100097, 10.000000, 0.000000, 0.000000, 29.671020, -1, -1, -1, 300);
	CreateDynamicObject(983, -5901.500000, -5988.299804, 10.000000, 0.000000, 0.000000, 49.663089, -1, -1, -1, 300);
	CreateDynamicObject(983, -5906.700195, -5984.600097, 10.000000, 0.000000, 0.000000, 59.652709, -1, -1, -1, 300);
	CreateDynamicObject(983, -5912.399902, -5981.899902, 10.000000, 0.000000, 0.000000, 69.644783, -1, -1, -1, 300);
	CreateDynamicObject(983, -5918.500000, -5980.200195, 10.000000, 0.000000, 0.000000, 79.642326, -1, -1, -1, 300);
	CreateDynamicObject(983, -5924.899902, -5979.600097, 10.000000, 0.000000, 0.000000, 89.639892, -1, -1, -1, 300);
	CreateDynamicObject(983, -5931.299804, -5979.600097, 10.000000, 0.000000, 0.000000, 89.637451, -1, -1, -1, 300);
	CreateDynamicObject(983, -5937.700195, -5979.500000, 10.000000, 0.000000, 0.000000, 89.637451, -1, -1, -1, 300);
	CreateDynamicObject(983, -5944.100097, -5980.000000, 10.000000, 0.000000, 0.000000, 99.637451, -1, -1, -1, 300);
	CreateDynamicObject(983, -5950.299804, -5981.600097, 10.000000, 0.000000, 0.000000, 109.635009, -1, -1, -1, 300);
	CreateDynamicObject(983, -5955.799804, -5984.700195, 10.000000, 0.000000, 0.000000, 129.627075, -1, -1, -1, 300);
	CreateDynamicObject(983, -5959.899902, -5989.500000, 10.000000, 0.000000, 0.000000, 149.616699, -1, -1, -1, 300);
	CreateDynamicObject(983, -5963.200195, -5995.000000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 300);
	CreateDynamicObject(983, -5966.399902, -6000.500000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 300);
	CreateDynamicObject(983, -5969.600097, -6006.000000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 300);
	CreateDynamicObject(983, -5972.799804, -6011.500000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 300);
	CreateDynamicObject(983, -5977.200195, -6015.799804, 10.000000, 0.000000, 0.000000, 119.611816, -1, -1, -1, 300);
	CreateDynamicObject(983, -5983.100097, -6016.899902, 10.000000, 0.000000, 0.000000, 79.602661, -1, -1, -1, 300);
	CreateDynamicObject(983, -5988.700195, -6014.299804, 10.000000, 0.000000, 0.000000, 49.595951, -1, -1, -1, 300);
	CreateDynamicObject(982, -5999.300292, -6002.399902, 10.000000, 0.000000, 0.000000, 39.978031, -1, -1, -1, 300);
	CreateDynamicObject(982, -6013.899902, -5981.500000, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 300);
	CreateDynamicObject(982, -6028.899902, -6004.100097, 10.000000, 0.000000, 0.000000, 29.965208, -1, -1, -1, 300);
	CreateDynamicObject(982, -6041.700195, -5981.899902, 10.000000, 0.000000, 0.000000, 29.965208, -1, -1, -1, 300);
	CreateDynamicObject(982, -6026.700195, -5959.299804, 10.000000, 0.000000, 0.000000, 29.965208, -1, -1, -1, 300);
	CreateDynamicObject(983, -6050.200195, -5968.399902, 10.000000, 0.000000, 0.000000, 39.595951, -1, -1, -1, 300);
	CreateDynamicObject(983, -6054.700195, -5963.899902, 10.000000, 0.000000, 0.000000, 49.589229, -1, -1, -1, 300);
	CreateDynamicObject(983, -6059.899902, -5960.200195, 10.000000, 0.000000, 0.000000, 59.586788, -1, -1, -1, 300);
	CreateDynamicObject(983, -6065.600097, -5957.500000, 10.000000, 0.000000, 0.000000, 69.578857, -1, -1, -1, 300);
	CreateDynamicObject(983, -6071.700195, -5955.799804, 10.000000, 0.000000, 0.000000, 79.570922, -1, -1, -1, 300);
	CreateDynamicObject(983, -6078.000000, -5955.200195, 10.000000, 0.000000, 0.000000, 89.568481, -1, -1, -1, 300);
	CreateDynamicObject(982, -6093.799804, -5952.899902, 10.000000, 0.000000, 0.000000, 79.956047, -1, -1, -1, 300);
	CreateDynamicObject(983, -6035.100097, -5945.799804, 10.000000, 0.000000, 0.000000, 39.578861, -1, -1, -1, 300);
	CreateDynamicObject(983, -6039.600097, -5941.200195, 10.000000, 0.000000, 0.000000, 49.572750, -1, -1, -1, 300);
	CreateDynamicObject(983, -6044.799804, -5937.500000, 10.000000, 0.000000, 0.000000, 59.564819, -1, -1, -1, 300);
	CreateDynamicObject(983, -6050.600097, -5934.700195, 10.000000, 0.000000, 0.000000, 69.556877, -1, -1, -1, 300);
	CreateDynamicObject(983, -6056.700195, -5933.000000, 10.000000, 0.000000, 0.000000, 79.548950, -1, -1, -1, 300);
	CreateDynamicObject(983, -6063.000000, -5931.799804, 10.000000, 0.000000, 0.000000, 79.546508, -1, -1, -1, 300);
	CreateDynamicObject(983, -6069.299804, -5931.200195, 10.000000, 0.000000, 0.000000, 89.546508, -1, -1, -1, 300);
	CreateDynamicObject(982, -6085.100097, -5929.000000, 10.000000, 0.000000, 0.000000, 79.956047, -1, -1, -1, 300);
	CreateDynamicObject(982, -6110.299804, -5924.500000, 10.000000, 0.000000, 0.000000, 79.947509, -1, -1, -1, 300);
	CreateDynamicObject(982, -6119.000000, -5948.399902, 10.000000, 0.000000, 0.000000, 79.947509, -1, -1, -1, 300);
	CreateDynamicObject(983, -6126.000000, -5921.700195, 10.000000, 0.000000, 0.000000, 79.546508, -1, -1, -1, 300);
	CreateDynamicObject(983, -6132.100097, -5920.000000, 10.000000, 0.000000, 0.000000, 69.546508, -1, -1, -1, 300);
	CreateDynamicObject(983, -6137.799804, -5917.299804, 10.000000, 0.000000, 0.000000, 59.537960, -1, -1, -1, 300);
	CreateDynamicObject(983, -6143.000000, -5913.600097, 10.000000, 0.000000, 0.000000, 49.529418, -1, -1, -1, 300);
	CreateDynamicObject(983, -6147.500000, -5909.000000, 10.000000, 0.000000, 0.000000, 39.520870, -1, -1, -1, 300);
	CreateDynamicObject(983, -6150.600097, -5903.500000, 10.000000, 0.000000, 0.000000, 19.517820, -1, -1, -1, 300);
	CreateDynamicObject(983, -6151.600097, -5897.299804, 10.000000, 0.000000, 0.000000, 359.511718, -1, -1, -1, 300);
	CreateDynamicObject(983, -6150.399902, -5891.100097, 10.000000, 0.000000, 0.000000, 339.516601, -1, -1, -1, 300);
	CreateDynamicObject(983, -6147.200195, -5885.600097, 10.000000, 0.000000, 0.000000, 319.510498, -1, -1, -1, 300);
	CreateDynamicObject(983, -6142.100097, -5882.100097, 10.000000, 0.000000, 0.000000, 289.504394, -1, -1, -1, 300);
	CreateDynamicObject(983, -6135.899902, -5881.100097, 10.000000, 0.000000, 0.000000, 269.495239, -1, -1, -1, 300);
	CreateDynamicObject(983, -6130.000000, -5882.799804, 10.000000, 0.000000, 0.000000, 239.494628, -1, -1, -1, 300);
	CreateDynamicObject(983, -6125.200195, -5886.899902, 10.000000, 0.000000, 0.000000, 219.485473, -1, -1, -1, 300);
	CreateDynamicObject(983, -6122.100097, -5892.399902, 10.000000, 0.000000, 0.000000, 199.479370, -1, -1, -1, 300);
	CreateDynamicObject(983, -6120.500000, -5898.600097, 10.000000, 0.000000, 0.000000, 189.473266, -1, -1, -1, 300);
	CreateDynamicObject(983, -6119.500000, -5904.899902, 10.000000, 0.000000, 0.000000, 189.470214, -1, -1, -1, 300);
	CreateDynamicObject(983, -6117.899902, -5911.000000, 10.000000, 0.000000, 0.000000, 199.470214, -1, -1, -1, 300);
	CreateDynamicObject(983, -6114.799804, -5916.500000, 10.000000, 0.000000, 0.000000, 219.462280, -1, -1, -1, 300);
	CreateDynamicObject(983, -6110.299804, -5921.000000, 10.000000, 0.000000, 0.000000, 230.707397, -1, -1, -1, 300);
	CreateDynamicObject(983, -6104.899902, -5924.200195, 10.000000, 0.000000, 0.000000, 248.951904, -1, -1, -1, 300);
	CreateDynamicObject(983, -6098.799804, -5926.200195, 10.000000, 0.000000, 0.000000, 254.944702, -1, -1, -1, 300);
	CreateDynamicObject(983, -6134.700195, -5945.600097, 10.000000, 0.000000, 0.000000, 79.520866, -1, -1, -1, 300);
	CreateDynamicObject(983, -6140.799804, -5943.899902, 10.000000, 0.000000, 0.000000, 69.513549, -1, -1, -1, 300);
	CreateDynamicObject(983, -6146.600097, -5941.200195, 10.000000, 0.000000, 0.000000, 59.505001, -1, -1, -1, 300);
	CreateDynamicObject(983, -6151.799804, -5937.500000, 10.000000, 0.000000, 0.000000, 49.501949, -1, -1, -1, 300);
	CreateDynamicObject(983, -6156.299804, -5932.899902, 10.000000, 0.000000, 0.000000, 39.498901, -1, -1, -1, 300);
	CreateDynamicObject(983, -6160.000000, -5927.600097, 10.000000, 0.000000, 0.000000, 29.495849, -1, -1, -1, 300);
	CreateDynamicObject(983, -6163.100097, -5922.000000, 10.000000, 0.000000, 0.000000, 29.487300, -1, -1, -1, 300);
	CreateDynamicObject(983, -6165.799804, -5916.200195, 10.000000, 0.000000, 0.000000, 19.487300, -1, -1, -1, 300);
	CreateDynamicObject(983, -6167.899902, -5910.200195, 10.000000, 0.000000, 0.000000, 19.478759, -1, -1, -1, 300);
	CreateDynamicObject(983, -6169.500000, -5904.000000, 10.000000, 0.000000, 0.000000, 9.478758, -1, -1, -1, 300);
	CreateDynamicObject(983, -6170.600097, -5897.700195, 10.000000, 0.000000, 0.000000, 9.475708, -1, -1, -1, 300);
	CreateDynamicObject(984, -6171.200195, -5888.100097, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6169.000000, -5875.700195, 10.000000, 0.000000, 0.000000, 340.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6162.700195, -5864.799804, 10.000000, 0.000000, 0.000000, 319.993896, -1, -1, -1, 300);
	CreateDynamicObject(984, -6152.600097, -5857.700195, 10.000000, 0.000000, 0.000000, 289.987792, -1, -1, -1, 300);
	CreateDynamicObject(984, -6140.200195, -5855.500000, 10.000000, 0.000000, 0.000000, 269.984130, -1, -1, -1, 300);
	CreateDynamicObject(984, -6127.799804, -5857.700195, 10.000000, 0.000000, 0.000000, 249.978027, -1, -1, -1, 300);
	CreateDynamicObject(984, -6116.899902, -5864.000000, 10.000000, 0.000000, 0.000000, 229.969482, -1, -1, -1, 300);
	CreateDynamicObject(984, -6107.899902, -5873.000000, 10.000000, 0.000000, 0.000000, 219.965820, -1, -1, -1, 300);
	CreateDynamicObject(984, -6101.600097, -5883.899902, 10.000000, 0.000000, 0.000000, 199.957275, -1, -1, -1, 300);
	CreateDynamicObject(984, -6098.299804, -5896.200195, 10.000000, 0.000000, 0.000000, 189.951171, -1, -1, -1, 300);
	CreateDynamicObject(983, -6096.100097, -5905.500000, 10.000000, 0.000000, 0.000000, 199.457397, -1, -1, -1, 300);
	CreateDynamicObject(983, -6093.000000, -5911.000000, 10.000000, 0.000000, 0.000000, 219.456787, -1, -1, -1, 300);
	CreateDynamicObject(983, -6088.200195, -5915.100097, 10.000000, 0.000000, 0.000000, 239.451904, -1, -1, -1, 300);
	CreateDynamicObject(983, -6082.299804, -5917.299804, 10.000000, 0.000000, 0.000000, 259.447021, -1, -1, -1, 300);
	CreateDynamicObject(983, -6076.000000, -5917.399902, 10.000000, 0.000000, 0.000000, 279.436645, -1, -1, -1, 300);
	CreateDynamicObject(983, -6070.100097, -5915.299804, 10.000000, 0.000000, 0.000000, 299.431762, -1, -1, -1, 300);
	CreateDynamicObject(983, -6065.200195, -5911.299804, 10.000000, 0.000000, 0.000000, 319.421386, -1, -1, -1, 300);
	CreateDynamicObject(983, -6065.199218, -5911.300781, 10.000000, 0.000000, 0.000000, 319.411010, -1, -1, -1, 300);
	CreateDynamicObject(982, -6054.899902, -5899.100097, 10.000000, 0.000000, 0.000000, 139.965209, -1, -1, -1, 300);
	CreateDynamicObject(982, -6038.399902, -5879.500000, 10.000000, 0.000000, 0.000000, 139.954833, -1, -1, -1, 300);
	CreateDynamicObject(983, -6063.100097, -5930.100097, 10.000000, 0.000000, 0.000000, 289.431762, -1, -1, -1, 300);
	CreateDynamicObject(983, -6057.700195, -5927.100097, 10.000000, 0.000000, 0.000000, 309.423828, -1, -1, -1, 300);
	CreateDynamicObject(983, -6053.100097, -5922.600097, 10.000000, 0.000000, 0.000000, 319.418945, -1, -1, -1, 300);
	CreateDynamicObject(982, -6042.799804, -5910.399902, 10.000000, 0.000000, 0.000000, 139.954833, -1, -1, -1, 300);
	CreateDynamicObject(982, -6026.299804, -5890.799804, 10.000000, 0.000000, 0.000000, 139.954803, -1, -1, -1, 300);
	CreateDynamicObject(984, -6025.299804, -5865.600097, 10.000000, 0.000000, 0.000000, 310.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6014.899902, -5858.299804, 10.000000, 0.000000, 0.000000, 299.990234, -1, -1, -1, 300);
	CreateDynamicObject(984, -6003.299804, -5852.899902, 10.000000, 0.000000, 0.000000, 289.981689, -1, -1, -1, 300);
	CreateDynamicObject(984, -5991.000000, -5849.600097, 10.000000, 0.000000, 0.000000, 279.978637, -1, -1, -1, 300);
	CreateDynamicObject(984, -5978.299804, -5848.500000, 10.000000, 0.000000, 0.000000, 269.975585, -1, -1, -1, 300);
	CreateDynamicObject(984, -6013.100097, -5876.899902, 10.000000, 0.000000, 0.000000, 309.967041, -1, -1, -1, 300);
	CreateDynamicObject(984, -6002.199707, -5870.600097, 10.000000, 0.000000, 0.000000, 289.962768, -1, -1, -1, 300);
	CreateDynamicObject(984, -5989.899902, -5867.299804, 10.000000, 0.000000, 0.000000, 279.956665, -1, -1, -1, 300);
	CreateDynamicObject(984, -5977.200195, -5866.200195, 10.000000, 0.000000, 0.000000, 269.948120, -1, -1, -1, 300);
	CreateDynamicObject(982, -5958.000000, -5866.200195, 10.000000, 0.000000, 0.000000, 89.954826, -1, -1, -1, 300);
	CreateDynamicObject(982, -5959.100097, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(982, -5933.500000, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(982, -5907.899902, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(982, -5882.299804, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(982, -5932.399902, -5866.200195, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(982, -5906.799804, -5866.200195, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(982, -5881.200195, -5866.200195, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 300);
	CreateDynamicObject(983, -5865.200195, -5866.299804, 10.100000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5859.000000, -5867.399902, 10.100000, 0.000000, 0.000000, 69.994506, -1, -1, -1, 300);
	CreateDynamicObject(983, -5853.600097, -5870.500000, 10.100000, 0.000000, 0.000000, 49.993900, -1, -1, -1, 300);
	CreateDynamicObject(983, -5849.500000, -5875.299804, 10.100000, 0.000000, 0.000000, 29.987789, -1, -1, -1, 300);
	CreateDynamicObject(983, -5847.299804, -5881.200195, 10.100000, 0.000000, 0.000000, 9.987178, -1, -1, -1, 300);
	CreateDynamicObject(983, -5847.299804, -5887.500000, 10.100000, 0.000000, 0.000000, 349.981079, -1, -1, -1, 300);
	CreateDynamicObject(983, -5849.500000, -5893.500000, 10.100000, 0.000000, 0.000000, 329.974975, -1, -1, -1, 300);
	CreateDynamicObject(983, -5853.600097, -5898.299804, 10.100000, 0.000000, 0.000000, 309.968872, -1, -1, -1, 300);
	CreateDynamicObject(983, -5859.100097, -5901.500000, 10.100000, 0.000000, 0.000000, 289.962768, -1, -1, -1, 300);
	CreateDynamicObject(983, -5865.299804, -5902.600097, 10.100000, 0.000000, 0.000000, 269.956665, -1, -1, -1, 300);
	CreateDynamicObject(984, -5863.100097, -5848.500000, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5850.399902, -5849.600097, 10.000000, 0.000000, 0.000000, 79.994506, -1, -1, -1, 300);
	CreateDynamicObject(984, -5838.100097, -5852.899902, 10.000000, 0.000000, 0.000000, 69.991462, -1, -1, -1, 300);
	CreateDynamicObject(984, -5827.200195, -5859.200195, 10.000000, 0.000000, 0.000000, 49.982910, -1, -1, -1, 300);
	CreateDynamicObject(984, -5819.100097, -5868.899902, 10.000000, 0.000000, 0.000000, 29.976810, -1, -1, -1, 300);
	CreateDynamicObject(984, -5815.899902, -5880.899902, 10.000000, 0.000000, 0.000000, 359.976196, -1, -1, -1, 300);
	CreateDynamicObject(984, -5818.100097, -5893.299804, 10.000000, 0.000000, 0.000000, 339.978027, -1, -1, -1, 300);
	CreateDynamicObject(984, -5824.399902, -5904.200195, 10.000000, 0.000000, 0.000000, 319.971923, -1, -1, -1, 300);
	CreateDynamicObject(984, -5834.100097, -5912.299804, 10.000000, 0.000000, 0.000000, 299.971313, -1, -1, -1, 300);
	CreateDynamicObject(984, -5845.600097, -5917.600097, 10.000000, 0.000000, 0.000000, 289.965209, -1, -1, -1, 300);
	CreateDynamicObject(984, -5857.899902, -5920.899902, 10.000000, 0.000000, 0.000000, 279.956665, -1, -1, -1, 300);
	CreateDynamicObject(984, -5870.600097, -5922.000000, 10.000000, 0.000000, 0.000000, 269.948120, -1, -1, -1, 300);
	CreateDynamicObject(984, -5874.778808, -5901.499511, 10.000000, 0.000000, 0.000000, 259.945068, -1, -1, -1, 300);
	CreateDynamicObject(984, -5887.071289, -5898.184570, 10.000000, 0.000000, 0.000000, 249.942016, -1, -1, -1, 300);
	CreateDynamicObject(984, -5898.236328, -5892.241210, 10.000000, 0.000000, 0.000000, 234.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5899.778320, -5910.636718, 10.000000, 0.000000, 0.000000, 236.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5909.906738, -5902.875000, 10.000000, 0.000000, 0.000000, 229.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5919.627441, -5894.587890, 10.000000, 0.000000, 0.000000, 230.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5954.875976, -5916.749023, 10.000000, 0.000000, 0.000000, -25.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5909.326171, -5907.622070, 10.000000, 0.000000, 0.000000, 26.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5910.899902, -5948.600097, 10.000000, 0.000000, 0.000000, 49.885860, -1, -1, -1, 300);
	CreateDynamicObject(983, -5880.000000, -5920.899902, 10.100000, 0.000000, 0.000000, 249.956054, -1, -1, -1, 300);
	CreateDynamicObject(983, -6015.713378, -5930.187988, 10.100000, 0.000000, 0.000000, 184.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5932.067382, -5919.790039, 10.100000, 0.000000, 0.000000, 105.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5915.072265, -5900.669921, 10.100000, 0.000000, 0.000000, 247.500000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5907.799804, -5922.799804, 10.100000, 0.000000, 0.000000, 339.921264, -1, -1, -1, 300);
	CreateDynamicObject(983, -5908.299804, -5929.000000, 10.100000, 0.000000, 0.000000, 9.916990, -1, -1, -1, 300);
	CreateDynamicObject(983, -5928.065917, -5922.016601, 10.100000, 0.000000, 0.000000, 16.500000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5901.700195, -5939.500000, 10.100000, 0.000000, 0.000000, 39.907840, -1, -1, -1, 300);
	CreateDynamicObject(984, -5894.700195, -5946.000000, 10.000000, 0.000000, 0.000000, 49.877929, -1, -1, -1, 300);
	CreateDynamicObject(984, -5901.899902, -5957.600097, 10.000000, 0.000000, 0.000000, 39.866939, -1, -1, -1, 300);
	CreateDynamicObject(984, -5894.600097, -5968.000000, 10.000000, 0.000000, 0.000000, 29.863889, -1, -1, -1, 300);
	CreateDynamicObject(984, -5889.200195, -5979.600097, 10.000000, 0.000000, 0.000000, 19.855350, -1, -1, -1, 300);
	CreateDynamicObject(984, -5886.000000, -5991.899902, 10.000000, 0.000000, 0.000000, 9.846798, -1, -1, -1, 300);
	CreateDynamicObject(984, -5884.500000, -6004.600097, 10.000000, 0.000000, 0.000000, 3.843750, -1, -1, -1, 300);
	CreateDynamicObject(984, -5884.899902, -5954.299804, 10.000000, 0.000000, 0.000000, 49.866939, -1, -1, -1, 300);
	CreateDynamicObject(984, -5875.899902, -5963.299804, 10.000000, 0.000000, 0.000000, 39.866939, -1, -1, -1, 300);
	CreateDynamicObject(984, -5868.600097, -5973.700195, 10.000000, 0.000000, 0.000000, 29.863889, -1, -1, -1, 300);
	CreateDynamicObject(984, -5863.200195, -5985.299804, 10.000000, 0.000000, 0.000000, 19.855350, -1, -1, -1, 300);
	CreateDynamicObject(984, -5859.899902, -5997.600097, 10.000000, 0.000000, 0.000000, 9.846798, -1, -1, -1, 300);
	CreateDynamicObject(984, -5858.799804, -6010.299804, 10.000000, 0.000000, 0.000000, 359.843750, -1, -1, -1, 300);
	CreateDynamicObject(984, -5859.100097, -6023.100097, 10.000000, 0.000000, 0.000000, 357.840698, -1, -1, -1, 300);
	CreateDynamicObject(984, -5884.799804, -6017.299804, 10.000000, 0.000000, 0.000000, 353.839721, -1, -1, -1, 300);
	CreateDynamicObject(984, -5887.299804, -6029.799804, 10.000000, 0.000000, 0.000000, 343.842163, -1, -1, -1, 300);
	CreateDynamicObject(984, -5891.899902, -6041.700195, 10.000000, 0.000000, 0.000000, 333.839111, -1, -1, -1, 300);
	CreateDynamicObject(983, -5896.700195, -6049.899902, 10.000000, 0.000000, 0.000000, 320.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5901.200195, -6054.399902, 10.000000, 0.000000, 0.000000, 309.993286, -1, -1, -1, 300);
	CreateDynamicObject(983, -5906.700195, -6057.500000, 10.000000, 0.000000, 0.000000, 287.984741, -1, -1, -1, 300);
	CreateDynamicObject(983, -5910.399902, -6058.600097, 10.000000, 0.000000, 0.000000, 287.979125, -1, -1, -1, 300);
	CreateDynamicObject(984, -5860.700195, -6035.700195, 10.000000, 0.000000, 0.000000, 347.835693, -1, -1, -1, 300);
	CreateDynamicObject(984, -5864.500000, -6047.899902, 10.000000, 0.000000, 0.000000, 337.832641, -1, -1, -1, 300);
	CreateDynamicObject(984, -5870.299804, -6059.200195, 10.000000, 0.000000, 0.000000, 327.824096, -1, -1, -1, 300);
	CreateDynamicObject(984, -5878.000000, -6069.399902, 10.000000, 0.000000, 0.000000, 317.815551, -1, -1, -1, 300);
	CreateDynamicObject(984, -5888.000000, -6076.899902, 10.000000, 0.000000, 0.000000, 295.807006, -1, -1, -1, 300);
	CreateDynamicObject(1237, -5911.100097, -6079.700195, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -5923.100097, -6079.700195, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5924.747070, -6087.867675, 6.099998, 0.000000, 0.000000, 78.000000, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5947.799804, -6079.700195, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5964.700195, -6079.700195, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5981.500000, -6079.700195, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5991.600097, -6079.700195, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5911.100097, -6087.899902, 6.099998, 0.000000, 0.000000, 89.978027, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6041.299804, -6059.100097, 11.500000, 0.000000, 0.000000, 330.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6045.500000, -6035.600097, 11.500000, 0.000000, 0.000000, 219.996337, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6051.799804, -6049.200195, 11.500000, 0.000000, 0.000000, 279.990234, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6021.500000, -6058.600097, 11.500000, 0.000000, 0.000000, 359.986572, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6031.100097, -6039.399902, 11.500000, 0.000000, 0.000000, 139.983520, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5950.600097, -6038.000000, 11.500000, 0.000000, 0.000000, 359.982299, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5929.200195, -6037.399902, 11.500000, 0.000000, 0.000000, 29.983520, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5916.399902, -6026.600097, 11.500000, 0.000000, 0.000000, 79.976196, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5918.200195, -6008.799804, 11.500000, 0.000000, 0.000000, 159.969482, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5935.799804, -6005.200195, 11.500000, 0.000000, 0.000000, 209.960937, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5970.200195, -6004.399902, 11.500000, 0.000000, 0.000000, 59.959720, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5979.799804, -6016.299804, 11.500000, 0.000000, 0.000000, 359.952392, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5994.799804, -6005.600097, 11.500000, 0.000000, 0.000000, 309.956054, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6008.000000, -5991.000000, 11.500000, 0.000000, 0.000000, 299.951782, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6041.000000, -5984.600097, 11.500000, 0.000000, 0.000000, 119.943237, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6048.600097, -5970.399902, 11.500000, 0.000000, 0.000000, 129.943237, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6060.399902, -5960.000000, 11.500000, 0.000000, 0.000000, 149.935302, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6074.799804, -5955.500000, 11.500000, 0.000000, 0.000000, 179.924926, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6112.100097, -5923.299804, 11.500000, 0.000000, 0.000000, 349.917602, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6130.399902, -5919.899902, 11.500000, 0.000000, 0.000000, 339.909057, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6145.799804, -5909.700195, 11.500000, 0.000000, 0.000000, 309.900512, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6147.899902, -5887.500000, 11.500000, 0.000000, 0.000000, 229.891357, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6133.200195, -5881.899902, 11.500000, 0.000000, 0.000000, 169.883422, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6121.700195, -5895.899902, 11.500000, 0.000000, 0.000000, 89.881591, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6094.399902, -5907.799804, 11.500000, 0.000000, 0.000000, 299.879150, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6082.299804, -5916.399902, 11.500000, 0.000000, 0.000000, 359.871826, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6067.600097, -5912.700195, 11.500000, 0.000000, 0.000000, 39.868160, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6042.500000, -5910.399902, 11.500000, 0.000000, 0.000000, 229.863891, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6041.500000, -5881.500000, 11.500000, 0.000000, 0.000000, 49.861450, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6016.000000, -5880.799804, 11.500000, 0.000000, 0.000000, 229.861450, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6001.799804, -5871.600097, 11.500000, 0.000000, 0.000000, 199.855957, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5983.799804, -5867.399902, 11.500000, 0.000000, 0.000000, 179.852294, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5956.700195, -5847.600097, 11.500000, 0.000000, 0.000000, 359.851684, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5929.799804, -5867.299804, 11.500000, 0.000000, 0.000000, 179.840698, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5903.100097, -5847.299804, 11.500000, 0.000000, 0.000000, 359.829711, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5878.299804, -5867.200195, 11.500000, 0.000000, 0.000000, 179.818725, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5857.299804, -5868.399902, 11.500000, 0.000000, 0.000000, 149.818725, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5849.100097, -5880.399902, 11.500000, 0.000000, 0.000000, 89.809570, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5853.100097, -5896.299804, 11.500000, 0.000000, 0.000000, 39.802249, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5868.600097, -5901.100097, 11.500000, 0.000000, 0.000000, 349.797973, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5889.000000, -5917.200195, 11.500000, 0.000000, 0.000000, 159.788208, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5910.630859, -5903.340820, 11.500000, 0.000000, 0.000000, -47.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5907.899902, -5926.799804, 11.500000, 0.000000, 0.000000, 279.769897, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5901.000000, -5939.700195, 11.500000, 0.000000, 0.000000, 309.761352, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5898.299804, -5964.000000, 11.500000, 0.000000, 0.000000, 129.759521, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5869.700195, -5969.200195, 11.500000, 0.000000, 0.000000, 299.754028, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5886.200195, -5996.200195, 11.500000, 0.000000, 0.000000, 99.750976, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5858.299804, -6013.700195, 11.500000, 0.000000, 0.000000, 269.750366, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5890.299804, -6036.399902, 11.500000, 0.000000, 0.000000, 69.747306, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5877.700195, -6072.500000, 11.500000, 0.000000, 0.000000, 229.746704, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5908.299804, -6055.700195, 11.500000, 0.000000, 0.000000, 19.746089, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5999.300292, -6082.299804, 11.500000, 0.000000, 0.000000, 29.721069, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5940.500000, -6080.600097, 11.500000, 0.000000, 0.000000, 319.718017, -1, -1, -1, 300);
	CreateDynamicObject(1262, -5938.926757, -6069.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -5938.926757, -6066.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -5938.926757, -6072.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -5938.926757, -6075.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -5938.926757, -6063.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(8331, -5939.799804, -6076.399902, 2.200000, 0.000000, 0.000000, 20.000000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -5939.898437, -6074.657226, 9.399998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -5939.898437, -6069.657226, 9.399998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5924.421386, -6086.033203, 10.000000, 0.000000, 0.000000, -12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5911.087890, -6086.281250, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5930.909667, -6079.717285, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5902.974121, -6079.716308, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5930.653808, -6059.537597, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5947.542968, -6059.526367, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5964.448242, -6059.534667, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5981.324218, -6059.522460, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 300);
	CreateDynamicObject(9191, -5998.204101, -6059.509765, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 300);
	CreateDynamicObject(984, -5907.517578, -5883.582031, 10.000000, 0.000000, 0.000000, 220.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5928.592285, -5870.763671, 10.000000, 0.000000, 0.000000, 263.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5941.326171, -5869.991699, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5888.729003, -5917.013671, 10.000000, 0.000000, 0.000000, 244.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5916.938476, -5875.107910, 10.000000, 0.000000, 0.000000, 236.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5930.369628, -5887.882812, 10.000000, 0.000000, 0.000000, 246.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5942.609375, -5885.277832, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5954.093750, -5869.986328, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5955.395996, -5885.277343, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5968.193359, -5885.279296, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5966.857421, -5869.991699, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5979.623046, -5870.656250, 10.000000, 0.000000, 0.000000, 276.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5980.843261, -5886.600585, 10.000000, 0.000000, 0.000000, 282.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5992.188964, -5872.855468, 10.000000, 0.000000, 0.000000, 284.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5992.745605, -5890.936523, 10.000000, 0.000000, 0.000000, 118.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6004.050781, -5877.396484, 10.000000, 0.000000, 0.000000, 298.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6014.299804, -5884.834960, 10.000000, 0.000000, 0.000000, 314.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6022.991699, -5894.188964, 10.000000, 0.000000, 0.000000, 140.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6030.470703, -5904.507812, 10.000000, 0.000000, 0.000000, 148.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6035.607421, -5916.068847, 10.000000, 0.000000, 0.000000, 164.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6037.369140, -5928.599609, 10.000000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6035.584960, -5941.147460, 10.000000, 0.000000, 0.000000, 196.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6002.662109, -5898.704101, 10.000000, 0.000000, 0.000000, 138.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6010.117675, -5908.979980, 10.000000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6014.619628, -5920.758789, 10.000000, 0.000000, 0.000000, 168.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5990.004394, -5945.987304, 10.000000, 0.000000, 0.000000, 30.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -6013.294921, -5939.382324, 10.000000, 0.000000, 0.000000, 200.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -6008.170898, -5988.994140, 10.100000, 0.000000, 0.000000, 232.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5969.922851, -5978.580078, 10.000000, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5997.101562, -6000.451171, 10.000000, 0.000000, 0.000000, 42.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5985.826660, -6011.656738, 10.000000, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5980.009277, -6012.580078, 10.000000, 0.000000, 0.000000, 104.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5975.118164, -6009.156738, 10.000000, 0.000000, 0.000000, 146.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5971.273925, -6004.067382, 10.000000, 0.000000, 0.000000, 140.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -6004.727050, -5956.464843, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 300);
	CreateDynamicObject(983, -5982.394531, -5989.401855, 10.000000, 0.000000, 0.000000, 96.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5991.967285, -5978.632812, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 300);
	CreateDynamicObject(983, -5981.539062, -5986.892578, 10.000000, 0.000000, 0.000000, 47.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5986.847167, -5983.507812, 10.000000, 0.000000, 0.000000, 68.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5967.623535, -5998.872070, 10.000000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5965.479492, -5992.959960, 10.000000, 0.000000, 0.000000, 170.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5965.367675, -5986.640625, 10.000000, 0.000000, 0.000000, 188.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5980.400390, -5962.592773, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 300);
	CreateDynamicObject(982, -5959.575683, -5935.173339, 10.000000, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5995.610351, -5934.521484, 10.000000, 0.000000, 0.000000, 22.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5994.589355, -5893.924804, 10.000000, 0.000000, 0.000000, 112.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5997.779296, -5925.392089, 10.000000, 0.000000, 0.000000, -4.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5996.377929, -5919.252929, 10.000000, 0.000000, 0.000000, -22.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5992.741210, -5914.235351, 10.000000, 0.000000, 0.000000, -50.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5987.105957, -5911.999511, 10.000000, 0.000000, 0.000000, -87.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5981.218750, -5913.524414, 10.000000, 0.000000, 0.000000, -122.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5977.232421, -5918.128417, 10.000000, 0.000000, 0.000000, -156.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5982.297851, -5891.533203, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5970.627929, -5895.097167, 10.000000, 0.000000, 0.000000, 56.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5976.262207, -5924.219238, 10.000000, 0.000000, 0.000000, -186.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5980.228515, -5958.656250, 10.000000, 0.000000, 0.000000, 190.800003, -1, -1, -1, 300);
	CreateDynamicObject(984, -5980.760742, -5946.035156, 10.000000, 0.000000, 0.000000, 174.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5978.339843, -5933.540039, 10.000000, 0.000000, 0.000000, 164.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5962.242675, -5904.257812, 10.000000, 0.000000, 0.000000, 29.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5958.355468, -5916.182617, 10.000000, 0.000000, 0.000000, 7.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5965.471191, -5979.776855, 10.000000, 0.000000, 0.000000, 64.400001, -1, -1, -1, 300);
	CreateDynamicObject(983, -5956.507812, -5982.599121, 10.000000, 0.000000, 0.000000, 89.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5961.700683, -5954.203125, 10.000000, 0.000000, 0.000000, -1.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5959.102539, -5962.305664, 10.000000, 0.000000, 0.000000, 58.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5956.800781, -5960.828125, 10.000000, 0.000000, 0.000000, 7.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5959.448242, -5955.407226, 10.000000, 0.000000, 0.000000, 44.700000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5942.998535, -5975.753417, 10.000000, 0.000000, 0.000000, -42.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5937.836914, -5964.668457, 10.000000, 0.000000, 0.000000, -8.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5938.264648, -5952.073730, 10.000000, 0.000000, 0.000000, 12.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5919.266601, -5939.118652, 10.000000, 0.000000, 0.000000, 33.000000, -1, -1, -1, 300);
	CreateDynamicObject(982, -5937.375976, -5933.214355, 10.000000, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5947.497070, -5906.616210, 10.000000, 0.000000, 0.000000, -47.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5936.763671, -5900.178222, 10.000000, 0.000000, 0.000000, -71.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5924.361328, -5898.766601, 10.000000, 0.000000, 0.000000, -96.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5906.604492, -5916.614746, 10.100000, 0.000000, 0.000000, 178.000000, -1, -1, -1, 300);
	CreateDynamicObject(983, -5905.727539, -5934.601562, 10.100000, 0.000000, 0.000000, 39.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5925.635742, -5928.071289, 10.000000, 0.000000, 0.000000, 27.000000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -5911.027343, -6092.857421, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -5925.691406, -6092.315429, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5928.558593, -5890.501464, 11.500000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5955.046875, -5886.369628, 11.500000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5989.512695, -5890.511718, 11.500000, 0.000000, 0.000000, 206.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6030.894531, -5904.156250, 11.500000, 0.000000, 0.000000, 57.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -6035.525390, -5943.667968, 11.500000, 0.000000, 0.000000, 97.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5985.221679, -5988.821289, 11.500000, 0.000000, 0.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5984.157714, -5985.378417, 11.500000, 0.000000, 0.000000, 171.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5983.157226, -5954.478515, 11.500000, 0.000000, 0.000000, -62.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5997.228027, -5925.494628, 11.500000, 0.000000, 0.000000, -91.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5976.871093, -5921.240722, 11.500000, 0.000000, 0.000000, 98.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5961.016113, -5960.157226, 11.500000, 0.000000, 0.000000, -62.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5957.668457, -5957.945312, 11.500000, 0.000000, 0.000000, 120.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5971.571289, -5893.744140, 11.500000, 0.000000, 0.000000, -33.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5957.221191, -5920.412109, 11.500000, 0.000000, 0.000000, -84.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5954.057128, -5913.401855, 11.500000, 0.000000, 0.000000, 69.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5933.250976, -5898.290039, 11.500000, 0.000000, 0.000000, 18.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5914.634765, -5899.949218, 11.500000, 0.000000, 0.000000, 142.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5968.516601, -5979.023925, 11.500000, 0.000000, 0.000000, 156.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5945.555664, -5979.530761, 11.500000, 0.000000, 0.000000, 222.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5938.146484, -5941.137695, 11.500000, 0.000000, 0.000000, -98.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5930.488281, -5920.080566, 11.500000, 0.000000, 0.000000, 164.000000, -1, -1, -1, 300);
	CreateDynamicObject(3398, -5916.396484, -5944.370605, 11.500000, 0.000000, 0.000000, 135.000000, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5919.903808, -6098.521484, 27.979999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(5184, -5895.927734, -6061.156738, 28.049999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5835.195800, -6073.309082, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(984, -5876.168945, -6086.087890, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
//дрифт трасса 9 (конец)

//дрифт трасса 10 (начало)
	ObjGam[34] = CreateObject(8355, -9044.02148, -8961.57422, 4.34790,   0.00000, 0.00000, 11.25000);

	CreateDynamicObject(3452, -9026.97363, -8903.71484, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9029.49609, -8939.15039, 7.42440,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9021.34766, -8931.96484, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9073.42871, -8902.24805, 7.79330,   0.00000, 0.00000, -258.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9074.90625, -8933.68457, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(7909, -9044.53906, -8955.89551, 13.02030,   0.00000, 0.00000, -168.75000, -1, -1, -1, 300);
	CreateDynamicObject(7306, -9044.40527, -8955.95313, 12.95080,   0.00000, 0.00000, 236.25000, -1, -1, -1, 300);
	CreateDynamicObject(7306, -9044.05664, -8957.62207, 12.95080,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(7909, -9044.19043, -8957.71387, 13.02030,   0.00000, 0.00000, -348.75000, -1, -1, -1, 300);
	CreateDynamicObject(1540, -9050.96875, -8958.19043, 9.20590,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(7305, -9079.84766, -8937.61914, 27.23650,   0.00000, 0.00000, -213.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9011.27539, -8898.90332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9070.63379, -8954.85938, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9005.80078, -8926.15332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
//	CreateDynamicObject(8355, -9044.02148, -8961.57422, 4.34790,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(10763, -9077.60645, -8892.40527, 30.37720,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9032.62305, -8875.34570, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9015.67285, -8960.46484, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9016.90039, -8870.65332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9000.12891, -8954.40332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9046.60156, -8853.13086, 7.41830,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9065.16406, -8982.50781, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(7307, -9070.82324, -8983.75586, 27.29090,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9038.24805, -8847.04688, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -9066.87598, -8846.74414, 4.36680,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(4890, -9000.13477, -8862.24316, 22.92000,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9022.32617, -8843.40332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9009.95215, -8989.21582, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -8994.75586, -8981.40332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9059.48926, -9011.25879, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(4890, -9109.57910, -8993.62598, 18.29220,   0.00000, 0.00000, -258.75000, -1, -1, -1, 300);
	CreateDynamicObject(5007, -9027.91113, -9013.74805, 7.16040,   0.00000, 0.00000, -168.75000, -1, -1, -1, 300);
	CreateDynamicObject(8038, -9126.89160, -8858.17383, 22.75720,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9043.95117, -8818.49805, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(615, -9103.03223, -8828.66797, 4.36690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9027.94922, -8815.15332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -9089.37305, -8820.64941, 5.02600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -9089.37305, -8820.64941, 4.37600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -9089.84570, -8820.77344, 5.02600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -9089.84570, -8820.77344, 4.37600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7306, -9062.04492, -9028.79785, 27.17370,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9008.27734, -9030.33887, 4.31960,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9053.71680, -9040.14844, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(615, -9147.33301, -8847.59473, 4.36690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -9126.68945, -8818.07227, 4.37310,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9151.46484, -8992.36328, -4.94160,   0.00000, 0.00000, -270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9049.57617, -8790.12500, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8999.77734, -9041.33887, 4.34460,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9033.54883, -8786.90332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8969.70313, -9027.55859, 5.43490,   0.00000, 0.00000, 103.82830, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9166.36133, -8854.18555, 7.82460,   0.00000, 0.00000, -696.64038, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9168.72266, -8855.14648, 7.82460,   0.00000, 0.00000, -516.64038, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8999.77734, -9049.83887, 4.31960,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9084.87402, -8782.28809, 4.74220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9126.05664, -8798.42676, 4.74220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8994.94238, -9051.44922, 0.35200,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9132.20703, -8802.29688, 7.42460,   0.00000, 0.00000, -158.35941, -1, -1, -1, 300);
	CreateDynamicObject(615, -9183.73633, -8865.29492, 4.31790,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9048.08984, -9068.39844, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(4851, -9156.65332, -9026.04004, -2.75920,   0.00000, 0.00000, 107.26610, -1, -1, -1, 300);
	CreateDynamicObject(7416, -9202.37793, -8914.04688, 4.30370,   0.00000, 0.00000, 13.04620, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9161.71582, -8812.63086, 4.74220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8994.94238, -9065.50000, 3.05200,   -1.71890, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8994.94238, -9065.50000, 1.67700,   -3.43770, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8994.94238, -9065.50000, 0.10200,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(17105, -9136.85156, -8782.47266, 15.74059,   0.85940, 2.57830, -76.09440, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9036.58984, -9082.64844, 10.07230,   -24.92370, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -9017.08984, -9089.39844, 10.07230,   -24.92370, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8977.90430, -9080.08594, 5.15990,   0.00000, 0.00000, 103.82830, -1, -1, -1, 300);
	CreateDynamicObject(7906, -9025.87598, -9094.10547, 22.24900,   0.00000, 0.00000, 168.75000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9046.09180, -9095.26172, -4.95979,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(6873, -9189.14453, -8953.58789, -94.38490,   0.00000, 0.00000, -83.04730, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9227.61133, -8938.88086, 5.20190,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -8992.83984, -9091.39844, 10.07230,   -24.92370, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -8974.83984, -9088.39844, 10.07230,   -24.92370, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -9204.50098, -8819.23535, -2.23620,   -1.71890, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(5007, -9226.64746, -8864.33594, 6.76490,   0.00000, 0.00000, 111.64050, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9225.60449, -8979.79297, 4.67230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9233.73340, -8888.69434, 4.37740,   0.00000, 0.00000, 292.49991, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9238.87793, -8925.74219, 4.68060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9237.48340, -8888.69434, 4.32740,   0.00000, 0.00000, 292.49991, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9239.31934, -8901.60938, 5.42680,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(615, -9240.04785, -8895.95508, -6.42190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9208.11230, -9030.37988, 5.19810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16134, -9242.33789, -8894.86133, -1.43330,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(6873, -9211.89453, -8895.58789, -94.38490,   0.00000, 0.00000, -71.79720, -1, -1, -1, 300);
	CreateDynamicObject(4550, -8995.21289, -9014.09082, -152.15810,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(18362, -8867.67383, -9001.85449, 7.01160,   -20.62650, 10.31320, 50.00200, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9049.20313, -9122.08984, 5.57960,   -2.57830, 0.00000, 93.51510, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9019.12695, -9120.25977, 6.48390,   -0.85940, 0.00000, 93.51510, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9079.45996, -9121.86230, 4.67310,   -0.85940, 0.00000, 85.70280, -1, -1, -1, 300);
	CreateDynamicObject(16061, -9224.86816, -9024.26563, -2.60950,   -1.71890, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(790, -8972.11230, -9110.18555, -8.92169,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8988.88281, -9118.86426, 7.17250,   -1.71890, 0.00000, 91.79620, -1, -1, -1, 300);
	CreateDynamicObject(8392, -8914.56445, -9080.01563, 22.26120,   0.00000, 0.00000, 12.10950, -1, -1, -1, 300);
	CreateDynamicObject(7416, -9248.35938, -8982.19531, 4.30310,   0.00000, 0.00000, 1.79620, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9248.39258, -8988.57617, -5.03530,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8860.87305, -9022.16992, 12.71240,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9248.39258, -9004.17578, -4.98530,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8958.53320, -9117.95020, 8.35810,   -2.57830, 0.00000, 91.79620, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9238.18848, -9030.37988, 5.19810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8860.87305, -9036.91992, 12.46240,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9253.39453, -9004.32422, -5.06030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8860.87305, -9041.41992, 12.33740,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8996.57227, -9137.77344, 6.33760,   -1.71890, 0.00000, 93.43770, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8996.57227, -9141.02344, 6.31260,   -1.71890, 0.00000, 93.43770, -1, -1, -1, 300);
	CreateDynamicObject(8355, -9198.81445, -9092.63184, 4.33270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8928.34570, -9115.87891, 9.74010,   -2.57830, 0.00000, 96.09340, -1, -1, -1, 300);
	CreateDynamicObject(978, -9278.85742, -8936.68652, 5.21760,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -9278.85742, -8936.68652, 4.71760,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -9283.25000, -8928.46777, 5.21760,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(978, -9283.25000, -8928.46777, 4.71760,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -9125.56445, -9141.80469, 4.35770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16134, -9279.52051, -8973.69531, -1.99480,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -9286.30371, -8919.63867, 5.21760,   0.00000, 0.00000, -74.45280, -1, -1, -1, 300);
	CreateDynamicObject(978, -9286.30371, -8919.63867, 4.71760,   0.00000, 0.00000, -74.45280, -1, -1, -1, 300);
	CreateDynamicObject(3877, -9287.95703, -8914.45313, 5.28010,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -9287.98730, -8914.44336, 4.38030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -9247.97266, -9053.29297, 4.30600,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9284.98438, -8871.28125, 4.57440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -9001.92188, -9157.72168, 5.64970,   -2.57830, 0.00000, 91.71890, -1, -1, -1, 300);
	CreateDynamicObject(790, -9289.62402, -8936.69141, -16.11450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8898.31445, -9112.00000, 11.37280,   -3.43770, 0.00000, 98.67170, -1, -1, -1, 300);
	CreateDynamicObject(4875, -8969.97754, -9132.09473, -81.28630,   62.73880, 6.87550, -11.32730, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9268.44727, -9027.88281, 4.67230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9292.95508, -8891.77832, 4.57440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(790, -8889.48242, -9107.69824, -1.92580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9268.43848, -9030.37988, 5.19810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -9047.33594, -9166.05273, -2.90660,   -4.29720, 0.00000, 91.71890, -1, -1, -1, 300);
	CreateDynamicObject(790, -9295.37402, -8916.44141, -16.11450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9288.50586, -8985.23438, 4.33470,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8868.67578, -9106.80273, 13.18120,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(790, -8996.90332, -9177.05762, -13.38410,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9092.81055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4602, -8836.57715, -9076.75977, 65.32170,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9099.31055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9250.64453, -9100.57422, -5.06030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8785.35742, -8995.42285, 20.18870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(790, -8976.40332, -9182.80762, -13.38410,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9298.43652, -9033.32813, 5.19810,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9105.06055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8863.75586, -9123.63867, 12.37300,   -3.43770, 0.00000, 98.59430, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8838.94336, -9100.89648, 15.00620,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9110.81055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9046.09180, -9198.44238, -4.95979,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9116.06055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9121.06055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5001, -9330.57129, -8975.32813, 6.67710,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9126.56055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8859.40527, -9139.63867, 12.44800,   -3.43770, 0.00000, 98.59430, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8866.78906, -9147.71289, 12.30610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8762.47852, -8987.65625, 22.35050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9132.56055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9137.81055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9143.31055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9148.58496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9155.08496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9162.58496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3510, -9250.53906, -9170.83496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8731.65625, -9009.41113, 24.37890,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(8354, -9303.12695, -9103.75977, 4.32570,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8739.19141, -9095.06738, 22.15390,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(17104, -8759.26074, -9144.68359, 27.75890,   -3.43770, 0.00000, 102.10940, -1, -1, -1, 300);
	CreateDynamicObject(8355, -8739.19141, -9100.61230, 22.05390,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8698.50684, -9111.42676, 26.19010,   -5.15660, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(18362, -8695.72461, -8963.17285, 21.14950,   -20.62650, 10.31320, 47.42370, -1, -1, -1, 300);
	CreateDynamicObject(16061, -8677.53906, -9115.89648, 19.42850,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8673.99316, -9106.54688, 28.44790,   -5.15660, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -8644.51270, -9106.54883, 30.93570,   -4.29720, 0.00000, 78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8627.86523, -9052.65039, 33.10930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -8623.48926, -9052.11816, 33.19250,   -5.15660, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3873, -8620.79492, -9027.81934, 41.66400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18349, -8623.40820, -9108.22070, 60.24070,   -5.15660, 6.87550, 104.68770, -1, -1, -1, 300);
	CreateDynamicObject(8343, -8615.25977, -9009.82715, 34.67890,   5.15660, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8596.31445, -8949.04102, 37.72610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8577.81445, -8972.42773, 38.95170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8561.99609, -9001.56348, 39.83880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7304, -8557.00781, -9000.57227, 47.33050,   0.00000, 0.00000, 26.01510, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8545.03223, -9035.17773, 40.74850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10903, -8543.45313, -8980.27344, 43.29040,   0.00000, -1.71890, -153.98489, -1, -1, -1, 300);
	CreateDynamicObject(3472, -8532.05664, -9064.11914, 41.38740,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8493, -9315.39941, -9191.47461, 18.73390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9333.09375, -9094.98242, 6.89610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9324.11035, -9046.77930, 5.19810,   0.00000, 0.00000, 134.06329, -1, -1, -1, 300);
	CreateDynamicObject(7392, -9336.51074, -9077.79980, 16.24710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -9334.90039, -9056.84082, 6.89610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5767, -9370.26953, -9077.56250, 45.91350,   0.00000, 0.00000, -178.20380, -1, -1, -1, 300);
	CreateDynamicObject(8650, -9379.59473, -9091.45508, 3.25150,   0.00000, 0.00000, 179.06329, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9352.89453, -9004.32422, -5.08530,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16173, -9371.07715, -9217.96387, 54.69330,   -6.01610, -13.75100, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(973, -9409.98340, -9099.77148, 5.09060,   0.00000, 0.00000, -168.75000, -1, -1, -1, 300);
	CreateDynamicObject(973, -9409.98340, -9099.77148, 4.61560,   0.00000, 0.00000, -168.75000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -9403.75195, -9057.48047, 4.32540,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -9418.25488, -9102.54980, 4.33400,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16173, -9422.82715, -9087.71387, 53.19330,   -6.01610, -13.75100, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, -9429.22852, -9058.76563, 4.31620,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16173, -9374.82715, -8937.21387, 49.94330,   -6.01610, -13.75100, -131.56219, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9459.89453, -9174.07422, -5.06030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -9459.89453, -9079.32422, -5.06030,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -9466.29297, -9024.43164, 7.35050,   0.00000, 0.00000, -349.60941, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9045.05078, -8955.44531, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9046.62598, -8955.75098, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9048.19238, -8956.06836, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9043.47363, -8955.12988, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -9041.90820, -8954.81445, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9188.20996, -9049.39844, 7.29870,   0.00000, 0.00000, 107.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9107.84180, -9115.00586, 7.29870,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9107.84180, -9115.00586, 14.29870,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9188.20996, -9049.39844, 14.29870,   0.00000, 0.00000, 107.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -9209.98828, -8978.04590, 7.64640,   0.00000, 0.00000, -74.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -9209.98828, -8978.04590, 12.64640,   0.00000, 0.00000, -74.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -9194.30762, -9030.18555, 6.19900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9188.20996, -9049.39844, 0.29870,   0.00000, 0.00000, 107.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9107.84180, -9115.00586, 0.29870,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9219.13477, -9136.27734, 7.17480,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9274.85254, -9136.16992, 7.17480,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -9274.85254, -9136.16992, 0.17480,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -8861.03809, -9067.16211, 12.48790,   -5.15660, 0.00000, 101.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, -8818.30176, -9097.12988, 15.93280,   -3.43770, 0.00000, 101.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -8812.69824, -9092.79492, 16.31280,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -8819.37109, -9073.50195, 18.36740,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -8696.64844, -9047.41406, 29.68090,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8777.87695, -8984.25781, 20.77270,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8737.91602, -8974.84277, 24.46720,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8698.45117, -8965.43262, 28.16270,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8629.30273, -8964.64160, 34.24690,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8589.72461, -8957.79395, 37.84810,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8572.23145, -8993.67090, 38.75510,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8551.44238, -9029.11816, 39.95660,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8544.20605, -9067.20410, 39.91460,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8581.09863, -9078.62500, 36.46020,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8617.16602, -9100.39551, 32.85660,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8637.30371, -9111.16016, 30.90410,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8866.96191, -9051.19043, 11.62900,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8793.85156, -9088.13281, 17.39490,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8802.07910, -9049.37207, 17.40490,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8753.63086, -9079.81250, 21.08750,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8762.35547, -9041.30469, 21.05880,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8722.90430, -9032.59766, 24.73160,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8714.63379, -9070.63672, 24.77170,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8683.85645, -9024.61719, 28.30060,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8675.58887, -9063.03125, 28.39400,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8644.78125, -9016.48633, 31.92260,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8636.68164, -9054.21484, 31.97180,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8616.08887, -9012.88672, 34.49990,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6959, -8608.98438, -9048.11523, 34.51520,   0.00000, -5.15660, 12.00000, -1, -1, -1, 300);
//дрифт трасса 10 (конец)

//дрифт трасса 11 (начало)
	ObjGam[35] = CreateObject(8171, -6181.78076, -8986.47461, 17.80930,   0.00000, 0.00000, 56.25000);

	CreateDynamicObject(8650, -5937.48877, -9085.34570, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5907.01465, -9085.79590, 11.66220,   0.00000, 0.00000, 88.28110, -1, -1, -1, 300);
	CreateDynamicObject(4890, -5947.22754, -9091.88281, 17.55750,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5889.91406, -9086.21777, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7268, -5945.03564, -9046.31641, 22.52880,   0.00000, 0.00000, -539.99988, -1, -1, -1, 300);
	CreateDynamicObject(4890, -5947.22754, -9045.25586, 17.55750,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5967.73877, -9085.34570, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5864.43750, -9085.47070, 11.66220,   0.00000, 0.00000, 93.51510, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5998.18896, -9086.04590, 11.66220,   0.00000, 0.00000, 92.57830, -1, -1, -1, 300);
	CreateDynamicObject(3873, -5843.58008, -9101.11328, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3873, -5843.58008, -9035.53711, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5833.81006, -9052.24902, 11.66220,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5829.87695, -9085.70117, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(664, -5899.44629, -8981.13770, 11.12600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(664, -5934.60010, -8976.88281, 11.12600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6027.43848, -9086.92090, 11.66220,   0.00000, 0.00000, 90.85940, -1, -1, -1, 300);
	CreateDynamicObject(762, -5818.06738, -9091.86914, 13.80290,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(617, -5816.42529, -9087.70215, 10.54070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8397, -5814.99902, -9095.88379, 16.70030,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5812.49512, -9049.06348, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6388, -5977.70850, -8975.87109, 26.26160,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5807.31885, -9099.66992, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5804.12695, -9096.37305, 11.66220,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(10942, -5903.50342, -8957.86523, 32.34170,   0.00000, 61.01990, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5803.36035, -9052.24902, 11.66220,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6046.39160, -9086.07617, 10.94340,   0.00000, -0.85940, 163.43880, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5942.75830, -8953.66895, 23.92930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8710, -5819.95703, -9002.75293, 11.50480,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3873, -6043.85693, -9035.30859, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5890.37354, -8953.58105, 23.53240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3873, -6049.85693, -9101.30859, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6055.24170, -9084.67578, 11.44340,   0.00000, -4.29720, 184.06540, -1, -1, -1, 300);
	CreateDynamicObject(615, -5795.26758, -9110.03223, 9.51570,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5793.29053, -9109.39355, 14.05290,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5974.52539, -8953.33008, 28.14710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -5870.70898, -8953.12305, 19.00970,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -5870.70898, -8953.13281, 22.68470,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5979.13574, -8954.23047, 22.90090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -5870.70898, -8953.12305, 26.85970,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(615, -5790.66016, -9049.06250, 9.04070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6056.69922, -9049.05469, 13.04170,   -2.57830, 4.29720, -19.92170, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6057.12158, -9040.59863, 12.94779,   4.29720, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(10942, -5903.50342, -8940.43945, 36.91670,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6063.74170, -9083.72461, 12.09340,   0.00000, -4.29720, 160.00101, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5780.54883, -9046.72949, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6070.77051, -9080.84375, 7.30700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -5885.71875, -8934.53906, 22.88370,   -3.43770, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5780.12695, -9112.62305, 11.66220,   0.00000, 0.00000, 67.50000, -1, -1, -1, 300);
	CreateDynamicObject(664, -6071.17383, -9089.21484, 2.86820,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6004.92529, -8953.33008, 28.14710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6072.26807, -9079.55273, 12.81840,   0.00000, -4.29720, 147.10941, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5838.73682, -8953.29590, 23.04470,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5778.23145, -9118.21484, 11.00739,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6012.69189, -8954.13281, 22.90090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5772.86035, -9052.24902, 11.66220,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(10948, -6054.94727, -9001.68359, 32.21840,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6019.58008, -8958.73438, 27.03180,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6080.64258, -9074.02441, 13.56840,   0.00000, -4.29720, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(10942, -5903.50342, -8920.38965, 36.91670,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(615, -5765.93262, -9048.51465, 8.40190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -5944.70898, -8916.62500, 26.85970,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6034.92139, -8956.73438, 28.14470,   0.00000, 0.00000, 102.96880, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6088.96777, -9068.45020, 14.31840,   0.00000, -4.29720, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5758.70361, -9117.34766, 12.33720,   -4.29720, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(10942, -5903.50342, -8908.63965, 27.16670,   0.00000, -47.26900, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5757.91992, -9118.99023, 14.12920,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(615, -5755.70508, -9032.51953, 9.54070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6096.84277, -9063.09961, 15.04340,   0.00000, -4.29720, 145.39059, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6061.88525, -8967.58594, 27.40090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(615, -5750.91260, -9122.05469, 8.79070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5747.20898, -9047.04688, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6064.19727, -8967.53906, 28.14470,   0.00000, 0.00000, 117.73390, -1, -1, -1, 300);
	CreateDynamicObject(10193, -5931.71973, -8899.27148, 40.45120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3873, -5778.41113, -8968.52051, 23.69420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5742.61035, -9050.42578, 12.78720,   4.29720, 0.00000, -83.12450, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6105.48584, -9057.67676, 15.81240,   0.00000, -4.29720, 150.54720, -1, -1, -1, 300);
	CreateDynamicObject(762, -5740.98877, -9118.91113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5737.82373, -9109.55859, 13.42099,   -1.71890, 0.00000, 123.74990, -1, -1, -1, 300);
	CreateDynamicObject(8171, -5798.21875, -8934.53906, 18.63370,   -2.57830, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -6112.31641, -9053.78223, 17.64670,   0.00000, 2.57830, -29.45280, -1, -1, -1, 300);
	CreateDynamicObject(978, -6112.31641, -9053.78223, 18.42170,   0.00000, 2.57830, -29.45280, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6113.01025, -9053.27539, 16.48730,   0.00000, -4.29720, 148.82820, -1, -1, -1, 300);
	CreateDynamicObject(762, -5735.73877, -9114.16113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6086.84717, -8978.26563, 28.14470,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5735.24902, -9117.97070, 17.02570,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(10381, -5838.62598, -8904.45508, 29.71420,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5733.13086, -9109.91992, 14.14680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4079, -5755.90234, -8978.53320, 22.53560,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6108.29395, -9014.87891, 17.74190,   0.00000, 4.29720, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5730.23877, -9108.91113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(9834, -5884.60352, -8884.38379, 23.85280,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6121.49561, -9049.59180, 14.46340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5725.23877, -9104.41113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6121.50977, -9047.90137, 17.28730,   0.00000, -4.29720, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -5723.56641, -9048.70703, 14.30570,   0.00000, -5.15660, -0.85940, -1, -1, -1, 300);
	CreateDynamicObject(8344, -5721.51221, -9075.07324, 13.60190,   -4.29720, 1.71890, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(10412, -6030.64160, -8907.61426, 42.88270,   0.00000, 0.00000, -49.29720, -1, -1, -1, 300);
	CreateDynamicObject(978, -6124.15576, -9046.00391, 18.66180,   0.00000, 3.43770, -32.89060, -1, -1, -1, 300);
	CreateDynamicObject(978, -6124.15576, -9046.00391, 19.38680,   0.00000, 3.43770, -32.89060, -1, -1, -1, 300);
	CreateDynamicObject(8344, -5722.76221, -9044.07324, 13.80190,   -4.29720, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5003, -5755.56250, -9060.50000, 16.78130,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4867, -5993.19531, -9079.14063, 10.54690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -5776.51953, -8934.53906, 18.75870,   -0.85940, 2.57830, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6107.94434, -8988.53418, 27.39850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5720.28516, -9108.62695, 18.72800,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(4079, -5727.65234, -9013.28223, 21.78560,   0.00000, 0.00000, -112.50000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5716.96387, -9101.98438, 15.34660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(9900, -6102.86230, -9087.08203, 119.63420,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6129.98438, -9042.22559, 18.06230,   0.00000, -4.29720, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6114.92188, -8989.88965, 28.14470,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5713.07373, -9093.03711, 14.77100,   -3.43770, 0.00000, 123.74990, -1, -1, -1, 300);
	CreateDynamicObject(8171, -6101.99365, -8964.90234, 27.02930,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5712.90234, -9097.49121, 15.29270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5712.71387, -9097.73438, 15.34660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -6084.45898, -8937.49902, 26.85970,   0.00000, 0.00000, 292.50000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -5712.17383, -9032.71777, 20.08600,   2.57830, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -5737.21924, -8964.30859, 21.29650,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -6122.49707, -9003.64258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5706.50195, -9102.15039, 20.51870,   0.00000, 0.00000, 67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6138.40967, -9036.59863, 18.46230,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5705.21387, -9092.48438, 15.34660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -5728.04590, -8977.81445, 21.94650,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(978, -6139.05078, -9036.02832, 19.69000,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(978, -6139.05078, -9036.02832, 20.69000,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -5731.21924, -8970.90625, 21.94650,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -5722.52246, -8988.46582, 21.94650,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6139.59180, -9037.28809, 16.92850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -5707.92969, -9022.99609, 20.06100,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5730.84229, -8963.12402, 19.38110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5699.59473, -9088.12695, 16.01080,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5698.46387, -9088.73438, 17.59660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -5723.90234, -8971.97852, 17.05100,   -1.71890, 4.29720, 202.50000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5702.64258, -9028.91992, 17.06510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6235, -6140.47021, -9013.75977, 23.64560,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -5716.19971, -8985.33398, 19.64530,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6146.68408, -9031.07520, 18.46230,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(762, -6141.66406, -9006.84766, 30.17570,   0.00000, 0.00000, 157.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6144.41797, -9004.37793, 27.56970,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(762, -5690.21387, -9083.73438, 19.09660,   0.00000, 0.00000, 33.75000, -1, -1, -1, 300);
	CreateDynamicObject(762, -6149.50391, -9017.75781, 30.40110,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6148.46094, -9010.58398, 24.91960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -5688.44434, -9076.58984, 16.77100,   -4.29720, 0.00000, 123.74990, -1, -1, -1, 300);
	CreateDynamicObject(9834, -5789.85352, -8879.38379, 22.70280,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(664, -6164.24902, -9033.33691, 7.61820,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10193, -6120.66406, -8931.08691, 42.20120,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(6342, -6169.59717, -9059.48438, 26.64650,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -6160.74707, -9021.89258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(13831, -6151.42383, -8984.34863, 67.00610,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(13831, -6151.42383, -8984.34863, 67.00610,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6150.86426, -8964.66699, 27.32350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6172.43555, -9015.95117, 26.90590,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6185.95898, -9021.54980, 26.23090,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(7584, -5709.98340, -8915.58203, 42.48770,   0.00000, 0.00000, -8.67169, -1, -1, -1, 300);
//	CreateDynamicObject(8171, -6181.78076, -8986.47461, 17.80930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6193.63770, -9025.23145, 25.60970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6181.59570, -8977.02832, 27.44780,   2.57830, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -6177.49707, -8965.39258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(13831, -6194.42383, -8998.77539, 67.00610,   0.00000, 0.00000, -213.75000, -1, -1, -1, 300);
	CreateDynamicObject(13831, -6194.42383, -8998.77539, 67.00610,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6194.27930, -8980.33203, 24.94560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, -6193.28271, -8973.56250, 30.29390,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6197.09570, -8983.47461, 26.69780,   2.57830, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6213.95898, -9033.14844, 24.88090,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6194.64990, -8962.37207, 18.43730,   0.00000, 0.00000, -56.95480, -1, -1, -1, 300);
	CreateDynamicObject(762, -6205.03271, -8981.81250, 29.56890,   0.00000, 0.00000, 157.50000, -1, -1, -1, 300);
	CreateDynamicObject(7584, -5627.48340, -9043.12500, 42.48770,   0.00000, 0.00000, -188.67171, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6199.22510, -8956.92480, 18.43730,   0.00000, 0.00000, -36.32830, -1, -1, -1, 300);
	CreateDynamicObject(3578, -6207.27441, -8951.27539, 18.43730,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -6229.69531, -9017.84961, 23.92240,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(10143, -6195.36816, -8927.00977, 45.15510,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6228.30176, -8995.98047, 22.17510,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6228.30176, -8995.98047, 24.35010,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6228.30176, -8995.98047, 26.52510,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -6221.49707, -8981.89258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6236.36133, -8997.92090, 21.44210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10838, -6228.06348, -8955.19238, 28.73580,   0.00000, 0.00000, -247.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6255.87646, -9006.92578, 22.17510,   0.00000, 0.00000, -69.21890, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6255.87646, -9006.92578, 24.25010,   0.00000, 0.00000, -69.21890, -1, -1, -1, 300);
	CreateDynamicObject(10947, -6256.05225, -9000.51172, -16.96770,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -6262.80029, -9009.67578, 22.12510,   0.00000, 0.00000, -70.07830, -1, -1, -1, 300);
	CreateDynamicObject(661, -6273.34229, -9007.87500, 20.73300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6275.40820, -9008.30762, 22.87640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -6281.65234, -9009.61621, 25.30520,   0.00000, 0.00000, -281.25000, -1, -1, -1, 300);
	CreateDynamicObject(10143, -6233.36816, -8901.55859, 45.15510,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -6290.76514, -9007.51563, 24.90340,   0.00000, 0.00000, 53.59440, -1, -1, -1, 300);
	CreateDynamicObject(7584, -6301.33301, -9087.37500, 19.38770,   0.00000, 0.00000, 78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6294.54004, -9001.70215, 22.73360,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -6295.56494, -9000.39063, 24.52840,   0.00000, 0.00000, -2.65560, -1, -1, -1, 300);
	CreateDynamicObject(16305, -6297.39014, -8994.80469, 24.52840,   0.00000, 0.00000, -2.65560, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6281.39648, -8948.88379, 18.68520,   -0.85940, 0.00000, -123.74990, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6300.95752, -9000.05078, 20.94640,   -2.57830, 1.71890, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6276.04639, -8933.50781, 13.93519,   -4.29720, 11.17270, -123.74990, -1, -1, -1, 300);
	CreateDynamicObject(17029, -6298.50879, -8976.36035, 12.61639,   0.00000, -6.01610, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6305.26172, -8984.39063, 22.58250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -6304.59326, -8980.81641, 23.68140,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6262.76318, -8894.18359, 26.00550,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(16305, -6309.94336, -8964.86328, 23.25640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6266.59863, -8887.28613, 21.45990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6270.01318, -8890.31055, 26.00550,   0.00000, 0.00000, -20.85850, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6322.32080, -8986.97754, 15.63520,   -5.15660, 11.17270, 12.96889, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6322.97168, -8985.22754, 15.63520,   -0.85940, 11.17270, 14.68780, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6277.58887, -8888.26172, 26.00550,   0.00000, 0.00000, -8.82640, -1, -1, -1, 300);
	CreateDynamicObject(8343, -6318.49854, -8958.17383, 19.72820,   0.85940, 1.71890, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6308.89648, -8934.60352, 14.63520,   -0.85940, 11.17270, -77.03110, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6308.99658, -8934.72852, 14.63520,   -4.29720, 11.17270, -75.31220, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6285.48975, -8887.56152, 26.00550,   0.00000, 0.00000, -0.23200, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6328.22168, -8959.47754, 15.78520,   -0.85940, 11.17270, -7.81220, -1, -1, -1, 300);
	CreateDynamicObject(8344, -6323.34717, -8945.97852, 15.46020,   -2.57830, 11.17270, -41.56220, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6290.67090, -8886.02051, 22.91840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6293.61426, -8888.11133, 26.00550,   0.00000, 0.00000, 8.36240, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6301.36426, -8889.43457, 26.00550,   0.00000, 0.00000, 10.94069, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6356.18945, -9012.88867, 26.00550,   0.00000, 0.00000, 131.26180, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6358.52490, -9011.93164, 25.29780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6309.11377, -8891.00977, 26.00550,   0.00000, 0.00000, 11.80010, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6360.33984, -9006.33789, 26.00550,   0.00000, 0.00000, 114.07300, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6316.56348, -8892.65723, 26.00550,   0.00000, 0.00000, 13.51900, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6317.53857, -8891.65234, 21.52210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6363.11475, -8999.46387, 26.00550,   0.00000, 0.00000, 109.77580, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6324.38867, -8894.92969, 26.00550,   0.00000, 0.00000, 17.81620, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6365.46436, -8992.03906, 26.00550,   0.00000, 0.00000, 106.33810, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6367.53955, -8984.53906, 26.00550,   0.00000, 0.00000, 104.61920, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6331.81445, -8897.77930, 26.00550,   0.00000, 0.00000, 24.69170, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6369.28076, -8980.80762, 24.01760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6369.41504, -8976.63965, 26.00550,   0.00000, 0.00000, 102.90040, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6339.06396, -8901.47852, 26.00550,   0.00000, 0.00000, 29.84830, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6370.81494, -8968.96680, 26.00550,   0.00000, 0.00000, 98.60320, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6343.58691, -8904.05469, 23.51460,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6345.51367, -8906.29980, 26.00550,   0.00000, 0.00000, 45.31820, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6351.01367, -8912.02148, 26.00550,   0.00000, 0.00000, 47.03700, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6371.51514, -8961.02051, 26.00550,   0.00000, 0.00000, 92.58710, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6371.74854, -8957.20117, 23.34160,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6356.51367, -8918.29688, 26.00550,   0.00000, 0.00000, 50.47480, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6371.29004, -8953.37109, 26.00550,   0.00000, 0.00000, 85.71160, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6361.56348, -8924.84863, 26.00550,   0.00000, 0.00000, 54.77190, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6370.63916, -8946.12109, 26.00550,   0.00000, 0.00000, 83.99270, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6365.63916, -8931.39746, 26.00550,   0.00000, 0.00000, 61.64740, -1, -1, -1, 300);
	CreateDynamicObject(3406, -6368.73926, -8938.32031, 26.00550,   0.00000, 0.00000, 70.24180, -1, -1, -1, 300);
	CreateDynamicObject(3472, -6365.46777, -8928.98047, 23.88490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -6226.97803, -8957.68652, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -6225.52393, -8957.05371, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -6228.45801, -8958.30078, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -6224.01660, -8956.47070, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -6222.57373, -8955.84180, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 300);
//дрифт трасса 11 (конец)

//дрифт трасса 12 (начало)
	ObjGam[36] = CreateObject(8356, -3031.606445, -8882.853515, 14.535003, 0.859399, 0.000000, -180.000000);

	CreateDynamicObject(8185, -3012.305175, -8887.527343, 16.126495, -0.859399, 0.000000, 0.000000, -1, -1, -1, 300);
//	CreateDynamicObject(8356, -3031.606445, -8882.853515, 14.535003, 0.859399, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8356, -3031.606445, -8882.853515, 14.060104, 0.859399, 179.622299, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -3036.546386, -8906.265625, 4.414993, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3050.805175, -8887.527343, 16.126495, -0.859399, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(17031, -2986.224609, -8901.840820, 11.068801, 0.000000, 0.000000, 112.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3028.318847, -8855.199218, 9.947494, 1.718899, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3015.942382, -8850.048828, 10.372406, 1.718899, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(978, -3044.002441, -8857.128906, 10.128906, 0.000000, 0.000000, 112.500000, -1, -1, -1, 300);
	CreateDynamicObject(978, -3044.002441, -8857.128906, 9.628997, 0.000000, 0.000000, 112.500000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -3036.546386, -8850.515625, 3.565200, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -2978.980957, -8855.195312, 10.859695, 1.718899, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(790, -2964.039062, -8885.475585, 1.423706, 0.000000, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -3077.571777, -8923.111328, 10.179504, -0.859399, 0.000000, -66.717903, -1, -1, -1, 300);
	CreateDynamicObject(10763, -2977.789062, -8834.173828, 36.667800, 0.000000, 0.000000, -112.500000, -1, -1, -1, 300);
	CreateDynamicObject(7909, -3032.360839, -8965.136718, 24.582000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(7909, -3032.36597, -8965.14160, 24.57200, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -3075.086914, -8942.277343, 10.175994, 0.000000, 0.859399, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(11095, -3026.331542, -8968.425781, 18.576293, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3009.914062, -8812.833984, 18.840805, 0.000000, 0.000000, -11.250000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -3036.546386, -8967.515625, 5.364807, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -2943.214843, -8861.838867, 10.592605, -0.859399, 0.000000, -248.204696, -1, -1, -1, 300);
	CreateDynamicObject(16317, -3087.710937, -8935.894531, 10.003097, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(11095, -3026.331542, -8974.773437, 18.576293, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2960.938476, -8827.376953, 18.545898, 0.000000, 0.000000, -78.750000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2957.156250, -8825.769531, 12.853500, 1.718899, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(17031, -2929.224609, -8879.840820, 11.068801, 0.000000, 0.000000, 123.749900, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3096.296386, -8944.150390, 8.510604, 4.297200, 0.000000, -517.500000, -1, -1, -1, 300);
	CreateDynamicObject(8392, -3067.005371, -8970.721679, -3.621200, 0.000000, 0.000000, -78.750000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2950.188476, -8822.876953, 19.020797, 0.000000, 0.000000, -78.750000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3054.187988, -8980.308593, 9.222000, 0.000000, 0.000000, -18.048200, -1, -1, -1, 300);
	CreateDynamicObject(6313, -3072.179687, -8809.485351, 6.808395, -0.859399, -2.578299, -52.030101, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3006.516601, -8783.864257, 14.047698, 0.000000, 0.000000, -201.640594, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3003.902832, -8783.646484, 18.840805, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(6313, -3082.484863, -8801.129882, 11.917495, -3.437700, -6.875500, 65.703796, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3047.591796, -8783.203125, 14.091598, 0.000000, 0.000000, -192.968902, -1, -1, -1, 300);
	CreateDynamicObject(790, -3066.205566, -8791.316406, -2.197601, 0.000000, 0.000000, 56.250000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3050.597167, -8781.209960, 18.985992, 0.000000, 0.000000, -11.250000, -1, -1, -1, 300);
	CreateDynamicObject(6985, -2975.520019, -9003.377929, 15.233306, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -2896.334960, -8851.275390, 16.358306, -30.080299, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3134.970703, -8944.150390, 11.409896, 1.718899, 0.000000, -517.500000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3045.211914, -8765.102539, 18.840805, 0.000000, 0.000000, -11.250000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -3094.539062, -8996.357421, 12.600097, -2.578299, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(6313, -3149.833984, -8876.742187, 16.789199, 0.000000, 0.000000, 45.000000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2993.780273, -8758.099609, 18.840805, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2911.826660, -8806.596679, 14.057296, 0.000000, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3037.848632, -8756.435546, 14.047698, 0.000000, 0.000000, -206.797195, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2996.039062, -8755.589843, 14.047698, 0.000000, 0.000000, -199.062194, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3118.451171, -8985.741210, 19.230392, 0.000000, 0.000000, -157.500000, -1, -1, -1, 300);
	CreateDynamicObject(10380, -2917.137695, -8794.971679, 21.491500, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3110.951171, -9003.241210, 19.905303, 0.000000, 0.000000, -157.500000, -1, -1, -1, 300);
	CreateDynamicObject(790, -3162.782226, -8912.507812, 0.806701, 0.000000, 0.000000, 56.250000, -1, -1, -1, 300);
	CreateDynamicObject(5001, -2890.364746, -8816.082031, 14.488906, 1.718899, -0.859399, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -3150.799316, -8962.286132, 7.177597, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(4828, -2956.416015, -8751.049804, 25.296005, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -3104.451171, -9018.241210, 20.430099, 0.000000, 0.000000, -157.500000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -2869.834960, -8840.500976, 16.358306, -30.080299, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -3006.349121, -8733.884765, 12.932403, 0.000000, 0.000000, 157.500000, -1, -1, -1, 300);
	CreateDynamicObject(790, -3124.823730, -9007.968750, -3.671401, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2985.685058, -8734.334960, 18.955795, 0.000000, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2986.778808, -8728.691406, 14.047698, 0.000000, 0.000000, -199.062194, -1, -1, -1, 300);
	CreateDynamicObject(790, -3027.478027, -8726.039062, 6.602294, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -3031.643066, -8723.389648, 12.095199, -0.859399, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -3126.248046, -9024.749023, 5.876495, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3012.254882, -9066.430664, 15.440200, -0.859399, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3050.807617, -9066.430664, 15.440200, -0.859399, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -2849.334960, -8829.250976, 16.358306, -30.080299, 0.000000, 33.750000, -1, -1, -1, 300);
	CreateDynamicObject(8356, -3031.606445, -9070.278320, 14.535003, 0.859399, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2982.096679, -8715.115234, 14.047698, 0.000000, 0.000000, -197.343307, -1, -1, -1, 300);
	CreateDynamicObject(6313, -3018.446777, -8709.852539, 13.305603, 0.000000, -6.016098, 65.703796, -1, -1, -1, 300);
	CreateDynamicObject(16037, -3053.851562, -9070.058593, 22.745605, -0.859399, -5.156599, -427.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2891.678710, -8758.833984, 14.057296, 0.000000, 0.000000, -159.218795, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2946.167968, -8720.315429, 18.840805, 0.000000, 0.000000, -123.749900, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2924.708984, -8729.963867, 18.840805, 0.000000, 0.000000, -123.749900, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2974.075683, -8710.245117, 18.840805, 0.000000, 0.000000, -123.749900, -1, -1, -1, 300);
	CreateDynamicObject(7073, -2843.601562, -8818.080078, 7.186904, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(1290, -2910.870117, -8734.563476, 18.944702, 0.000000, 0.000000, -123.749900, -1, -1, -1, 300);
	CreateDynamicObject(4242, -2912.072753, -9049.225585, 14.575897, 0.000000, 0.859399, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8620, -2900.147460, -8742.212890, 25.284805, 0.000000, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2944.423339, -8715.839843, 14.036605, 0.000000, 0.000000, -114.218803, -1, -1, -1, 300);
	CreateDynamicObject(8354, -2860.680175, -8781.393554, 12.942001, 0.000000, 0.000000, -157.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2916.844238, -8728.240234, 14.036605, 0.000000, 0.000000, -114.218803, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2964.051757, -8707.000000, 14.036605, 0.000000, 0.000000, -114.218803, -1, -1, -1, 300);
	CreateDynamicObject(16037, -3070.732910, -9076.898437, 22.870498, 0.000000, 5.156599, -247.500000, -1, -1, -1, 300);
	CreateDynamicObject(13562, -2977.453125, -8701.305664, 16.328903, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(7073, -2840.101562, -8805.580078, 7.186904, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -2967.260742, -8694.153320, 12.817306, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -2940.294433, -8701.052734, 12.921203, 0.000000, 0.000000, 67.500000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -2847.295410, -8768.591796, 16.343505, 0.000000, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(790, -3010.169433, -8681.232421, 7.125793, 0.000000, 0.000000, 11.250000, -1, -1, -1, 300);
	CreateDynamicObject(7304, -2852.882812, -8753.365234, 17.599700, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -2936.558593, -8685.905273, 16.347793, 0.000000, 0.000000, -21.640600, -1, -1, -1, 300);
	CreateDynamicObject(7304, -2933.179199, -8673.541015, 17.610305, 0.000000, 0.000000, 67.500000, -1, -1, -1, 300);
	CreateDynamicObject(790, -2835.600097, -8743.345703, -7.596496, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(790, -2936.600097, -8670.095703, -7.596496, 0.000000, 0.000000, -213.750000, -1, -1, -1, 300);
	CreateDynamicObject(790, -2962.100097, -8658.345703, -7.596496, 0.000000, 0.000000, -135.000000, -1, -1, -1, 300);
	CreateDynamicObject(7240, -2975.018066, -9137.285156, 7.661499, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(790, -2849.350097, -8703.595703, -7.596496, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(790, -2890.600097, -8672.095703, -7.596496, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(6313, -2955.599609, -8620.261718, 11.770797, -0.859399, -6.016098, 49.924598, -1, -1, -1, 300);
	CreateDynamicObject(16061, -2971.937011, -9171.463867, 10.893798, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(16037, -3007.327636, -9182.125000, 22.920501, 0.000000, 5.156599, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3031.150878, -9185.896484, 14.135101, 0.000000, 0.000000, -212.031097, -1, -1, -1, 300);
	CreateDynamicObject(16037, -3024.335449, -9189.142578, 23.045501, 0.000000, 5.156599, -427.500000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -3074.006347, -9185.707031, 11.022796, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(13725, -3039.573242, -9203.972656, 26.423706, 0.000000, 0.000000, 191.250000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -3059.730957, -9205.365234, 13.185302, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -3096.047851, -9233.458984, 14.060302, 0.000000, 0.000000, -390.312194, -1, -1, -1, 300);
	CreateDynamicObject(16061, -2966.854980, -9240.349609, 8.355392, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -3104.436035, -9241.055664, 8.397903, 0.000000, 0.000000, -33.750000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2971.303710, -9247.750000, 14.203002, 0.000000, 0.000000, 201.640502, -1, -1, -1, 300);
	CreateDynamicObject(790, -3051.931640, -9257.796875, 2.945495, 0.000000, 0.000000, -180.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3003.870117, -9260.188476, 14.266296, 0.000000, 0.000000, 203.359497, -1, -1, -1, 300);
	CreateDynamicObject(16776, -3070.694824, -9263.398437, 14.860107, 0.000000, 0.000000, -112.500000, -1, -1, -1, 300);
	CreateDynamicObject(7392, -3004.345214, -9275.387695, 22.829406, 0.000000, 0.000000, -22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8355, -2979.408203, -9277.500976, 13.267807, 0.859399, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3078.450683, -9277.097656, 14.267807, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2960.191894, -9275.778320, 14.230102, 0.000000, 0.000000, 201.640502, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3112.352539, -9276.063476, 14.267807, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2994.687988, -9288.824218, 14.260803, 0.000000, 0.000000, 192.109405, -1, -1, -1, 300);
	CreateDynamicObject(3452, -3119.402832, -9278.687500, 18.876907, -24.064199, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -2952.037597, -9294.114257, 8.689605, 0.000000, 0.000000, 11.250000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -3048.449218, -9309.183593, 13.109298, 0.000000, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3077.744628, -9307.582031, 14.267807, 0.000000, 0.000000, 2.578299, -1, -1, -1, 300);
	CreateDynamicObject(3873, -3005.687011, -9311.350585, 23.650604, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2955.269042, -9304.062500, 14.235504, 0.000000, 0.000000, 177.421600, -1, -1, -1, 300);
	CreateDynamicObject(8344, -3071.472167, -9313.992187, 13.152496, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(790, -3034.263183, -9316.090820, -13.304496, 0.000000, 0.000000, -337.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3112.369628, -9306.206054, 14.267807, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -3119.402832, -9307.988281, 18.876907, -24.064199, 0.000000, -90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3873, -3060.437011, -9322.350585, 23.650604, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -3012.090332, -9325.574218, 13.120193, 0.000000, 0.000000, 101.250000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3015.939453, -9333.465820, 14.235504, 0.000000, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3045.138183, -9339.298828, 14.267807, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2962.223632, -9332.766601, 14.235504, 0.000000, 0.000000, 154.921707, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3106.957519, -9335.301757, 14.267807, 0.000000, 0.000000, 20.781099, -1, -1, -1, 300);
	CreateDynamicObject(3452, -2954.123046, -9336.521484, 18.573501, -24.064199, 0.000000, 67.500000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -3116.402832, -9335.238281, 18.876907, -24.064199, 0.000000, -67.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -2980.086425, -9355.328125, 14.235504, 0.000000, 0.000000, 128.047195, -1, -1, -1, 300);
	CreateDynamicObject(3452, -2968.623046, -9357.521484, 18.573501, -24.064199, 0.000000, 45.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3090.949707, -9360.097656, 14.267807, 0.000000, 0.000000, 45.000000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -3102.402832, -9357.488281, 18.876907, -24.064199, 0.000000, -45.000000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3006.546875, -9367.726562, 14.235504, 0.000000, 0.000000, 102.109397, -1, -1, -1, 300);
	CreateDynamicObject(3452, -2991.623046, -9370.771484, 18.573501, -24.064199, 0.000000, 22.500000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3035.526855, -9373.708007, 14.267807, 0.000000, 0.000000, 101.250000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -3065.408203, -9373.720703, 14.267807, 0.000000, 0.000000, 78.750000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -3037.773925, -9380.352539, 6.739898, 0.000000, 0.000000, -78.750000, -1, -1, -1, 300);
	CreateDynamicObject(3452, -3083.152832, -9375.988281, 18.876907, -24.064199, 0.000000, -22.500000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -3032.31641, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -3029.11572, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -3030.71631, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -3033.92505, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -3035.51587, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//дрифт трасса 12 (конец)

//дрифт трасса 13 (начало)
	ObjGam[37] = CreateObject(5002, -221.68091, -8308.03613, 10.59810,   0.00000, 0.00000, 90.00000);

	CreateDynamicObject(3578, -175.08496, -7977.16211, 9.81900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -164.88281, -7977.16211, 9.81900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -154.61182, -7977.16211, 9.81900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -181.57642, -7963.10449, 11.93180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -181.82764, -7963.10547, 11.93180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -188.62842, -7957.38574, 10.60890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4817, -197.27417, -8006.08936, 10.43090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1263, -198.11694, -7962.82959, 11.95260,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(7371, -146.78345, -8012.76953, 10.58380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -181.59448, -7932.12598, 12.69820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(5006, -227.64893, -8023.72656, 15.17720,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -181.59619, -8052.79199, 16.89780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -181.59619, -8053.39160, 12.69780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1681, -86.42505, -8029.32178, 13.56200,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7371, -146.78345, -7880.44434, 10.58380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5002, -221.67407, -7882.63135, 10.60600,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4817, -197.27417, -8102.08984, 10.43710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5002, -221.68555, -8095.28809, 10.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -181.60938, -7842.10547, 14.09779,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -181.61353, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -182.44214, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1263, -183.29199, -7841.51270, 12.64190,   0.00000, 0.00000, 90.00010, -1, -1, -1, 300);
	CreateDynamicObject(1237, -183.28882, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -188.43848, -7841.51367, 9.82900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -198.51221, -7841.51367, 9.82900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -203.86060, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8177, -255.44507, -7864.08154, 12.04960,   0.00000, 0.00000, 103.04620, -1, -1, -1, 300);
	CreateDynamicObject(4828, -80.99194, -7864.45068, 26.14710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1683, -29.38672, -7924.34277, 16.49550,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5003, -122.72266, -8136.25635, 16.81840,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(7371, -146.78345, -8145.09424, 10.58380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5003, -38.91650, -7873.25586, 16.82720,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3453, -1.17944, -8018.53418, 16.28420,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(7369, -99.12671, -7826.05664, 13.67890,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7370, 9.42871, -8028.47559, 13.47400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -165.39624, -7798.56396, 9.49260,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7371, -14.22021, -8112.71289, 10.38070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -191.79346, -7776.52246, 12.13900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -191.79346, -7776.52246, 11.67520,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -201.17139, -7776.52246, 12.13900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -201.17139, -7776.52246, 11.67520,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(10385, 33.35303, -8040.53320, 10.52730,   0.00000, 0.00000, -123.74990, -1, -1, -1, 300);
	CreateDynamicObject(8171, 1.91870, -8109.35645, 10.38800,   0.00000, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(4817, -197.27417, -8198.06445, 10.45590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4832, -79.96973, -8176.31055, 50.89240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5006, -227.67456, -8192.95020, 15.13850,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -146.80762, -7760.11865, 8.48960,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3689, 29.41846, -8092.45117, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -146.15747, -7756.34131, 9.69070,   3.43770, 0.00000, 348.74939, -1, -1, -1, 300);
	CreateDynamicObject(3287, -10.57007, -8150.03320, 9.65460,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(7981, 59.33594, -7952.87354, 15.66190,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -275.68799, -7776.34668, 11.71690,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -141.27344, -7750.31445, 10.60380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -144.66162, -7749.61035, 9.80320,   0.00000, 0.00000, 347.03061, -1, -1, -1, 300);
	CreateDynamicObject(3877, -12.12549, -8160.62061, 12.02870,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -143.03564, -7742.87500, 9.80320,   0.00000, 0.00000, 346.17111, -1, -1, -1, 300);
	CreateDynamicObject(7416, 8.54809, -8150.05762, 10.36640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -181.60620, -8232.04199, 16.87280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -181.60620, -8233.24219, 12.69780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(689, 60.26440, -7891.87500, 9.99400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -141.30127, -7736.15039, 9.80320,   0.00000, 0.00000, 345.31171, -1, -1, -1, 300);
	CreateDynamicObject(8171, 64.02222, -8076.41016, 10.64060,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(7371, 33.77710, -7836.23340, 10.38270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -139.41943, -7729.48389, 9.80320,   0.00000, 0.00000, 343.59280, -1, -1, -1, 300);
	CreateDynamicObject(7416, 85.81934, -7953.65527, 10.63070,   0.00000, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(1237, -188.71484, -8245.74805, 10.60090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -137.30908, -7722.87988, 9.80320,   0.00000, 0.00000, 341.87390, -1, -1, -1, 300);
	CreateDynamicObject(7022, -34.43018, -8213.71094, 12.87550,   0.00000, 0.00000, -270.00000, -1, -1, -1, 300);
	CreateDynamicObject(10757, -123.82275, -8249.73926, 12.12530,   6.87550, 1.71890, -112.50000, -1, -1, -1, 300);
	CreateDynamicObject(1263, -197.71460, -8253.09766, 11.98520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3489, 31.64136, -7806.66699, 17.15850,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -134.93604, -7716.35547, 9.80320,   0.00000, 0.00000, 339.29568, -1, -1, -1, 300);
	CreateDynamicObject(8344, 34.30444, -8164.34619, 10.59050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -131.30542, -7713.73828, 10.60530,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -10.69458, -8207.81152, 9.61670,   -2.86480, 0.00000, 78.75000, -1, -1, -1, 300);
	CreateDynamicObject(8171, 78.38745, -8100.39844, 10.56280,   0.00000, 0.00000, -12.96889, -1, -1, -1, 300);
	CreateDynamicObject(687, 72.80933, -7855.94629, 10.59960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, 24.28613, -8181.40576, 8.34250,   0.00000, 0.00000, -96.91010, -1, -1, -1, 300);
	CreateDynamicObject(968, 24.34839, -8181.59863, 8.34250,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -132.34570, -7709.92676, 9.80320,   0.00000, 0.00000, 337.57681, -1, -1, -1, 300);
	CreateDynamicObject(3689, 106.48022, -7977.11963, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(7416, 85.81934, -7878.92773, 10.63820,   0.00000, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(8038, 52.47412, -8151.11328, 30.72260,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -4.19336, -8209.46973, 9.87140,   0.00000, 0.00000, 67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -129.55933, -7703.57764, 9.80320,   0.00000, 0.00000, 335.85791, -1, -1, -1, 300);
	CreateDynamicObject(3287, 1.94458, -8212.40039, 9.87140,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, 30.05151, -8187.96289, 11.31860,   0.00000, 0.00000, -51.95280, -1, -1, -1, 300);
	CreateDynamicObject(1637, -136.12744, -8271.87012, 11.81390,   0.00000, 0.00000, -270.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -10.29346, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -126.56836, -7697.44287, 9.80320,   0.00000, 0.00000, 333.27969, -1, -1, -1, 300);
	CreateDynamicObject(1422, -6.59033, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 7.37842, -8216.47266, 9.87140,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -2.96582, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, 89.45215, -8120.46777, 11.26590,   0.00000, 0.00000, 25.93770, -1, -1, -1, 300);
	CreateDynamicObject(1422, 0.63477, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, 37.22876, -8196.01270, 11.31860,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -123.17310, -7691.39648, 9.80320,   0.00000, 0.00000, 329.84189, -1, -1, -1, 300);
	CreateDynamicObject(8185, 93.52075, -8123.90625, 11.14430,   0.00000, 0.00000, 167.03110, -1, -1, -1, 300);
	CreateDynamicObject(3287, 11.91430, -8221.52441, 9.87140,   0.00000, 0.00000, 33.75000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -13.66577, -8239.77539, 10.58140,   0.00000, 0.00000, 213.75011, -1, -1, -1, 300);
	CreateDynamicObject(7416, 110.17676, -7881.95264, 10.64700,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -119.56030, -7685.47803, 9.80320,   0.00000, 0.00000, 328.12311, -1, -1, -1, 300);
	CreateDynamicObject(7416, -78.29907, -7695.44336, 10.63000,   0.00000, -0.04300, -25.28460, -1, -1, -1, 300);
	CreateDynamicObject(8343, -114.56421, -7680.28711, 10.60930,   0.00000, 0.00000, -22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -115.83276, -7679.63281, 9.80320,   0.00000, 0.00000, 327.26370, -1, -1, -1, 300);
	CreateDynamicObject(3287, -111.96216, -7673.90186, 9.80320,   0.00000, 0.00000, 325.54480, -1, -1, -1, 300);
	CreateDynamicObject(687, 92.77637, -7827.54736, 10.67460,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, 67.55957, -7786.15283, 10.57950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -107.91211, -7668.26904, 9.80320,   0.00000, 0.00000, 323.82599, -1, -1, -1, 300);
	CreateDynamicObject(3287, -103.59546, -7662.87793, 9.80320,   0.00000, 0.00000, 320.38821, -1, -1, -1, 300);
	CreateDynamicObject(3287, -99.00049, -7657.67676, 9.80320,   0.00000, 0.00000, 317.80991, -1, -1, -1, 300);
	CreateDynamicObject(3287, -94.15283, -7652.67822, 9.80320,   0.00000, 0.00000, 315.23169, -1, -1, -1, 300);
	CreateDynamicObject(7416, -71.94946, -7657.94336, 10.61870,   0.00000, -0.04300, -46.71890, -1, -1, -1, 300);
	CreateDynamicObject(8343, -91.50659, -7650.62305, 10.61210,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -89.20679, -7647.80566, 9.80320,   0.00000, 0.00000, 314.37231, -1, -1, -1, 300);
	CreateDynamicObject(3287, -84.24414, -7642.95605, 9.80320,   0.00000, 0.00000, 314.37231, -1, -1, -1, 300);
	CreateDynamicObject(3287, -79.17456, -7638.20215, 9.80320,   0.00000, 0.00000, 312.65341, -1, -1, -1, 300);
	CreateDynamicObject(7983, 15.29663, -7685.50488, 33.52650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 300);
	CreateDynamicObject(7983, 15.28810, -7685.49121, 34.02650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 300);
	CreateDynamicObject(3287, -73.85083, -7633.69678, 9.80320,   0.00000, 0.00000, 309.21570, -1, -1, -1, 300);
	CreateDynamicObject(689, 110.50293, -7817.50146, 10.16400,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -68.33667, -7629.48926, 9.80320,   0.00000, 0.00000, 306.63739, -1, -1, -1, 300);
	CreateDynamicObject(8343, -63.23779, -7626.21582, 10.61240,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -62.74146, -7625.32471, 9.80320,   0.00000, 0.00000, 306.63739, -1, -1, -1, 300);
	CreateDynamicObject(968, -61.58545, -7623.47656, 9.87220,   0.00000, 0.00000, -58.82830, -1, -1, -1, 300);
	CreateDynamicObject(7416, 67.55957, -7694.15283, 10.57950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(690, 110.59058, -7771.61572, 10.22840,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -30.73071, -7607.77930, 10.61390,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 4.52661, -7596.13281, 10.61540,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 41.33691, -7591.65430, 10.61700,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 78.04688, -7594.41406, 10.61850,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(10889, 87.58010, -7550.69580, 11.29120,   2.44940, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, 105.94775, -7570.35449, 10.61670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(10889, 123.58008, -7550.72070, 11.31870,   2.44940, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, 150.89600, -7786.15283, 10.64200,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, 163.47241, -7632.40723, 10.59970,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7983, 174.52075, -7681.72656, 33.56860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 300);
	CreateDynamicObject(7983, 174.51340, -7681.73242, 34.06860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 300);
	CreateDynamicObject(7983, 174.52080, -7681.71631, 34.56860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 300);
	CreateDynamicObject(968, 173.73633, -7587.56348, 9.73680,   0.00000, 0.00000, -82.57440, -1, -1, -1, 300);
	CreateDynamicObject(3287, 182.32690, -7588.55762, 9.75820,   1.71890, -0.85940, 262.81451, -1, -1, -1, 300);
	CreateDynamicObject(3287, 189.00195, -7590.00293, 9.80941,   0.00000, -0.85940, 255.93910, -1, -1, -1, 300);
	CreateDynamicObject(8343, 193.08813, -7594.38330, 10.62760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 195.47412, -7592.00781, 9.80941,   0.00000, -0.85940, 251.64200, -1, -1, -1, 300);
	CreateDynamicObject(3287, 201.84961, -7594.52051, 9.80941,   0.00000, -0.85940, 247.34480, -1, -1, -1, 300);
	CreateDynamicObject(1215, 205.66479, -7617.78125, 11.37200,   0.00000, 0.00000, 138.36040, -1, -1, -1, 300);
	CreateDynamicObject(3287, 207.95825, -7597.47412, 9.80941,   0.00000, -0.85940, 243.04770, -1, -1, -1, 300);
	CreateDynamicObject(3287, 213.82813, -7600.87891, 9.80941,   0.00000, -0.85940, 238.75050, -1, -1, -1, 300);
	CreateDynamicObject(3287, 219.35303, -7604.67871, 9.80941,   0.00000, -0.85940, 234.45340, -1, -1, -1, 300);
	CreateDynamicObject(3287, 224.60156, -7608.90430, 9.80941,   0.00000, 0.00000, 230.15620, -1, -1, -1, 300);
	CreateDynamicObject(7416, 183.19775, -7771.40283, 10.63700,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 229.75781, -7613.50439, 9.80941,   0.00000, 0.00000, 227.57790, -1, -1, -1, 300);
	CreateDynamicObject(8343, 230.71118, -7615.03857, 10.62910,   0.00000, 0.00000, -112.50000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 232.09912, -7627.64063, 11.38950,   0.00000, 0.00000, 115.86040, -1, -1, -1, 300);
	CreateDynamicObject(3287, 234.70508, -7618.35449, 9.80941,   0.00000, 0.00000, 224.99960, -1, -1, -1, 300);
	CreateDynamicObject(3287, 239.40527, -7623.37891, 9.80941,   0.00000, 0.00000, 222.42130, -1, -1, -1, 300);
	CreateDynamicObject(3287, 243.88013, -7628.61182, 9.80941,   0.00000, 0.00000, 219.84290, -1, -1, -1, 300);
	CreateDynamicObject(3287, 248.14697, -7634.08691, 9.80941,   0.00000, 0.00000, 217.26460, -1, -1, -1, 300);
	CreateDynamicObject(3287, 252.13892, -7639.72754, 9.80941,   0.00000, 0.00000, 214.68629, -1, -1, -1, 300);
	CreateDynamicObject(1215, 253.55737, -7645.93896, 11.36570,   0.00000, 0.00000, 93.36040, -1, -1, -1, 300);
	CreateDynamicObject(3287, 255.84790, -7645.60645, 9.80941,   0.00000, 0.00000, 211.24850, -1, -1, -1, 300);
	CreateDynamicObject(8343, 257.62402, -7648.58105, 10.63060,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 259.23682, -7651.62354, 9.80941,   0.00000, 0.00000, 208.67020, -1, -1, -1, 300);
	CreateDynamicObject(3287, 262.37036, -7657.82373, 9.80941,   0.00000, 0.00000, 206.09190, -1, -1, -1, 300);
	CreateDynamicObject(3287, 265.20703, -7664.12744, 9.58440,   -2.57830, 0.00000, 203.51350, -1, -1, -1, 300);
	CreateDynamicObject(1215, 267.49048, -7670.50293, 11.38200,   0.00000, 0.00000, 82.11040, -1, -1, -1, 300);
	CreateDynamicObject(8343, 269.10010, -7688.73926, 10.63220,   0.00000, 0.00000, -157.50000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 272.16675, -7698.31152, 11.37320,   0.00000, 0.00000, 59.61040, -1, -1, -1, 300);
	CreateDynamicObject(7416, 130.39990, -7850.45264, 10.63200,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 267.05103, -7726.05322, 11.36800,   0.00000, 0.00000, 37.11040, -1, -1, -1, 300);
	CreateDynamicObject(8343, 264.42114, -7731.30176, 10.63370,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1215, 252.75952, -7750.35205, 11.36800,   0.00000, 0.00000, 14.61040, -1, -1, -1, 300);
	CreateDynamicObject(3287, 251.30103, -7757.56836, 9.87580,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 243.74023, -7768.98633, 10.63520,   0.00000, 0.00000, -202.50000, -1, -1, -1, 300);
	CreateDynamicObject(3877, 252.62109, -7758.61670, 12.57900,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 221.81714, -7796.67334, 10.63670,   0.00000, 0.00000, -213.75000, -1, -1, -1, 300);
	CreateDynamicObject(3689, 213.60327, -7816.80078, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3877, 288.38892, -7775.27393, 12.30100,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(8171, 213.90210, -7852.05469, 10.63620,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3689, 183.53003, -7861.80957, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(7505, 244.17749, -7841.40820, 11.69390,   0.00000, 0.00000, -123.74990, -1, -1, -1, 300);
	CreateDynamicObject(7505, 156.87622, -7972.06152, 11.69230,   0.00000, 0.00000, -123.74990, -1, -1, -1, 300);
	CreateDynamicObject(8171, 137.38086, -7966.62451, 10.63830,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8171, 58.14136, -8188.64844, 10.56910,   0.00000, 0.00000, -12.96889, -1, -1, -1, 300);
	CreateDynamicObject(3578, 45.70972, -8202.48730, 11.31860,   0.00000, 0.00000, -30.31230, -1, -1, -1, 300);
	CreateDynamicObject(3578, 55.55347, -8206.98828, 11.31860,   0.00000, 0.00000, -19.06220, -1, -1, -1, 300);
	CreateDynamicObject(3287, 15.36230, -8227.34961, 9.87140,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 17.61792, -8233.72266, 9.87140,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 18.58960, -8240.44043, 9.87140,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 14.75317, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 11.00317, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 7.00806, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 3.03491, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 18.23608, -8247.19238, 9.87140,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 16.57935, -8253.74512, 9.87140,   0.00000, 0.00000, -22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1422, 0.56372, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 13.56958, -8259.59961, 9.87140,   0.00000, 0.00000, -40.70280, -1, -1, -1, 300);
	CreateDynamicObject(1422, -3.08472, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -6.73706, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -10.26392, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1682, -23.08423, -8248.46094, 17.11320,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 8.79614, -8264.34375, 9.87140,   0.00000, 0.00000, -57.10940, -1, -1, -1, 300);
	CreateDynamicObject(8344, -7.26880, -8262.16797, 10.59610,   0.00000, 0.00000, -270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 2.92431, -8267.58301, 9.87140,   0.00000, 0.00000, -71.79720, -1, -1, -1, 300);
	CreateDynamicObject(3287, -3.58374, -8269.23730, 9.87140,   0.00000, 0.00000, -86.48490, -1, -1, -1, 300);
	CreateDynamicObject(968, -12.10132, -8265.96680, 9.26570,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -12.23975, -8266.04980, 9.26570,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -10.37402, -8269.27344, 9.87140,   0.00000, 0.00000, -97.73490, -1, -1, -1, 300);
	CreateDynamicObject(3287, -17.17627, -8268.23047, 9.78010,   2.86480, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(10755, 100.72998, -8318.80664, 18.01720,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3578, 6.72583, -8310.84863, 11.30560,   0.00000, 0.00000, 11.32730, -1, -1, -1, 300);
	CreateDynamicObject(3578, -3.55200, -8311.82422, 11.30560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -13.83179, -8311.82422, 11.30560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -77.97461, -8310.52734, 10.59470,   0.00000, 0.00000, -450.00000, -1, -1, -1, 300);
	CreateDynamicObject(6063, -56.91650, -8326.09766, 17.06660,   0.00000, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 11.11700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 11.81700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 12.51700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 13.21700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(7418, -97.42627, -8314.21289, 10.55160,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7022, -124.76733, -8318.63281, 12.95710,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, -55.05615, -8365.34766, 10.58100,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -49.60059, -8381.45605, 10.57760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8355.81641, 9.06540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8360.89648, 9.11790,   -1.14590, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -140.95898, -8349.75684, 11.09280,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(979, -140.95898, -8349.75684, 12.01780,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(979, -140.95898, -8349.75684, 12.94280,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8366.02148, 9.29670,   -2.86480, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8371.09668, 9.60170,   -4.01070, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.28149, -8355.88379, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -181.60229, -8322.07422, 18.25020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -181.60229, -8322.65625, 15.82900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -181.60229, -8323.27539, 14.05400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -181.60522, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8376.14648, 10.00670,   -5.15660, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, 50.13525, -8417.15918, 12.42730,   0.00000, 0.00000, 0.12900, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8364.67188, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -186.94580, -8323.92188, 9.81360,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8381.19824, 10.51670,   -6.30250, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -117.42188, -8382.99805, 10.58020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8386.19922, 11.11790,   -7.44850, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3620, -9.10009, -8423.49902, 23.67300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.29517, -8373.47363, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -197.22046, -8323.91406, 9.81360,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -198.75952, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8391.17480, 11.81920,   -8.59440, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -199.58618, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1263, -199.05908, -8324.72949, 13.51500,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -200.40796, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -201.22974, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -96.96631, -8403.92773, 14.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -202.00854, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.33545, -8379.06055, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8396.17480, 12.62420,   -9.74030, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -203.17700, -8324.82617, 11.36060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -203.17700, -8324.82617, 12.28560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -203.17285, -8324.84277, 11.35450,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -203.17285, -8324.84277, 12.28450,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8401.12402, 13.50040,   -10.31320, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8387.82227, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
//	CreateDynamicObject(5002, -221.68091, -8308.03613, 10.59810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8406.07324, 14.42540,   -10.88620, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1612, -30.34790, -8437.50195, 19.35610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8410.97461, 15.38040,   -11.17270, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.21704, -8396.71582, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7191, -147.03638, -8394.15332, 12.54770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8415.92480, 16.37169,   -11.45920, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.23291, -8402.10352, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8420.88379, 17.35290,   -10.88620, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8410.97266, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8425.84180, 18.28040,   -10.31320, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8430.81445, 19.15919,   -9.74030, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.16089, -8419.84180, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8435.78906, 19.98919,   -9.16730, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.22900, -8425.23535, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8440.75098, 20.76420,   -8.59440, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -96.96631, -8451.35352, 16.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5155, 22.02026, -8475.24512, 20.80799,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8445.77051, 21.49670,   -8.02140, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8434.12305, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8450.79980, 22.17920,   -7.44850, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8455.82617, 22.81040,   -6.87550, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.21460, -8443.03223, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8460.87305, 23.39290,   -6.30250, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.28589, -8448.46289, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8465.92871, 23.92539,   -5.72960, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -96.96631, -8479.62793, 18.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8457.27344, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8470.94629, 24.40289,   -5.15660, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8476.01074, 24.83410,   -4.58370, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -39.70093, -8507.42480, 12.42730,   0.00000, 0.00000, 90.12900, -1, -1, -1, 300);
	CreateDynamicObject(5005, -96.96631, -8489.30273, 20.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -96.95654, -8489.13184, 25.71940,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -96.95654, -8489.13184, 27.94430,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.13550, -8466.07813, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8481.02930, 25.21039,   -4.01070, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8486.08301, 25.54160,   -3.43770, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.32080, -8471.54688, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -96.96631, -8498.97852, 22.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8491.13086, 25.81910,   -2.86480, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8480.42383, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8496.19629, 26.04790,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -96.96631, -8508.66797, 24.11530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8501.27344, 26.25160,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.09717, -8489.29883, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8506.32422, 26.45160,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.33398, -8494.68652, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1692, -90.41748, -8523.12012, 29.92730,   -59.30110, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8511.37402, 26.65550,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -96.95654, -8524.98047, 27.94430,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -167.46533, -8482.99707, 10.58300,   0.00000, 0.00000, -1.71890, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8516.32324, 26.85180,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8503.57422, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8185, -146.98070, -8500.57813, 12.44770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -164.97510, -8487.55078, 10.56300,   0.00000, 0.00000, -1.71890, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.65210, -8521.32520, 27.03430,   -1.90510, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8522.69727, 27.06250,   -2.86480, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.02930, -8512.45313, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8527.76367, 27.29000,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10827, -32.45386, -8557.57031, 30.96660,   0.00000, 0.00000, 180.00011, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.24512, -8517.84570, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8532.83203, 27.44130,   -1.14590, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -92.25537, -8544.60449, 30.98400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -92.25537, -8544.60449, 31.90900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -92.25537, -8544.60449, 32.83400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8537.92285, 27.51750,   -0.57300, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8526.72461, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8543.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.08667, -8535.54883, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8548.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.23828, -8541.06250, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8553.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8558.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8549.87500, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8563.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.14380, -8558.74512, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8568.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -77.35840, -8578.89453, 29.04970,   0.00000, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.33911, -8564.18848, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8573.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8578.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -140.25684, -8573.02539, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8583.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.10156, -8581.91016, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -96.04834, -8589.19141, 29.06670,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8588.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -140.14014, -8587.33008, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8593.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -117.50000, -8598.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -139.75879, -8596.17578, 23.51620,   0.00000, 0.00000, -87.42170, -1, -1, -1, 300);
	CreateDynamicObject(8344, -188.65649, -8588.01953, 10.57700,   0.00000, 0.00000, 157.50000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -186.05298, -8595.73535, 10.12690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -139.29028, -8605.02148, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -138.33984, -8610.26367, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7191, -154.95581, -8611.57617, 12.52670,   0.00000, 0.00000, 159.21890, -1, -1, -1, 300);
	CreateDynamicObject(3330, -136.82031, -8619.10254, 23.51620,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -186.92969, -8619.11133, 10.58610,   0.00000, 0.00000, -1.71890, -1, -1, -1, 300);
	CreateDynamicObject(1232, -134.96753, -8627.66602, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -133.86108, -8633.04785, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -132.12207, -8641.80078, 23.51620,   0.00000, 0.00000, -78.75000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -91.21924, -8642.71680, 29.05910,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(968, -85.24365, -8647.52441, 28.29180,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -85.16650, -8647.64941, 28.29180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -130.24683, -8650.54297, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -128.80298, -8655.78223, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7191, -167.67798, -8654.47656, 12.52670,   0.00000, 0.00000, 167.89059, -1, -1, -1, 300);
	CreateDynamicObject(3330, -125.07031, -8663.72461, 23.51620,   0.00000, 0.00000, -65.78110, -1, -1, -1, 300);
	CreateDynamicObject(6295, -58.17554, -8656.01660, 56.98990,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -121.51440, -8671.82227, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -118.07324, -8675.91211, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -54.72607, -8673.98828, 29.05750,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -111.73682, -8682.09668, 23.51620,   0.00000, 0.00000, -43.28110, -1, -1, -1, 300);
	CreateDynamicObject(968, -52.50757, -8677.94824, 26.30680,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -52.31519, -8678.05469, 26.30680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -105.11816, -8688.10840, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -101.05493, -8691.23145, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -93.76270, -8696.49805, 23.51620,   0.00000, 0.00000, -34.60940, -1, -1, -1, 300);
	CreateDynamicObject(1232, -86.40845, -8701.30273, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7191, -174.65405, -8698.62598, 12.52670,   0.00000, 0.00000, 173.98390, -1, -1, -1, 300);
	CreateDynamicObject(1232, -81.84302, -8704.25586, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -74.16211, -8708.82227, 23.51620,   0.00000, 0.00000, -30.31230, -1, -1, -1, 300);
	CreateDynamicObject(8344, -214.93481, -8699.98828, 10.58410,   0.00000, 0.00000, 157.50000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -66.39795, -8712.95508, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -61.61133, -8714.99316, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, 33.84863, -8680.50781, 35.20380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -52.84326, -8716.94531, 23.51620,   0.00000, 0.00000, -12.18680, -1, -1, -1, 300);
	CreateDynamicObject(16097, -5.34839, -8702.71094, 27.48940,   2.57830, 0.98840, 145.39059, -1, -1, -1, 300);
	CreateDynamicObject(1232, -44.16772, -8718.67285, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 13.77430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 13.29930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 12.82430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 12.34930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 11.87430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 11.39930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -179.61206, -8724.36914, 10.92430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -38.92334, -8719.54590, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, -30.06641, -8720.04395, 23.51620,   0.00000, 0.00000, -3.59240, -1, -1, -1, 300);
	CreateDynamicObject(10834, 86.03638, -8653.89844, 28.33760,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(10834, 86.05078, -8653.93066, 28.34250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1232, -21.17725, -8720.54590, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, 32.84497, -8698.07324, 29.05490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 25.09009, -8717.69531, 30.19520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7191, -183.25464, -8751.02441, 12.50170,   0.00000, 0.00000, 178.28101, -1, -1, -1, 300);
	CreateDynamicObject(8171, -206.45752, -8756.49805, 10.58320,   0.00000, 0.00000, -1.71890, -1, -1, -1, 300);
	CreateDynamicObject(8650, 55.58545, -8717.69531, 30.19520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -185.24854, -8778.21875, 10.42600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -166.73193, -8782.93848, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 116.70630, -8678.67773, 29.86260,   0.00000, 0.00000, 171.32829, -1, -1, -1, 300);
	CreateDynamicObject(8650, 86.07837, -8717.69531, 30.19520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -81.88208, -8797.87793, 11.16130,   0.00000, -4.03940, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 125.87476, -8680.07324, 29.86260,   0.00000, 0.00000, 171.32829, -1, -1, -1, 300);
	CreateDynamicObject(8171, -202.55908, -8800.17285, 10.57700,   0.00000, 0.00000, -1.71890, -1, -1, -1, 300);
	CreateDynamicObject(973, 135.07397, -8681.67383, 29.86260,   0.00000, 0.00000, 168.96490, -1, -1, -1, 300);
	CreateDynamicObject(11533, -11.57592, -8801.44531, 8.92090,   0.00000, -9.45380, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -186.28833, -8813.20801, 11.06560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 116.52832, -8718.60938, 30.19520,   0.00000, 0.00000, 86.56220, -1, -1, -1, 300);
	CreateDynamicObject(973, 144.17749, -8683.45117, 29.86260,   0.00000, 0.00000, 168.96490, -1, -1, -1, 300);
	CreateDynamicObject(8343, 129.16626, -8722.13281, 29.07240,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -166.73193, -8847.31348, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 153.32397, -8685.23242, 29.86260,   0.00000, 0.00000, 168.96490, -1, -1, -1, 300);
	CreateDynamicObject(16097, 5.81982, -8833.58301, 27.85770,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(1232, 159.17651, -8680.39941, 35.20380,   0.00000, 0.00000, 33.75000, -1, -1, -1, 300);
	CreateDynamicObject(10834, -160.29321, -8864.64746, 11.78330,   0.00000, 0.00000, -271.71881, -1, -1, -1, 300);
	CreateDynamicObject(10834, -160.33813, -8865.18555, 11.77790,   0.00000, 0.00000, -91.71890, -1, -1, -1, 300);
	CreateDynamicObject(973, 162.32397, -8687.51465, 29.86260,   0.00000, 0.00000, 162.74249, -1, -1, -1, 300);
	CreateDynamicObject(8650, 146.29443, -8723.81445, 30.19520,   0.00000, 0.00000, 73.59340, -1, -1, -1, 300);
	CreateDynamicObject(973, 171.07397, -8690.61816, 29.86260,   0.00000, 0.00000, 158.14439, -1, -1, -1, 300);
	CreateDynamicObject(4242, 117.38403, -8797.87402, 18.18509,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -210.26685, -8894.31934, 10.59010,   0.00000, 0.00000, -1.50400, -1, -1, -1, 300);
	CreateDynamicObject(8343, 163.45581, -8731.87988, 29.07340,   0.00000, 0.00000, 258.75000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -166.73193, -8912.06348, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16114, -46.91406, -8916.84375, 7.27580,   0.00000, 0.00000, 123.74990, -1, -1, -1, 300);
	CreateDynamicObject(973, 179.64966, -8694.07031, 29.86260,   0.00000, 0.00000, 157.97250, -1, -1, -1, 300);
	CreateDynamicObject(8650, 174.11206, -8735.61133, 30.19520,   0.00000, 1.71890, 60.62450, -1, -1, -1, 300);
	CreateDynamicObject(10487, 66.24219, -8884.19336, 36.46740,   5.58630, -12.24699, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 188.20044, -8697.52832, 29.86260,   0.00000, 0.00000, 157.97250, -1, -1, -1, 300);
	CreateDynamicObject(4242, 152.13403, -8797.87402, 18.18760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -189.97266, -8935.58301, 11.03440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16192, 129.16528, -8848.05371, 41.44800,   0.00000, 0.00000, -81.40560, -1, -1, -1, 300);
	CreateDynamicObject(973, 196.69751, -8701.11719, 29.86260,   0.00000, 0.00000, 156.25360, -1, -1, -1, 300);
	CreateDynamicObject(8171, -206.80910, -8937.79688, 10.54570,   0.00000, 0.00000, -2.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 205.01733, -8705.09277, 29.85140,   0.00000, -0.25780, 152.73860, -1, -1, -1, 300);
	CreateDynamicObject(8343, 196.90991, -8748.67773, 29.07560,   0.00000, 0.00000, 247.50000, -1, -1, -1, 300);
	CreateDynamicObject(4815, 110.90869, -8899.43848, 32.23440,   0.85940, -3.91040, 112.34530, -1, -1, -1, 300);
	CreateDynamicObject(973, 212.83179, -8710.14160, 29.84640,   0.00000, 0.00000, 141.64310, -1, -1, -1, 300);
	CreateDynamicObject(8343, 94.66211, -8914.85547, 32.46000,   2.97940, 5.74390, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(3330, 51.05176, -8944.99902, 38.26470,   0.00000, 0.00000, -89.14060, -1, -1, -1, 300);
	CreateDynamicObject(16112, 176.75659, -8831.42285, 32.06280,   0.00000, 0.00000, 147.10930, -1, -1, -1, 300);
	CreateDynamicObject(973, 219.80493, -8716.29199, 29.84640,   0.00000, 0.00000, 135.62700, -1, -1, -1, 300);
	CreateDynamicObject(981, 64.82617, -8946.39258, 34.73370,   0.00000, 6.01610, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 225.95825, -8722.52539, 29.84640,   0.00000, 0.00000, 133.86501, -1, -1, -1, 300);
	CreateDynamicObject(8343, 220.11279, -8778.90918, 29.08030,   0.00000, 0.00000, 225.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 232.28735, -8729.11621, 29.84640,   0.00000, 0.00000, 133.86501, -1, -1, -1, 300);
	CreateDynamicObject(16114, 173.02563, -8874.00488, 30.79510,   5.15660, 0.00000, 43.98590, -1, -1, -1, 300);
	CreateDynamicObject(3330, 51.42847, -8962.56348, 38.29210,   0.00000, 0.00000, -89.14060, -1, -1, -1, 300);
	CreateDynamicObject(973, 238.65991, -8735.75391, 29.84640,   0.00000, 0.00000, 133.86501, -1, -1, -1, 300);
	CreateDynamicObject(1232, 57.50073, -8962.84863, 36.36030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16112, 212.86157, -8823.12891, 28.71570,   0.00000, 0.00000, 327.89160, -1, -1, -1, 300);
	CreateDynamicObject(16112, 89.14233, -8950.03711, 22.13840,   0.00000, 0.00000, 12.49610, -1, -1, -1, 300);
	CreateDynamicObject(973, 244.76245, -8742.67578, 29.84640,   0.00000, 0.00000, 129.05209, -1, -1, -1, 300);
	CreateDynamicObject(1232, 72.28809, -8963.20703, 34.86390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, 250.21069, -8750.15430, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 300);
	CreateDynamicObject(16115, 128.41479, -8936.56641, 37.23110,   0.00000, -4.29720, 24.37360, -1, -1, -1, 300);
	CreateDynamicObject(973, 255.23853, -8757.90430, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 300);
	CreateDynamicObject(8343, 238.11206, -8810.90527, 29.08260,   0.00000, 0.00000, 213.75000, -1, -1, -1, 300);
	CreateDynamicObject(16112, 220.95728, -8853.37891, 29.09070,   0.00000, 0.00000, 90.70470, -1, -1, -1, 300);
	CreateDynamicObject(973, 260.28076, -8765.65430, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 300);
	CreateDynamicObject(3458, 171.39990, -8919.64355, 27.59560,   0.01430, 0.00000, 43.28110, -1, -1, -1, 300);
	CreateDynamicObject(973, 265.29712, -8773.37891, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 300);
	CreateDynamicObject(973, 269.86328, -8781.15430, 29.84640,   0.00000, 0.00000, 117.87930, -1, -1, -1, 300);
	CreateDynamicObject(8343, 241.85815, -8853.67383, 29.08480,   0.00000, 0.00000, 191.25000, -1, -1, -1, 300);
	CreateDynamicObject(973, 273.28369, -8789.67871, 29.84640,   0.00000, 0.00000, 105.84720, -1, -1, -1, 300);
	CreateDynamicObject(10351, 243.69165, -8536.72754, 30.08430,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(973, 275.22998, -8798.50391, 29.84640,   0.00000, 0.00000, 98.97170, -1, -1, -1, 300);
	CreateDynamicObject(8343, 188.78809, -8922.35742, 29.08280,   0.00000, 0.00000, 132.34441, -1, -1, -1, 300);
	CreateDynamicObject(973, 276.33691, -8806.35254, 29.84640,   0.00000, 0.00000, 96.87460, -1, -1, -1, 300);
	CreateDynamicObject(973, 277.10254, -8812.60449, 29.84640,   0.00000, 0.00000, 96.96050, -1, -1, -1, 300);
	CreateDynamicObject(3877, 277.87354, -8817.20605, 30.72550,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 229.29590, -8892.87988, 29.08010,   0.00000, 0.00000, 168.67270, -1, -1, -1, 300);
	CreateDynamicObject(8171, 198.40991, -8924.40234, 29.07960,   0.00000, 0.00000, 315.00000, -1, -1, -1, 300);
	CreateDynamicObject(10806, 230.83911, -8906.60938, 32.08480,   0.00000, 0.00000, 6.95280, -1, -1, -1, 300);
	CreateDynamicObject(10352, 301.28467, -8798.53418, 30.00160,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(891, 90.69775, -8988.63477, 29.08500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, 191.08545, -8961.12793, 28.34690,   0.00000, 0.00000, -58.82830, -1, -1, -1, 300);
	CreateDynamicObject(3287, 185.44629, -8964.95410, 28.34690,   0.00000, 0.00000, -47.57830, -1, -1, -1, 300);
	CreateDynamicObject(3287, 197.34839, -8958.47363, 28.34690,   0.00000, 0.00000, -70.07830, -1, -1, -1, 300);
	CreateDynamicObject(3287, 180.67993, -8969.77344, 28.24310,   3.43770, 0.00000, -36.32830, -1, -1, -1, 300);
	CreateDynamicObject(3287, 203.94775, -8957.10645, 28.05810,   -3.43770, 0.00000, -81.32830, -1, -1, -1, 300);
	CreateDynamicObject(3877, 191.34424, -8964.51367, 30.71790,   0.00000, 0.00000, 213.75000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 186.98218, -8967.19043, 27.54860,   0.01430, 0.00000, 32.03110, -1, -1, -1, 300);
	CreateDynamicObject(8171, 102.20996, -9005.20117, 29.06620,   0.00000, 0.00000, 303.75000, -1, -1, -1, 300);
	CreateDynamicObject(4242, 143.31812, -9023.07422, 12.18630,   0.00000, -3.39480, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16258, 84.89795, -9029.58398, 15.50280,   0.00000, 6.87550, 165.31219, -1, -1, -1, 300);
	CreateDynamicObject(8343, 46.77148, -9011.06836, 32.36760,   -2.86480, -5.72960, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(10353, 349.63989, -9058.03027, 28.98570,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 46.77148, -9019.06836, 31.97270,   -2.86480, -5.72960, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(10807, 63.56494, -9042.48828, 32.07750,   0.00000, 0.00000, 9.53120, -1, -1, -1, 300);
	CreateDynamicObject(4898, 35.82715, -9048.63281, 31.39760,   0.38670, -6.44580, 149.68770, -1, -1, -1, 300);
	CreateDynamicObject(978, -11.66772, -9005.82813, 38.83640,   0.00000, 0.00000, 121.99670, -1, -1, -1, 300);
	CreateDynamicObject(978, -11.66772, -9005.82813, 39.68640,   0.00000, 0.00000, 121.99670, -1, -1, -1, 300);
	CreateDynamicObject(978, -11.66772, -9005.82813, 40.56140,   0.00000, 0.00000, 121.99670, -1, -1, -1, 300);
	CreateDynamicObject(3287, -10.07861, -9010.00098, 35.86880,   -3.43770, 0.00000, -96.79820, -1, -1, -1, 300);
	CreateDynamicObject(3287, -16.94946, -9009.15137, 36.17000,   0.00000, 0.00000, -97.81230, -1, -1, -1, 300);
	CreateDynamicObject(981, 18.92456, -9067.79785, 32.98380,   0.00000, -6.01610, 174.84331, -1, -1, -1, 300);
	CreateDynamicObject(3287, -23.65259, -9008.77637, 36.18250,   0.55860, 0.04300, -80.46880, -1, -1, -1, 300);
	CreateDynamicObject(1237, 0.68799, -9061.73145, 34.50780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -21.59180, -9027.71289, 34.51650,   6.90410, 3.52370, -14.76509, -1, -1, -1, 300);
	CreateDynamicObject(3287, -30.43555, -9010.21094, 36.11250,   0.77350, 0.04300, -71.79720, -1, -1, -1, 300);
	CreateDynamicObject(1237, -2.57031, -9058.19922, 34.45100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -5.87866, -9054.72070, 34.62500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10806, -26.96436, -9024.34375, 39.23610,   -2.86480, 0.00000, 179.90880, -1, -1, -1, 300);
	CreateDynamicObject(3287, -37.01807, -9012.48730, 36.00880,   1.33210, 0.04300, -68.35940, -1, -1, -1, 300);
	CreateDynamicObject(3458, -18.63501, -9051.74512, 33.22160,   2.85050, 0.04300, -1.71890, -1, -1, -1, 300);
	CreateDynamicObject(8421, 10.09741, -9093.13867, 36.57130,   0.00000, 0.00000, 82.70340, -1, -1, -1, 300);
	CreateDynamicObject(3287, -43.44238, -9015.16504, 35.85010,   1.33210, 0.04300, -64.92170, -1, -1, -1, 300);
	CreateDynamicObject(3287, -49.69629, -9018.17188, 35.66890,   2.19160, 0.04300, -62.34340, -1, -1, -1, 300);
	CreateDynamicObject(1237, -36.87280, -9054.47656, 34.63730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -55.80957, -9021.57910, 35.40390,   2.19160, 0.04300, -57.18670, -1, -1, -1, 300);
	CreateDynamicObject(1237, -40.24951, -9057.89648, 34.46610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -41.72314, -9057.15918, 34.50020,   2.86480, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(9907, -21.20630, -9077.28613, 98.13540,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -43.13525, -9061.72559, 34.27450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -61.37720, -9025.57324, 35.12140,   3.78150, 0.04300, -45.93680, -1, -1, -1, 300);
	CreateDynamicObject(16196, -81.37598, -9025.93848, 38.03840,   0.00000, 0.00000, -81.40560, -1, -1, -1, 300);
	CreateDynamicObject(3458, -44.72021, -9110.98242, 30.25550,   0.01430, 2.92210, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -81.88208, -9048.67773, 3.63630,   3.43770, -4.03940, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4002, -31.03711, -9137.87695, 32.12570,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -84.55688, -9107.36914, 31.95880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -84.55688, -9107.36914, 32.70880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -84.55688, -9107.36914, 33.45880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(9915, -24.04321, -9181.37793, 36.61370,   0.00000, -4.29720, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(973, -85.16089, -9112.09082, 31.99370,   0.00000, 2.75020, -96.01600, -1, -1, -1, 300);
	CreateDynamicObject(973, -85.16089, -9112.09082, 32.91860,   0.00000, 2.75020, -96.01600, -1, -1, -1, 300);
	CreateDynamicObject(973, -85.16089, -9112.09082, 33.84360,   0.00000, 2.75020, -96.01600, -1, -1, -1, 300);
	CreateDynamicObject(3458, -45.75269, -9163.78223, 27.59810,   0.01430, 2.79320, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -5.79663, -9200.78418, 27.06020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -65.84375, -9149.20605, 29.87990,   2.86480, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(17546, -95.50098, -9140.81055, 34.75120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(17546, -95.50952, -9140.80273, 16.37620,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -42.86768, -9200.98438, 27.07530,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -45.36304, -9200.33887, 26.82070,   -2.79320, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -12.95800, -9229.62891, 25.21220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16061, -166.73193, -8976.56348, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.09424, -9229.63086, 25.21240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(9915, -24.04932, -9238.87695, 33.60750,   0.00000, -4.29720, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -12.97558, -9247.18750, 22.98190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3689, -157.93262, -9082.95898, 18.40009,   0.00000, 0.00000, -82.18770, -1, -1, -1, 300);
	CreateDynamicObject(17546, -95.52197, -9187.76074, 34.75120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.77222, -9220.67676, 24.73419,   4.01070, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.06885, -9247.14258, 22.97850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -12.99829, -9266.29883, 21.25630,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -191.00854, -8970.54883, 10.42600,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.11499, -9266.66113, 21.28349,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -173.90625, -9120.44434, 10.32370,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -173.49536, -9123.38379, 10.29810,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -172.48804, -9130.86523, 11.07900,   0.00000, 0.00000, 11.25000, -1, -1, -1, 300);
	CreateDynamicObject(17546, -95.52930, -9234.71973, 34.75120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -203.01514, -9030.92578, 10.56000,   0.00000, 0.00000, 7.81220, -1, -1, -1, 300);
	CreateDynamicObject(17546, -95.54272, -9234.71973, 12.30120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3755, -141.13477, -9192.00684, 16.22370,   0.00000, 0.00000, -82.26510, -1, -1, -1, 300);
	CreateDynamicObject(1568, -12.95337, -9288.66113, 19.27849,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -159.16504, -9182.39941, 10.55870,   0.00000, 0.00000, 7.81220, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.10474, -9288.71094, 19.28230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(9915, -24.04932, -9298.02539, 27.68250,   0.00000, -4.29720, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -184.21191, -9167.89941, 10.56000,   0.00000, 0.00000, 7.81220, -1, -1, -1, 300);
	CreateDynamicObject(8650, -85.69604, -9269.91016, 20.80990,   5.71530, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(8650, -85.69604, -9269.91016, 18.56989,   5.71530, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(1568, -12.90454, -9305.99707, 17.03140,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, -149.93140, -9231.61133, 11.82400,   0.00000, 0.00000, 154.84441, -1, -1, -1, 300);
	CreateDynamicObject(979, -149.93140, -9231.61133, 10.92400,   0.00000, 0.00000, 154.84441, -1, -1, -1, 300);
	CreateDynamicObject(8171, -65.85620, -9292.07617, 19.17039,   5.72960, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.05957, -9306.21777, 17.04800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -13.01001, -9325.38770, 15.32680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.10669, -9325.85352, 15.36190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -171.16455, -9262.89941, 10.56120,   0.00000, 0.00000, 7.81220, -1, -1, -1, 300);
	CreateDynamicObject(5192, -127.87402, -9305.26855, 14.12620,   0.08590, 0.08590, -36.32830, -1, -1, -1, 300);
	CreateDynamicObject(17538, -115.62451, -9313.61426, 25.28699,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(9915, -24.05420, -9338.39844, 23.90750,   0.00000, -4.29720, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -141.43457, -9312.97656, 11.48610,   0.00000, 0.00000, -81.11350, -1, -1, -1, 300);
	CreateDynamicObject(8171, -175.00000, -9303.00000, 10.55870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3666, -178.27393, -9313.89453, 10.22490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.05176, -9346.55371, 13.27020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -12.95434, -9346.48535, 13.26510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10844, -129.79395, -9341.24805, 13.42760,   0.00000, 0.00000, -16.40660, -1, -1, -1, 300);
	CreateDynamicObject(11089, -147.05835, -9337.93262, 19.50000,   0.00000, 0.00000, -106.19170, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9362.14355, 10.61670,   5.72960, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9367.19434, 10.14790,   4.87010, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -35.09888, -9366.06348, 11.57450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -13.02954, -9365.75879, 11.55160,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9372.26953, 9.75170,   4.01070, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -148.94580, -9363.16895, 11.43610,   0.00000, 0.00000, -106.19180, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9377.31934, 9.45040,   2.86480, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9382.39453, 9.24670,   1.71890, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9387.39453, 9.13420,   0.85940, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -65.89087, -9392.42480, 9.09670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4199, -2.56006, -9394.91211, 9.65010,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4869, -160.03320, -9390.80469, 12.62210,   0.00000, 0.00000, 75.31230, -1, -1, -1, 300);
	CreateDynamicObject(10817, -17.80933, -9402.96777, -3.17050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(4199, -2.56006, -9401.61133, 9.63510,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -180.78027, -9389.52441, 10.56250,   0.00000, 0.00000, -16.40660, -1, -1, -1, 300);
	CreateDynamicObject(9680, -153.31592, -9409.48730, 25.10280,   0.00000, 0.00000, 72.73400, -1, -1, -1, 300);
	CreateDynamicObject(4559, 21.57568, -9415.83398, 15.04600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4199, 18.43994, -9416.93555, 9.65130,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, 4.13769, -9429.49902, 10.61540,   0.00000, 0.00000, 0.00010, -1, -1, -1, 300);
	CreateDynamicObject(4199, 11.94629, -9443.57422, 9.65760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5005, -93.56396, -9459.38574, 13.91120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -193.93164, -9434.22559, 10.55750,   0.00000, 0.00000, -16.40660, -1, -1, -1, 300);
	CreateDynamicObject(8171, -65.91943, -9463.88672, 10.61700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5001, -158.61255, -9464.78418, 13.12600,   0.00000, 0.00000, -107.34320, -1, -1, -1, 300);
	CreateDynamicObject(5002, -140.15161, -9490.66992, 10.56170,   0.00000, 0.00000, 343.51599, -1, -1, -1, 300);
	CreateDynamicObject(8650, -139.48950, -9533.18066, 11.13450,   0.00000, 0.00000, -106.40660, -1, -1, -1, 300);
	CreateDynamicObject(8650, -110.26538, -9541.78027, 11.13450,   0.00000, 0.00000, -106.40660, -1, -1, -1, 300);
	CreateDynamicObject(3578, -93.61816, -9548.00781, 11.31470,   0.00000, 0.00000, 269.66489, -1, -1, -1, 300);
	CreateDynamicObject(981, -171.28687, -9540.19824, 11.43820,   0.00000, 0.00000, 255.31219, -1, -1, -1, 300);
	CreateDynamicObject(981, -103.12573, -9560.56152, 11.41320,   0.00000, 0.00000, 75.31220, -1, -1, -1, 300);
	CreateDynamicObject(3578, -87.66992, -9567.88379, 11.31470,   0.00000, -0.85940, 297.39890, -1, -1, -1, 300);
	CreateDynamicObject(10398, 1.61353, -9560.75781, 38.29100,   0.00000, 0.00000, 292.50000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -189.08301, -9551.24219, 9.01970,   0.00000, 0.00000, 13.60480, -1, -1, -1, 300);
	CreateDynamicObject(3458, -203.68164, -9547.65527, 9.02180,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(3458, -189.08301, -9556.50684, 9.01970,   0.00000, 0.00000, 13.60480, -1, -1, -1, 300);
	CreateDynamicObject(3578, -75.31982, -9584.53711, 11.31470,   0.00000, 0.00000, 320.75830, -1, -1, -1, 300);
	CreateDynamicObject(3458, -189.08301, -9561.76953, 9.01970,   0.00000, 0.00000, 13.60480, -1, -1, -1, 300);
	CreateDynamicObject(3458, -203.68164, -9554.88086, 9.02180,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(8171, -40.65527, -9589.83789, 10.61970,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -203.68164, -9562.12988, 9.02180,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(5001, -158.89819, -9586.95215, 12.79390,   0.00000, 0.00000, 163.51601, -1, -1, -1, 300);
	CreateDynamicObject(3458, -54.60327, -9602.44043, 9.02340,   0.00000, 0.00000, -44.92260, -1, -1, -1, 300);
	CreateDynamicObject(8171, -232.98047, -9566.89746, 10.55750,   0.00000, 0.00000, -16.40660, -1, -1, -1, 300);
	CreateDynamicObject(5001, -69.52539, -9631.38965, 12.79670,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -222.68115, -9592.14648, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -224.03931, -9592.29980, 9.79580,   0.00000, 0.00000, 80.46880, -1, -1, -1, 300);
	CreateDynamicObject(7240, -182.62573, -9614.52148, 2.19200,   0.00000, 0.00000, -281.25000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -223.07959, -9593.47168, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -237.23071, -9584.51367, 9.45410,   0.00000, 0.00000, 78.75000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -223.35352, -9594.77148, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -223.57764, -9596.09570, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -223.82666, -9597.47070, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(1237, -224.20020, -9598.79492, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -225.51636, -9602.40039, 9.79580,   0.00000, 0.00000, 83.04710, -1, -1, -1, 300);
	CreateDynamicObject(8650, 32.22949, -9642.06348, 11.50780,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -13.46338, -9655.26367, 9.09640,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -225.76636, -9612.52539, 9.79580,   0.00000, 0.00000, 94.29720, -1, -1, -1, 300);
	CreateDynamicObject(3578, -224.02124, -9622.54980, 9.79580,   0.00000, 0.00000, 105.54710, -1, -1, -1, 300);
	CreateDynamicObject(8650, -166.11011, -9651.08301, 9.46500,   0.00000, 0.00000, 179.95689, -1, -1, -1, 300);
	CreateDynamicObject(968, 7.71753, -9662.91699, 9.90030,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -166.11646, -9654.68457, 11.35130,   0.00000, 0.00000, 179.95689, -1, -1, -1, 300);
	CreateDynamicObject(8343, -214.57446, -9631.49316, 10.57650,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7416, 56.78174, -9649.10449, 10.61620,   0.00000, 0.00000, 202.50000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -220.34985, -9632.02539, 9.79580,   0.00000, 0.00000, 116.79720, -1, -1, -1, 300);
	CreateDynamicObject(3578, -215.12866, -9640.72559, 9.79580,   0.00000, 0.00000, 125.46880, -1, -1, -1, 300);
	CreateDynamicObject(8650, -158.31909, -9671.16992, 11.36160,   0.00000, 0.00000, -98.71470, -1, -1, -1, 300);
	CreateDynamicObject(3578, -208.87280, -9648.72559, 9.79580,   0.00000, 0.00000, 130.70270, -1, -1, -1, 300);
	CreateDynamicObject(3578, -160.35498, -9671.92773, 9.79580,   0.00000, 0.00000, 173.12440, -1, -1, -1, 300);
	CreateDynamicObject(3287, -22.04443, -9685.09375, 9.92020,   0.00000, 0.00000, 218.35640, -1, -1, -1, 300);
	CreateDynamicObject(3578, -164.51514, -9671.42090, 9.79580,   0.00000, 0.00000, 173.12440, -1, -1, -1, 300);
	CreateDynamicObject(3578, -201.67212, -9655.92383, 9.79580,   0.00000, 0.00000, 139.37440, -1, -1, -1, 300);
	CreateDynamicObject(3578, -174.51611, -9669.41992, 9.79580,   0.00000, 0.00000, 164.45270, -1, -1, -1, 300);
	CreateDynamicObject(3458, -36.16357, -9689.90234, 9.09000,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(3578, -193.32935, -9661.79004, 9.79580,   0.00000, 0.00000, 150.62440, -1, -1, -1, 300);
	CreateDynamicObject(3578, -184.10229, -9666.19043, 9.79580,   0.00000, 0.00000, 158.43660, -1, -1, -1, 300);
	CreateDynamicObject(8650, -34.12329, -9690.10938, 10.80690,   0.00000, 0.00000, -36.32830, -1, -1, -1, 300);
	CreateDynamicObject(3287, -18.93848, -9691.09473, 9.92020,   0.00000, 0.00000, 203.66859, -1, -1, -1, 300);
	CreateDynamicObject(1422, -33.70630, -9693.85352, 11.02900,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -30.43628, -9696.00293, 11.02900,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -36.63672, -9697.62695, 9.09000,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(1422, -27.14819, -9698.17773, 11.02900,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -17.12964, -9697.67676, 9.92020,   0.00000, 0.00000, 192.41859, -1, -1, -1, 300);
	CreateDynamicObject(3458, -33.16260, -9701.23730, 9.09130,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(3458, -35.41260, -9706.95117, 9.09500,   0.00000, 0.00000, 22.57730, -1, -1, -1, 300);
	CreateDynamicObject(3287, -16.64990, -9704.45703, 9.92020,   0.00000, 0.00000, 181.16859, -1, -1, -1, 300);
	CreateDynamicObject(8343, -225.52905, -9661.71777, 10.56520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -32.34082, -9707.57617, 9.09250,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(1422, -49.37256, -9711.34863, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -33.81226, -9710.28906, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -54.36304, -9712.62305, 10.80690,   0.00000, 0.00000, -47.57830, -1, -1, -1, 300);
	CreateDynamicObject(3458, -34.81201, -9712.25098, 9.09500,   0.00000, 0.00000, 22.57730, -1, -1, -1, 300);
	CreateDynamicObject(8343, -16.56738, -9710.70313, 10.62530,   0.00000, 0.00000, 202.50000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -46.49219, -9714.24805, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -17.85913, -9711.06738, 9.92020,   0.00000, 0.00000, 165.62140, -1, -1, -1, 300);
	CreateDynamicObject(1422, -30.91382, -9713.13965, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -43.58691, -9717.07227, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -28.08521, -9715.88770, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -64.67627, -9718.51660, 9.09000,   0.00000, 0.00000, 45.07730, -1, -1, -1, 300);
	CreateDynamicObject(3458, -35.16064, -9717.97168, 9.09500,   0.00000, 0.00000, 22.57730, -1, -1, -1, 300);
	CreateDynamicObject(3287, -20.85669, -9717.05078, 9.92020,   0.00000, 0.00000, 149.13750, -1, -1, -1, 300);
	CreateDynamicObject(3287, -60.35815, -9721.81836, 9.91650,   0.00000, 0.00000, 61.87040, -1, -1, -1, 300);
	CreateDynamicObject(3458, -72.71509, -9722.46484, 9.09250,   0.00000, 0.00000, 22.57730, -1, -1, -1, 300);
	CreateDynamicObject(3287, -163.92285, -9706.48535, 9.82180,   0.00000, 0.00000, 257.10861, -1, -1, -1, 300);
	CreateDynamicObject(3287, -56.80029, -9723.72461, 9.92020,   0.00000, 0.00000, 61.87040, -1, -1, -1, 300);
	CreateDynamicObject(3287, -157.68408, -9709.07715, 9.82180,   0.00000, 0.00000, 244.13969, -1, -1, -1, 300);
	CreateDynamicObject(8343, -150.93970, -9711.36719, 10.55380,   0.00000, 0.00000, -93.43770, -1, -1, -1, 300);
	CreateDynamicObject(8343, -153.02417, -9711.36719, 10.55880,   0.00000, 0.00000, -93.43770, -1, -1, -1, 300);
	CreateDynamicObject(3287, -170.61670, -9705.30078, 9.82180,   0.00000, 0.00000, 268.35849, -1, -1, -1, 300);
	CreateDynamicObject(3287, -25.35840, -9722.07910, 9.92020,   0.00000, 0.00000, 134.44980, -1, -1, -1, 300);
	CreateDynamicObject(3287, -152.42334, -9713.17480, 9.82180,   0.00000, 0.00000, 227.73309, -1, -1, -1, 300);
	CreateDynamicObject(3287, -50.67041, -9726.58984, 9.92020,   0.00000, 0.00000, 73.12050, -1, -1, -1, 300);
	CreateDynamicObject(3287, -177.54858, -9705.10645, 9.73430,   2.75020, 0.00000, 268.35849, -1, -1, -1, 300);
	CreateDynamicObject(3287, -31.01099, -9725.73633, 9.92020,   0.00000, 0.00000, 118.90250, -1, -1, -1, 300);
	CreateDynamicObject(3458, -72.10327, -9727.76367, 9.09250,   0.00000, 0.00000, 22.57730, -1, -1, -1, 300);
	CreateDynamicObject(3287, -44.11572, -9728.08594, 9.92020,   0.00000, 0.00000, 88.66760, -1, -1, -1, 300);
	CreateDynamicObject(8650, -79.60010, -9728.67383, 10.80690,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -37.41138, -9727.77148, 9.92020,   0.00000, 0.00000, 103.35530, -1, -1, -1, 300);
	CreateDynamicObject(3287, -148.50952, -9718.60352, 9.82180,   0.00000, 0.00000, 211.24910, -1, -1, -1, 300);
	CreateDynamicObject(4601, 0.51953, -9720.70508, 50.03680,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -146.15479, -9724.91211, 9.82180,   0.00000, 0.00000, 196.63860, -1, -1, -1, 300);
	CreateDynamicObject(978, -92.82178, -9735.23828, 11.26590,   0.00000, 0.00000, -146.25000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -156.12280, -9747.03125, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -145.39648, -9731.63281, 9.82180,   0.00000, 0.00000, 182.73300, -1, -1, -1, 300);
	CreateDynamicObject(5001, -134.04883, -9736.10156, 13.35930,   0.00000, 0.00000, 78.75000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -107.66260, -9741.33203, 9.02750,   0.00000, 0.00000, 34.00780, -1, -1, -1, 300);
	CreateDynamicObject(8650, -103.97656, -9745.54883, 10.80690,   0.00000, 0.00000, -43.10920, -1, -1, -1, 300);
	CreateDynamicObject(3287, -146.43140, -9738.29980, 9.82180,   0.00000, 0.00000, 167.26300, -1, -1, -1, 300);
	CreateDynamicObject(7586, -168.91162, -9732.33008, 16.93310,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -145.78735, -9745.02344, 9.79030,   0.00000, 0.00000, 239.76500, -1, -1, -1, 300);
	CreateDynamicObject(3287, -149.30640, -9744.33691, 9.82180,   0.00000, 0.00000, 149.99699, -1, -1, -1, 300);
	CreateDynamicObject(3578, -146.68384, -9745.74902, 9.79030,   0.00000, 0.00000, 239.76500, -1, -1, -1, 300);
	CreateDynamicObject(7416, 1.67114, -9751.53613, 10.61210,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(968, -49.59937, -9760.80469, 9.79620,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -55.86670, -9761.08398, 9.81490,   0.00000, 0.00000, 281.71381, -1, -1, -1, 300);
	CreateDynamicObject(968, -49.45142, -9760.82910, 9.79620,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -59.76514, -9761.89063, 9.82110,   0.00000, 0.00000, 281.71381, -1, -1, -1, 300);
	CreateDynamicObject(3287, -153.71069, -9749.45117, 9.82180,   0.00000, 0.00000, 135.30920, -1, -1, -1, 300);
	CreateDynamicObject(3287, -66.25220, -9763.70117, 9.82110,   0.00000, 0.00000, 296.40161, -1, -1, -1, 300);
	CreateDynamicObject(1422, -46.03247, -9764.26855, 11.03620,   0.00000, 0.00000, -33.75000, -1, -1, -1, 300);
	CreateDynamicObject(1422, -42.63208, -9766.09473, 11.03620,   0.00000, 0.00000, -22.42260, -1, -1, -1, 300);
	CreateDynamicObject(3287, -72.10376, -9767.10547, 9.82110,   0.00000, 0.00000, 310.22989, -1, -1, -1, 300);
	CreateDynamicObject(1422, -38.63501, -9766.99512, 11.03620,   0.00000, 0.00000, -2.50100, -1, -1, -1, 300);
	CreateDynamicObject(3287, -159.26904, -9753.27148, 9.82180,   0.00000, 0.00000, 120.62140, -1, -1, -1, 300);
	CreateDynamicObject(3287, -76.93042, -9771.80371, 9.82110,   0.00000, 0.00000, 324.91760, -1, -1, -1, 300);
	CreateDynamicObject(3287, -165.56250, -9755.47461, 9.82180,   0.00000, 0.00000, 105.07430, -1, -1, -1, 300);
	CreateDynamicObject(3287, -172.26831, -9755.95508, 9.59030,   -2.86480, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -80.35815, -9777.56445, 9.82110,   0.00000, 0.00000, 342.18359, -1, -1, -1, 300);
	CreateDynamicObject(8343, -83.52832, -9778.97656, 10.62570,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -81.95728, -9784.07031, 9.82110,   0.00000, 0.00000, 357.73071, -1, -1, -1, 300);
	CreateDynamicObject(7416, -89.29370, -9788.41211, 10.54330,   0.00000, 0.00000, 202.50000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -81.80591, -9790.83594, 9.82110,   0.00000, 0.00000, 11.63650, -1, -1, -1, 300);
	CreateDynamicObject(3287, -81.23999, -9793.57422, 9.81610,   0.00000, 0.00000, 11.63650, -1, -1, -1, 300);
	CreateDynamicObject(4572, -59.07642, -9793.89648, 40.73540,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -119.92188, -9792.76465, 10.87370,   0.00000, -0.85940, 278.85229, -1, -1, -1, 300);
	CreateDynamicObject(1223, -124.01001, -9800.16992, 16.87230,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1223, -130.62158, -9803.11328, 16.87230,   0.00000, 0.00000, 146.25000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -113.21655, -9812.09570, 10.62700,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -152.09351, -9812.36621, 10.55760,   0.00000, 0.00000, -19.06220, -1, -1, -1, 300);
	CreateDynamicObject(8344, -169.84741, -9811.91016, 10.56980,   0.00000, 0.00000, -416.25009, -1, -1, -1, 300);
	CreateDynamicObject(8650, -63.37500, -9840.15820, 11.43450,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8650, -61.13159, -9845.55859, 11.43450,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(14560, -177.95923, -9821.47656, 14.03860,   0.00000, 0.00000, -19.44900, -1, -1, -1, 300);
	CreateDynamicObject(8650, -98.38013, -9847.92480, 10.62540,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -77.26611, -9856.99121, 10.61170,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(4600, -123.68921, -9870.17773, 5.38450,   0.00000, 0.00000, -247.50000, -1, -1, -1, 300);
	CreateDynamicObject(4242, -219.90161, -9826.37891, 10.54400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5001, -10.94287, -9906.38086, 13.42610,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -23.16797, -9924.42285, 10.61700,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -69.37622, -9921.51758, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 300);
	CreateDynamicObject(3458, -62.86279, -9924.54102, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -68.47974, -9924.01758, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 300);
	CreateDynamicObject(1435, -67.60815, -9926.44336, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 300);
	CreateDynamicObject(1223, -73.06201, -9926.00781, 10.54810,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -66.80737, -9928.81543, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 300);
	CreateDynamicObject(1223, -191.54526, -9887.26367, 10.43160,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -64.63501, -9934.19238, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 300);
	CreateDynamicObject(3458, -90.30688, -9930.34570, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -63.81323, -9936.34180, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 300);
	CreateDynamicObject(3287, -187.32886, -9890.82422, 9.76760,   2.75020, 0.00000, 231.17081, -1, -1, -1, 300);
	CreateDynamicObject(1435, -63.09106, -9938.46484, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 300);
	CreateDynamicObject(3287, -182.16040, -9895.39258, 9.83760,   0.00000, 0.00000, 227.73300, -1, -1, -1, 300);
	CreateDynamicObject(1435, -62.26245, -9940.71484, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 300);
	CreateDynamicObject(3287, -177.49536, -9900.48730, 9.83760,   0.00000, 0.00000, 220.85750, -1, -1, -1, 300);
	CreateDynamicObject(3287, -173.83203, -9906.25879, 9.83760,   0.00000, 0.00000, 209.60741, -1, -1, -1, 300);
	CreateDynamicObject(1435, -59.36108, -9946.49121, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 300);
	CreateDynamicObject(4847, 32.38428, -9945.07617, 1.31491,   0.00000, 0.00000, -247.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -58.31519, -9948.51758, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 300);
	CreateDynamicObject(4847, 73.11426, -9936.19531, 1.36121,   0.00000, 0.00000, -247.50000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -100.18262, -9940.00488, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -133.01660, -9928.48047, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 300);
	CreateDynamicObject(1435, -57.21948, -9950.51758, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 300);
	CreateDynamicObject(4847, 54.38428, -9944.37598, 1.33871,   0.00000, 0.00000, -247.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -133.43994, -9930.50391, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 300);
	CreateDynamicObject(1435, -56.12378, -9952.62012, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 300);
	CreateDynamicObject(3287, -171.81128, -9912.67480, 9.83760,   0.00000, 0.00000, 193.12360, -1, -1, -1, 300);
	CreateDynamicObject(8343, -170.54077, -9913.52148, 10.57230,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -133.88818, -9932.55273, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 300);
	CreateDynamicObject(1435, -134.33643, -9934.57031, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 300);
	CreateDynamicObject(1435, -52.69946, -9957.29492, 10.71500,   0.00000, 0.00000, 129.68871, -1, -1, -1, 300);
	CreateDynamicObject(3458, -67.63184, -9955.99219, 9.08870,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -51.28003, -9958.96875, 10.71500,   0.00000, 0.00000, 129.68871, -1, -1, -1, 300);
	CreateDynamicObject(979, 15.04541, -9959.18555, 11.18220,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(979, 15.04541, -9959.18555, 12.00720,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -135.18311, -9937.80078, 10.65830,   0.00000, 0.00000, 69.06420, -1, -1, -1, 300);
	CreateDynamicObject(3287, -171.69116, -9919.38965, 9.83760,   0.00000, 0.00000, 176.63969, -1, -1, -1, 300);
	CreateDynamicObject(1435, -49.81079, -9960.66699, 10.71500,   0.00000, 0.00000, 129.68871, -1, -1, -1, 300);
	CreateDynamicObject(1435, -48.38354, -9962.36719, 10.71500,   0.00000, 0.00000, 133.98590, -1, -1, -1, 300);
	CreateDynamicObject(1435, -136.02979, -9939.72949, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 300);
	CreateDynamicObject(1223, -132.23413, -9942.45801, 10.53180,   0.00000, 0.00000, 168.75000, -1, -1, -1, 300);
	CreateDynamicObject(1223, -59.73804, -9964.00488, 10.58960,   0.00000, 0.00000, 112.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -136.97607, -9941.60254, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 300);
	CreateDynamicObject(3458, -128.51294, -9946.21484, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -137.87256, -9943.49512, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 300);
	CreateDynamicObject(3458, -53.84961, -9968.62988, 9.08250,   0.00000, 0.00000, -156.03880, -1, -1, -1, 300);
	CreateDynamicObject(3287, -173.44409, -9925.90039, 9.83760,   0.00000, 0.00000, 161.09250, -1, -1, -1, 300);
	CreateDynamicObject(1435, -138.79395, -9945.41309, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 300);
	CreateDynamicObject(3458, -53.84961, -9974.13184, 9.08250,   0.00000, 0.00000, -156.03880, -1, -1, -1, 300);
	CreateDynamicObject(1435, -140.22021, -9948.44043, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 300);
	CreateDynamicObject(7586, -194.84302, -9916.72754, 16.95810,   0.00000, 0.00000, 101.25000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -141.24121, -9950.25879, 10.65830,   0.00000, 0.00000, 59.61040, -1, -1, -1, 300);
	CreateDynamicObject(3287, -176.96826, -9931.57813, 9.83760,   0.00000, 0.00000, 143.74910, -1, -1, -1, 300);
	CreateDynamicObject(1435, -142.36182, -9951.85938, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(3458, -137.50415, -9955.45898, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -143.53906, -9953.36035, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(3458, -115.65552, -9965.49902, 9.02930,   0.00000, 0.00000, -67.50000, -1, -1, -1, 300);
	CreateDynamicObject(1231, -193.51294, -9924.66211, 15.79020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1435, -144.60986, -9954.77930, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(1435, -146.42773, -9957.02051, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(3287, -181.85425, -9936.19727, 9.83760,   0.00000, 0.00000, 129.92081, -1, -1, -1, 300);
	CreateDynamicObject(1435, -147.52344, -9958.44043, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(1435, -148.61914, -9959.85938, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(1435, -149.76465, -9961.29199, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 300);
	CreateDynamicObject(8344, -32.77319, -9996.09473, 10.60180,   0.00000, 0.00000, -191.25000, -1, -1, -1, 300);
	CreateDynamicObject(3287, -187.67749, -9939.75781, 9.83760,   0.00000, 0.00000, 118.67080, -1, -1, -1, 300);
	CreateDynamicObject(1223, -108.61670, -9982.74609, 10.54560,   0.00000, 0.00000, 281.25000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -182.46362, -9947.33301, 10.55580,   0.00000, 0.00000, -19.06220, -1, -1, -1, 300);
	CreateDynamicObject(3458, -75.50562, -9995.60449, 9.08870,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(978, -155.71484, -9965.77734, 11.41260,   0.00000, 0.00000, 29.45280, -1, -1, -1, 300);
	CreateDynamicObject(3287, -194.06055, -9942.11719, 9.83760,   0.00000, 0.00000, 107.42080, -1, -1, -1, 300);
	CreateDynamicObject(9582, -48.47095, -10004.13672, 19.35380,   0.00000, 0.00000, 63.20280, -1, -1, -1, 300);
	CreateDynamicObject(978, -161.77124, -9969.20215, 11.41260,   0.00000, 0.00000, 29.45280, -1, -1, -1, 300);
	CreateDynamicObject(3287, -200.73657, -9943.32031, 9.59390,   -2.86480, 0.00000, 97.73490, -1, -1, -1, 300);
	CreateDynamicObject(978, -167.83228, -9972.62695, 11.41260,   0.00000, 0.00000, 29.45280, -1, -1, -1, 300);
	CreateDynamicObject(1223, -101.14038, -10010.57520, 10.59620,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -85.78931, -10019.38770, 9.08000,   0.00000, 0.00000, -38.04710, -1, -1, -1, 300);
	CreateDynamicObject(13562, 8.70386, -10027.07520, 7.99180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -88.95215, -10023.41113, 9.08000,   0.00000, 0.00000, -38.04710, -1, -1, -1, 300);
	CreateDynamicObject(3458, -67.31421, -10027.31152, 9.08870,   0.00000, 0.00000, -38.04710, -1, -1, -1, 300);
	CreateDynamicObject(5005, 4.17041, -10034.17871, 14.10450,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -39.36401, -10042.70996, 9.07120,   0.00000, 0.00000, -38.04710, -1, -1, -1, 300);
	CreateDynamicObject(3458, -54.78931, -10043.58398, 9.07120,   0.00000, 0.00000, -38.04710, -1, -1, -1, 300);
	CreateDynamicObject(1435, -38.14722, -10046.33203, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 300);
	CreateDynamicObject(1435, -38.52075, -10048.65234, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 300);
	CreateDynamicObject(3458, -39.36401, -10049.18359, 9.07120,   0.00000, 0.00000, -38.04710, -1, -1, -1, 300);
	CreateDynamicObject(1223, -42.64648, -10049.89844, 10.58750,   0.00000, 0.00000, 315.00009, -1, -1, -1, 300);
	CreateDynamicObject(1435, -38.96899, -10050.90137, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 300);
	CreateDynamicObject(1435, -39.31763, -10053.17578, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 300);
	CreateDynamicObject(1435, -39.74097, -10055.54883, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 300);
	CreateDynamicObject(3578, -41.22021, -10063.44629, 10.66810,   0.00000, 0.00000, -100.69130, -1, -1, -1, 300);
	CreateDynamicObject(8171, -22.52051, -10068.49121, 10.58780,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(7505, -197.69287, -10050.56055, 12.08270,   0.00000, 0.00000, -109.06220, -1, -1, -1, 300);
	CreateDynamicObject(5005, -1.90527, -10064.82813, 14.10450,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -43.19434, -10073.57227, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -45.22021, -10083.69824, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -124.39136, -10090.81152, 1.28290,   0.00000, 0.00000, -146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -47.24023, -10093.80762, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -49.26758, -10103.91602, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -227.10376, -10076.49219, 10.55490,   0.00000, 0.00000, -19.06220, -1, -1, -1, 300);
	CreateDynamicObject(3578, -51.29590, -10114.02246, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(18273, 45.57959, -10088.05957, 31.65850,   0.00000, 0.00000, -101.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -53.37451, -10124.13477, 10.75280,   0.00000, -0.85940, 258.14859, -1, -1, -1, 300);
	CreateDynamicObject(3578, -56.46484, -10133.97266, 10.90280,   0.00000, -0.85940, 246.89861, -1, -1, -1, 300);
	CreateDynamicObject(18271, -92.37524, -10138.45313, 32.25040,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, -68.10693, -10142.91309, 10.59010,   0.00000, 0.00000, -236.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -61.87207, -10142.69336, 11.05400,   0.00000, -0.85940, 229.55510, -1, -1, -1, 300);
	CreateDynamicObject(7505, -219.14868, -10112.66016, 12.08270,   0.00000, 0.00000, -109.06220, -1, -1, -1, 300);
	CreateDynamicObject(3877, -18.49170, -10146.64453, 12.17840,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(3877, -17.93115, -10146.75391, 12.17840,   0.00000, 0.00000, -11.25000, -1, -1, -1, 300);
	CreateDynamicObject(981, -24.08500, -10162.77930, 11.41370,   0.00000, 0.00000, -124.00000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -80.84546, -10181.03809, 1.28410,   0.00000, 0.00000, -326.25000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -50.96411, -10195.31738, 1.28660,   0.00000, 0.00000, -326.25000, -1, -1, -1, 300);
	CreateDynamicObject(7505, -131.86426, -10191.03027, 12.08310,   0.00000, 0.00000, -146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -260.35229, -10117.84473, 11.50600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -260.35229, -10117.84473, 12.33100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3534, -260.35229, -10117.84473, 13.15600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -87.91528, -10210.33789, 1.28790,   0.00000, 0.00000, -326.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -262.40918, -10123.66895, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(4847, -46.80981, -10216.91797, 1.28790,   0.00000, 0.00000, -326.25000, -1, -1, -1, 300);
	CreateDynamicObject(4847, -51.80981, -10243.66797, 1.29661,   0.00000, 0.00000, -326.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -265.87842, -10133.51465, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(8171, -147.93188, -10225.26855, 10.56780,   0.00000, 0.00000, -56.25000, -1, -1, -1, 300);
	CreateDynamicObject(18269, -122.13477, -10243.71191, 31.90650,   0.00000, 0.00000, 77.89060, -1, -1, -1, 300);
	CreateDynamicObject(7505, -179.93945, -10223.15527, 12.08310,   0.00000, 0.00000, -146.25000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -269.28076, -10143.41309, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(3578, -272.65234, -10153.30957, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(3578, -276.07471, -10163.20508, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(18268, -219.89502, -10233.48438, 31.55600,   0.00000, 0.85940, 28.43870, -1, -1, -1, 300);
	CreateDynamicObject(8171, -265.55371, -10187.88965, 10.55240,   0.00000, 0.00000, -19.06220, -1, -1, -1, 300);
	CreateDynamicObject(1319, -169.82080, -10279.25000, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1319, -174.78711, -10277.37598, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1319, -179.67065, -10276.49219, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16302, -171.15332, -10282.84180, 14.54690,   4.29720, 0.85940, 50.80120, -1, -1, -1, 300);
	CreateDynamicObject(3578, -279.47510, -10173.17578, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(1319, -184.41235, -10276.55859, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3578, -282.84961, -10183.04883, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 300);
	CreateDynamicObject(16302, -177.79126, -10295.53613, 13.27020,   7.73490, 0.85940, -27.94880, -1, -1, -1, 300);
	CreateDynamicObject(16302, -190.17261, -10301.64258, 13.79690,   -6.01610, 5.15660, -4.58940, -1, -1, -1, 300);
	CreateDynamicObject(7505, -244.32227, -10265.43066, 12.08310,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, -207.10181, -10303.79199, 10.57430,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(8171, -263.46558, -10253.51563, 10.56170,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4898, -232.92212, -10354.91602, 10.40490,   0.04300, 0.21490, 39.76600, -1, -1, -1, 300);
	CreateDynamicObject(8343, -194.09644, -10385.00391, 10.56370,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(4028, -226.44800, -10371.89258, 23.64509,   0.00000, 0.00000, 109.06220, -1, -1, -1, 300);
	CreateDynamicObject(7505, -234.78607, -10041.11816, 12.03510,   0.00000, 0.00000, 71.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -208.27930, -10401.82227, 9.33640,   0.00000, 0.00000, -71.87450, -1, -1, -1, 300);
	CreateDynamicObject(968, -208.30493, -10401.97852, 9.33640,   0.00000, 0.00000, -161.87450, -1, -1, -1, 300);
	CreateDynamicObject(8344, -239.33203, -10387.06641, 10.56620,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(968, -221.26221, -10406.27344, 9.33640,   0.00000, 0.00000, -71.87450, -1, -1, -1, 300);
	CreateDynamicObject(968, -221.13623, -10406.37500, 9.83640,   0.00000, 0.00000, 18.12550, -1, -1, -1, 300);
	CreateDynamicObject(982, -197.33720, -8414.17090, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -222.92458, -8414.16113, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -248.51427, -8414.14551, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, -264.22729, -8414.13477, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -270.54071, -8351.22266, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -270.54309, -8225.31641, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -270.53275, -8099.36426, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -270.52853, -7973.45215, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -270.51550, -7847.55908, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, -270.15979, -7782.86963, 11.17710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -282.93314, -10324.71094, 13.55690,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -282.93311, -10245.86816, 13.55690,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, -207.61693, -9962.13281, 11.11880,   0.00000, 0.00000, -19.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, -203.44582, -9950.08008, 11.11880,   0.00000, 0.00000, -19.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, -199.27866, -9937.99512, 11.11880,   0.00000, 0.00000, -19.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -150.89235, -9738.40234, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -149.76819, -9728.45605, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -154.65834, -9719.80469, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -162.71274, -9713.83984, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1568, -165.22466, -9750.99805, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -212.58311, -9794.58691, 13.11060,   0.00000, 0.00000, -129.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -219.54803, -9846.51172, 13.11060,   0.00000, 0.00000, -75.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -128.07419, -9943.25195, 10.47730,   0.00000, 0.00000, -69.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -123.84316, -9954.29492, 10.47730,   0.00000, 0.00000, -15.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -73.53104, -9933.34863, 10.47730,   0.00000, 0.00000, 112.60000, -1, -1, -1, 300);
	CreateDynamicObject(987, -69.36620, -9982.45703, 10.47730,   0.00000, 0.00000, 143.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -235.21381, -9698.69922, 13.11060,   0.00000, 0.00000, -22.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -242.46928, -9695.49707, 10.46420,   0.00000, 0.00000, 143.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -251.96576, -9688.29883, 10.46420,   0.00000, 0.00000, 133.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -260.09723, -9679.54688, 10.46420,   0.00000, 0.00000, 123.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -269.35117, -9657.32715, 11.18840,   0.00000, 0.00000, 14.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -270.42740, -9632.28711, 11.18840,   0.00000, 0.00000, -9.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -250.70764, -9559.28711, 13.11060,   0.00000, 0.00000, -106.64000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -214.63646, -9438.63086, 13.11060,   0.00000, 0.00000, -106.64000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -132.96724, -9511.59766, 13.10060,   0.00000, 0.00000, 51.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -159.75317, -9526.31836, 10.40550,   0.00000, 0.00000, -21.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -241.54593, -9422.27441, 13.11060,   0.00000, 0.00000, 44.00000, -1, -1, -1, 300);
	CreateDynamicObject(10844, -203.19893, -9325.25684, 13.42760,   0.00000, 0.00000, -16.40660, -1, -1, -1, 300);
	CreateDynamicObject(11089, -189.39154, -9325.28906, 19.50000,   0.00000, 0.00000, 73.74000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -196.22644, -9220.55078, 13.11060,   0.00000, 0.00000, -82.14000, -1, -1, -1, 300);
	CreateDynamicObject(981, -196.55806, -9357.00391, 11.43610,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(981, -188.62781, -9300.58887, 11.43610,   0.00000, 0.00000, 89.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -213.42914, -9095.91895, 13.11060,   0.00000, 0.00000, -82.14000, -1, -1, -1, 300);
	CreateDynamicObject(982, -223.37021, -9021.06250, 11.17650,   0.00000, 0.00000, 7.78000, -1, -1, -1, 300);
	CreateDynamicObject(982, -225.98576, -8995.61621, 11.17650,   0.00000, 0.00000, 4.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -227.32407, -8970.06934, 11.17650,   0.00000, 0.00000, 2.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, -229.32327, -8954.49902, 11.17650,   0.00000, 0.00000, 29.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -229.60742, -8888.80176, 13.11060,   0.00000, 0.00000, -91.50000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -226.31186, -8763.07129, 13.11060,   0.00000, 0.00000, -91.50000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -206.58394, -8624.98828, 13.11060,   0.00000, 0.00000, -91.74000, -1, -1, -1, 300);
	CreateDynamicObject(984, -224.10144, -8693.80371, 11.17510,   0.00000, 0.00000, -1.76000, -1, -1, -1, 300);
	CreateDynamicObject(984, -217.52136, -8687.62500, 11.17510,   0.00000, 0.00000, 88.30000, -1, -1, -1, 300);
	CreateDynamicObject(984, -214.52809, -8687.71191, 11.17510,   0.00000, 0.00000, 88.30000, -1, -1, -1, 300);
	CreateDynamicObject(984, -204.18941, -8556.11328, 11.14930,   0.00000, 0.00000, -1.70000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -187.06917, -8487.30859, 13.11060,   0.00000, 0.00000, -91.74000, -1, -1, -1, 300);
	CreateDynamicObject(984, -197.60669, -8549.95020, 11.14930,   0.00000, 0.00000, 88.16000, -1, -1, -1, 300);
	CreateDynamicObject(984, -195.01190, -8550.02637, 11.14930,   0.00000, 0.00000, 88.16000, -1, -1, -1, 300);
	CreateDynamicObject(984, -184.71390, -8420.55566, 11.21250,   0.00000, 0.00000, -1.56000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -190.31149, -8348.62402, 10.63280,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -190.30630, -8368.16016, 10.63280,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -190.29840, -8390.54199, 10.63280,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -173.50140, -8309.53418, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -157.32162, -8309.53418, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -172.80148, -8221.20508, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -158.24370, -8221.20508, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -173.20113, -8095.64893, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8843, -157.11900, -8095.64893, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -172.95869, -7969.82129, 10.57740,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(16092, -157.81619, -7969.82129, 10.57740,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -173.02090, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -176.02699, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -170.03191, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -157.88220, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -160.88640, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, -154.88139, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -194.36925, -10278.04199, 11.35550,   0.00000, 0.00000, 38.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -201.88889, -10285.73730, 11.35550,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -206.18884, -10295.35840, 11.35550,   0.00000, 0.00000, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -206.30544, -10306.51367, 11.35550,   0.00000, 0.00000, 101.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -201.85785, -10316.42969, 11.35550,   0.00000, 0.00000, 127.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -194.13443, -10325.19238, 11.35550,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -185.94543, -10333.46289, 11.35550,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -177.62881, -10341.82520, 11.35550,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -169.98466, -10350.62109, 11.35550,   0.00000, 0.00000, 129.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -161.60759, -10368.43359, 11.17670,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -158.80266, -10395.00488, 11.17670,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -167.23653, -10420.24219, 11.17670,   0.00000, 0.00000, -31.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -185.53198, -10439.22461, 11.17670,   0.00000, 0.00000, -57.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -210.27292, -10448.57227, 11.17670,   0.00000, 0.00000, -81.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -236.68385, -10446.89355, 11.17670,   0.00000, 0.00000, -106.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -259.99799, -10434.26367, 11.17670,   0.00000, 0.00000, -130.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -275.92401, -10413.18359, 11.17670,   0.00000, 0.00000, -155.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -282.50671, -10387.30859, 11.17670,   0.00000, 0.00000, -176.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -184.66251, -7771.77441, 11.38920,   0.00000, 0.00000, -97.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -182.25221, -7752.90234, 11.21790,   0.00000, 0.00000, -8.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -178.95288, -7733.86523, 11.38920,   0.00000, 0.00000, -101.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -174.17117, -7715.21973, 11.21790,   0.00000, 0.00000, -16.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -168.01826, -7696.84521, 11.38920,   0.00000, 0.00000, -110.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -160.09610, -7679.19971, 11.21790,   0.00000, 0.00000, -25.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -151.08893, -7662.47754, 11.38920,   0.00000, 0.00000, -124.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -140.26682, -7646.76025, 11.21790,   0.00000, 0.00000, -35.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -128.29749, -7631.24023, 11.38920,   0.00000, 0.00000, -132.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -115.13449, -7617.74707, 11.21790,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -101.30943, -7604.63623, 11.38920,   0.00000, 0.00000, -140.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -86.35761, -7593.40625, 11.21790,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -70.54841, -7582.68750, 11.38920,   0.00000, 0.00000, -147.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -54.11820, -7574.33594, 11.21790,   0.00000, 0.00000, -65.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, -36.71959, -7566.61230, 11.38920,   0.00000, 0.00000, -157.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, -18.47830, -7560.68115, 11.21790,   0.00000, 0.00000, -73.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 0.27510, -7555.86719, 11.38920,   0.00000, 0.00000, -168.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 19.00566, -7552.77637, 11.21790,   0.00000, 0.00000, -82.00000, -1, -1, -1, 300);
	CreateDynamicObject(978, 38.20190, -7550.66797, 11.38920,   0.00000, 0.00000, -176.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 190.03548, -7553.96387, 11.25630,   0.00000, 0.00000, 77.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 216.12904, -7562.25391, 11.25630,   0.00000, 0.00000, 68.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 240.46071, -7574.63428, 11.25630,   0.00000, 0.00000, 58.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 261.56329, -7591.51514, 11.25630,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 279.63159, -7612.00049, 11.25630,   0.00000, 0.00000, 38.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 293.33948, -7635.40430, 11.25630,   0.00000, 0.00000, 23.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 302.87805, -7660.82422, 11.25630,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 307.22144, -7687.24658, 11.25630,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 306.78787, -7714.34912, 11.25630,   0.00000, 0.00000, -3.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 301.51627, -7740.67773, 11.25630,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 291.63034, -7765.87402, 11.25630,   0.00000, 0.00000, -23.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -184.39622, -7766.40967, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -180.45010, -7739.25635, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -178.17807, -7728.36426, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -170.37885, -7702.12793, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -166.05643, -7691.44336, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -154.37675, -7666.93408, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -148.27019, -7657.70996, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -132.43652, -7635.45361, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -124.80443, -7627.12646, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -105.75685, -7608.02832, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -97.43671, -7600.99463, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -75.32433, -7585.60059, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -66.16747, -7579.72412, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -41.94448, -7568.54102, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -31.60202, -7564.32568, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -5.45395, -7556.71924, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 5.64367, -7554.48193, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 32.60518, -7550.66992, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 176.38556, -7550.71680, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 203.41791, -7557.01270, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 228.92487, -7567.20557, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 252.05467, -7581.75830, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 271.32861, -7601.10352, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 288.06274, -7622.73633, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 298.81369, -7647.86328, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 307.11444, -7673.70898, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 307.58069, -7700.81543, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 306.20093, -7727.93896, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, 296.98697, -7753.45020, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -188.17336, -10274.72754, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -198.48392, -10281.64063, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -204.67003, -10290.26367, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -206.90436, -10300.87402, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -204.80284, -10311.75391, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -198.05515, -10320.77539, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -189.89670, -10329.12012, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -181.57579, -10337.37109, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -173.48044, -10345.92676, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -166.10907, -10355.06543, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -157.32486, -10381.47559, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -160.20348, -10408.56934, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -174.18536, -10431.87598, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -196.88620, -10446.62695, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -223.68282, -10450.73340, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -249.72200, -10443.14160, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -270.26361, -10425.46680, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(711, -281.70615, -10400.90723, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -177.88777, -9821.63574, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -166.67856, -9825.69629, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -155.46432, -9829.76660, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -144.25182, -9833.84277, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(7983, 15.27810, -7685.50098, 34.52650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 300);
	CreateDynamicObject(7983, 15.26810, -7685.51123, 35.02650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 300);
	CreateDynamicObject(7983, 174.51080, -7681.70654, 35.06860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 300);
	CreateDynamicObject(987, -12.67770, -8161.56201, 10.43630,   0.00000, 0.00000, 99.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 5.64663, -7773.55176, 10.44960,   0.00000, 0.00000, -84.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -55.01406, -10040.45117, 10.57620,   0.00000, 0.00000, 5.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, -51.16256, -10051.83496, 10.57620,   0.00000, 0.00000, 109.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -244.41844, -10248.45898, 13.55690,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -244.40089, -10279.59863, 13.55690,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, -192.34550, -10231.47852, 13.55690,   0.00000, 0.00000, 213.75999, -1, -1, -1, 300);
	CreateDynamicObject(8150, -86.33410, -9274.60059, 21.59340,   0.00000, 5.73000, -90.00000, -1, -1, -1, 300);
//дрифт трасса 13 (конец)

//дрифт трасса 14 (начало)
	ObjGam[38] = CreateObject(8355, 3099.72949, -8963.65430, 32.98700,   0.00000, 0.00000, 90.00000);

	CreateDynamicObject(8650, 2939.55078, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2923.35083, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2909.08496, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2961.42871, -8963.60449, 32.98700,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 2918.75952, -8999.64355, 26.87620,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2970.01904, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(16599, 2965.42017, -8984.01172, 32.49700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2893.13257, -8983.10352, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2919.81055, -9003.32324, 17.58740,   341.99899, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2948.31934, -9003.33691, 8.32900,   341.99899, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 2975.69824, -8952.82031, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2878.60059, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, 2877.36621, -8955.30078, 22.65680,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2981.16748, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2893.05005, -9003.30664, 26.27730,   341.99899, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, 2877.36621, -8975.83008, 22.65680,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(656, 2875.63452, -8994.51465, 37.56910,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16599, 2877.54053, -8984.01270, 32.49700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10308, 2942.17773, -8982.36426, -23.44090,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 2975.69824, -8929.23145, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2871.22852, -8970.90234, 3.02050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2871.22754, -8940.42383, 3.02050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2944.24609, -9023.60449, 8.88290,   341.99899, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3000.41504, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2950.92603, -9023.60547, 7.09290,   348.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 2975.69824, -8904.79590, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2957.75684, -9023.60547, 6.01110,   354.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2964.66309, -9023.60547, 5.64910,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(18228, 2915.96997, -8896.30957, -9.10840,   0.00000, 0.00000, 237.99699, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2870.81055, -8956.89063, -16.34210,   90.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2871.22852, -9001.40918, 3.02050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8565, 2852.74023, -8941.54883, 25.29990,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 2862.32935, -8920.72461, 11.74960,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8565, 2852.74023, -8941.50000, 14.16749,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2848.14844, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3011.54980, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2875.76172, -9023.57227, 29.34600,   13.99699, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2870.92505, -9023.57227, 30.32700,   10.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8555, 2890.78809, -8885.48633, 7.43730,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3013.80176, -8938.50586, 5.67410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2865.99487, -9023.57227, 31.01430,   6.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 2975.69824, -8878.05957, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2861.10278, -9023.57227, 31.33930,   2.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2842.22510, -8994.47559, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2870.81055, -9015.90430, -16.34210,   90.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 2844.07959, -8920.84961, 11.73730,   0.00000, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -8910.45020, 1.90240,   359.99500, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16599, 2831.77832, -8943.41797, 32.49700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3030.87061, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, 2832.88770, -8932.98633, 32.13410,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -8903.54395, 2.34400,   3.99700, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31836, -8954.58887, 8.01560,   0.00000, 180.50000, 269.99799, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2870.83594, -9027.21582, -16.34210,   90.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -8896.71289, 3.29550,   7.99700, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2823.21680, -8963.67969, 32.98700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, 2832.88770, -8911.92969, 23.53180,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3042.00195, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31836, -8978.79004, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3041.97339, -8956.62305, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 2975.69824, -8851.13477, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3041.97339, -8988.07617, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2814.62598, -8941.26855, 31.29740,   3.99900, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2814.62695, -8936.33398, 30.77240,   8.00000, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31836, -9018.27734, 7.49060,   0.00000, 180.50000, 269.99500, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3041.97339, -8925.32227, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, 2832.88770, -8890.70313, 19.82100,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -9048.74805, 1.90240,   359.99500, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31836, -9029.66211, 7.41560,   0.00000, 180.50000, 269.99500, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3041.97339, -9021.84082, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31836, -9018.32617, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2842.22559, -9052.33594, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2842.22559, -9052.33594, 23.92420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2842.22559, -9052.33594, 14.09150,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2842.20068, -9052.28613, 12.14210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3061.23682, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.24316, -9029.83789, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3041.97339, -8893.77930, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4571, 2889.37354, -9074.30664, -25.14710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2871.28516, -8833.43359, 17.21710,   348.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3072.46460, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3330, 3082.50928, -8963.80859, 22.66980,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82373, -9085.44141, 2.81530,   5.99200, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -8830.22168, 17.49670,   11.99699, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2789.64502, -9023.61426, 32.93700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7011, 2958.22046, -9101.89258, 50.46860,   0.00000, 0.00000, 14.99600, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2774.24463, -8941.26953, 31.29740,   4.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -9092.27246, 3.80620,   11.99199, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31812, -8848.12695, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2774.23193, -8936.33301, 30.77240,   7.99800, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3091.61670, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2796.55273, -9052.36035, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3086.41113, -8947.96484, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18228, 3087.98926, -8988.53125, -6.24090,   0.00000, 0.00000, 237.99699, -1, -1, -1, 300);
	CreateDynamicObject(5767, 2788.63696, -8874.56836, 45.54060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2767.59131, -8994.47461, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3086.41113, -8924.58594, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
//	CreateDynamicObject(8355, 3099.72949, -8963.65430, 32.98700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2765.68726, -8914.19824, 27.77710,   0.00000, 12.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3062.98120, -8853.35742, 5.64910,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3102.85156, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3086.64038, -9018.31152, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.24414, -9095.22656, -16.26710,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3069.88770, -8853.35742, 6.01110,   6.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8555, 3093.06250, -8892.95703, -5.61810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3076.71826, -8853.35742, 7.09290,   12.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3086.64063, -9041.69727, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8565, 2809.81250, -8820.30762, 29.16900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2751.95020, -8912.75391, 27.77710,   0.00000, 12.00000, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2768.08691, -9052.33594, 23.92420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8391, 2853.86279, -8788.55273, 25.63130,   0.00000, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3083.39844, -8853.35742, 8.88290,   17.99600, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3111.78613, -8948.02148, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3111.78711, -8971.48828, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4571, 2889.37402, -9133.79688, -25.13710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8390, 2947.22070, -8783.34668, 41.80550,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3111.72095, -8994.88965, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3122.07666, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2747.72510, -9023.61426, 32.96200,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3111.72168, -9018.31250, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4007, 2742.12793, -8976.66309, -20.61450,   0.00000, 0.00000, 358.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2738.81348, -8908.48633, 27.77710,   0.00000, 12.00000, 66.00000, -1, -1, -1, 300);
	CreateDynamicObject(4007, 2737.57397, -8959.31250, -27.53010,   0.00000, 0.00000, 357.99500, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3133.27954, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4002, 2757.98877, -8847.00000, 9.15060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.31836, -8782.13770, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2739.16016, -9046.01074, 31.29740,   3.99400, 0.00000, 359.98901, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2726.85132, -8901.58008, 27.77710,   0.00000, 12.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2739.11719, -9050.87793, 30.79740,   7.99800, 0.00000, 359.98401, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3137.06543, -8971.48828, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2768.33105, -9097.36523, 27.97860,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4007, 2728.97046, -8941.28711, -31.74690,   0.00000, 0.00000, 63.99500, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2850.82324, -9157.17969, 17.52170,   11.99699, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(5644, 3137.06543, -8994.89063, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4242, 2731.43604, -8876.90430, 23.64580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8555, 3136.26465, -8892.98145, 2.64690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3152.56714, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2716.58643, -8892.33789, 27.77710,   0.00000, 12.00000, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2831.24414, -9160.82129, -16.26710,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7011, 3102.51563, -9101.89258, 50.46860,   0.00000, 0.00000, 14.99600, -1, -1, -1, 300);
	CreateDynamicObject(8390, 3069.83032, -8783.34277, 32.02240,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2708.46777, -8881.16211, 27.77710,   0.00000, 12.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(8565, 2809.81152, -9164.38965, 29.26900,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 3167.28223, -8928.99316, 34.10230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18450, 3169.54297, -8956.06250, 45.16960,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 3170.02368, -8962.86914, 52.04710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 3170.02441, -8962.86914, 52.04710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2693.00439, -8994.47461, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2765.68750, -8782.05469, 27.77710,   0.00000, 11.99699, 269.99500, -1, -1, -1, 300);
	CreateDynamicObject(3458, 3151.88965, -8853.28223, 29.34490,   13.99699, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2702.84961, -8868.54395, 27.77710,   0.00000, 12.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(4007, 2696.91748, -8918.71289, -34.61440,   0.00000, 0.00000, 43.99000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2698.79053, -9046.01074, 31.29740,   3.99900, 0.00000, 359.99500, -1, -1, -1, 300);
	CreateDynamicObject(3458, 2698.79102, -9050.87793, 30.79740,   8.00000, 0.00000, 359.98901, -1, -1, -1, 300);
	CreateDynamicObject(3458, 3156.69482, -8853.28223, 30.36330,   10.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2751.95020, -8783.49902, 27.77710,   0.00000, 12.00000, 282.00000, -1, -1, -1, 300);
	CreateDynamicObject(10357, 3156.05444, -8905.41211, 133.89510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2699.97754, -8855.03320, 27.77710,   0.00000, 12.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 3161.56909, -8853.28223, 31.03830,   6.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3187.55981, -8938.48828, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2738.81348, -8787.76758, 27.77710,   0.00000, 12.00000, 294.00000, -1, -1, -1, 300);
	CreateDynamicObject(3458, 3166.46875, -8853.28223, 31.36330,   2.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2699.97754, -8841.22070, 27.77710,   0.00000, 12.00000, 354.00000, -1, -1, -1, 300);
	CreateDynamicObject(10945, 2926.44141, -9217.83398, 79.77890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 3170.02441, -8853.37207, 52.04710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 3170.02441, -8853.37207, 52.04710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2726.85132, -8794.67383, 27.77710,   0.00000, 12.00000, 306.00000, -1, -1, -1, 300);
	CreateDynamicObject(6863, 3181.88965, -9037.65039, 35.50460,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2702.84961, -8827.70898, 27.77710,   0.00000, 12.00000, 342.00000, -1, -1, -1, 300);
	CreateDynamicObject(18450, 3169.54395, -8847.57617, 45.16960,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2716.58643, -8803.91602, 27.77710,   0.00000, 12.00000, 318.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2708.46777, -8815.09082, 27.77710,   0.00000, 12.00000, 330.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2690.15381, -9073.04883, 27.80810,   0.00000, 11.99699, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(5309, 2670.07910, -9016.79102, 33.88220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2676.41699, -9074.49316, 27.80810,   0.00000, 11.99199, 281.99701, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3209.54053, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2796.49072, -9205.19238, 27.78310,   0.00000, 11.99199, 89.99500, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3199.95654, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10676, 2726.82056, -9154.54883, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10948, 2889.79565, -9242.55078, 34.47680,   0.00000, 0.00000, 92.00000, -1, -1, -1, 300);
	CreateDynamicObject(6994, 3197.09692, -8849.02930, 27.91050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(4242, 2731.36230, -9170.89648, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4563, 3165.94922, -8903.07129, -128.82860,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2663.28027, -9078.76172, 27.80810,   0.00000, 11.99699, 294.00000, -1, -1, -1, 300);
	CreateDynamicObject(10676, 2714.67480, -9165.49805, 23.73340,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3231.52100, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3226.81543, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3237.93848, -8963.58008, 32.98700,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(4563, 3168.64844, -8803.86133, -79.31530,   0.00000, 0.00000, 179.99500, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3255.24023, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3237.93774, -8853.35742, 32.96200,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(6994, 3238.25513, -8849.02930, 27.91050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3252.27173, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3277.55859, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3276.15869, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6994, 3279.29639, -8849.02930, 27.91050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3303.01709, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 3303.01758, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16304, 3316.39600, -8934.70117, 36.27430,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(16304, 3316.39648, -8880.31543, 36.27430,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8343, 3330.76318, -8940.65625, 33.02260,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8344, 3330.51782, -8892.84082, 32.97690,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(10676, 2699.35083, -9154.54883, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2651.31787, -9085.66797, 27.80810,   0.00000, 11.99699, 306.00000, -1, -1, -1, 300);
	CreateDynamicObject(10676, 2671.99219, -9154.52539, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(10871, 2699.12744, -9143.31543, 157.42830,   0.00000, 0.00000, 120.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2641.05322, -9094.91016, 27.80810,   0.00000, 11.99699, 318.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2690.15430, -9205.19238, 27.80810,   0.00000, 11.99199, 89.99500, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2632.93433, -9106.08496, 27.80810,   0.00000, 11.99699, 330.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2676.41699, -9203.74805, 27.80810,   0.00000, 11.99699, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2627.31616, -9118.70313, 27.80810,   0.00000, 11.99699, 342.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2663.28027, -9199.48047, 27.80810,   0.00000, 11.99699, 66.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2624.44434, -9132.21484, 27.80810,   0.00000, 11.99699, 354.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2651.31787, -9192.57422, 27.80810,   0.00000, 11.99699, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2624.44434, -9146.02734, 27.80810,   0.00000, 11.99699, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2641.05322, -9183.33203, 27.80810,   0.00000, 11.99699, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2627.31616, -9159.53809, 27.80810,   0.00000, 11.99699, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2632.93457, -9172.15625, 27.80810,   0.00000, 11.99199, 29.99800, -1, -1, -1, 300);
	CreateDynamicObject(7910, 3161.11621, -8962.86914, 44.93020,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 3160.54834, -8962.80469, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 3160.54834, -8961.19531, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 3160.54834, -8959.61328, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 3160.54834, -8964.39941, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1262, 3160.54834, -8966.00488, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2752.45825, -9107.82813, 23.67260,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2759.45435, -9107.82227, 23.67260,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 2738.05811, -9178.15723, 26.61060,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 2827.52368, -9120.76758, 26.61060,   0.00000, 0.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 2948.82739, -8983.15527, 35.98890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 3271.73853, -8906.49512, 31.38660,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 3271.73853, -8906.49512, 38.38660,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 3271.73853, -8906.49512, 45.38660,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 3197.11523, -8906.64453, 36.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 3185.17114, -8906.66211, 36.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 3197.11523, -8906.64453, 42.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 3185.17114, -8906.66211, 42.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2829.43311, -8850.35547, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2829.43896, -8862.29102, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2829.44165, -8874.22949, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2829.44214, -8881.91406, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2819.99463, -8881.84863, 23.55040,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2782.98169, -8831.58984, 23.55610,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2794.91675, -8831.57227, 23.55610,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2770.85547, -8862.00586, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2782.76245, -8862.01074, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2731.87085, -8861.89844, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2719.92896, -8861.90332, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2720.02759, -8849.99023, 23.55610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2720.00952, -8838.05957, 23.55610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2720.01685, -8831.52148, 23.55610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2731.92700, -8831.58984, 23.55610,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(987, 2743.84668, -8831.59375, 23.55610,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2770.30396, -8983.72266, 34.08230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2800.78589, -8983.71289, 34.09230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2831.26611, -8983.72266, 34.08230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8650, 2861.74707, -8983.71289, 34.09230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 3099.72949, -8963.65430, 32.95700,   0.00000, 180.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2961.42871, -8963.60449, 32.95700,   0.00000, 180.00000, 270.00000, -1, -1, -1, 300);
	CreateDynamicObject(8355, 2823.21680, -8963.67969, 32.95700,   0.00000, 180.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3104.56665, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3038.53198, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2972.50293, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2906.47949, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2938.43066, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3004.44531, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3070.47998, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3136.51489, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3073.41992, -8907.33398, 0.18700,   8.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3073.41992, -8973.36230, 0.18700,   8.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3073.41992, -9039.39063, 0.18700,   8.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2954.21265, -8969.51074, 0.18700,   8.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2954.21265, -8903.48145, 0.18700,   8.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2954.21265, -8837.45117, 0.18700,   8.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2871.33276, -8812.15430, -9.57903,   90.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2874.77271, -8814.42676, -9.57900,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2879.59961, -9014.28613, -10.97570,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2879.59961, -8948.24316, -10.97570,   90.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2913.48022, -9002.72656, -10.97570,   90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3155.97949, -9009.62988, -7.10690,   90.00000, 0.00000, 271.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3154.84937, -8943.60938, -7.06690,   90.00000, 0.00000, 271.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3188.06445, -9022.23145, 33.01560,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3189.04517, -8938.88086, 33.03560,   0.00000, 0.00000, 181.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3065.58887, -8873.46289, -34.36260,   90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 2962.08569, -9003.50488, -34.33730,   90.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3254.64575, -8940.87012, 33.02560,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3320.65137, -8938.17188, 33.02560,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3305.18237, -8875.35254, 33.00560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3239.17822, -8874.07617, 33.01560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(4012, 3202.34082, -8869.97949, 33.00560,   -0.10000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(7910, 3161.11719, -8962.87207, 44.94020,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8150, 3211.44214, -8983.12891, 35.97260,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3280.74292, -8982.78223, 33.58700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3293.29126, -8984.56836, 33.58700,   0.00000, 0.00000, 74.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3305.80225, -8986.77051, 33.58700,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3318.54663, -8986.57324, 33.58700,   0.00000, 0.00000, 96.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3330.89941, -8983.72168, 33.58700,   0.00000, 0.00000, 110.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3342.43604, -8978.34375, 33.58700,   0.00000, 0.00000, 120.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3352.56982, -8970.71289, 33.58700,   0.00000, 0.00000, 134.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3361.11353, -8961.24316, 33.58700,   0.00000, 0.00000, 142.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3367.66040, -8950.37012, 33.58700,   0.00000, 0.00000, 156.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3371.59668, -8938.28027, 33.58700,   0.00000, 0.00000, 168.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 3372.91309, -8919.23242, 33.68020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 3372.67285, -8893.64941, 33.68020,   0.00000, 0.00000, 1.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3370.49023, -8874.79297, 33.58700,   0.00000, 0.00000, 198.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3365.52832, -8863.07617, 33.58700,   0.00000, 0.00000, 208.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3358.43945, -8852.53223, 33.58700,   0.00000, 0.00000, 220.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3349.35010, -8843.61914, 33.58700,   0.00000, 0.00000, 51.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3338.66333, -8836.69238, 33.58700,   0.00000, 0.00000, 63.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3326.85620, -8831.92676, 33.58700,   0.00000, 0.00000, 73.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3314.33716, -8829.72461, 33.58700,   0.00000, 0.00000, 87.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3301.60864, -8830.17480, 33.58700,   0.00000, 0.00000, 97.00000, -1, -1, -1, 300);
	CreateDynamicObject(984, 3283.07544, -8834.23047, 33.58700,   0.00000, 0.00000, 95.00000, -1, -1, -1, 300);
	CreateDynamicObject(983, 3292.35718, -8832.31348, 33.60960,   0.00000, 0.00000, 115.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 3263.90210, -8834.80371, 33.60530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 3238.32178, -8834.82129, 33.60530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 3212.73340, -8834.82813, 33.60530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 3187.18652, -8833.95605, 33.60530,   0.00000, 0.00000, 86.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2667.15063, -9058.04199, 32.24230,   0.00000, 0.00000, 108.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2655.88867, -9062.43066, 32.30230,   0.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2640.72388, -9071.13477, 32.30230,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2627.61499, -9082.96875, 32.30230,   0.00000, 0.00000, 138.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2617.44678, -9096.99707, 32.30230,   0.00000, 0.00000, 150.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2610.16699, -9113.37305, 32.30230,   0.00000, 0.00000, 162.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2606.54199, -9130.59082, 32.30230,   0.00000, 0.00000, 174.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2606.56201, -9147.95410, 32.30230,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2610.22241, -9165.14258, 32.30230,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2617.43652, -9181.31055, 32.30230,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2627.69458, -9195.42383, 32.30230,   0.00000, 0.00000, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2640.86499, -9207.20020, 32.30230,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2656.03711, -9215.94824, 32.30230,   0.00000, 0.00000, 66.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2672.64160, -9221.35840, 32.30230,   0.00000, 0.00000, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2691.83667, -9223.17285, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2717.41650, -9223.17578, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2743.00317, -9223.17871, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2768.59814, -9223.18945, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2794.18140, -9223.20605, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2819.74414, -9223.90137, 32.30230,   0.00000, 0.00000, 86.90000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2818.91479, -8763.32129, 32.27230,   0.00000, 0.00000, 93.30000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2793.36401, -8764.06738, 32.27230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2767.78320, -8764.08691, 32.27230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2749.43115, -8765.64648, 32.27230,   0.00000, 0.00000, 102.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2731.30054, -8771.45703, 32.27230,   0.00000, 0.00000, 114.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2715.98853, -8780.36426, 32.27230,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2703.36255, -8791.73730, 32.27230,   0.00000, 0.00000, 138.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2692.83252, -8806.19434, 32.27230,   0.00000, 0.00000, -30.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2685.90918, -8821.64258, 32.27230,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2682.11426, -8839.43652, 32.27230,   0.00000, 0.00000, -6.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2682.10767, -8856.98047, 32.27230,   0.00000, 0.00000, 6.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2685.84790, -8874.41309, 32.27230,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(982, 2693.00317, -8890.36523, 32.27230,   0.00000, 0.00000, 30.00000, -1, -1, -1, 300);
//дрифт трасса 14 (конец)

//Мото-паркур 1 (начало)
	ObjGam[39] = CreateObject(8040, -8727.756835, 6127.045898, 26.940019, 0.000000, 0.000000, -91.959671);

	CreateDynamicObject(9907, -9389.976562, 6098.378906, 13.401720, 0.000000, 0.000000, 269.863128, -1, -1, -1, 300);
	CreateDynamicObject(8391, -9302.101562, 6037.171875, 21.260450, 0.000000, 0.000000, 44.794528, -1, -1, -1, 300);
	CreateDynamicObject(4602, -9220.113281, 6057.684570, 56.121780, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(6391, -9136.333984, 6100.143554, 18.457820, 0.000000, 0.000000, 9.453800, -1, -1, -1, 300);
	CreateDynamicObject(4585, -9009.743164, 6099.128906, -27.599029, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4564, -8918.021484, 6101.219726, -30.391729, 0.000000, 0.000000, 269.759124, -1, -1, -1, 300);
	CreateDynamicObject(4690, -8809.910156, 6095.015625, -85.528091, 0.000000, 0.859380, 179.622390, -1, -1, -1, 300);
	CreateDynamicObject(1655, -8800.424804, 6038.142578, 65.309272, -1.718870, 0.859380, 0.962740, -1, -1, -1, 300);
	CreateDynamicObject(4571, -8800.665039, 6020.233398, 0.411540, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4603, -8800.291015, 5933.230468, 16.042919, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8802.264648, 5996.373046, 64.627197, -3.437750, 0.000000, 0.103299, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8807.925781, 5913.362304, 40.203918, 0.000000, 0.000000, 15.573280, -1, -1, -1, 300);
	CreateDynamicObject(10948, -8812.456054, 5860.445800, -2.993319, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4558, -8692.525390, 5873.305664, 35.067619, 0.000000, 0.000000, 0.858690, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8646.240234, 5860.556640, 27.702259, 0.000000, 0.000000, 91.958869, -1, -1, -1, 300);
	CreateDynamicObject(10619, -8582.275390, 5855.247558, 9.830149, 0.000000, 0.000000, 226.032028, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8552.002929, 5919.648437, 33.166549, -9.453800, 0.000000, 174.465988, -1, -1, -1, 300);
	CreateDynamicObject(17533, -8565.521484, 5948.220703, -1.725090, 0.000000, 0.000000, 181.341308, -1, -1, -1, 300);
	CreateDynamicObject(4019, -8620.933593, 5965.700195, -7.317810, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(10948, -8734.872070, 5952.017578, -8.296990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1655, -8678.363281, 5960.218750, 33.977680, 0.000000, 0.000000, 272.337829, -1, -1, -1, 300);
	CreateDynamicObject(4006, -8728.412109, 6053.622070, 13.965519, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4563, -8702.495117, 5897.999023, 60.625209, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4563, -8917.814453, 6018.519531, 24.285820, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4563, -9106.589843, 6173.403320, 7.792729, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4563, -9385.513671, 6020.831054, 48.889938, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4571, -8885.805664, 5899.108398, 22.620010, 0.000000, 0.000000, 91.100227, -1, -1, -1, 300);
	CreateDynamicObject(4571, -8631.863281, 6076.027343, 23.351299, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4571, -9053.179687, 6009.057617, 21.721920, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4571, -9297.039062, 6122.738281, 11.537360, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4585, -8532.883789, 6017.834960, 26.348060, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4585, -8661.248046, 5754.092773, 35.635559, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4586, -8459.883789, 5852.312988, 51.280078, 0.000000, 0.000000, 90.240913, -1, -1, -1, 300);
	CreateDynamicObject(4586, -8827.227539, 5766.310058, 54.159790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4602, -8895.796875, 6190.461425, 59.059341, 0.000000, 0.000000, 356.562286, -1, -1, -1, 300);
	CreateDynamicObject(4602, -9218.041992, 6184.804687, 59.661201, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4602, -9174.001953, 5978.401367, 60.065799, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4602, -9476.944335, 6147.649414, 60.218891, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(4603, -8717.558593, 6160.855468, 6.331809, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8725.032226, 6089.905761, 27.139369, 0.000000, 0.000000, 180.482055, -1, -1, -1, 300);
//	CreateDynamicObject(8040, -8727.756835, 6127.045898, 26.940019, 0.000000, 0.000000, -91.959671, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8725.091796, 6094.003417, 25.954359, -14.610420, 0.000000, 180.482055, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8725.496093, 6034.933593, 27.864360, 0.000000, 0.000000, 181.341491, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8725.337890, 6029.261718, 31.260360, 12.032110, 0.000000, 181.341491, -1, -1, -1, 300);
	CreateDynamicObject(1655, -8591.866210, 5961.668945, 31.402570, 0.000000, 0.000000, 271.478454, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8702.179687, 5863.735351, 41.450710, 0.000000, 0.000000, 91.958869, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8707.302734, 5863.564453, 43.963249, 14.610420, 0.000000, 91.958869, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8809.653320, 5919.554199, 44.142108, 17.188730, 0.000000, 15.573280, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8653.373046, 5860.189453, 30.685180, 12.032110, 0.000000, 92.819107, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8649.238281, 5860.383300, 28.317539, -2.578310, 0.000000, 92.819107, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8703.439453, 5863.686523, 42.075851, 6.016059, 0.000000, 91.958869, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8714.234375, 5863.342773, 48.230598, 16.329299, 0.000000, 91.958869, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8721.580078, 5863.110351, 51.775669, 6.016059, 0.000000, 91.958869, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8812.418945, 5953.480468, 48.003959, 0.000000, 0.000000, 279.316925, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8805.577148, 5955.395996, 52.105358, 15.469860, -10.313240, 289.630096, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8800.327148, 5958.769042, 57.859558, 27.501970, -18.907609, 299.943237, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8811.162109, 5949.062988, 47.953948, 0.000000, 0.000000, 279.316925, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8804.149414, 5950.196289, 52.890308, 22.345350, 0.000000, 279.316925, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8808.614257, 5949.465820, 49.276058, 9.453800, 0.000000, 279.316925, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8799.052734, 5951.000000, 59.941051, 39.534088, 0.000000, 279.316925, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8808.852539, 5954.352539, 50.252449, 14.610420, -7.734930, 284.472961, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8802.287109, 5957.449218, 55.685588, 28.361410, -20.626480, 296.504974, -1, -1, -1, 300);
	CreateDynamicObject(3436, -8802.192382, 5982.075195, 58.682201, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1633, -8782.944335, 5956.220214, 67.629112, -2.578310, -0.859440, 10.416029, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8777.642578, 5958.073242, 68.153961, 2.578310, 0.000000, 1.822180, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8777.755859, 5961.653808, 70.835792, 18.907609, 0.000000, 1.822180, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8792.273437, 5996.321289, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8782.375000, 5996.313476, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8812.113281, 5996.384277, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 300);
	CreateDynamicObject(1632, -8821.951171, 5996.360351, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 300);
	CreateDynamicObject(1655, -8809.125976, 6037.952636, 65.477256, -1.718870, 0.859380, 0.962740, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8841.666992, 6100.794921, 62.946430, 0.000000, 0.000000, 90.240798, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8849.664062, 6100.775390, 67.228340, 6.875490, 0.000000, 90.240798, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8856.769531, 6100.761718, 72.781753, 18.907609, 0.000000, 90.240798, -1, -1, -1, 300);
	CreateDynamicObject(4585, -9048.349609, 6099.303710, -27.637220, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(6391, -9173.947265, 6100.452148, 18.450630, 0.000000, 0.000000, 9.453800, -1, -1, -1, 300);
	CreateDynamicObject(4571, -9238.478515, 6112.862304, -0.530049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8944.042968, 6101.177734, 79.972267, 0.000000, 0.000000, 88.520767, -1, -1, -1, 300);
	CreateDynamicObject(1634, -8951.492187, 6101.348632, 84.541732, 12.891550, 0.000000, 88.520767, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9063.254882, 6098.540039, 73.703773, 5.156620, 0.000000, 90.239646, -1, -1, -1, 300);
	CreateDynamicObject(1632, -9181.950195, 6104.548828, 60.193531, 0.000000, 0.000000, 82.505867, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9251.750000, 6115.617187, 64.582878, 0.000000, 0.000000, 84.224739, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9258.638671, 6116.306152, 69.483177, 19.767040, 0.000000, 84.224739, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9325.548828, 6112.235351, 76.600280, 0.000000, 0.000000, 97.975723, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9410.658203, 6088.455078, 67.244338, 0.000000, 0.000000, 97.116287, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9411.162109, 6092.562500, 67.244338, 0.000000, 0.000000, 97.116287, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9416.941406, 6087.671875, 73.415367, 36.096340, 0.000000, 97.116287, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9417.434570, 6091.816406, 73.437263, 36.096340, 0.000000, 97.116287, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9413.702148, 6092.273437, 69.038642, 12.891550, 0.000000, 97.116287, -1, -1, -1, 300);
	CreateDynamicObject(1634, -9413.890625, 6088.072265, 69.535232, 17.188730, 0.000000, 97.116287, -1, -1, -1, 300);
	CreateDynamicObject(4564, -8991.152343, 6183.181640, 83.426979, 0.000000, 0.000000, 269.759124, -1, -1, -1, 300);
	CreateDynamicObject(4564, -8550.592773, 5760.825195, 97.966346, 0.000000, 0.000000, 286.088317, -1, -1, -1, 300);
	CreateDynamicObject(4571, -8806.400390, 6178.639648, 26.700630, 0.000000, 0.000000, 177.903732, -1, -1, -1, 300);
	CreateDynamicObject(4564, -9352.730468, 6190.817382, 100.562469, 0.000000, 0.000000, 269.759124, -1, -1, -1, 300);
	CreateDynamicObject(8040, -9476.424804, 6084.957519, 64.951797, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(4602, -9453.600585, 6047.689453, 60.218898, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
	CreateDynamicObject(4602, -9494.167968, 6044.849121, 60.218898, 0.000000, 0.000000, 4.000000, -1, -1, -1, 300);
//Мото-паркур 1 (конец)

//Мото-паркур 2 (начало)
	ObjGam[40] = CreateObject(8040, -8712.233398, 3339.016845, 25.253499, 0.000000, 0.000000, -88.000000);

	CreateDynamicObject(13641, -8711.299804, 3294.800048, 26.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8710.200195, 3265.100097, 26.200000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.400390, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.399414, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.399414, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8710.099609, 3235.300048, 26.100000, 0.000000, 0.000000, 268.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3199.399902, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3199.399902, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.399414, 3199.399902, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3199.400390, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.399414, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3185.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3185.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.399414, 3178.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3185.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8705.200195, 3178.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8708.299804, 3178.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8711.399414, 3185.200195, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8824.500000, 2965.300048, 23.000000, 0.000000, 0.000000, 272.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8709.900390, 3156.899902, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8709.900390, 3116.500000, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8709.900390, 3076.100097, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8717.280273, 3038.129882, 22.989999, 0.000000, 0.000000, 248.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8737.400390, 3004.600097, 23.000000, 0.000000, 0.000000, 230.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8767.200195, 2979.610107, 22.979999, 0.000000, 0.000000, 209.998992, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8802.599609, 2966.000000, 23.000000, 0.000000, 0.000000, 191.998001, -1, -1, -1, 300);
	CreateDynamicObject(3437, -8696.599609, 2997.000000, 35.700000, 0.000000, 50.000000, 211.432006, -1, -1, -1, 300);
	CreateDynamicObject(3437, -8709.200195, 2989.199951, 35.700000, 0.000000, 49.999000, 211.432006, -1, -1, -1, 300);
	CreateDynamicObject(3437, -8721.700195, 2981.500000, 35.700000, 0.000000, 49.999000, 211.432006, -1, -1, -1, 300);
	CreateDynamicObject(3437, -8721.900390, 2981.800048, 42.000000, 0.000000, 310.000000, 211.432006, -1, -1, -1, 300);
	CreateDynamicObject(3437, -8709.500000, 2989.300048, 42.000000, 0.000000, 309.996002, 211.425994, -1, -1, -1, 300);
	CreateDynamicObject(3437, -8697.099609, 2996.800048, 42.000000, 0.000000, 309.996002, 211.425994, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8709.899414, 3206.700195, 26.100000, 0.000000, 0.000000, 87.995002, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8714.500000, 3178.100585, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8824.400390, 2962.199951, 23.000000, 0.000000, 0.000000, 272.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8824.299804, 2959.100097, 23.000000, 0.000000, 0.000000, 272.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8832.099609, 2961.800048, 26.100000, 0.000000, 0.000000, 179.994995, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8877.799804, 2960.399902, 26.100000, 0.000000, 0.000000, 359.994995, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8885.654296, 2960.129638, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8885.654296, 2957.009521, 23.000000, 0.000000, 0.000000, 269.994995, -1, -1, -1, 300);
	CreateDynamicObject(2932, -8885.654296, 2963.257324, 23.000000, 0.000000, 0.000000, 269.994995, -1, -1, -1, 300);
	CreateDynamicObject(13645, -8949.598632, 3110.097656, 25.190799, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8960.961914, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8966.058593, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8971.037109, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8976.085937, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8981.112304, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8986.166015, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8991.201171, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8996.330078, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9001.391601, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9006.458984, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9011.491210, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9016.502929, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9021.491210, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3080, -9027.125000, 3107.805175, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3080, -9027.125000, 3099.448242, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3080, -9027.125000, 3124.243652, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3080, -9027.125000, 3116.064697, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9051.951171, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9057.076171, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9062.199218, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9067.316406, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9072.432617, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9077.547851, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9082.664062, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9087.781250, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3092.723632, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3096.763916, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3100.817626, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3104.857666, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3108.912597, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3112.949707, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3116.999023, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3121.038330, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3125.077636, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3374, -9088.385742, 3129.109619, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
//	CreateDynamicObject(8040, -8712.233398, 3339.016845, 25.253499, 0.000000, 0.000000, -88.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8909.367187, 2960.200195, 22.930000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8947.662109, 2953.457275, 22.920000, 0.000000, 0.000000, 200.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8981.337890, 2934.001953, 22.930000, 0.000000, 0.000000, 220.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9006.340820, 2904.222412, 22.920000, 0.000000, 0.000000, 240.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9019.673828, 2867.649414, 22.930000, 0.000000, 0.000000, 260.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9023.138671, 2828.040283, 22.920000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -9023.251953, 2803.751220, 26.100000, 0.000000, 0.000000, -92.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -9023.251953, 2759.469482, 26.100000, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9023.299804, 2735.242187, 22.930000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9033.042968, 2698.846679, 22.920000, 0.000000, 0.000000, 240.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9059.677734, 2672.210937, 22.930000, 0.000000, 0.000000, 210.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9096.067382, 2662.462402, 22.920000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9184.015625, 2662.543457, 22.930000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -9120.284179, 2662.501464, 26.100000, 0.000000, 0.000000, 178.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -9159.778320, 2662.501464, 26.100000, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9220.421875, 2672.296386, 22.920000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9247.060546, 2698.953613, 22.930000, 0.000000, 0.000000, 120.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9256.814453, 2735.337402, 22.920000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9247.054687, 2771.734619, 22.930000, 0.000000, 0.000000, 60.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9220.409179, 2798.388671, 22.920000, 0.000000, 0.000000, 30.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9184.024414, 2808.148193, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9147.650390, 2798.396484, 22.920000, 0.000000, 0.000000, -30.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9111.137695, 2785.105712, 22.930000, 0.000000, 0.000000, -10.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9072.578125, 2781.626953, 17.757499, 0.000000, 15.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -9034.236328, 2781.640380, 12.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8993.838867, 2781.640380, 12.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8955.485351, 2781.640380, 17.757499, 0.000000, -15.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8916.179687, 2781.640380, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8875.781250, 2781.640380, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8851.511718, 2781.764648, 26.100000, 0.000000, 0.000000, -2.000000, -1, -1, -1, 300);
	CreateDynamicObject(13641, -8813.961914, 2781.764648, 26.100000, 0.000000, 0.000000, 178.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8789.718750, 2781.687255, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8753.338867, 2791.444335, 22.920000, 0.000000, 0.000000, 30.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8730.082031, 2819.169677, 22.930000, 0.000000, 0.000000, 70.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8730.084960, 2855.362792, 22.920000, 0.000000, 0.000000, 110.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8753.340820, 2883.081298, 22.930000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8788.974609, 2889.372558, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8854.839843, 2961.098144, 12.930000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8854.839843, 2922.735107, 17.757499, 0.000000, 15.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8854.839843, 2999.460449, 17.757499, 0.000000, -15.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8851.383789, 2884.207031, 22.930000, 0.000000, 0.000000, 100.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8828.752929, 2882.352539, 22.940000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8829.566406, 2887.317138, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8830.448242, 2892.304931, 22.940000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8827.912109, 2877.400146, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8827.028320, 2872.382812, 22.940000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8826.159179, 2867.374755, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8831.339843, 2897.305908, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 300);
	CreateDynamicObject(978, -8845.632812, 2865.264160, 25.236200, 0.000000, 0.000000, -24.000000, -1, -1, -1, 300);
	CreateDynamicObject(978, -8836.768554, 2864.168945, 25.236200, 0.000000, 0.000000, 10.000000, -1, -1, -1, 300);
	CreateDynamicObject(978, -8850.697265, 2871.750488, 25.236200, 0.000000, 0.000000, -80.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8854.839843, 3038.747314, 22.930000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8864.603515, 3075.145263, 22.920000, 0.000000, 0.000000, 120.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8891.228515, 3101.766845, 22.930000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 300);
	CreateDynamicObject(3458, -8927.622070, 3111.518310, 22.920000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300);
	CreateDynamicObject(13645, -8949.565429, 3112.931640, 25.190799, 0.000000, 0.000000, 88.000000, -1, -1, -1, 300);
	CreateDynamicObject(8040, -9130.292968, 3111.008300, 25.683500, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300);
//Мото-паркур 2 (конец)

//Мото-паркур 3 (начало)
	ObjGam[41] = CreateObject(18783, -8905.24121, -191.27246, 160.22000,   0.00000, 0.00000, 0.00000);

//	CreateDynamicObject(18783, -8905.24121, -191.27246, 160.22000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18786, -8905.26953, -173.05005, 164.96001,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8905.12988, -153.85010, 165.02000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8906.37988, -145.12988, 167.05000,   -8.00000, 0.00000, 178.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8905.28027, -84.51001, 179.91000,   16.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3502, -8966.10156, -115.36458, 187.13721,   20.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3502, -8974.39355, -115.36330, 190.15370,   20.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.54590, -192.12646, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.53418, -189.36377, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.54688, -186.48438, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.55762, -183.72437, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8909.11133, -200.53638, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8906.45996, -200.53394, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8903.65820, -200.57373, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8901.04590, -200.56055, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8898.49316, -200.55371, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.98242, -200.53516, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.97461, -197.96997, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.97559, -195.19873, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.96875, -192.37988, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.98535, -186.55542, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.52051, -194.88452, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.53906, -197.73071, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.95410, -189.49780, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8895.98633, -183.73145, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8911.91211, -200.55127, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18887, -8914.48242, -200.52441, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8905.42773, -53.75366, 176.45540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(13638, -8956.48438, -49.71899, 173.36729,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8905.56250, -43.76050, 174.39751,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -8937.19434, -45.08569, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -8937.19434, -44.41284, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -8937.19434, -43.73950, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -8937.19434, -43.06665, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -8937.19434, -42.39087, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8946.85449, -57.49390, 169.44180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8946.33691, -98.12530, 174.40581,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(13638, -8954.15039, -112.71614, 178.35600,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8981.68555, -115.37668, 188.73689,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -8999.80078, -108.39108, 187.49361,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8986.69043, -115.38190, 188.73689,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -9006.98047, -79.37630, 184.93961,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -9007.65234, -79.37634, 184.93961,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -9008.32813, -79.37630, 184.93961,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18827, -9077.10645, 14.38410, 195.02840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8040, -9076.77539, 104.28520, 190.98720,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8946.85254, -62.49463, 169.44180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8946.34082, -103.12890, 174.40581,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -9015.48730, -52.52710, 189.55960,   0.00000, 0.00000, 192.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -9045.52148, -45.89380, 190.15840,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(13648, -9045.52148, -45.21190, 190.15840,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -9077.16699, -45.57330, 187.68401,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8945.34863, -64.99490, 170.49680,   -2.84000, 0.00000, 0.00000, -1, -1, -1, 300);
//Мото-паркур 3 (конец)

//Мото-паркур 4 (начало)
	ObjGam[42] = CreateObject(18783, -8955.26074, -3241.27246, 10.22000,   0.00000, 0.00000, 0.00000);

//	CreateDynamicObject(18783, -8955.26074, -3241.27246, 10.22000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18786, -8955.26953, -3223.05005, 14.96001,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8955.25977, -3203.84009, 14.96000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8955.25586, -3195.27173, 17.05000,   -8.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8955.27539, -3134.51343, 29.96000,   16.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8955.22949, -3103.72363, 26.50540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -8955.15234, -3070.30688, 28.90170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(8040, -8926.79297, -3042.21436, 31.17050,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8945.29297, -3234.98804, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8945.29297, -3239.62207, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8945.29297, -3244.24707, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8945.29297, -3248.85571, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8947.99707, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8952.85840, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8957.66992, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8962.55078, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8965.24121, -3234.98022, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8965.24121, -3239.60376, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8965.24121, -3244.20947, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8965.24121, -3248.81128, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8955.21875, -3103.66357, 26.50540,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8912.45508, -3005.73511, 30.34730,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8915.61133, -3008.89404, 30.34730,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8931.62109, -2988.89648, 29.45290,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -8939.59277, -2971.42407, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -8961.00195, -2957.48242, 34.40190,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -8976.56836, -2942.09839, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -8997.97754, -2928.14429, 34.40190,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -9013.53418, -2912.69580, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -9050.50098, -2883.34180, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 300);
	CreateDynamicObject(6052, -9034.93945, -2898.75513, 34.40190,   0.00000, 0.00000, 12.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -9063.66113, -2876.37891, 35.66630,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9069.63867, -2909.73853, 33.27950,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(18856, -9068.65039, -2876.38354, 35.66630,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9069.64551, -2909.82910, 33.27950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9069.65234, -2940.74414, 36.72890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9069.66504, -2971.65747, 40.18180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9069.66992, -3002.57153, 43.63930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -9069.69727, -3043.42139, 45.03260,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9028.82324, -3043.41138, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -9028.74609, -3043.42749, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8967.00195, -3043.41821, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8966.91504, -3043.43701, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8905.18945, -3043.42358, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8905.08398, -3043.43311, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8843.34082, -3043.42261, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18367, -8843.25098, -3043.42944, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8810.08496, -3043.43115, 48.74190,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(8040, -8817.25488, -2830.58643, 48.30090,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8782.20996, -3043.43115, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8748.22266, -2995.31494, 48.73680,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8748.23730, -2964.42700, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8793.45313, -2933.32324, 48.73680,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8827.85938, -2933.33545, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8858.99512, -2933.33911, 48.73680,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8895.96680, -2933.33545, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8912.94629, -2885.17554, 48.73680,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(18783, -8912.94727, -2847.63086, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(1697, -8881.76953, -2830.57837, 48.73680,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8748.31152, -3043.40479, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8748.22852, -3026.43652, 45.03830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8748.21777, -3009.45972, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8762.36328, -2933.32080, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8779.35742, -2933.31641, 45.03830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8912.92383, -2916.33276, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8912.95508, -2899.34204, 45.03830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8895.90332, -2830.59839, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8765.24121, -3043.38232, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8748.23730, -2947.47388, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8844.81738, -2933.33472, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8912.91211, -2933.33081, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(18857, -8912.91504, -2830.66748, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 300);
//Мото-паркур 4 (конец)

#if (MOD11INS == 4)
//Стант-остров (начало)
	new TempObjectNumber;
	ObjGam[43] = CreateObject(19538, -132.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(19672, 331.91660, -5803.41602, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, 77.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, 335.00000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, 335.00000, -5442.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, 7.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19535, 77.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, 7.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, -62.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 335.00000, -5536.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19533, 77.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19533, 77.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, 7.50000, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19533, -62.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19531, -132.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19538, -132.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, -132.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19534, -62.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19534, -62.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -62.49980, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, 84.99970, -5372.50000, 9.30780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19538, -132.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, -132.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19533, -62.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, 7.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, -132.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
//	CreateDynamicObject(19538, -132.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, -55.00000, -5972.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19545, -62.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -202.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19533, -202.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, 15.00010, -5847.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, 77.50000, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -62.50000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, -132.50000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -202.50000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, -210.00000, -5816.25000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -210.00000, -5777.50000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, -210.00000, -5738.75000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -210.00000, -5700.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, -202.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19533, -202.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, -210.00000, -5630.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -210.00000, -5560.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, -210.00000, -5521.25000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19541, -202.49980, -5490.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, 335.00000, -5942.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19546, 85.00000, -5847.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19547, -132.50000, -5910.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19546, -54.99990, -5847.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -62.50000, -5878.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -62.50000, -5941.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19536, -132.50000, -6003.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -62.50000, -6003.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, -55.00000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, -210.00000, -5910.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -202.50000, -5878.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -202.50000, -5941.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, -202.50000, -6003.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, -210.00000, -6003.75000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19546, 84.99990, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, 77.50000, -5427.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 178.75000, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, 85.00000, -5365.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, -69.99980, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19546, -69.99980, -5490.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19532, -62.49990, -5427.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, -163.74980, -5490.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, -69.99980, -5396.25000, 9.30770,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 335.00000, -5473.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19529, 7.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 241.25000, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 303.75000, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 241.25000, -5942.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19539, 303.75000, -5942.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19535, -62.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19535, -202.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19535, -202.50000, -5700.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19535, -202.50000, -5560.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19535, 77.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 149.40990, -5777.50000, -35.29880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 300.08560, -5938.41602, 88.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19642, 124.18130, -5777.50000, 13.85210,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19647, 134.18130, -5777.50000, 13.85200,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19650, 96.91460, -5777.50000, 11.17170,   0.00000, -10.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19643, 114.18130, -5777.50000, 13.85210,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19659, -15.66020, -5517.92188, 34.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19665, 311.18570, -5668.97119, 91.77890,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19667, 305.63571, -5773.41602, 100.31240,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19664, 70.00580, -5533.83789, 36.60380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19663, 331.91660, -5818.41602, 86.23140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 326.66711, -5782.75000, 88.48140,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19662, 337.76730, -5528.58789, 92.14120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19651, 284.17010, -5923.41602, 78.48140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 266.00110, -5793.41602, 58.48140,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19660, 316.00110, -5954.08203, 88.48140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 188.55090, -5777.50000, 30.73000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 203.53180, -5777.50000, 31.33250,   0.00000, 20.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19674, 200.63260, -5701.70898, 22.24810,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19676, 140.83389, -5701.70898, 17.00600,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19673, 231.61951, -5777.50000, 41.56680,   0.00000, 15.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19675, 144.53529, -5777.50000, 14.28900,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19678, 120.00570, -5502.00684, 56.55400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19675, 154.94521, -5777.50000, 15.63830,   0.00000, 5.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19675, 165.19780, -5777.50000, 17.88970,   0.00000, 10.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19675, 175.21519, -5777.50000, 21.02620,   0.00000, 15.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 255.93390, -5777.50000, -2.41720,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19673, 241.17390, -5777.50000, 44.57920,   0.00000, 10.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19673, 250.95450, -5777.50000, 46.74740,   0.00000, 5.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19673, 260.88669, -5777.50000, 48.05490,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19652, 266.00110, -5793.41602, 78.48140,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19649, 291.00110, -5777.50000, 88.48140,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 291.00110, -5777.50000, 38.45670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19684, 314.63690, -5502.00684, 131.32430,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19682, 213.19569, -5482.25879, 34.35380,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(19681, 157.18700, -5531.41504, 34.35380,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19686, 260.63959, -5460.05615, 75.32980,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19685, 181.54930, -5502.00684, 63.82290,   0.00000, -30.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19663, 331.91660, -5868.41602, 86.23140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 331.91669, -5843.41602, 38.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19663, 331.91660, -5918.41602, 86.23140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 300.08560, -5928.41602, 88.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 331.91660, -5893.41602, 38.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 300.08560, -5898.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 300.08560, -5848.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 300.08560, -5798.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 300.08551, -5843.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 300.08560, -5893.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 311.18570, -5748.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 311.18570, -5698.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 311.18570, -5733.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 311.18579, -5683.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 311.18570, -5624.75293, 92.14130,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19663, 311.18579, -5574.75293, 89.89120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 311.18570, -5639.75293, 42.11660,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 316.43530, -5539.08691, 92.14120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 311.18570, -5574.75293, 37.61650,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19652, 358.93231, -5517.92188, 102.14120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 358.93231, -5517.92188, 122.14130,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19667, 95.00570, -5470.17822, 51.00540,   -90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19662, 337.76721, -5507.25684, 132.14120,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19684, 290.55759, -5502.00684, 124.87230,   0.00000, 15.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 257.70410, -5502.00684, 106.84760,   0.00000, -30.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 214.40280, -5502.00684, 81.84760,   0.00000, -30.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19685, 157.47009, -5502.00684, 57.37090,   0.00000, -15.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 149.85950, -5502.00684, 6.65640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 343.01682, -5517.92188, 42.11650,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19667, 95.00570, -5470.17822, 39.90530,   -90.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19668, 124.65040, -5802.41016, 89.06440,   0.00000, 15.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19666, 159.46140, -5786.53418, 113.99140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19680, 70.00580, -5502.00684, 34.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 25.00580, -5502.00684, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 20.00580, -5502.00684, 34.35390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19659, -15.66020, -5517.92188, 39.85380,   180.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 20.00580, -5533.83789, 34.35380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 120.00580, -5533.83789, 34.35380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 25.00580, -5533.83789, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19664, 241.29240, -5520.75195, 36.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 185.19141, -5506.83691, 34.35380,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 236.04289, -5485.08594, 34.35380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 125.00580, -5533.83789, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19648, 241.29240, -5600.75195, 34.35380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19644, 110.47990, -5701.70898, 16.56910,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 241.29240, -5520.75195, -11.17090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19647, 241.29240, -5630.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19664, 241.29240, -5710.75195, 36.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 241.29240, -5710.75195, -11.17090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19663, 241.29240, -5780.75195, 32.10380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 241.29240, -5740.75195, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 241.29240, -5750.75195, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19664, 241.29240, -5830.75195, 36.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 241.29240, -5830.75195, -11.17090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19663, 241.29240, -5880.75195, 32.10380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 236.04289, -5916.41797, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 235.96410, -5916.45508, 39.85380,   -180.00000, 0.00000, 179.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 200.37700, -5921.66699, 34.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19652, 175.37700, -5905.75195, 44.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 175.37700, -5905.75195, 64.35381,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 175.37691, -5905.75195, 84.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 175.37700, -5905.75195, 49.85380,   180.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 175.37691, -5905.75195, 104.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19670, 185.37700, -5921.66699, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 164.71100, -5916.41797, 114.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 159.46140, -5880.75195, 114.35380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 159.46140, -5830.75195, 114.35380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 159.46140, -5835.75195, 64.32910,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19666, 159.46140, -5712.87207, 90.33160,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19666, 159.46140, -5639.20996, 66.67170,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19670, 119.10040, -5814.20215, 3.02330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19649, 159.46140, -5757.08984, 90.69400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19684, 159.46140, -5532.51514, 86.69250,   0.00000, -30.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 159.46140, -5565.36816, 68.66780,   0.00000, 30.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19684, 159.46140, -5508.43604, 93.14450,   0.00000, -15.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 164.71091, -5465.30615, 93.96140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 159.46140, -5485.97119, 43.93670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 283.76990, -5465.30615, 74.51280,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19684, 187.84120, -5460.05615, 93.14450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 224.24040, -5460.05615, 84.23710,   0.00000, -15.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 273.10400, -5460.05615, 24.48810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 289.01941, -5480.97119, 74.51280,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 283.76990, -5465.30615, 80.01280,   180.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19682, 286.59650, -5498.15186, 74.51280,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19681, 237.44090, -5554.16211, 74.51290,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 262.01871, -5526.15723, 74.51290,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 235.01801, -5591.34180, 74.51290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 235.01801, -5641.34180, 74.51290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19682, 232.59500, -5678.52393, 74.51290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 130.20050, -5770.02295, 64.78850,   0.00000, -15.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19682, 208.29710, -5702.82080, 74.51290,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 171.11591, -5705.24512, 74.51290,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 222.15939, -5692.38623, 74.51290,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19662, 135.45000, -5710.49414, 74.51290,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19684, 130.20039, -5733.62500, 73.69590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 258.48318, -5529.69189, 24.48810,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19686, 108.00040, -5854.71924, 42.94020,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19649, 119.10040, -5818.31982, 51.84760,   0.00000, -15.00000, 90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19668, 113.55040, -5850.70703, 76.12350,   0.00000, 15.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19663, 108.00040, -5942.18408, 39.87330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 130.20039, -5726.30176, 24.35350,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 108.00030, -5867.18311, -7.90140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 216.71550, -5777.50000, 40.95920,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 275.35599, -5780.54004, 55.15790,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 281.13760, -5798.33301, 59.06880,   0.00000, 0.00000, 72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 266.00110, -5809.33105, 63.02680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 250.86450, -5798.33301, 66.82540,   0.00000, 0.00000, -72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 256.64621, -5780.54004, 70.97310,   0.00000, 0.00000, -144.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 256.64621, -5780.54004, 90.76340,   0.00000, 0.00000, -144.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 275.35599, -5780.54004, 74.94820,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 281.13760, -5798.33301, 78.85910,   0.00000, 0.00000, 72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 266.00110, -5809.33105, 82.81710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 250.86450, -5798.33301, 86.61570,   0.00000, 0.00000, -72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 276.00110, -5777.50000, 93.06730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 305.97531, -5777.50000, 93.06730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 327.30688, -5782.10889, 92.95160,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 7.50000, -5490.00000, 9.30770,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 331.91660, -5833.42285, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 331.91660, -5883.41602, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 331.91660, -5853.40820, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 331.91660, -5933.40820, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 331.91660, -5903.39990, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 327.30701, -5954.72217, 93.23360,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 304.69531, -5954.72119, 93.17570,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 297.04611, -5914.06104, 91.12500,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 279.25201, -5908.27881, 87.07710,   0.00000, 0.00000, 16.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 268.25461, -5923.41602, 83.22850,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 279.25201, -5938.55176, 78.99120,   0.00000, 0.00000, -20.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 297.04599, -5932.77100, 75.21060,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 300.08560, -5913.41602, 73.09760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 300.08560, -5883.45215, 73.09760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 300.00009, -5863.44922, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 300.00009, -5833.44092, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 300.00009, -5813.47021, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 300.00009, -5783.46484, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5763.41602, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5733.41113, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5713.43506, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5683.42822, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5668.11377, 96.87540,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5639.75781, 96.87540,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18570, -5609.76709, 96.87540,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18579, -5589.75293, 94.84440,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.18579, -5559.75586, 94.84440,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 315.79550, -5538.44678, 96.75840,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, 85.00000, -5942.50000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, -210.00000, -6035.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19540, -210.00000, -5490.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 338.40710, -5529.22900, 96.86830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 346.05640, -5508.56689, 98.95060,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 363.85040, -5502.78613, 102.86250,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 374.84781, -5517.92188, 106.82880,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 363.85049, -5533.05908, 110.87370,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 346.05640, -5527.27686, 114.83700,   0.00000, 0.00000, -54.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 346.05640, -5527.27686, 134.78600,   0.00000, 0.00000, -54.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 363.85049, -5533.05908, 130.82260,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 374.84781, -5517.92188, 126.77770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 363.85040, -5502.78613, 122.81150,   0.00000, 0.00000, -18.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 346.05640, -5508.56689, 118.89960,   0.00000, 0.00000, 54.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 338.40710, -5506.61719, 136.74500,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 311.75879, -5502.00684, 135.62219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 287.12320, -5502.00684, 128.30020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 269.32010, -5502.00684, 118.62220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 243.36270, -5502.00684, 103.62120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 226.02580, -5502.00684, 93.60120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 200.05980, -5502.00684, 78.68390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 178.25110, -5502.00684, 67.42860,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 154.63580, -5502.00684, 61.66470,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 35.00580, -5502.00684, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 5.01280, -5502.00684, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 5.01280, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 35.00580, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 55.02360, -5533.83789, 41.03650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 85.04160, -5533.83789, 41.03650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 105.00830, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 134.98000, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.45670, -5530.36914, 39.07260,   0.00000, 0.00000, 27.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 174.58479, -5517.44385, 39.11700,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 195.79800, -5496.22998, 39.11700,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 215.54060, -5481.39502, 38.97440,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 234.73180, -5482.87598, 39.08090,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5505.75195, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5535.73193, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5695.72900, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5725.76807, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5765.72314, 37.07110,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5795.74902, 37.07110,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5815.75000, 41.01400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5845.76221, 41.01400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5865.76807, 37.03210,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5895.76123, 36.99840,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 215.37700, -5921.66699, 38.88700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 185.36800, -5921.66699, 38.88700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19652, 175.37700, -5905.75195, 69.85380,   180.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652, 175.37691, -5905.75195, 89.85380,   180.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19672, 159.46140, -5895.75195, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 164.07111, -5917.05811, 118.96170,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 184.73180, -5918.62793, 117.02620,   0.00000, 0.00000, 36.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 190.51350, -5900.83398, 112.85240,   0.00000, 0.00000, -72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 175.37691, -5889.83594, 108.85800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 160.24040, -5900.83398, 105.09330,   0.00000, 0.00000, 72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 166.02200, -5918.62793, 100.97050,   0.00000, 0.00000, -36.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5865.76221, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5845.77295, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5815.73291, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5787.40723, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5713.75488, 95.45350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5640.06982, 71.79210,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46140, -5620.23291, 49.22650,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46150, -5772.07813, 95.42960,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46150, -5742.11621, 95.42960,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46130, -5579.74805, 65.49870,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46130, -5553.72900, 80.51530,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46130, -5531.15918, 92.13380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46130, -5506.21924, 98.13080,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 190.66840, -5460.05615, 97.33690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 210.45410, -5460.05615, 92.64010,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 239.43449, -5460.05615, 84.88740,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 263.40930, -5460.05615, 79.76070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 285.55011, -5500.42188, 79.13130,   0.00000, 0.00000, 63.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 272.62531, -5515.54980, 79.17230,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 251.41209, -5536.76318, 79.12610,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 236.57590, -5556.50586, 79.11490,   0.00000, 0.00000, 72.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 235.01801, -5576.34180, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 235.01801, -5606.45508, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 235.01801, -5626.40820, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 235.01801, -5656.30176, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 231.54860, -5680.79297, 79.12950,   0.00000, 0.00000, 63.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 205.95219, -5703.68701, 79.17540,   0.00000, 0.00000, 18.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 186.14090, -5705.18311, 79.17540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 156.09720, -5705.18311, 79.17540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 134.81010, -5709.85400, 79.20670,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 130.20050, -5736.53076, 77.97500,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 130.20050, -5756.21582, 73.13490,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 130.20050, -5785.23291, 65.43080,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 129.90050, -5803.97803, 61.96080,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 119.10040, -5804.57715, 60.34370,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 119.10040, -5833.51514, 52.59580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 118.80040, -5852.20898, 49.03400,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 108.00040, -5857.49805, 47.23260,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 108.00040, -5927.16699, 44.84130,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 108.00040, -5957.18604, 44.78320,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 241.29240, -5570.75195, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 241.29250, -5660.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19642, 241.29240, -5610.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19642, 241.29240, -5620.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 241.78481, -5657.39990, -17.01660,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 241.29240, -5575.75195, -15.67090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5675.72998, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5645.73486, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5585.78418, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 241.29240, -5555.73291, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);

	TempObjectNumber = CreateDynamicObject(19649, 159.46140, -5683.42822, 67.03400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19672, 159.46150, -5698.41602, 71.76970,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 159.46150, -5668.45410, 71.76970,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19685, 159.46140, -5622.30078, 44.19110,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19685, 159.46140, -5598.22217, 50.64310,   0.00000, 15.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 159.46140, -5490.97119, 93.96140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 159.46140, -5480.97119, 93.96140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 235.01801, -5666.34180, 24.48810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 235.01801, -5586.34180, 24.48810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 159.46140, -5752.08984, 40.66920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 159.46140, -5678.42822, 17.00930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 159.46140, -5629.91211, -6.52340,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 164.71100, -5465.30615, 99.46140,   -180.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 316.00110, -5959.33105, 38.45670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 272.49979, -5630.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 147.49969, -5630.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 272.49979, -5755.00000, 9.30800,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 272.49979, -5880.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19549, 85.00020, -5926.25000, 9.30770,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, 334.99969, -5755.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, 334.99969, -5880.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 147.49969, -5755.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 147.49969, -5880.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 159.22960, -5835.84619, 13.06310,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 172.38280, -5669.00391, 9.11850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 210.95940, -5567.90186, 9.11850,   0.00000, 0.00000, -81.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 216.57980, -5827.78223, 9.11850,   0.00000, 0.00000, -55.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 169.03729, -5955.95605, 9.11850,   0.00000, 0.00000, 21.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 348.54691, -5946.59277, 9.11850,   0.00000, 0.00000, 71.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 159.77940, -5630.18799, 13.06310,   0.00000, 0.00000, 40.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 311.51559, -5575.16211, 13.06310,   0.00000, 0.00000, 78.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 298.85901, -5893.44189, 13.06310,   0.00000, 0.00000, 126.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 24.26740, -5535.28906, 13.06310,   0.00000, 0.00000, 169.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 159.52000, -5486.21094, 13.06310,   0.00000, 0.00000, -140.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 290.41501, -5777.24414, 13.06310,   0.00000, 0.00000, -175.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 240.06940, -5521.47900, 13.06310,   0.00000, 0.00000, 122.00000, -1, -1, -1, 300);
	CreateDynamicObject(762, 107.52170, -5906.12207, 14.06310,   0.00000, 0.00000, 50.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 60.24900, -5518.00684, 9.11850,   0.00000, 0.00000, 36.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 313.22198, -5520.63721, 9.11850,   0.00000, 0.00000, 82.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 267.05841, -5698.13818, 9.11850,   0.00000, 0.00000, 27.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 263.62671, -5919.11084, 9.11850,   0.00000, 0.00000, -52.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 318.71021, -5812.64990, 9.11850,   0.00000, 0.00000, 42.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 131.99519, -5559.49121, 9.11850,   0.00000, 0.00000, 121.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 87.80050, -5761.86523, 9.12660,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 87.80050, -5792.94189, 9.12660,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 108.00040, -5892.18311, 42.12330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19684, 139.83141, -5954.71924, 41.30630,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 139.83150, -5918.31982, 32.39890,   0.00000, -15.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19686, 139.83150, -5881.92090, 23.49160,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19661, 145.08099, -5748.79102, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 139.83150, -5844.45605, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 139.83150, -5794.45605, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 139.83150, -5764.45605, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 180.74690, -5743.54102, 22.67460,   0.00000, 0.00000, 180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19662, 216.41290, -5738.29199, 22.67460,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19662, 216.41290, -5706.95898, 22.67460,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19646, 221.66240, -5722.62500, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19649, 170.85310, -5701.70898, 19.63230,   0.00000, -5.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19648, 130.47990, -5701.70898, 16.56910,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(19642, 120.48000, -5701.70898, 16.56910,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19650, 93.74240, -5701.70898, 11.99950,   0.00000, -19.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19534, 77.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 87.80050, -5686.41309, 9.12660,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(3509, 87.80050, -5717.49023, 9.12660,   0.00000, 0.00000, 62.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 108.00040, -5877.18311, 46.82300,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 108.00040, -5907.18408, 46.82300,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 112.61000, -5978.48877, 46.81510,   0.00000, 0.00000, 135.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 135.22160, -5978.48877, 46.81510,   0.00000, 0.00000, -135.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5955.01709, 45.96820,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5932.09521, 40.90770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5903.13818, 33.19140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5882.17090, 28.25630,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5859.45605, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5829.42383, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5809.45605, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 139.83141, -5779.45605, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 144.44110, -5748.14990, 27.42070,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 165.74690, -5743.54102, 27.42070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 195.74181, -5743.54102, 27.42070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 217.05270, -5738.93115, 27.42070,   0.00000, 0.00000, 45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 217.05280, -5706.31982, 27.42070,   0.00000, 0.00000, -45.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 185.55850, -5701.70898, 25.48520,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19672, 155.65120, -5701.70898, 22.98670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 108.00040, -5942.18408, -12.40140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 139.83141, -5967.18408, -7.90150,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 139.83150, -5869.45605, -27.35010,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 139.83150, -5789.45605, -27.35010,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 185.74690, -5743.54102, -27.35010,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19670, 175.59441, -5701.70898, -29.96710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19659, 123.91580, -5977.85010, 42.12330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19542, 147.49969, -5942.50000, 9.30800,   0.00000, 0.00000, -90.00000, -1, -1, -1, 300);
	CreateDynamicObject(19543, 77.50020, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19536, 7.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19536, 7.50000, -5396.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 147.49969, -5505.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(19550, 272.49979, -5505.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 300);
	CreateDynamicObject(621, 236.09520, -5457.12695, 9.11850,   0.00000, 0.00000, 125.00000, -1, -1, -1, 300);
	CreateDynamicObject(19536, 7.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.54380, -5900.85742, 21.13690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.83350, -5900.85400, 21.09690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -124.13470, -5900.85986, 21.05690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -124.41940, -5900.85693, 21.01690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.68690, -5900.66113, 21.05690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.98970, -5900.66406, 21.01690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -124.30170, -5900.66699, 20.97690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.84210, -5900.45850, 20.95690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -124.14460, -5900.46436, 20.93690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.99730, -5900.27832, 20.87690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.67910, -5901.06494, 21.17690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.97060, -5901.07666, 21.13690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -124.27180, -5901.06201, 21.09690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.82310, -5901.27637, 21.19690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -124.13500, -5901.28125, 21.13690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
	CreateDynamicObject(3461, -123.98990, -5901.44531, 21.15690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 300);
//Стант-остров (конец)
#endif

KillTimer(timeobject);
	return 1;
}

public object22()
{
	//отключение трасс
	if(LineStat[1] == 0) { LineOff1(); }
	if(LineStat[2] == 0) { LineOff2(); }
	if(LineStat[3] == 0) { LineOff3(); }
	if(LineStat[4] == 0) { LineOff4(); }
	if(LineStat[5] == 0) { LineOff5(); }
	KillTimer(timeobject22);
	return 1;
}

